diff --git a/tests/auto/gui/image/qicoimageformat/tst_qicoimageformat.cpp b/tests/auto/gui/image/qicoimageformat/tst_qicoimageformat.cpp
index 25c6c81..74eec26 100644
--- a/tests/auto/gui/image/qicoimageformat/tst_qicoimageformat.cpp
+++ b/tests/auto/gui/image/qicoimageformat/tst_qicoimageformat.cpp
@@ -127,8 +127,8 @@ void tst_QIcoImageFormat::canRead_data()
     QTest::newRow("16px,32px,48px - 16,256,16M colors") << "valid/Obj_N2_Internal_Mem.ico" << 1;
     QTest::newRow("16px - 16,256,16M colors") << "valid/Status_Play.ico" << 1;
     QTest::newRow("16px,32px - 16 colors") << "valid/TIMER01.ICO" << 1;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLD.ico" << 1;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLDH.ico" << 1;
+    QTest::newRow("16px16c, 32px32c, 32px256c 1") << "valid/WORLD.ico" << 1;
+    QTest::newRow("16px16c, 32px32c, 32px256c 2") << "valid/WORLDH.ico" << 1;
     QTest::newRow("invalid floppy (first 8 bytes = 0xff)") << "invalid/35floppy.ico" << 0;
     QTest::newRow("103x16px, 24BPP") << "valid/trolltechlogo_tiny.ico" << 1;
     QTest::newRow("includes 32BPP w/alpha") << "valid/semitransparent.ico" << 1;
@@ -198,8 +198,8 @@ void tst_QIcoImageFormat::imageCount_data()
     QTest::newRow("16px,32px,48px - 16,256,16M colors") << "valid/Obj_N2_Internal_Mem.ico" << 9;
     QTest::newRow("16px - 16,256,16M colors") << "valid/Status_Play.ico" << 3;
     QTest::newRow("16px,32px - 16 colors") << "valid/TIMER01.ICO" << 2;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLD.ico" << 3;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLDH.ico" << 3;
+    QTest::newRow("16px16c, 32px32c, 32px256c 1") << "valid/WORLD.ico" << 3;
+    QTest::newRow("16px16c, 32px32c, 32px256c 2") << "valid/WORLDH.ico" << 3;
     QTest::newRow("invalid floppy (first 8 bytes = 0xff)") << "invalid/35floppy.ico" << 0;
     QTest::newRow("includes 32BPP w/alpha") << "valid/semitransparent.ico" << 9;
     QTest::newRow("PNG compression") << "valid/Qt.ico" << 4;
@@ -227,8 +227,8 @@ void tst_QIcoImageFormat::jumpToNextImage_data()
     QTest::newRow("16px,32px,48px - 16,256,16M colors") << "valid/Obj_N2_Internal_Mem.ico" << 9;
     QTest::newRow("16px - 16,256,16M colors") << "valid/Status_Play.ico" << 3;
     QTest::newRow("16px,32px - 16 colors") << "valid/TIMER01.ICO" << 2;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLD.ico" << 3;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLDH.ico" << 3;
+    QTest::newRow("16px16c, 32px32c, 32px256c 1") << "valid/WORLD.ico" << 3;
+    QTest::newRow("16px16c, 32px32c, 32px256c 2") << "valid/WORLDH.ico" << 3;
     QTest::newRow("includes 32BPP w/alpha") << "valid/semitransparent.ico" << 9;
     QTest::newRow("PNG compression") << "valid/Qt.ico" << 4;
 }
@@ -276,8 +276,8 @@ void tst_QIcoImageFormat::nextImageDelay_data()
     QTest::newRow("16px,32px,48px - 16,256,16M colors") << "valid/Obj_N2_Internal_Mem.ico" << 9;
     QTest::newRow("16px - 16,256,16M colors") << "valid/Status_Play.ico" << 3;
     QTest::newRow("16px,32px - 16 colors") << "valid/TIMER01.ICO" << 2;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLD.ico" << 3;
-    QTest::newRow("16px16c, 32px32c, 32px256c") << "valid/WORLDH.ico" << 3;
+    QTest::newRow("16px16c, 32px32c, 32px256c 1") << "valid/WORLD.ico" << 3;
+    QTest::newRow("16px16c, 32px32c, 32px256c 2") << "valid/WORLDH.ico" << 3;
     QTest::newRow("invalid floppy (first 8 bytes = 0xff)") << "invalid/35floppy.ico" << -1;
     QTest::newRow("includes 32BPP w/alpha") << "valid/semitransparent.ico" << 9;
     QTest::newRow("PNG compression") << "valid/Qt.ico" << 4;
diff --git a/tests/auto/gui/image/qimagereader/tst_qimagereader.cpp b/tests/auto/gui/image/qimagereader/tst_qimagereader.cpp
index 8a18bee..9617174 100644
--- a/tests/auto/gui/image/qimagereader/tst_qimagereader.cpp
+++ b/tests/auto/gui/image/qimagereader/tst_qimagereader.cpp
@@ -623,7 +623,6 @@ void tst_QImageReader::supportsAnimation_data()
     QTest::newRow("XPM: marble") << QString("marble.xpm") << false;
     QTest::newRow("PNG: kollada") << QString("kollada.png") << false;
     QTest::newRow("PPM: teapot") << QString("teapot.ppm") << false;
-    QTest::newRow("PPM: teapot") << QString("teapot.ppm") << false;
     QTest::newRow("PPM: runners") << QString("runners.ppm") << false;
     QTest::newRow("XBM: gnus") << QString("gnus.xbm") << false;
 
diff --git a/tests/auto/gui/image/qpixmap/tst_qpixmap.cpp b/tests/auto/gui/image/qpixmap/tst_qpixmap.cpp
index 527dcce..c1643ea 100644
--- a/tests/auto/gui/image/qpixmap/tst_qpixmap.cpp
+++ b/tests/auto/gui/image/qpixmap/tst_qpixmap.cpp
@@ -1342,7 +1342,7 @@ void tst_QPixmap::fromImageReader_data()
     QTest::newRow("designer_indexed8_with_alpha.gif") << prefix + "/designer_indexed8_with_alpha.gif";
     QTest::newRow("designer_rgb32.jpg") << prefix + "/designer_rgb32.jpg";
     QTest::newRow("designer_indexed8_with_alpha_animated") << prefix + "/designer_indexed8_with_alpha_animated.gif";
-    QTest::newRow("designer_indexed8_with_alpha_animated") << prefix + "/designer_indexed8_no_alpha_animated.gif";
+    QTest::newRow("designer_indexed8_no_alpha_animated") << prefix + "/designer_indexed8_no_alpha_animated.gif";
 }
 
 void tst_QPixmap::fromImageReader()
diff --git a/tests/auto/gui/painting/qpainterpath/tst_qpainterpath.cpp b/tests/auto/gui/painting/qpainterpath/tst_qpainterpath.cpp
index bcd009d..44006d4 100644
--- a/tests/auto/gui/painting/qpainterpath/tst_qpainterpath.cpp
+++ b/tests/auto/gui/painting/qpainterpath/tst_qpainterpath.cpp
@@ -282,13 +282,13 @@ void tst_QPainterPath::contains_QPointF_data()
     inside.addEllipse(base_rect.adjusted(5, 5, -5, -5));
     QPolygonF inside_poly = inside.toFillPolygon();
     for (int i=0; i<inside_poly.size(); ++i)
-        QTest::newRow("inside_ellipse") << path << inside_poly.at(i) << true;
+        QTest::newRow(qPrintable(QString("inside_ellipse %1").arg(i))) << path << inside_poly.at(i) << true;
 
     QPainterPath outside;
     outside.addEllipse(base_rect.adjusted(-5, -5, 5, 5));
     QPolygonF outside_poly = outside.toFillPolygon();
     for (int i=0; i<outside_poly.size(); ++i)
-        QTest::newRow("outside_ellipse") << path << outside_poly.at(i) << false;
+        QTest::newRow(qPrintable(QString("outside_ellipse %1").arg(i))) << path << outside_poly.at(i) << false;
 
     path = QPainterPath();
     base_rect = QRectF(50, 50, 200, 200);
@@ -865,12 +865,12 @@ void tst_QPainterPath::testArcMoveTo_data()
 
     for (int domain=0; domain<rects.size(); ++domain) {
         for (int i=-360; i<=360; ++i) {
-            QTest::newRow("test") << rects.at(domain) << (qreal) i;
+            QTest::newRow(qPrintable(QString("test %1 %2").arg(domain).arg(i))) << rects.at(domain) << (qreal) i;
         }
 
         // test low angles
-        QTest::newRow("test") << rects.at(domain) << (qreal) 1e-10;
-        QTest::newRow("test") << rects.at(domain) << (qreal)-1e-10;
+        QTest::newRow("low angles 1") << rects.at(domain) << (qreal) 1e-10;
+        QTest::newRow("low angles 2") << rects.at(domain) << (qreal)-1e-10;
     }
 }
 
diff --git a/tests/auto/gui/text/qtextdocument/tst_qtextdocument.cpp b/tests/auto/gui/text/qtextdocument/tst_qtextdocument.cpp
index c2ae853..213b388 100644
--- a/tests/auto/gui/text/qtextdocument/tst_qtextdocument.cpp
+++ b/tests/auto/gui/text/qtextdocument/tst_qtextdocument.cpp
@@ -1171,7 +1171,7 @@ void tst_QTextDocument::toHtml_data()
         fmt.setVerticalAlignment(QTextCharFormat::AlignMiddle);
         cursor.insertImage(fmt);
 
-        QTest::newRow("image-malign") << QTextDocumentFragment(&doc)
+        QTest::newRow("image-align-middle") << QTextDocumentFragment(&doc)
                             << QString("<p DEFAULTBLOCKSTYLE><img src=\"foo\" style=\"vertical-align: middle;\" /></p>");
     }
 
@@ -1183,7 +1183,7 @@ void tst_QTextDocument::toHtml_data()
         fmt.setVerticalAlignment(QTextCharFormat::AlignTop);
         cursor.insertImage(fmt);
 
-        QTest::newRow("image-malign") << QTextDocumentFragment(&doc)
+        QTest::newRow("image-align-top") << QTextDocumentFragment(&doc)
                             << QString("<p DEFAULTBLOCKSTYLE><img src=\"foo\" style=\"vertical-align: top;\" /></p>");
     }
 
diff --git a/tests/auto/gui/text/qtextdocumentfragment/tst_qtextdocumentfragment.cpp b/tests/auto/gui/text/qtextdocumentfragment/tst_qtextdocumentfragment.cpp
index 3329340..50ae22c 100644
--- a/tests/auto/gui/text/qtextdocumentfragment/tst_qtextdocumentfragment.cpp
+++ b/tests/auto/gui/text/qtextdocumentfragment/tst_qtextdocumentfragment.cpp
@@ -3078,7 +3078,7 @@ void tst_QTextDocumentFragment::html_preNewlineHandling_data()
                           << QString("Foo\nBar");
     QTest::newRow("pre2") << QString("Foo<pre>\nBar")
                           << QString("Foo\nBar");
-    QTest::newRow("pre2") << QString("Foo<pre>\n\nBar")
+    QTest::newRow("pre3") << QString("Foo<pre>\n\nBar")
                           << QString("Foo\n\nBar");
     QTest::newRow("pre4") << QString("<html>Foo<pre>\nBar")
                           << QString("Foo\nBar");