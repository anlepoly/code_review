diff --git a/src/corelib/doc/snippets/qsignalmapper/buttonwidget.cpp b/src/corelib/doc/snippets/qsignalmapper/buttonwidget.cpp
index cda905e..3271243 100644
--- a/src/corelib/doc/snippets/qsignalmapper/buttonwidget.cpp
+++ b/src/corelib/doc/snippets/qsignalmapper/buttonwidget.cpp
@@ -57,9 +57,9 @@ ButtonWidget::ButtonWidget(QStringList texts, QWidget *parent)
 	gridLayout->addWidget(button, i / 3, i % 3);
     }
 
-    connect(signalMapper, SIGNAL(mapped(const QString &)),
+    connect(signalMapper, SIGNAL(mapped(QString)),
 //! [1] //! [2]
-            this, SIGNAL(clicked(const QString &)));
+            this, SIGNAL(clicked(QString)));
 
     setLayout(gridLayout);
 }
diff --git a/src/dbus/doc/snippets/code/doc_src_qdbusadaptors.cpp b/src/dbus/doc/snippets/code/doc_src_qdbusadaptors.cpp
index 279c10f..f642d10 100644
--- a/src/dbus/doc/snippets/code/doc_src_qdbusadaptors.cpp
+++ b/src/dbus/doc/snippets/code/doc_src_qdbusadaptors.cpp
@@ -55,8 +55,8 @@ public:
         : QDBusAbstractAdaptor(application), app(application)
     {
         connect(application, SIGNAL(aboutToQuit()), SIGNAL(aboutToQuit()));
-        connect(application, SIGNAL(focusChanged(QWidget*, QWidget*)),
-                SLOT(focusChangedSlot(QWidget*, QWidget*)));
+        connect(application, SIGNAL(focusChanged(QWidget*,QWidget*)),
+                SLOT(focusChangedSlot(QWidget*,QWidget*)));
     }
 
     QString caption()
@@ -202,8 +202,8 @@ MyInterfaceAdaptor(QApplication *application)
     : QDBusAbstractAdaptor(application), app(application)
 {
     connect(application, SIGNAL(aboutToQuit()), SIGNAL(aboutToQuit());
-    connect(application, SIGNAL(focusChanged(QWidget*, QWidget*)),
-            SLOT(focusChangedSlot(QWidget*, QWidget*)));
+    connect(application, SIGNAL(focusChanged(QWidget*,QWidget*)),
+            SLOT(focusChangedSlot(QWidget*,QWidget*)));
 }
 //! [6]
 
diff --git a/src/testlib/doc/snippets/code/doc_src_qsignalspy.cpp b/src/testlib/doc/snippets/code/doc_src_qsignalspy.cpp
index a957285..2be71bf 100644
--- a/src/testlib/doc/snippets/code/doc_src_qsignalspy.cpp
+++ b/src/testlib/doc/snippets/code/doc_src_qsignalspy.cpp
@@ -53,7 +53,7 @@ QVERIFY(arguments.at(0).toBool() == true); // verify the first argument
 
 
 //! [1]
-QSignalSpy spy(myCustomObject, SIGNAL(mySignal(int, QString, double)));
+QSignalSpy spy(myCustomObject, SIGNAL(mySignal(int,QString,double)));
 
 myCustomObject->doSomething(); // trigger emission of the signal
 
diff --git a/src/widgets/doc/snippets/dockwidgets/mainwindow.cpp b/src/widgets/doc/snippets/dockwidgets/mainwindow.cpp
index 882af70..b481c7e 100644
--- a/src/widgets/doc/snippets/dockwidgets/mainwindow.cpp
+++ b/src/widgets/doc/snippets/dockwidgets/mainwindow.cpp
@@ -53,8 +53,8 @@ MainWindow::MainWindow(QWidget *parent)
 
     textBrowser = new QTextBrowser(this);
 
-    connect(headingList, SIGNAL(itemClicked(QListWidgetItem *)),
-            this, SLOT(updateText(QListWidgetItem *)));
+    connect(headingList, SIGNAL(itemClicked(QListWidgetItem*)),
+            this, SLOT(updateText(QListWidgetItem*)));
 
     updateText(headingList->item(0));
     headingList->setCurrentRow(0);
diff --git a/src/widgets/doc/snippets/qlistwidget-using/mainwindow.cpp b/src/widgets/doc/snippets/qlistwidget-using/mainwindow.cpp
index 8e30f79..6c998ce 100644
--- a/src/widgets/doc/snippets/qlistwidget-using/mainwindow.cpp
+++ b/src/widgets/doc/snippets/qlistwidget-using/mainwindow.cpp
@@ -73,8 +73,8 @@ MainWindow::MainWindow()
     connect(insertAction, SIGNAL(triggered()), this, SLOT(insertItem()));
     connect(removeAction, SIGNAL(triggered()), this, SLOT(removeItem()));
     connect(listWidget,
-            SIGNAL(currentItemChanged(QListWidgetItem *, QListWidgetItem *)),
-            this, SLOT(updateMenus(QListWidgetItem *)));
+            SIGNAL(currentItemChanged(QListWidgetItem*,QListWidgetItem*)),
+            this, SLOT(updateMenus(QListWidgetItem*)));
 
     setupListItems();
     updateMenus(listWidget->currentItem());
diff --git a/src/widgets/doc/snippets/qsortfilterproxymodel/main.cpp b/src/widgets/doc/snippets/qsortfilterproxymodel/main.cpp
index 0d78ae3..45ff371 100644
--- a/src/widgets/doc/snippets/qsortfilterproxymodel/main.cpp
+++ b/src/widgets/doc/snippets/qsortfilterproxymodel/main.cpp
@@ -65,8 +65,8 @@ int main(int argc, char *argv[])
 
     QLineEdit *patternEditor = new QLineEdit;
     QObject::
-    connect(patternEditor, SIGNAL(textChanged(const QString &)),
-            filterModel, SLOT(setFilterRegExp(const QString &)));
+    connect(patternEditor, SIGNAL(textChanged(QString)),
+            filterModel, SLOT(setFilterRegExp(QString)));
 
     QVBoxLayout *layout = new QVBoxLayout(window);
     layout->addWidget(filteredView);
diff --git a/src/widgets/doc/snippets/qtreewidget-using/mainwindow.cpp b/src/widgets/doc/snippets/qtreewidget-using/mainwindow.cpp
index 2a62c3e..705a5a6 100644
--- a/src/widgets/doc/snippets/qtreewidget-using/mainwindow.cpp
+++ b/src/widgets/doc/snippets/qtreewidget-using/mainwindow.cpp
@@ -88,8 +88,8 @@ MainWindow::MainWindow()
     connect(insertAction, SIGNAL(triggered()), this, SLOT(insertItem()));
     connect(removeAction, SIGNAL(triggered()), this, SLOT(removeItem()));
     connect(treeWidget,
-            SIGNAL(currentItemChanged(QTreeWidgetItem *, QTreeWidgetItem *)),
-            this, SLOT(updateMenus(QTreeWidgetItem *)));
+            SIGNAL(currentItemChanged(QTreeWidgetItem*,QTreeWidgetItem*)),
+            this, SLOT(updateMenus(QTreeWidgetItem*)));
 
     setupTreeItems();
     updateMenus(treeWidget->currentItem());
diff --git a/src/widgets/doc/snippets/qtreewidgetitemiterator-using/mainwindow.cpp b/src/widgets/doc/snippets/qtreewidgetitemiterator-using/mainwindow.cpp
index a0648b1..b06ca38 100644
--- a/src/widgets/doc/snippets/qtreewidgetitemiterator-using/mainwindow.cpp
+++ b/src/widgets/doc/snippets/qtreewidgetitemiterator-using/mainwindow.cpp
@@ -83,8 +83,8 @@ MainWindow::MainWindow()
     connect(insertAction, SIGNAL(triggered()), this, SLOT(insertItem()));
     connect(removeAction, SIGNAL(triggered()), this, SLOT(removeItem()));
     connect(treeWidget,
-            SIGNAL(currentItemChanged(QTreeWidgetItem *, QTreeWidgetItem *)),
-            this, SLOT(updateMenus(QTreeWidgetItem *)));
+            SIGNAL(currentItemChanged(QTreeWidgetItem*,QTreeWidgetItem*)),
+            this, SLOT(updateMenus(QTreeWidgetItem*)));
 
     setupTreeItems();
     updateMenus(treeWidget->currentItem());
diff --git a/src/widgets/doc/snippets/updating-selections/window.cpp b/src/widgets/doc/snippets/updating-selections/window.cpp
index eaa37b8..4ac9b49 100644
--- a/src/widgets/doc/snippets/updating-selections/window.cpp
+++ b/src/widgets/doc/snippets/updating-selections/window.cpp
@@ -65,11 +65,11 @@ MainWindow::MainWindow(QWidget *parent)
 
     selectionModel = table->selectionModel();
     connect(selectionModel,
-        SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),
-        this, SLOT(updateSelection(const QItemSelection &, const QItemSelection &)));
+        SIGNAL(selectionChanged(QItemSelection,QItemSelection)),
+        this, SLOT(updateSelection(QItemSelection,QItemSelection)));
     connect(selectionModel,
-        SIGNAL(currentChanged(const QModelIndex &, const QModelIndex &)),
-        this, SLOT(changeCurrent(const QModelIndex &, const QModelIndex &)));
+        SIGNAL(currentChanged(QModelIndex,QModelIndex)),
+        this, SLOT(changeCurrent(QModelIndex,QModelIndex)));
 
     statusBar();
     setCentralWidget(table);
diff --git a/src/xml/doc/snippets/rsslisting/rsslisting.cpp b/src/xml/doc/snippets/rsslisting/rsslisting.cpp
index 5fb7c28..f04662f 100644
--- a/src/xml/doc/snippets/rsslisting/rsslisting.cpp
+++ b/src/xml/doc/snippets/rsslisting/rsslisting.cpp
@@ -88,11 +88,11 @@ RSSListing::RSSListing(QWidget *parent)
 
     handler = 0;
 
-    connect(&http, SIGNAL(readyRead(const QHttpResponseHeader &)),
-             this, SLOT(readData(const QHttpResponseHeader &)));
+    connect(&http, SIGNAL(readyRead(QHttpResponseHeader)),
+             this, SLOT(readData(QHttpResponseHeader)));
 
-    connect(&http, SIGNAL(requestFinished(int, bool)),
-             this, SLOT(finished(int, bool)));
+    connect(&http, SIGNAL(requestFinished(int,bool)),
+             this, SLOT(finished(int,bool)));
 
     connect(lineEdit, SIGNAL(returnPressed()), this, SLOT(fetch()));
     connect(fetchButton, SIGNAL(clicked()), this, SLOT(fetch()));
@@ -152,8 +152,8 @@ void RSSListing::fetch()
     xmlReader.setErrorHandler(handler);
 //! [0]
 
-    connect(handler, SIGNAL(newItem(QString &, QString &)),
-             this, SLOT(addItem(QString &, QString &)));
+    connect(handler, SIGNAL(newItem(QString&,QString&)),
+             this, SLOT(addItem(QString&,QString&)));
 
     QUrl url(lineEdit->text());