diff --git a/src/imports/xmllistmodel/qqmlxmllistmodel.cpp b/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
index a7a2e22..8b30dc7 100644
--- a/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
+++ b/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
@@ -590,7 +590,7 @@ void QQuickXmlListModelPrivate::append_role(QQmlListProperty<QQuickXmlListModelR
         int i = _this->d_func()->roleObjects.count();
         _this->d_func()->roleObjects.append(role);
         if (_this->d_func()->roleNames.contains(role->name())) {
-            qmlInfo(role) << QObject::tr("\"%1\" duplicates a previous role name and will be disabled.").arg(role->name());
+            qmlInfo(role) << QQuickXmlListModel::tr("\"%1\" duplicates a previous role name and will be disabled.").arg(role->name());
             return;
         }
         _this->d_func()->roles.insert(i, _this->d_func()->highestRole);
@@ -1124,11 +1124,11 @@ void QQuickXmlListModel::queryError(void* object, const QString& error)
     Q_D(QQuickXmlListModel);
     for (int i=0; i<d->roleObjects.count(); i++) {
         if (d->roleObjects.at(i) == static_cast<QQuickXmlListModelRole*>(object)) {
-            qmlInfo(d->roleObjects.at(i)) << QObject::tr("invalid query: \"%1\"").arg(error);
+            qmlInfo(d->roleObjects.at(i)) << QQuickXmlListModel::tr("invalid query: \"%1\"").arg(error);
             return;
         }
     }
-    qmlInfo(this) << QObject::tr("invalid query: \"%1\"").arg(error);
+    qmlInfo(this) << QQuickXmlListModel::tr("invalid query: \"%1\"").arg(error);
 }
 
 void QQuickXmlListModel::queryCompleted(const QQuickXmlQueryResult &result)