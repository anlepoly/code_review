diff --git a/src/multimedia/audio/qaudiodecoder.cpp b/src/multimedia/audio/qaudiodecoder.cpp
index 1e5983a..9ebe58d 100644
--- a/src/multimedia/audio/qaudiodecoder.cpp
+++ b/src/multimedia/audio/qaudiodecoder.cpp
@@ -430,9 +430,9 @@ QAudioBuffer QAudioDecoder::read() const
 
     Defines the current state of a media player.
 
-    \value DecodingState The audio player is currently decoding media.
     \value StoppedState The decoder is not decoding.  Decoding will
            start at the start of the media.
+    \value DecodingState The audio player is currently decoding media.
 */
 
 /*!
diff --git a/src/multimedia/camera/qcameraexposure.cpp b/src/multimedia/camera/qcameraexposure.cpp
index 9e4870c..5ab1f46 100644
--- a/src/multimedia/camera/qcameraexposure.cpp
+++ b/src/multimedia/camera/qcameraexposure.cpp
@@ -615,9 +615,9 @@ void QCameraExposure::setAutoShutterSpeed()
 /*!
     \enum QCameraExposure::FlashMode
 
+    \value FlashAuto            Automatic flash.
     \value FlashOff             Flash is Off.
     \value FlashOn              Flash is On.
-    \value FlashAuto            Automatic flash.
     \value FlashRedEyeReduction Red eye reduction flash.
     \value FlashFill            Use flash to fillin shadows.
     \value FlashTorch           Constant light source. If supported,
@@ -635,8 +635,9 @@ void QCameraExposure::setAutoShutterSpeed()
 /*!
     \enum QCameraExposure::ExposureMode
 
-    \value ExposureManual        Manual mode.
     \value ExposureAuto          Automatic mode.
+    \value ExposureManual        Manual mode.
+    \value ExposurePortrait      Portrait exposure mode.
     \value ExposureNight         Night mode.
     \value ExposureBacklight     Backlight exposure mode.
     \value ExposureSpotlight     Spotlight exposure mode.
@@ -645,16 +646,15 @@ void QCameraExposure::setAutoShutterSpeed()
     \value ExposureBeach         Beach exposure mode.
     \value ExposureLargeAperture Use larger aperture with small depth of field.
     \value ExposureSmallAperture Use smaller aperture.
-    \value ExposurePortrait      Portrait exposure mode.
     \value ExposureModeVendor    The base value for device specific exposure modes.
 */
 
 /*!
     \enum QCameraExposure::MeteringMode
 
+    \value MeteringMatrix        Matrix metering mode.
     \value MeteringAverage       Center weighted average metering mode.
     \value MeteringSpot          Spot metering mode.
-    \value MeteringMatrix        Matrix metering mode.
 */
 
 /*!
diff --git a/src/multimedia/camera/qcamerafocus.cpp b/src/multimedia/camera/qcamerafocus.cpp
index a8a121f..f77427f 100644
--- a/src/multimedia/camera/qcamerafocus.cpp
+++ b/src/multimedia/camera/qcamerafocus.cpp
@@ -409,7 +409,7 @@ bool QCameraFocus::isAvailable() const
 
 /*!
   \property QCameraFocus::focusMode
-  \brief The current camera focus mode.
+  \brief the current camera focus mode.
 
 
   This controls the way the camera lens assembly is configured.
@@ -438,7 +438,7 @@ bool QCameraFocus::isFocusModeSupported(FocusModes mode) const
 
 /*!
   \property QCameraFocus::focusPointMode
-  \brief The current camera focus point selection mode.
+  \brief the current camera focus point selection mode.
 
   If the camera focus mode is set to use an autofocusing mode,
   this property controls the way the camera will select areas
@@ -524,7 +524,7 @@ qreal QCameraFocus::maximumDigitalZoom() const
 
 /*!
   \property QCameraFocus::opticalZoom
-  \brief The current optical zoom value.
+  \brief the current optical zoom value.
 
   \sa QCameraFocus::digitalZoom
 */
@@ -536,7 +536,7 @@ qreal QCameraFocus::opticalZoom() const
 
 /*!
   \property QCameraFocus::digitalZoom
-  \brief The current digital zoom value.
+  \brief the current digital zoom value.
 
   \sa QCameraFocus::opticalZoom
 */
@@ -562,12 +562,12 @@ void QCameraFocus::zoomTo(qreal optical, qreal digital)
     \enum QCameraFocus::FocusMode
 
     \value ManualFocus          Manual or fixed focus mode.
-    \value AutoFocus            One-shot auto focus mode.
-    \value ContinuousFocus      Continuous auto focus mode.
-    \value InfinityFocus        Focus strictly to infinity.
     \value HyperfocalFocus      Focus to hyperfocal distance, with the maximum depth of field achieved.
                                 All objects at distances from half of this
                                 distance out to infinity will be acceptably sharp.
+    \value InfinityFocus        Focus strictly to infinity.
+    \value AutoFocus            One-shot auto focus mode.
+    \value ContinuousFocus      Continuous auto focus mode.
     \value MacroFocus           One shot auto focus to objects close to camera.
 */
 
diff --git a/src/multimedia/camera/qcameraimagecapture.cpp b/src/multimedia/camera/qcameraimagecapture.cpp
index bb1e85f..4b86fb3 100644
--- a/src/multimedia/camera/qcameraimagecapture.cpp
+++ b/src/multimedia/camera/qcameraimagecapture.cpp
@@ -499,7 +499,7 @@ void QCameraImageCapture::setCaptureDestination(QCameraImageCapture::CaptureDest
 
 /*!
   \property QCameraImageCapture::readyForCapture
-   Indicates the service is ready to capture a an image immediately.
+  \brief whether the service is ready to capture a an image immediately.
 
    It's permissible to call capture() while the camera status is QCamera::ActiveStatus
    regardless of isReadyForCapture property value.
@@ -587,9 +587,9 @@ void QCameraImageCapture::cancelCapture()
     \value NoError         No Errors.
     \value NotReadyError   The service is not ready for capture yet.
     \value ResourceError   Device is not ready or not available.
+    \value OutOfSpaceError No space left on device.
     \value NotSupportedFeatureError Device does not support stillimages capture.
     \value FormatError     Current format is not supported.
-    \value OutOfSpaceError No space left on device.
 */
 
 /*!
diff --git a/src/multimedia/camera/qcameraimageprocessing.cpp b/src/multimedia/camera/qcameraimageprocessing.cpp
index 4fe31b3..b867f35 100644
--- a/src/multimedia/camera/qcameraimageprocessing.cpp
+++ b/src/multimedia/camera/qcameraimageprocessing.cpp
@@ -317,9 +317,9 @@ void QCameraImageProcessing::setDenoisingLevel(qreal level)
 /*!
     \enum QCameraImageProcessing::WhiteBalanceMode
 
+    \value WhiteBalanceAuto         Auto white balance mode.
     \value WhiteBalanceManual       Manual white balance. In this mode the white balance should be set with
                                     setManualWhiteBalance()
-    \value WhiteBalanceAuto         Auto white balance mode.
     \value WhiteBalanceSunlight     Sunlight white balance mode.
     \value WhiteBalanceCloudy       Cloudy white balance mode.
     \value WhiteBalanceShade        Shade white balance mode.
diff --git a/src/multimedia/playback/qmediaplayer.cpp b/src/multimedia/playback/qmediaplayer.cpp
index c07474b..0ad9581 100644
--- a/src/multimedia/playback/qmediaplayer.cpp
+++ b/src/multimedia/playback/qmediaplayer.cpp
@@ -1022,11 +1022,11 @@ QtMultimedia::AvailabilityError QMediaPlayer::availabilityError() const
 
     Defines the current state of a media player.
 
+    \value StoppedState The media player is not playing content, playback will begin from the start
+    of the current track.
     \value PlayingState The media player is currently playing content.
     \value PausedState The media player has paused playback, playback of the current track will
     resume from the position the player was paused at.
-    \value StoppedState The media player is not playing content, playback will begin from the start
-    of the current track.
 */
 
 /*!
diff --git a/src/multimedia/radio/qradiotuner.cpp b/src/multimedia/radio/qradiotuner.cpp
index 656043d..f5dad44 100644
--- a/src/multimedia/radio/qradiotuner.cpp
+++ b/src/multimedia/radio/qradiotuner.cpp
@@ -652,9 +652,9 @@ QRadioData *QRadioTuner::radioData() const
 
     Enumerates radio tuner policy for receiving stereo signals.
 
-    \value Auto        Uses the stereo mode matching the station.
     \value ForceStereo Provide stereo mode, converting if required.
     \value ForceMono   Provide mono mode, converting if required.
+    \value Auto        Uses the stereo mode matching the station.
 */
 
 /*! \fn void QRadioTuner::stateChanged(QRadioTuner::State state)