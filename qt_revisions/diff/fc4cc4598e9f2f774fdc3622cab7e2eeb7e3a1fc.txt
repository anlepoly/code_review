diff --git a/doc/src/snippets/code/src_corelib_concurrent_qtconcurrentrun.cpp b/doc/src/snippets/code/src_corelib_concurrent_qtconcurrentrun.cpp
index 756c18e..5eddbca 100644
--- a/doc/src/snippets/code/src_corelib_concurrent_qtconcurrentrun.cpp
+++ b/doc/src/snippets/code/src_corelib_concurrent_qtconcurrentrun.cpp
@@ -76,7 +76,7 @@ QString result = future.result();
 //! [4]
 // call 'QList<QByteArray>  QByteArray::split(char sep) const' in a separate thread
 QByteArray bytearray = "hello world";
-QFuture<QList<QByteArray> > future = QtConcurrent::run(bytearray, &QByteArray::split), ',');
+QFuture<QList<QByteArray> > future = QtConcurrent::run(bytearray, &QByteArray::split, ',');
 ...
 QList<QByteArray> result = future.result();
 //! [4]
@@ -84,7 +84,7 @@ QList<QByteArray> result = future.result();
 //! [5]
 // call 'void QImage::invertPixels(InvertMode mode)' in a separate thread
 QImage image = ...;
-QFuture<void> future = QtConcurrent::run(image, &QImage::invertPixels, QImage::InvertRgba);
+QFuture<void> future = QtConcurrent::run(&image, &QImage::invertPixels, QImage::InvertRgba);
 ...
 future.waitForFinished();
 // At this point, the pixels in 'image' have been inverted
diff --git a/src/corelib/io/qprocess.cpp b/src/corelib/io/qprocess.cpp
index 9f6fa49..e68fe88 100644
--- a/src/corelib/io/qprocess.cpp
+++ b/src/corelib/io/qprocess.cpp
@@ -2279,7 +2279,7 @@ QT_END_INCLUDE_NAMESPACE
     However, note that repeated calls to this function will recreate the
     list of environment variables, which is a non-trivial operation.
 
-    \note For new code, it is recommended to use QProcessEvironment::systemEnvironment()
+    \note For new code, it is recommended to use QProcessEnvironment::systemEnvironment()
 
     \sa QProcessEnvironment::systemEnvironment(), environment(), setEnvironment()
 */
diff --git a/src/widgets/dialogs/qmessagebox.cpp b/src/widgets/dialogs/qmessagebox.cpp
index 6a2773d..fdba17d 100644
--- a/src/widgets/dialogs/qmessagebox.cpp
+++ b/src/widgets/dialogs/qmessagebox.cpp
@@ -538,8 +538,8 @@ void QMessageBoxPrivate::_q_buttonClicked(QAbstractButton *button)
     \snippet doc/src/snippets/code/src_gui_dialogs_qmessagebox.cpp 6
 
     This is the approach recommended in the
-    \l{http://developer.apple.com/documentation/UserExperience/Conceptual/AppleHIGuidelines/XHIGWindows/chapter_18_section_7.html}
-    {Mac OS X Guidlines}. Similar guidlines apply for the other
+    \l{http://developer.apple.com/library/mac/documentation/UserExperience/Conceptual/AppleHIGuidelines/Windows/Windows.html#//apple_ref/doc/uid/20000961-BABCAJID}
+    {Mac OS X Guidelines}. Similar guidelines apply for the other
     platforms, but note the different ways the
     \l{QMessageBox::informativeText} {informative text} is handled for
     different platforms.
diff --git a/src/widgets/widgets/qtoolbar.cpp b/src/widgets/widgets/qtoolbar.cpp
index 773a7c5..6b1d414 100644
--- a/src/widgets/widgets/qtoolbar.cpp
+++ b/src/widgets/widgets/qtoolbar.cpp
@@ -435,7 +435,7 @@ void QToolBarPrivate::plug(const QRect &r)
     pop up a menu containing the items that does not currently fit in
     the toolbar.
 
-    When a QToolBar is not a child of a QMainWindow, it looses the ability
+    When a QToolBar is not a child of a QMainWindow, it loses the ability
     to populate the extension pop up with widgets added to the toolbar using
     addWidget(). Please use widget actions created by inheriting QWidgetAction
     and implementing QWidgetAction::createWidget() instead.