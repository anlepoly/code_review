diff --git a/examples/dialogs/findfiles/window.cpp b/examples/dialogs/findfiles/window.cpp
index 7cf0079..6b89436 100644
--- a/examples/dialogs/findfiles/window.cpp
+++ b/examples/dialogs/findfiles/window.cpp
@@ -225,7 +225,7 @@ void Window::createFilesTable()
     QStringList labels;
     labels << tr("Filename") << tr("Size");
     filesTable->setHorizontalHeaderLabels(labels);
-    filesTable->horizontalHeader()->setResizeMode(0, QHeaderView::Stretch);
+    filesTable->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);
     filesTable->verticalHeader()->hide();
     filesTable->setShowGrid(false);
 
diff --git a/examples/graphicsview/elasticnodes/graphwidget.cpp b/examples/graphicsview/elasticnodes/graphwidget.cpp
index 4909a42..36005b8 100644
--- a/examples/graphicsview/elasticnodes/graphwidget.cpp
+++ b/examples/graphicsview/elasticnodes/graphwidget.cpp
@@ -199,7 +199,7 @@ void GraphWidget::drawBackground(QPainter *painter, const QRectF &rect)
     QLinearGradient gradient(sceneRect.topLeft(), sceneRect.bottomRight());
     gradient.setColorAt(0, Qt::white);
     gradient.setColorAt(1, Qt::lightGray);
-    painter->fillRect(rect.intersect(sceneRect), gradient);
+    painter->fillRect(rect.intersected(sceneRect), gradient);
     painter->setBrush(Qt::NoBrush);
     painter->drawRect(sceneRect);
 
diff --git a/examples/itemviews/chart/pieview.cpp b/examples/itemviews/chart/pieview.cpp
index dcf3aca..b60d7ed 100644
--- a/examples/itemviews/chart/pieview.cpp
+++ b/examples/itemviews/chart/pieview.cpp
@@ -478,7 +478,7 @@ void PieView::setSelection(const QRect &rect, QItemSelectionModel::SelectionFlag
         for (int column = 0; column < columns; ++column) {
             QModelIndex index = model()->index(row, column, rootIndex());
             QRegion region = itemRegion(index);
-            if (!region.intersect(contentsRect).isEmpty())
+            if (region.intersects(contentsRect))
                 indexes.append(index);
         }
     }
diff --git a/examples/itemviews/fetchmore/filelistmodel.cpp b/examples/itemviews/fetchmore/filelistmodel.cpp
index 42146f8..d967819 100644
--- a/examples/itemviews/fetchmore/filelistmodel.cpp
+++ b/examples/itemviews/fetchmore/filelistmodel.cpp
@@ -107,9 +107,10 @@ void FileListModel::setDirPath(const QString &path)
 {
     QDir dir(path);
 
+    beginResetModel();
     fileList = dir.entryList();
     fileCount = 0;
-    reset();
+    endResetModel();
 }
 //![0]
 
diff --git a/examples/itemviews/interview/main.cpp b/examples/itemviews/interview/main.cpp
index 92239c9..fa059cd 100644
--- a/examples/itemviews/interview/main.cpp
+++ b/examples/itemviews/interview/main.cpp
@@ -61,8 +61,8 @@ int main(int argc, char *argv[])
     QTableView *table = new QTableView;
     table->setModel(data);
     table->setSelectionModel(selections);
-    table->horizontalHeader()->setMovable(true);
-    table->verticalHeader()->setMovable(true);
+    table->horizontalHeader()->setSectionsMovable(true);
+    table->verticalHeader()->setSectionsMovable(true);
     // Set StaticContents to enable minimal repaints on resizes.
     table->viewport()->setAttribute(Qt::WA_StaticContents);
     page.addWidget(table);
diff --git a/examples/itemviews/pixelator/imagemodel.cpp b/examples/itemviews/pixelator/imagemodel.cpp
index 5b64fb2..efbf2d3 100644
--- a/examples/itemviews/pixelator/imagemodel.cpp
+++ b/examples/itemviews/pixelator/imagemodel.cpp
@@ -52,8 +52,9 @@ ImageModel::ImageModel(QObject *parent)
 //! [1]
 void ImageModel::setImage(const QImage &image)
 {
+    beginResetModel();
     modelImage = image;
-    reset();
+    endResetModel();
 }
 //! [1]
 
diff --git a/examples/sql/masterdetail/mainwindow.cpp b/examples/sql/masterdetail/mainwindow.cpp
index 0eb8bb4..4e7abfc 100644
--- a/examples/sql/masterdetail/mainwindow.cpp
+++ b/examples/sql/masterdetail/mainwindow.cpp
@@ -410,7 +410,7 @@ void MainWindow::updateHeader(QModelIndex, int, int)
 void MainWindow::adjustHeader()
 {
     albumView->hideColumn(0);
-    albumView->horizontalHeader()->setResizeMode(1, QHeaderView::Stretch);
+    albumView->horizontalHeader()->setSectionResizeMode(1, QHeaderView::Stretch);
     albumView->resizeColumnToContents(2);
     albumView->resizeColumnToContents(3);
 }
diff --git a/examples/tools/completer/mainwindow.cpp b/examples/tools/completer/mainwindow.cpp
index bc80bc9..4d989c3 100644
--- a/examples/tools/completer/mainwindow.cpp
+++ b/examples/tools/completer/mainwindow.cpp
@@ -242,8 +242,8 @@ void MainWindow::changeModel()
             treeView->setRootIsDecorated(false);
             treeView->header()->hide();
             treeView->header()->setStretchLastSection(false);
-            treeView->header()->setResizeMode(0, QHeaderView::Stretch);
-            treeView->header()->setResizeMode(1, QHeaderView::ResizeToContents);
+            treeView->header()->setSectionResizeMode(0, QHeaderView::Stretch);
+            treeView->header()->setSectionResizeMode(1, QHeaderView::ResizeToContents);
             contentsLabel->setText(tr("Enter name of your country"));
         }
         break;
diff --git a/examples/tools/plugandpaint/mainwindow.cpp b/examples/tools/plugandpaint/mainwindow.cpp
index 472e101..c33c5be 100644
--- a/examples/tools/plugandpaint/mainwindow.cpp
+++ b/examples/tools/plugandpaint/mainwindow.cpp
@@ -116,10 +116,10 @@ void MainWindow::brushColor()
 void MainWindow::brushWidth()
 {
     bool ok;
-    const int newWidth = QInputDialog::getInteger(this, tr("Plug & Paint"),
-                                                  tr("Select brush width:"),
-                                                  paintArea->brushWidth(),
-                                                  1, 50, 1, &ok);
+    const int newWidth = QInputDialog::getInt(this, tr("Plug & Paint"),
+                                              tr("Select brush width:"),
+                                              paintArea->brushWidth(),
+                                              1, 50, 1, &ok);
     if (ok)
         paintArea->setBrushWidth(newWidth);
 }
diff --git a/examples/tools/plugandpaintplugins/extrafilters/extrafiltersplugin.cpp b/examples/tools/plugandpaintplugins/extrafilters/extrafiltersplugin.cpp
index 186f364..f7f5310 100644
--- a/examples/tools/plugandpaintplugins/extrafilters/extrafiltersplugin.cpp
+++ b/examples/tools/plugandpaintplugins/extrafilters/extrafiltersplugin.cpp
@@ -73,7 +73,7 @@ QImage ExtraFiltersPlugin::filterImage(const QString &filter,
         }
     } else if (filter == tr("Smudge...")) {
         bool ok;
-        int numIters = QInputDialog::getInteger(parent, tr("Smudge Filter"),
+        int numIters = QInputDialog::getInt(parent, tr("Smudge Filter"),
                                     tr("Enter number of iterations:"),
                                     5, 1, 20, 1, &ok);
         if (ok) {
@@ -102,7 +102,7 @@ QImage ExtraFiltersPlugin::filterImage(const QString &filter,
         }
     } else if (filter == tr("Threshold...")) {
         bool ok;
-        int threshold = QInputDialog::getInteger(parent, tr("Threshold Filter"),
+        int threshold = QInputDialog::getInt(parent, tr("Threshold Filter"),
                                                  tr("Enter threshold:"),
                                                  10, 1, 256, 1, &ok);
         if (ok) {
diff --git a/examples/tools/settingseditor/locationdialog.cpp b/examples/tools/settingseditor/locationdialog.cpp
index e1ec636..192aaab 100644
--- a/examples/tools/settingseditor/locationdialog.cpp
+++ b/examples/tools/settingseditor/locationdialog.cpp
@@ -89,7 +89,7 @@ LocationDialog::LocationDialog(QWidget *parent)
     locationsTable->setEditTriggers(QAbstractItemView::NoEditTriggers);
     locationsTable->setColumnCount(2);
     locationsTable->setHorizontalHeaderLabels(labels);
-    locationsTable->horizontalHeader()->setResizeMode(0, QHeaderView::Stretch);
+    locationsTable->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);
     locationsTable->horizontalHeader()->resizeSection(1, 180);
 
     buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok
diff --git a/examples/tools/settingseditor/settingstree.cpp b/examples/tools/settingseditor/settingstree.cpp
index b5b3457..4966ff9 100644
--- a/examples/tools/settingseditor/settingstree.cpp
+++ b/examples/tools/settingseditor/settingstree.cpp
@@ -51,8 +51,8 @@ SettingsTree::SettingsTree(QWidget *parent)
     QStringList labels;
     labels << tr("Setting") << tr("Type") << tr("Value");
     setHeaderLabels(labels);
-    header()->setResizeMode(0, QHeaderView::Stretch);
-    header()->setResizeMode(2, QHeaderView::Stretch);
+    header()->setSectionResizeMode(0, QHeaderView::Stretch);
+    header()->setSectionResizeMode(2, QHeaderView::Stretch);
 
     settings = 0;
     refreshTimer.setInterval(2000);
diff --git a/examples/widgets/icons/mainwindow.cpp b/examples/widgets/icons/mainwindow.cpp
index da4458e..00f5a21 100644
--- a/examples/widgets/icons/mainwindow.cpp
+++ b/examples/widgets/icons/mainwindow.cpp
@@ -285,9 +285,9 @@ void MainWindow::createImagesGroupBox()
     imagesTable->horizontalHeader()->setDefaultSectionSize(90);
     imagesTable->setColumnCount(3);
     imagesTable->setHorizontalHeaderLabels(labels);
-    imagesTable->horizontalHeader()->setResizeMode(0, QHeaderView::Stretch);
-    imagesTable->horizontalHeader()->setResizeMode(1, QHeaderView::Fixed);
-    imagesTable->horizontalHeader()->setResizeMode(2, QHeaderView::Fixed);
+    imagesTable->horizontalHeader()->setSectionResizeMode(0, QHeaderView::Stretch);
+    imagesTable->horizontalHeader()->setSectionResizeMode(1, QHeaderView::Fixed);
+    imagesTable->horizontalHeader()->setSectionResizeMode(2, QHeaderView::Fixed);
     imagesTable->verticalHeader()->hide();
 //! [23]
 
diff --git a/examples/widgets/scribble/mainwindow.cpp b/examples/widgets/scribble/mainwindow.cpp
index 00bf988..6db7b39 100644
--- a/examples/widgets/scribble/mainwindow.cpp
+++ b/examples/widgets/scribble/mainwindow.cpp
@@ -107,10 +107,10 @@ void MainWindow::penWidth()
 //! [9] //! [10]
 {
     bool ok;
-    int newWidth = QInputDialog::getInteger(this, tr("Scribble"),
-                                            tr("Select pen width:"),
-                                            scribbleArea->penWidth(),
-                                            1, 50, 1, &ok);
+    int newWidth = QInputDialog::getInt(this, tr("Scribble"),
+                                        tr("Select pen width:"),
+                                        scribbleArea->penWidth(),
+                                        1, 50, 1, &ok);
     if (ok)
         scribbleArea->setPenWidth(newWidth);
 }