diff --git a/tools/qdoc3/config.cpp b/tools/qdoc3/config.cpp
index f28fead..d137905 100644
--- a/tools/qdoc3/config.cpp
+++ b/tools/qdoc3/config.cpp
@@ -309,6 +309,39 @@ QStringList Config::getStringList(const QString& var) const
 }
 
 /*!
+  This function should only be called when the configuration
+  variable \a var maps to a string list that contains file paths.
+  It cleans the paths with QDir::cleanPath() before returning
+  them.
+
+  First, this function looks up the configuration variable \a var
+  in the location map and, if found, sets the internal variable
+  \c{lastLoc} the Location that \a var maps to.
+
+  Then it looks up the configuration variable \a var in the string
+  list map, which maps to a string list that contains file paths.
+  These paths might not be clean, so QDir::cleanPath() is called
+  for each one. The string list returned contains cleaned paths.
+ */
+QStringList Config::getCleanPathList(const QString& var) const
+{
+    if (!locMap[var].isEmpty())
+        (Location&) lastLoc = locMap[var];
+    QStringList t;
+    QMap<QString,QStringList>::const_iterator it = stringListValueMap.find(var);
+    if (it != stringListValueMap.end()) {
+        const QStringList& sl = it.value();
+        if (!sl.isEmpty()) {
+            t.reserve(sl.size());
+            for (int i=0; i<sl.size(); ++i) {
+                t.append(QDir::cleanPath(sl[i]));
+            }
+        }
+    }
+    return t;
+}
+
+/*!
   Calls getRegExpList() with the control variable \a var and
   iterates through the resulting list of regular expressions,
   concatening them with some extras characters to form a single
@@ -404,11 +437,13 @@ void Config::subVarsAndValues(const QString& var, QStringMultiMap& t) const
   The files are found in the directories specified by
   \a dirsVar, and they are filtered by \a defaultNameFilter
   if a better filter can't be constructed from \a filesVar.
-  The directories in \a excludedDirs are avoided.
+  The directories in \a excludedDirs are avoided. The files
+  in \a excludedFiles are not included in the return list.
  */
 QStringList Config::getAllFiles(const QString &filesVar,
                                 const QString &dirsVar,
-                                const QSet<QString> &excludedDirs)
+                                const QSet<QString> &excludedDirs,
+                                const QSet<QString> &excludedFiles)
 {
     QStringList result = getStringList(filesVar);
     QStringList dirs = getStringList(dirsVar);
@@ -417,7 +452,7 @@ QStringList Config::getAllFiles(const QString &filesVar,
 
     QStringList::ConstIterator d = dirs.begin();
     while (d != dirs.end()) {
-	result += getFilesHere(*d, nameFilter, excludedDirs);
+        result += getFilesHere(*d, nameFilter, excludedDirs, excludedFiles);
 	++d;
     }
     return result;
@@ -532,7 +567,7 @@ QString Config::copyFile(const Location& location,
     QFile inFile(sourceFilePath);
     if (!inFile.open(QFile::ReadOnly)) {
 	location.fatal(tr("Cannot open input file '%1': %2")
-			.arg(inFile.fileName()).arg(inFile.errorString()));
+                       .arg(sourceFilePath).arg(inFile.errorString()));
 	return "";
     }
 
@@ -875,7 +910,8 @@ void Config::load(Location location, const QString& fileName)
 
 QStringList Config::getFilesHere(const QString& dir,
                                  const QString& nameFilter,
-                                 const QSet<QString> &excludedDirs)
+                                 const QSet<QString> &excludedDirs,
+                                 const QSet<QString> &excludedFiles)
 {
     QStringList result;
     if (excludedDirs.contains(dir))
@@ -891,8 +927,13 @@ QStringList Config::getFilesHere(const QString& dir,
     fileNames = dirInfo.entryList();
     fn = fileNames.constBegin();
     while (fn != fileNames.constEnd()) {
-        if (!fn->startsWith(QLatin1Char('~')))
-            result.append(dirInfo.filePath(*fn));
+        if (!fn->startsWith(QLatin1Char('~'))) {
+            QString s = dirInfo.filePath(*fn);
+            QString c = QDir::cleanPath(s);
+            if (!excludedFiles.contains(c)) {
+                result.append(c);
+            }
+        }
 	++fn;
     }    
     
@@ -901,7 +942,7 @@ QStringList Config::getFilesHere(const QString& dir,
     fileNames = dirInfo.entryList();
     fn = fileNames.constBegin();
     while (fn != fileNames.constEnd()) {
-        result += getFilesHere(dirInfo.filePath(*fn), nameFilter, excludedDirs);
+        result += getFilesHere(dirInfo.filePath(*fn), nameFilter, excludedDirs, excludedFiles);
 	++fn;
     }
     return result;
diff --git a/tools/qdoc3/config.h b/tools/qdoc3/config.h
index a914360..5fbc0f6 100644
--- a/tools/qdoc3/config.h
+++ b/tools/qdoc3/config.h
@@ -74,17 +74,20 @@ class Config
     QString getString(const QString& var) const;
     QSet<QString> getStringSet(const QString& var) const;
     QStringList getStringList(const QString& var) const;
+    QStringList getCleanPathList(const QString& var) const;
     QRegExp getRegExp(const QString& var) const;
     QList<QRegExp> getRegExpList(const QString& var) const;
     QSet<QString> subVars(const QString& var) const;
     void subVarsAndValues(const QString& var, QStringMultiMap& t) const;
     QStringList getAllFiles(const QString& filesVar, 
                             const QString& dirsVar,
-                            const QSet<QString> &excludedDirs = QSet<QString>());
+                            const QSet<QString> &excludedDirs = QSet<QString>(),
+                            const QSet<QString> &excludedFiles = QSet<QString>());
 
     static QStringList getFilesHere(const QString& dir,
                                     const QString& nameFilter,
-                                    const QSet<QString> &excludedDirs = QSet<QString>());
+                                    const QSet<QString> &excludedDirs = QSet<QString>(),
+                                    const QSet<QString> &excludedFiles = QSet<QString>());
     static QString findFile(const Location& location, 
                             const QStringList &files,
                             const QStringList& dirs, 
@@ -132,6 +135,7 @@ class Config
 #define CONFIG_EXAMPLEDIRS              "exampledirs"
 #define CONFIG_EXAMPLES                 "examples"
 #define CONFIG_EXCLUDEDIRS              "excludedirs"
+#define CONFIG_EXCLUDEFILES             "excludefiles"
 #define CONFIG_EXTRAIMAGES              "extraimages"
 #define CONFIG_FALSEHOODS               "falsehoods"
 #define CONFIG_FORMATTING               "formatting"
diff --git a/tools/qdoc3/cppcodeparser.cpp b/tools/qdoc3/cppcodeparser.cpp
index 807e18f..1cdbd19 100644
--- a/tools/qdoc3/cppcodeparser.cpp
+++ b/tools/qdoc3/cppcodeparser.cpp
@@ -198,8 +198,8 @@ void CppCodeParser::initializeParser(const Config &config)
     nodeTypeMap.insert(COMMAND_PROPERTY, Node::Property);
     nodeTypeMap.insert(COMMAND_VARIABLE, Node::Variable);
 
-    exampleFiles = config.getStringList(CONFIG_EXAMPLES);
-    exampleDirs = config.getStringList(CONFIG_EXAMPLEDIRS);
+    exampleFiles = config.getCleanPathList(CONFIG_EXAMPLES);
+    exampleDirs = config.getCleanPathList(CONFIG_EXAMPLEDIRS);
     QStringList exampleFilePatterns = config.getStringList(
         CONFIG_EXAMPLES + Config::dot + CONFIG_FILEEXTENSIONS);
 
diff --git a/tools/qdoc3/doc.cpp b/tools/qdoc3/doc.cpp
index caeeab9..93bf891 100644
--- a/tools/qdoc3/doc.cpp
+++ b/tools/qdoc3/doc.cpp
@@ -3017,10 +3017,10 @@ const QStringMultiMap &Doc::metaTagMap() const
 void Doc::initialize(const Config& config)
 {
     DocParser::tabSize = config.getInt(CONFIG_TABSIZE);
-    DocParser::exampleFiles = config.getStringList(CONFIG_EXAMPLES);
-    DocParser::exampleDirs = config.getStringList(CONFIG_EXAMPLEDIRS);
-    DocParser::sourceFiles = config.getStringList(CONFIG_SOURCES);
-    DocParser::sourceDirs = config.getStringList(CONFIG_SOURCEDIRS);
+    DocParser::exampleFiles = config.getCleanPathList(CONFIG_EXAMPLES);
+    DocParser::exampleDirs = config.getCleanPathList(CONFIG_EXAMPLEDIRS);
+    DocParser::sourceFiles = config.getCleanPathList(CONFIG_SOURCES);
+    DocParser::sourceDirs = config.getCleanPathList(CONFIG_SOURCEDIRS);
     DocParser::quoting = config.getBool(CONFIG_QUOTINGINFORMATION);
 
     QmlClassNode::qmlOnly = config.getBool(CONFIG_QMLONLY);
diff --git a/tools/qdoc3/generator.cpp b/tools/qdoc3/generator.cpp
index f45aaed..e278883 100644
--- a/tools/qdoc3/generator.cpp
+++ b/tools/qdoc3/generator.cpp
@@ -166,13 +166,13 @@ void Generator::initialize(const Config &config)
                                         .arg(outDir_ + "/style"));
     }
 
-    imageFiles = config.getStringList(CONFIG_IMAGES);
-    imageDirs = config.getStringList(CONFIG_IMAGEDIRS);
-    scriptFiles = config.getStringList(CONFIG_SCRIPTS);
-    scriptDirs = config.getStringList(CONFIG_SCRIPTDIRS);
-    styleFiles = config.getStringList(CONFIG_STYLES);
-    styleDirs = config.getStringList(CONFIG_STYLEDIRS);
-    exampleDirs = config.getStringList(CONFIG_EXAMPLEDIRS);
+    imageFiles = config.getCleanPathList(CONFIG_IMAGES);
+    imageDirs = config.getCleanPathList(CONFIG_IMAGEDIRS);
+    scriptFiles = config.getCleanPathList(CONFIG_SCRIPTS);
+    scriptDirs = config.getCleanPathList(CONFIG_SCRIPTDIRS);
+    styleFiles = config.getCleanPathList(CONFIG_STYLES);
+    styleDirs = config.getCleanPathList(CONFIG_STYLEDIRS);
+    exampleDirs = config.getCleanPathList(CONFIG_EXAMPLEDIRS);
     exampleImgExts = config.getStringList(CONFIG_EXAMPLES + Config::dot +
                                           CONFIG_IMAGEEXTENSIONS);
 
@@ -191,7 +191,7 @@ void Generator::initialize(const Config &config)
         if (outputFormats.contains((*g)->format())) {
             (*g)->initializeGenerator(config);
             QStringList extraImages =
-                config.getStringList(CONFIG_EXTRAIMAGES+Config::dot+(*g)->format());
+                config.getCleanPathList(CONFIG_EXTRAIMAGES+Config::dot+(*g)->format());
             QStringList::ConstIterator e = extraImages.begin();
             while (e != extraImages.end()) {
                 QString userFriendlyFilePath;
@@ -218,7 +218,7 @@ void Generator::initialize(const Config &config)
                 QStringList noExts;
                 QStringList searchDirs = QStringList() << templateDir;
                 QStringList scripts =
-                    config.getStringList((*g)->format()+Config::dot+CONFIG_SCRIPTS);
+                    config.getCleanPathList((*g)->format()+Config::dot+CONFIG_SCRIPTS);
                 e = scripts.begin();
                 while (e != scripts.end()) {
                     QString userFriendlyFilePath;
@@ -238,7 +238,7 @@ void Generator::initialize(const Config &config)
                 }
 
                 QStringList styles =
-                    config.getStringList((*g)->format()+Config::dot+CONFIG_STYLESHEETS);
+                    config.getCleanPathList((*g)->format()+Config::dot+CONFIG_STYLESHEETS);
                 e = styles.begin();
                 while (e != styles.end()) {
                     QString userFriendlyFilePath;
diff --git a/tools/qdoc3/main.cpp b/tools/qdoc3/main.cpp
index e68a771..a7364dd 100644
--- a/tools/qdoc3/main.cpp
+++ b/tools/qdoc3/main.cpp
@@ -261,20 +261,30 @@ static void processQdocconfFile(const QString &fileName)
     tree->readIndexes(indexFiles);
 
     QSet<QString> excludedDirs;
+    QSet<QString> excludedFiles;
     QSet<QString> headers;
     QSet<QString> sources;
     QStringList headerList;
     QStringList sourceList;
     QStringList excludedDirsList;
+    QStringList excludedFilesList;
 
-    excludedDirsList = config.getStringList(CONFIG_EXCLUDEDIRS);
-    foreach (const QString &excludeDir, excludedDirsList)
-        excludedDirs.insert(QDir::fromNativeSeparators(excludeDir));
+    excludedDirsList = config.getCleanPathList(CONFIG_EXCLUDEDIRS);
+    foreach (const QString &excludeDir, excludedDirsList) {
+        QString p = QDir::fromNativeSeparators(excludeDir);
+        excludedDirs.insert(p);
+    }
+
+    excludedFilesList = config.getCleanPathList(CONFIG_EXCLUDEFILES);
+    foreach (const QString& excludeFile, excludedFilesList) {
+        QString p = QDir::fromNativeSeparators(excludeFile);
+        excludedFiles.insert(p);
+    }
 
-    headerList = config.getAllFiles(CONFIG_HEADERS,CONFIG_HEADERDIRS,excludedDirs);
+    headerList = config.getAllFiles(CONFIG_HEADERS,CONFIG_HEADERDIRS,excludedDirs,excludedFiles);
     headers = QSet<QString>::fromList(headerList);
 
-    sourceList = config.getAllFiles(CONFIG_SOURCES,CONFIG_SOURCEDIRS,excludedDirs);
+    sourceList = config.getAllFiles(CONFIG_SOURCES,CONFIG_SOURCEDIRS,excludedDirs,excludedFiles);
     sources = QSet<QString>::fromList(sourceList);
 
     /*