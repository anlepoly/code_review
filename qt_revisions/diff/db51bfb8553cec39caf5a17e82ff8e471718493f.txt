diff --git a/src/declarative/qml/qdeclarativedata_p.h b/src/declarative/qml/qdeclarativedata_p.h
index 80157bb..6a4b47d 100644
--- a/src/declarative/qml/qdeclarativedata_p.h
+++ b/src/declarative/qml/qdeclarativedata_p.h
@@ -148,7 +148,6 @@ public:
     }
 
     bool hasExtendedData() const { return extendedData != 0; }
-    QDeclarativeNotifier *objectNameNotifier() const;
     QHash<int, QObject *> *attachedProperties() const;
 
 private:
diff --git a/src/declarative/qml/qdeclarativeengine.cpp b/src/declarative/qml/qdeclarativeengine.cpp
index 76c5933..5d24188 100644
--- a/src/declarative/qml/qdeclarativeengine.cpp
+++ b/src/declarative/qml/qdeclarativeengine.cpp
@@ -1102,7 +1102,6 @@ public:
     ~QDeclarativeDataExtended();
 
     QHash<int, QObject *> attachedProperties;
-    QDeclarativeNotifier objectNameNotifier;
 };
 
 QDeclarativeDataExtended::QDeclarativeDataExtended()
@@ -1113,12 +1112,6 @@ QDeclarativeDataExtended::~QDeclarativeDataExtended()
 {
 }
 
-QDeclarativeNotifier *QDeclarativeData::objectNameNotifier() const
-{
-    if (!extendedData) extendedData = new QDeclarativeDataExtended;
-    return &extendedData->objectNameNotifier;
-}
-
 QHash<int, QObject *> *QDeclarativeData::attachedProperties() const
 {
     if (!extendedData) extendedData = new QDeclarativeDataExtended;
diff --git a/src/declarative/qml/qdeclarativefastproperties.cpp b/src/declarative/qml/qdeclarativefastproperties.cpp
index ff2ae9d..4fa53df 100644
--- a/src/declarative/qml/qdeclarativefastproperties.cpp
+++ b/src/declarative/qml/qdeclarativefastproperties.cpp
@@ -51,19 +51,10 @@ QT_BEGIN_NAMESPACE
 // primarily read from bindings is a candidate for inclusion as a fast 
 // property.
 
-static void QObject_objectName(QObject *object, void *output, QDeclarativeNotifierEndpoint *endpoint)
-{
-    if (endpoint) 
-        endpoint->connect(QDeclarativeData::get(object, true)->objectNameNotifier());
-    *((QString *)output) = object->objectName();
-}
-
 QDeclarativeFastProperties::QDeclarativeFastProperties()
 {
     add(&QDeclarativeItem::staticMetaObject, QDeclarativeItem::staticMetaObject.indexOfProperty("parent"),
         QDeclarativeItemPrivate::parentProperty);
-    add(&QObject::staticMetaObject, QObject::staticMetaObject.indexOfProperty("objectName"),
-        QObject_objectName);    
 }
 
 int QDeclarativeFastProperties::accessorIndexForProperty(const QMetaObject *metaObject, int propertyIndex)
diff --git a/src/declarative/qml/qdeclarativeobjectscriptclass.cpp b/src/declarative/qml/qdeclarativeobjectscriptclass.cpp
index 2e0f9f9..89d5040 100644
--- a/src/declarative/qml/qdeclarativeobjectscriptclass.cpp
+++ b/src/declarative/qml/qdeclarativeobjectscriptclass.cpp
@@ -253,13 +253,8 @@ QDeclarativeObjectScriptClass::property(QObject *obj, const Identifier &name)
         }
     } else {
         if (enginePriv->captureProperties && !(lastData->flags & QDeclarativePropertyCache::Data::IsConstant)) {
-            if (lastData->coreIndex == 0) {
-                enginePriv->capturedProperties <<
-                    QDeclarativeEnginePrivate::CapturedProperty(QDeclarativeData::get(obj, true)->objectNameNotifier());
-            } else {
-                enginePriv->capturedProperties <<
-                    QDeclarativeEnginePrivate::CapturedProperty(obj, lastData->coreIndex, lastData->notifyIndex);
-            }
+            enginePriv->capturedProperties <<
+                QDeclarativeEnginePrivate::CapturedProperty(obj, lastData->coreIndex, lastData->notifyIndex);
         }
 
         if (QDeclarativeValueTypeFactory::isValueType((uint)lastData->propType)) {
diff --git a/tests/auto/declarative/qdeclarativeecmascript/tst_qdeclarativeecmascript.cpp b/tests/auto/declarative/qdeclarativeecmascript/tst_qdeclarativeecmascript.cpp
index f07f701..d561fbb 100644
--- a/tests/auto/declarative/qdeclarativeecmascript/tst_qdeclarativeecmascript.cpp
+++ b/tests/auto/declarative/qdeclarativeecmascript/tst_qdeclarativeecmascript.cpp
@@ -2845,7 +2845,6 @@ void tst_qdeclarativeecmascript::objectName()
 
     o->setObjectName("world");
 
-    QEXPECT_FAIL("", "QTBUG-26334 - set object name fails", Abort);
     QCOMPARE(o->property("test1").toString(), QString("world"));
     QCOMPARE(o->property("test2").toString(), QString("orl"));