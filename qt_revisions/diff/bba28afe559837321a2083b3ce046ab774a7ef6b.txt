diff --git a/src/gsttools/qgstreameraudioinputendpointselector.cpp b/src/gsttools/qgstreameraudioinputendpointselector.cpp
index ddbdc75..1f9abd7 100644
--- a/src/gsttools/qgstreameraudioinputendpointselector.cpp
+++ b/src/gsttools/qgstreameraudioinputendpointselector.cpp
@@ -51,7 +51,7 @@
 #endif
 
 QGstreamerAudioInputEndpointSelector::QGstreamerAudioInputEndpointSelector(QObject *parent)
-    :QAudioEndpointSelector(parent)
+    :QAudioEndpointSelectorControl(parent)
 {
     update();
 }
diff --git a/src/gsttools/qgstreamervideoinputdevicecontrol.cpp b/src/gsttools/qgstreamervideoinputdevicecontrol.cpp
index 5fe9ca7..7aaf654 100644
--- a/src/gsttools/qgstreamervideoinputdevicecontrol.cpp
+++ b/src/gsttools/qgstreamervideoinputdevicecontrol.cpp
@@ -57,7 +57,7 @@
 #include <linux/videodev2.h>
 
 QGstreamerVideoInputDeviceControl::QGstreamerVideoInputDeviceControl(QObject *parent)
-    :QVideoDeviceControl(parent), m_selectedDevice(0)
+    :QVideoDeviceSelectorControl(parent), m_selectedDevice(0)
 {
     update();
 }
diff --git a/src/multimedia/camera/qcamera.cpp b/src/multimedia/camera/qcamera.cpp
index 3a19119..063e280 100644
--- a/src/multimedia/camera/qcamera.cpp
+++ b/src/multimedia/camera/qcamera.cpp
@@ -51,7 +51,7 @@
 #include <qmediarecordercontrol.h>
 #include <qcameraimageprocessingcontrol.h>
 #include <qcameraimagecapturecontrol.h>
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 
 #include <QDebug>
 
@@ -122,7 +122,7 @@ public:
     QMediaServiceProvider *provider;
 
     QCameraControl *control;
-    QVideoDeviceControl *deviceControl;
+    QVideoDeviceSelectorControl *deviceControl;
     QCameraLocksControl *locksControl;
 
     QCameraExposure *cameraExposure;
@@ -245,7 +245,7 @@ void QCameraPrivate::initControls()
     if (service) {
         control = qobject_cast<QCameraControl *>(service->requestControl(QCameraControl_iid));
         locksControl = qobject_cast<QCameraLocksControl *>(service->requestControl(QCameraLocksControl_iid));
-        deviceControl = qobject_cast<QVideoDeviceControl*>(service->requestControl(QVideoDeviceControl_iid));
+        deviceControl = qobject_cast<QVideoDeviceSelectorControl*>(service->requestControl(QVideoDeviceSelectorControl_iid));
 
         if (control) {
             q->connect(control, SIGNAL(stateChanged(QCamera::State)), q, SLOT(_q_updateState(QCamera::State)));
diff --git a/src/multimedia/camera/qcamerafocus.cpp b/src/multimedia/camera/qcamerafocus.cpp
index 1987941..d4f096b 100644
--- a/src/multimedia/camera/qcamerafocus.cpp
+++ b/src/multimedia/camera/qcamerafocus.cpp
@@ -49,7 +49,7 @@
 #include <qcamerazoomcontrol.h>
 #include <qmediarecordercontrol.h>
 #include <qcameraimagecapturecontrol.h>
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 
 #include <QtCore/QDebug>
 
diff --git a/src/multimedia/camera/qcameraimageprocessing.cpp b/src/multimedia/camera/qcameraimageprocessing.cpp
index b867f35..e6a1129 100644
--- a/src/multimedia/camera/qcameraimageprocessing.cpp
+++ b/src/multimedia/camera/qcameraimageprocessing.cpp
@@ -48,7 +48,7 @@
 #include <qmediarecordercontrol.h>
 #include <qcameraimageprocessingcontrol.h>
 #include <qcameraimagecapturecontrol.h>
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 
 #include <QtCore/QDebug>
 
diff --git a/src/multimedia/controls/controls.pri b/src/multimedia/controls/controls.pri
index dec892a..03bab2f 100644
--- a/src/multimedia/controls/controls.pri
+++ b/src/multimedia/controls/controls.pri
@@ -3,8 +3,8 @@ INCLUDEPATH += controls
 
 PUBLIC_HEADERS += \
     controls/qaudiodecodercontrol.h \
-    controls/qaudioencodercontrol.h \
-    controls/qaudioendpointselector.h \
+    controls/qaudioencodersettingscontrol.h \
+    controls/qaudioendpointselectorcontrol.h \
     controls/qcameracapturebufferformatcontrol.h \
     controls/qcameracapturedestinationcontrol.h \
     controls/qcameracontrol.h \
@@ -28,8 +28,8 @@ PUBLIC_HEADERS += \
     controls/qmetadatawritercontrol.h \
     controls/qradiodatacontrol.h \
     controls/qradiotunercontrol.h \
-    controls/qvideodevicecontrol.h \
-    controls/qvideoencodercontrol.h \
+    controls/qvideodeviceselectorcontrol.h \
+    controls/qvideoencodersettingscontrol.h \
     controls/qvideorenderercontrol.h \
     controls/qvideowindowcontrol.h \
     controls/qmediaaudioprobecontrol.h \
@@ -41,8 +41,6 @@ PRIVATE_HEADERS += \
     controls/qmediaplaylistsourcecontrol_p.h
 
 SOURCES += \
-    controls/qaudioencodercontrol.cpp \
-    controls/qaudioendpointselector.cpp \
     controls/qcameracapturebufferformatcontrol.cpp \
     controls/qcameracapturedestinationcontrol.cpp \
     controls/qcameracontrol.cpp \
@@ -68,13 +66,15 @@ SOURCES += \
     controls/qmetadatawritercontrol.cpp \
     controls/qradiodatacontrol.cpp \
     controls/qradiotunercontrol.cpp \
-    controls/qvideodevicecontrol.cpp \
-    controls/qvideoencodercontrol.cpp \
     controls/qvideorenderercontrol.cpp \
     controls/qvideowindowcontrol.cpp \
     controls/qmediaaudioprobecontrol.cpp \
     controls/qmediavideoprobecontrol.cpp \
     controls/qmediaavailabilitycontrol.cpp \
-    controls/qaudiodecodercontrol.cpp
+    controls/qaudiodecodercontrol.cpp \
+    controls/qvideoencodersettingscontrol.cpp \
+    controls/qaudioencodersettingscontrol.cpp \
+    controls/qaudioendpointselectorcontrol.cpp \
+    controls/qvideodeviceselectorcontrol.cpp
 
 
diff --git a/src/multimedia/controls/qaudioencodercontrol.cpp b/src/multimedia/controls/qaudioencodercontrol.cpp
deleted file mode 100644
index 92f9e35..0000000
--- a/src/multimedia/controls/qaudioencodercontrol.cpp
+++ /dev/null
@@ -1,141 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include "qaudioencodercontrol.h"
-#include <QtCore/qstringlist.h>
-
-QT_BEGIN_NAMESPACE
-
-
-/*!
-    \class QAudioEncoderControl
-    \inmodule QtMultimedia
-
-    \ingroup multimedia_control
-
-    \brief The QAudioEncoderControl class provides access to the settings of a
-    media service that performs audio encoding.
-
-    If a QMediaService supports encoding audio data it will implement
-    QAudioEncoderControl.  This control provides information about the limits
-    of restricted audio encoder options and allows the selection of a set of
-    audio encoder settings as specified in a QAudioEncoderSettings object.
-
-    The functionality provided by this control is exposed to application code through the
-    QMediaRecorder class.
-
-    The interface name of QAudioEncoderControl is \c org.qt-project.qt.audioencodercontrol/5.0 as
-    defined in QAudioEncoderControl_iid.
-
-    \sa QMediaService::requestControl(), QMediaRecorder
-*/
-
-/*!
-    \macro QAudioEncoderControl_iid
-
-    \c org.qt-project.qt.audioencodercontrol/5.0
-
-    Defines the interface name of the QAudioEncoderControl class.
-
-    \relates QAudioEncoderControl
-*/
-
-/*!
-  Create a new audio encode control object with the given \a parent.
-*/
-QAudioEncoderControl::QAudioEncoderControl(QObject *parent)
-    :QMediaControl(parent)
-{
-}
-
-/*!
-  Destroys the audio encode control.
-*/
-QAudioEncoderControl::~QAudioEncoderControl()
-{
-}
-
-/*!
-  \fn QAudioEncoderControl::supportedAudioCodecs() const
-
-  Returns the list of supported audio codec names.
-*/
-
-/*!
-  \fn QAudioEncoderControl::codecDescription(const QString &codec) const
-
-  Returns description of audio \a codec.
-*/
-
-/*!
-  \fn QAudioEncoderControl::supportedSampleRates(const QAudioEncoderSettings &settings = QAudioEncoderSettings(),
-                                                 bool *continuous) const
-
-  Returns the list of supported audio sample rates, if known.
-
-  If non null audio \a settings parameter is passed,
-  the returned list is reduced to sample rates supported with partial settings applied.
-
-  It can be used for example to query the list of sample rates, supported by specific audio codec.
-
-  If the encoder supports arbitrary sample rates within the supported rates range,
-  *\a continuous is set to true, otherwise *\a continuous is set to false.
-*/
-
-/*!
-    \fn QAudioEncoderControl::audioSettings() const
-
-    Returns the audio encoder settings.
-
-    The returned value may be different tha passed to QAudioEncoderControl::setAudioSettings()
-    if the settings contains the default or undefined parameters.
-    In this case if the undefined parameters are already resolved, they should be returned.
-*/
-
-/*!
-    \fn QAudioEncoderControl::setAudioSettings(const QAudioEncoderSettings &settings)
-
-    Sets the selected audio \a settings.
-*/
-
-#include "moc_qaudioencodercontrol.cpp"
-QT_END_NAMESPACE
-
diff --git a/src/multimedia/controls/qaudioencodercontrol.h b/src/multimedia/controls/qaudioencodercontrol.h
deleted file mode 100644
index 6b81f33..0000000
--- a/src/multimedia/controls/qaudioencodercontrol.h
+++ /dev/null
@@ -1,93 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QAUDIOENCODERCONTROL_H
-#define QAUDIOENCODERCONTROL_H
-
-#include "qmediacontrol.h"
-#include "qmediarecorder.h"
-#include <QtCore/qlist.h>
-#include <QtCore/qpair.h>
-
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
-QT_MODULE(Multimedia)
-
-class QStringList;
-class QAudioFormat;
-QT_END_NAMESPACE
-
-QT_BEGIN_NAMESPACE
-
-// Required for QDoc workaround
-class QString;
-
-class Q_MULTIMEDIA_EXPORT QAudioEncoderControl : public QMediaControl
-{
-    Q_OBJECT
-
-public:
-    virtual ~QAudioEncoderControl();
-
-    virtual QStringList supportedAudioCodecs() const = 0;
-    virtual QString codecDescription(const QString &codecName) const = 0;
-
-    virtual QList<int> supportedSampleRates(const QAudioEncoderSettings &settings,
-                                            bool *continuous = 0) const = 0;
-
-    virtual QAudioEncoderSettings audioSettings() const = 0;
-    virtual void setAudioSettings(const QAudioEncoderSettings&) = 0;
-
-protected:
-    QAudioEncoderControl(QObject *parent = 0);
-};
-
-#define QAudioEncoderControl_iid "org.qt-project.qt.audioencodercontrol/5.0"
-Q_MEDIA_DECLARE_CONTROL(QAudioEncoderControl, QAudioEncoderControl_iid)
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
-
-#endif // QAUDIOCAPTUREPROPERTIESCONTROL_H
diff --git a/src/multimedia/controls/qaudioencodersettingscontrol.cpp b/src/multimedia/controls/qaudioencodersettingscontrol.cpp
new file mode 100644
index 0000000..73f2379
--- /dev/null
+++ b/src/multimedia/controls/qaudioencodersettingscontrol.cpp
@@ -0,0 +1,141 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qaudioencodersettingscontrol.h"
+#include <QtCore/qstringlist.h>
+
+QT_BEGIN_NAMESPACE
+
+
+/*!
+    \class QAudioEncoderSettingsControl
+    \inmodule QtMultimedia
+
+    \ingroup multimedia_control
+
+    \brief The QAudioEncoderSettingsControl class provides access to the settings of a
+    media service that performs audio encoding.
+
+    If a QMediaService supports encoding audio data it will implement
+    QAudioEncoderSettingsControl.  This control provides information about the limits
+    of restricted audio encoder options and allows the selection of a set of
+    audio encoder settings as specified in a QAudioEncoderSettings object.
+
+    The functionality provided by this control is exposed to application code through the
+    QMediaRecorder class.
+
+    The interface name of QAudioEncoderSettingsControl is \c org.qt-project.qt.audioencodersettingscontrol/5.0 as
+    defined in QAudioEncoderSettingsControl_iid.
+
+    \sa QMediaService::requestControl(), QMediaRecorder
+*/
+
+/*!
+    \macro QAudioEncoderSettingsControl_iid
+
+    \c org.qt-project.qt.audioencodersettingscontrol/5.0
+
+    Defines the interface name of the QAudioEncoderSettingsControl class.
+
+    \relates QAudioEncoderSettingsControl
+*/
+
+/*!
+  Create a new audio encoder settings control object with the given \a parent.
+*/
+QAudioEncoderSettingsControl::QAudioEncoderSettingsControl(QObject *parent)
+    :QMediaControl(parent)
+{
+}
+
+/*!
+  Destroys the audio encoder settings control.
+*/
+QAudioEncoderSettingsControl::~QAudioEncoderSettingsControl()
+{
+}
+
+/*!
+  \fn QAudioEncoderSettingsControl::supportedAudioCodecs() const
+
+  Returns the list of supported audio codec names.
+*/
+
+/*!
+  \fn QAudioEncoderSettingsControl::codecDescription(const QString &codec) const
+
+  Returns description of audio \a codec.
+*/
+
+/*!
+  \fn QAudioEncoderSettingsControl::supportedSampleRates(const QAudioEncoderSettings &settings = QAudioEncoderSettings(),
+                                                 bool *continuous) const
+
+  Returns the list of supported audio sample rates, if known.
+
+  If non null audio \a settings parameter is passed,
+  the returned list is reduced to sample rates supported with partial settings applied.
+
+  It can be used for example to query the list of sample rates, supported by specific audio codec.
+
+  If the encoder supports arbitrary sample rates within the supported rates range,
+  *\a continuous is set to true, otherwise *\a continuous is set to false.
+*/
+
+/*!
+    \fn QAudioEncoderSettingsControl::audioSettings() const
+
+    Returns the audio encoder settings.
+
+    The returned value may be different tha passed to QAudioEncoderSettingsControl::setAudioSettings()
+    if the settings contains the default or undefined parameters.
+    In this case if the undefined parameters are already resolved, they should be returned.
+*/
+
+/*!
+    \fn QAudioEncoderSettingsControl::setAudioSettings(const QAudioEncoderSettings &settings)
+
+    Sets the selected audio \a settings.
+*/
+
+#include "moc_qaudioencodersettingscontrol.cpp"
+QT_END_NAMESPACE
+
diff --git a/src/multimedia/controls/qaudioencodersettingscontrol.h b/src/multimedia/controls/qaudioencodersettingscontrol.h
new file mode 100644
index 0000000..a0e0ea8
--- /dev/null
+++ b/src/multimedia/controls/qaudioencodersettingscontrol.h
@@ -0,0 +1,93 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QAUDIOENCODERSETTINGSCONTROL_H
+#define QAUDIOENCODERSETTINGSCONTROL_H
+
+#include "qmediacontrol.h"
+#include "qmediarecorder.h"
+#include <QtCore/qlist.h>
+#include <QtCore/qpair.h>
+
+QT_BEGIN_HEADER
+
+QT_BEGIN_NAMESPACE
+
+QT_MODULE(Multimedia)
+
+class QStringList;
+class QAudioFormat;
+QT_END_NAMESPACE
+
+QT_BEGIN_NAMESPACE
+
+// Required for QDoc workaround
+class QString;
+
+class Q_MULTIMEDIA_EXPORT QAudioEncoderSettingsControl : public QMediaControl
+{
+    Q_OBJECT
+
+public:
+    virtual ~QAudioEncoderSettingsControl();
+
+    virtual QStringList supportedAudioCodecs() const = 0;
+    virtual QString codecDescription(const QString &codecName) const = 0;
+
+    virtual QList<int> supportedSampleRates(const QAudioEncoderSettings &settings,
+                                            bool *continuous = 0) const = 0;
+
+    virtual QAudioEncoderSettings audioSettings() const = 0;
+    virtual void setAudioSettings(const QAudioEncoderSettings&) = 0;
+
+protected:
+    QAudioEncoderSettingsControl(QObject *parent = 0);
+};
+
+#define QAudioEncoderSettingsControl_iid "org.qt-project.qt.audioencodersettingscontrol/5.0"
+Q_MEDIA_DECLARE_CONTROL(QAudioEncoderSettingsControl, QAudioEncoderSettingsControl_iid)
+
+QT_END_NAMESPACE
+
+QT_END_HEADER
+
+
+#endif // QAUDIOENCODERSETTINGSCONTROL_H
diff --git a/src/multimedia/controls/qaudioendpointselector.cpp b/src/multimedia/controls/qaudioendpointselector.cpp
deleted file mode 100644
index ff5c6e8..0000000
--- a/src/multimedia/controls/qaudioendpointselector.cpp
+++ /dev/null
@@ -1,132 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include "qaudioendpointselector.h"
-
-QT_BEGIN_NAMESPACE
-
-/*!
-    \class QAudioEndpointSelector
-
-    \brief The QAudioEndpointSelector class provides an audio endpoint selector media control.
-    \inmodule QtMultimedia
-    \ingroup multimedia_control
-
-    The QAudioEndpointSelector class provides descriptions of the audio
-    endpoints available on a system and allows one to be selected as the audio
-    of a media service.
-
-    The interface name of QAudioEndpointSelector is \c org.qt-project.qt.audioendpointselector/5.0 as
-    defined in QAudioEndpointSelector_iid.
-
-    \sa QMediaService::requestControl()
-*/
-
-/*!
-    \macro QAudioEndpointSelector_iid
-
-    \c org.qt-project.qt.audioendpointselector/5.0
-
-    Defines the interface name of the QAudioEndpointSelector class.
-
-    \relates QAudioEndpointSelector
-*/
-
-/*!
-    Constructs a new audio endpoint selector with the given \a parent.
-*/
-QAudioEndpointSelector::QAudioEndpointSelector(QObject *parent)
-    :QMediaControl(parent)
-{
-}
-
-/*!
-    Destroys an audio endpoint selector.
-*/
-QAudioEndpointSelector::~QAudioEndpointSelector()
-{
-}
-
-/*!
-    \fn QList<QString> QAudioEndpointSelector::availableEndpoints() const
-
-    Returns a list of the names of the available audio endpoints.
-*/
-
-/*!
-    \fn QString QAudioEndpointSelector::endpointDescription(const QString& name) const
-
-    Returns the description of the endpoint \a name.
-*/
-
-/*!
-    \fn QString QAudioEndpointSelector::defaultEndpoint() const
-
-    Returns the name of the default audio endpoint.
-*/
-
-/*!
-    \fn QString QAudioEndpointSelector::activeEndpoint() const
-
-    Returns the name of the currently selected audio endpoint.
-*/
-
-/*!
-    \fn QAudioEndpointSelector::setActiveEndpoint(const QString& name)
-
-    Set the active audio endpoint to \a name.
-*/
-
-/*!
-    \fn QAudioEndpointSelector::activeEndpointChanged(const QString& name)
-
-    Signals that the audio endpoint has changed to \a name.
-*/
-
-/*!
-    \fn QAudioEndpointSelector::availableEndpointsChanged()
-
-    Signals that list of available endpoints has changed.
-*/
-
-#include "moc_qaudioendpointselector.cpp"
-QT_END_NAMESPACE
-
diff --git a/src/multimedia/controls/qaudioendpointselector.h b/src/multimedia/controls/qaudioendpointselector.h
deleted file mode 100644
index 97c9f00..0000000
--- a/src/multimedia/controls/qaudioendpointselector.h
+++ /dev/null
@@ -1,88 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QAUDIOENDPOINTSELECTOR_H
-#define QAUDIOENDPOINTSELECTOR_H
-
-#include <qaudio.h>
-#include <qmediacontrol.h>
-
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
-QT_MODULE(Multimedia)
-
-
-// Class forward declaration required for QDoc bug
-class QString;
-class Q_MULTIMEDIA_EXPORT QAudioEndpointSelector : public QMediaControl
-{
-    Q_OBJECT
-
-public:
-    virtual ~QAudioEndpointSelector();
-
-    virtual QList<QString> availableEndpoints() const = 0;
-    virtual QString endpointDescription(const QString& name) const = 0;
-    virtual QString defaultEndpoint() const = 0;
-    virtual QString activeEndpoint() const = 0;
-
-public Q_SLOTS:
-    virtual void setActiveEndpoint(const QString& name) = 0;
-
-Q_SIGNALS:
-    void activeEndpointChanged(const QString& name);
-    void availableEndpointsChanged();
-
-protected:
-    QAudioEndpointSelector(QObject *parent = 0);
-};
-
-#define QAudioEndpointSelector_iid "org.qt-project.qt.audioendpointselector/5.0"
-Q_MEDIA_DECLARE_CONTROL(QAudioEndpointSelector, QAudioEndpointSelector_iid)
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
-
-#endif // QAUDIOENDPOINTSELECTOR_H
diff --git a/src/multimedia/controls/qaudioendpointselectorcontrol.cpp b/src/multimedia/controls/qaudioendpointselectorcontrol.cpp
new file mode 100644
index 0000000..096389b
--- /dev/null
+++ b/src/multimedia/controls/qaudioendpointselectorcontrol.cpp
@@ -0,0 +1,132 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qaudioendpointselectorcontrol.h"
+
+QT_BEGIN_NAMESPACE
+
+/*!
+    \class QAudioEndpointSelectorControl
+
+    \brief The QAudioEndpointSelectorControl class provides an audio endpoint selector media control.
+    \inmodule QtMultimedia
+    \ingroup multimedia_control
+
+    The QAudioEndpointSelectorControl class provides descriptions of the audio
+    endpoints available on a system and allows one to be selected as the audio
+    of a media service.
+
+    The interface name of QAudioEndpointSelectorControl is \c org.qt-project.qt.audioendpointselectorcontrol/5.0 as
+    defined in QAudioEndpointSelectorControl_iid.
+
+    \sa QMediaService::requestControl()
+*/
+
+/*!
+    \macro QAudioEndpointSelectorControl_iid
+
+    \c org.qt-project.qt.audioendpointselectorcontrol/5.0
+
+    Defines the interface name of the QAudioEndpointSelectorControl class.
+
+    \relates QAudioEndpointSelectorControl
+*/
+
+/*!
+    Constructs a new audio endpoint selector control with the given \a parent.
+*/
+QAudioEndpointSelectorControl::QAudioEndpointSelectorControl(QObject *parent)
+    :QMediaControl(parent)
+{
+}
+
+/*!
+    Destroys an audio endpoint selector control.
+*/
+QAudioEndpointSelectorControl::~QAudioEndpointSelectorControl()
+{
+}
+
+/*!
+    \fn QList<QString> QAudioEndpointSelectorControl::availableEndpoints() const
+
+    Returns a list of the names of the available audio endpoints.
+*/
+
+/*!
+    \fn QString QAudioEndpointSelectorControl::endpointDescription(const QString& name) const
+
+    Returns the description of the endpoint \a name.
+*/
+
+/*!
+    \fn QString QAudioEndpointSelectorControl::defaultEndpoint() const
+
+    Returns the name of the default audio endpoint.
+*/
+
+/*!
+    \fn QString QAudioEndpointSelectorControl::activeEndpoint() const
+
+    Returns the name of the currently selected audio endpoint.
+*/
+
+/*!
+    \fn QAudioEndpointSelectorControl::setActiveEndpoint(const QString& name)
+
+    Set the active audio endpoint to \a name.
+*/
+
+/*!
+    \fn QAudioEndpointSelectorControl::activeEndpointChanged(const QString& name)
+
+    Signals that the audio endpoint has changed to \a name.
+*/
+
+/*!
+    \fn QAudioEndpointSelectorControl::availableEndpointsChanged()
+
+    Signals that list of available endpoints has changed.
+*/
+
+#include "moc_qaudioendpointselectorcontrol.cpp"
+QT_END_NAMESPACE
+
diff --git a/src/multimedia/controls/qaudioendpointselectorcontrol.h b/src/multimedia/controls/qaudioendpointselectorcontrol.h
new file mode 100644
index 0000000..9ddc767
--- /dev/null
+++ b/src/multimedia/controls/qaudioendpointselectorcontrol.h
@@ -0,0 +1,88 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QAUDIOENDPOINTSELECTORCONTROL_H
+#define QAUDIOENDPOINTSELECTORCONTROL_H
+
+#include <qaudio.h>
+#include <qmediacontrol.h>
+
+QT_BEGIN_HEADER
+
+QT_BEGIN_NAMESPACE
+
+QT_MODULE(Multimedia)
+
+
+// Class forward declaration required for QDoc bug
+class QString;
+class Q_MULTIMEDIA_EXPORT QAudioEndpointSelectorControl : public QMediaControl
+{
+    Q_OBJECT
+
+public:
+    virtual ~QAudioEndpointSelectorControl();
+
+    virtual QList<QString> availableEndpoints() const = 0;
+    virtual QString endpointDescription(const QString& name) const = 0;
+    virtual QString defaultEndpoint() const = 0;
+    virtual QString activeEndpoint() const = 0;
+
+public Q_SLOTS:
+    virtual void setActiveEndpoint(const QString& name) = 0;
+
+Q_SIGNALS:
+    void activeEndpointChanged(const QString& name);
+    void availableEndpointsChanged();
+
+protected:
+    QAudioEndpointSelectorControl(QObject *parent = 0);
+};
+
+#define QAudioEndpointSelectorControl_iid "org.qt-project.qt.audioendpointselectorcontrol/5.0"
+Q_MEDIA_DECLARE_CONTROL(QAudioEndpointSelectorControl, QAudioEndpointSelectorControl_iid)
+
+QT_END_NAMESPACE
+
+QT_END_HEADER
+
+
+#endif // QAUDIOENDPOINTSELECTORCONTROL_H
diff --git a/src/multimedia/controls/qvideodevicecontrol.cpp b/src/multimedia/controls/qvideodevicecontrol.cpp
deleted file mode 100644
index d7941e5..0000000
--- a/src/multimedia/controls/qvideodevicecontrol.cpp
+++ /dev/null
@@ -1,144 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include "qvideodevicecontrol.h"
-
-QT_BEGIN_NAMESPACE
-
-/*!
-    \class QVideoDeviceControl
-
-    \brief The QVideoDeviceControl class provides an video device selector media control.
-    \inmodule QtMultimedia
-
-
-    \ingroup multimedia_control
-
-    The QVideoDeviceControl class provides descriptions of the video devices
-    available on a system and allows one to be selected as the  endpoint of a
-    media service.
-
-    The interface name of QVideoDeviceControl is \c org.qt-project.qt.videodevicecontrol/5.0 as
-    defined in QVideoDeviceControl_iid.
-*/
-
-/*!
-    \macro QVideoDeviceControl_iid
-
-    \c org.qt-project.qt.videodevicecontrol/5.0
-
-    Defines the interface name of the QVideoDeviceControl class.
-
-    \relates QVideoDeviceControl
-*/
-
-/*!
-    Constructs a video device control with the given \a parent.
-*/
-QVideoDeviceControl::QVideoDeviceControl(QObject *parent)
-    :QMediaControl(parent)
-{
-}
-
-/*!
-    Destroys a video device control.
-*/
-QVideoDeviceControl::~QVideoDeviceControl()
-{
-}
-
-/*!
-    \fn QVideoDeviceControl::deviceCount() const
-
-    Returns the number of available video devices;
-*/
-
-/*!
-    \fn QVideoDeviceControl::deviceName(int index) const
-
-    Returns the name of the video device at \a index.
-*/
-
-/*!
-    \fn QVideoDeviceControl::deviceDescription(int index) const
-
-    Returns a description of the video device at \a index.
-*/
-
-/*!
-    \fn QVideoDeviceControl::defaultDevice() const
-
-    Returns the index of the default video device.
-*/
-
-/*!
-    \fn QVideoDeviceControl::selectedDevice() const
-
-    Returns the index of the selected video device.
-*/
-
-/*!
-    \fn QVideoDeviceControl::setSelectedDevice(int index)
-
-    Sets the selected video device \a index.
-*/
-
-/*!
-    \fn QVideoDeviceControl::devicesChanged()
-
-    Signals that the list of available video devices has changed.
-*/
-
-/*!
-    \fn QVideoDeviceControl::selectedDeviceChanged(int index)
-
-    Signals that the selected video device \a index has changed.
-*/
-
-/*!
-    \fn QVideoDeviceControl::selectedDeviceChanged(const QString &name)
-
-    Signals that the selected video device \a name has changed.
-*/
-
-#include "moc_qvideodevicecontrol.cpp"
-QT_END_NAMESPACE
-
diff --git a/src/multimedia/controls/qvideodevicecontrol.h b/src/multimedia/controls/qvideodevicecontrol.h
deleted file mode 100644
index 1ea65dc..0000000
--- a/src/multimedia/controls/qvideodevicecontrol.h
+++ /dev/null
@@ -1,90 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QVIDEODEVICECONTROL_H
-#define QVIDEODEVICECONTROL_H
-
-#include "qmediacontrol.h"
-
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
-QT_MODULE(Multimedia)
-
-// Required for QDoc workaround
-class QString;
-
-class Q_MULTIMEDIA_EXPORT QVideoDeviceControl : public QMediaControl
-{
-    Q_OBJECT
-
-public:
-    virtual ~QVideoDeviceControl();
-
-    virtual int deviceCount() const = 0;
-
-    virtual QString deviceName(int index) const = 0;
-    virtual QString deviceDescription(int index) const = 0;
-
-    virtual int defaultDevice() const = 0;
-    virtual int selectedDevice() const = 0;
-
-public Q_SLOTS:
-    virtual void setSelectedDevice(int index) = 0;
-
-Q_SIGNALS:
-    void selectedDeviceChanged(int index);
-    void selectedDeviceChanged(const QString &deviceName);
-    void devicesChanged();
-
-protected:
-    QVideoDeviceControl(QObject *parent = 0);
-};
-
-#define QVideoDeviceControl_iid "org.qt-project.qt.videodevicecontrol/5.0"
-Q_MEDIA_DECLARE_CONTROL(QVideoDeviceControl, QVideoDeviceControl_iid)
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
-#endif // QVIDEODEVICECONTROL_H
diff --git a/src/multimedia/controls/qvideodeviceselectorcontrol.cpp b/src/multimedia/controls/qvideodeviceselectorcontrol.cpp
new file mode 100644
index 0000000..85a776f
--- /dev/null
+++ b/src/multimedia/controls/qvideodeviceselectorcontrol.cpp
@@ -0,0 +1,144 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qvideodeviceselectorcontrol.h"
+
+QT_BEGIN_NAMESPACE
+
+/*!
+    \class QVideoDeviceSelectorControl
+
+    \brief The QVideoDeviceSelectorControl class provides an video device selector media control.
+    \inmodule QtMultimedia
+
+
+    \ingroup multimedia_control
+
+    The QVideoDeviceSelectorControl class provides descriptions of the video devices
+    available on a system and allows one to be selected as the  endpoint of a
+    media service.
+
+    The interface name of QVideoDeviceSelectorControl is \c org.qt-project.qt.videodeviceselectorcontrol/5.0 as
+    defined in QVideoDeviceSelectorControl_iid.
+*/
+
+/*!
+    \macro QVideoDeviceSelectorControl_iid
+
+    \c org.qt-project.qt.videodeviceselectorcontrol/5.0
+
+    Defines the interface name of the QVideoDeviceSelectorControl class.
+
+    \relates QVideoDeviceSelectorControl
+*/
+
+/*!
+    Constructs a video device selector control with the given \a parent.
+*/
+QVideoDeviceSelectorControl::QVideoDeviceSelectorControl(QObject *parent)
+    :QMediaControl(parent)
+{
+}
+
+/*!
+    Destroys a video device selector control.
+*/
+QVideoDeviceSelectorControl::~QVideoDeviceSelectorControl()
+{
+}
+
+/*!
+    \fn QVideoDeviceSelectorControl::deviceCount() const
+
+    Returns the number of available video devices;
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::deviceName(int index) const
+
+    Returns the name of the video device at \a index.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::deviceDescription(int index) const
+
+    Returns a description of the video device at \a index.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::defaultDevice() const
+
+    Returns the index of the default video device.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::selectedDevice() const
+
+    Returns the index of the selected video device.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::setSelectedDevice(int index)
+
+    Sets the selected video device \a index.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::devicesChanged()
+
+    Signals that the list of available video devices has changed.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::selectedDeviceChanged(int index)
+
+    Signals that the selected video device \a index has changed.
+*/
+
+/*!
+    \fn QVideoDeviceSelectorControl::selectedDeviceChanged(const QString &name)
+
+    Signals that the selected video device \a name has changed.
+*/
+
+#include "moc_qvideodeviceselectorcontrol.cpp"
+QT_END_NAMESPACE
+
diff --git a/src/multimedia/controls/qvideodeviceselectorcontrol.h b/src/multimedia/controls/qvideodeviceselectorcontrol.h
new file mode 100644
index 0000000..d300d18
--- /dev/null
+++ b/src/multimedia/controls/qvideodeviceselectorcontrol.h
@@ -0,0 +1,90 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QVIDEODEVICESELECTORCONTROL_H
+#define QVIDEODEVICESELECTORCONTROL_H
+
+#include "qmediacontrol.h"
+
+QT_BEGIN_HEADER
+
+QT_BEGIN_NAMESPACE
+
+QT_MODULE(Multimedia)
+
+// Required for QDoc workaround
+class QString;
+
+class Q_MULTIMEDIA_EXPORT QVideoDeviceSelectorControl : public QMediaControl
+{
+    Q_OBJECT
+
+public:
+    virtual ~QVideoDeviceSelectorControl();
+
+    virtual int deviceCount() const = 0;
+
+    virtual QString deviceName(int index) const = 0;
+    virtual QString deviceDescription(int index) const = 0;
+
+    virtual int defaultDevice() const = 0;
+    virtual int selectedDevice() const = 0;
+
+public Q_SLOTS:
+    virtual void setSelectedDevice(int index) = 0;
+
+Q_SIGNALS:
+    void selectedDeviceChanged(int index);
+    void selectedDeviceChanged(const QString &deviceName);
+    void devicesChanged();
+
+protected:
+    QVideoDeviceSelectorControl(QObject *parent = 0);
+};
+
+#define QVideoDeviceSelectorControl_iid "org.qt-project.qt.videodeviceselectorcontrol/5.0"
+Q_MEDIA_DECLARE_CONTROL(QVideoDeviceSelectorControl, QVideoDeviceSelectorControl_iid)
+
+QT_END_NAMESPACE
+
+QT_END_HEADER
+
+#endif // QVIDEODEVICESELECTORCONTROL_H
diff --git a/src/multimedia/controls/qvideoencodercontrol.cpp b/src/multimedia/controls/qvideoencodercontrol.cpp
deleted file mode 100644
index 29f87e8..0000000
--- a/src/multimedia/controls/qvideoencodercontrol.cpp
+++ /dev/null
@@ -1,162 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include "qvideoencodercontrol.h"
-#include <QtCore/qstringlist.h>
-#include <QtCore/qvariant.h>
-
-QT_BEGIN_NAMESPACE
-
-/*!
-    \class QVideoEncoderControl
-
-    \inmodule QtMultimedia
-
-
-    \ingroup multimedia_control
-
-    \brief The QVideoEncoderControl class provides access to the settings
-    of a media service that performs video encoding.
-
-    If a QMediaService supports encoding video data it will implement
-    QVideoEncoderControl.  This control provides information about the limits
-    of restricted video encoder options and allows the selection of a set of
-    video encoder settings as specified in a QVideoEncoderSettings object.
-
-    The functionality provided by this control is exposed to application code
-    through the QMediaRecorder class.
-
-    The interface name of QVideoEncoderControl is \c org.qt-project.qt.videoencodercontrol/5.0 as
-    defined in QVideoEncoderControl_iid.
-
-    \sa QMediaRecorder, QVideoEncoderSettings, QMediaService::requestControl()
-*/
-
-/*!
-    \macro QVideoEncoderControl_iid
-
-    \c org.qt-project.qt.videoencodercontrol/5.0
-
-    Defines the interface name of the QVideoEncoderControl class.
-
-    \relates QVideoEncoderControl
-*/
-
-/*!
-    Create a new video encoder control object with the given \a parent.
-*/
-QVideoEncoderControl::QVideoEncoderControl(QObject *parent)
-    :QMediaControl(parent)
-{
-}
-
-/*!
-    Destroys a video encoder control.
-*/
-QVideoEncoderControl::~QVideoEncoderControl()
-{
-}
-
-/*!
-    \fn QVideoEncoderControl::supportedVideoCodecs() const
-
-    Returns the list of supported video codecs.
-*/
-
-/*!
-    \fn QVideoEncoderControl::videoCodecDescription(const QString &codec) const
-
-    Returns a description of a video \a codec.
-*/
-
-/*!
-    \fn QVideoEncoderControl::supportedResolutions(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),
-                                                   bool *continuous = 0) const
-
-    Returns a list of supported resolutions.
-
-    If non null video \a settings parameter is passed,
-    the returned list is reduced to resolution supported with partial settings like
-    \l {QVideoEncoderSettings::setCodec()}{video codec} or
-    \l {QVideoEncoderSettings::setFrameRate()}{frame rate} applied.
-
-    If the encoder supports arbitrary resolutions within the supported resolutions range,
-    *\a continuous is set to true, otherwise *\a continuous is set to false.
-
-    \sa QVideoEncoderSettings::resolution()
-*/
-
-/*!
-    \fn QVideoEncoderControl::supportedFrameRates(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),
-                                                  bool *continuous = 0) const
-
-    Returns a list of supported frame rates.
-
-    If non null video \a settings parameter is passed,
-    the returned list is reduced to frame rates supported with partial settings like
-    \l {QVideoEncoderSettings::setCodec()}{video codec} or
-    \l {QVideoEncoderSettings::setResolution()}{video resolution} applied.
-
-    If the encoder supports arbitrary frame rates within the supported range,
-    *\a continuous is set to true, otherwise *\a continuous is set to false.
-
-    \sa QVideoEncoderSettings::frameRate()
-*/
-
-/*!
-    \fn QVideoEncoderControl::videoSettings() const
-
-    Returns the video encoder settings.
-
-    The returned value may be different tha passed to QVideoEncoderControl::setVideoSettings()
-    if the settings contains the default or undefined parameters.
-    In this case if the undefined parameters are already resolved, they should be returned.
-*/
-
-/*!
-    \fn QVideoEncoderControl::setVideoSettings(const QVideoEncoderSettings &settings)
-
-    Sets the selected video encoder \a settings.
-*/
-
-#include "moc_qvideoencodercontrol.cpp"
-QT_END_NAMESPACE
-
diff --git a/src/multimedia/controls/qvideoencodercontrol.h b/src/multimedia/controls/qvideoencodercontrol.h
deleted file mode 100644
index 4313e1a..0000000
--- a/src/multimedia/controls/qvideoencodercontrol.h
+++ /dev/null
@@ -1,97 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef QVIDEOENCODERCONTROL_H
-#define QVIDEOENCODERCONTROL_H
-
-#include "qmediacontrol.h"
-#include "qmediarecorder.h"
-
-#include <QtCore/qpair.h>
-#include <QtCore/qsize.h>
-
-QT_BEGIN_HEADER
-
-QT_BEGIN_NAMESPACE
-
-QT_MODULE(Multimedia)
-
-class QByteArray;
-class QStringList;
-QT_END_NAMESPACE
-
-QT_BEGIN_NAMESPACE
-
-// Required for QDoc workaround
-class QString;
-
-class Q_MULTIMEDIA_EXPORT QVideoEncoderControl : public QMediaControl
-{
-    Q_OBJECT
-
-public:
-    virtual ~QVideoEncoderControl();
-
-    virtual QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings,
-                                              bool *continuous = 0) const = 0;
-
-    virtual QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings,
-                                             bool *continuous = 0) const = 0;
-
-    virtual QStringList supportedVideoCodecs() const = 0;
-    virtual QString videoCodecDescription(const QString &codecName) const = 0;
-
-    virtual QVideoEncoderSettings videoSettings() const = 0;
-    virtual void setVideoSettings(const QVideoEncoderSettings &settings) = 0;
-
-protected:
-    QVideoEncoderControl(QObject *parent = 0);
-};
-
-#define QVideoEncoderControl_iid "org.qt-project.qt.videoencodercontrol/5.0"
-Q_MEDIA_DECLARE_CONTROL(QVideoEncoderControl, QVideoEncoderControl_iid)
-
-QT_END_NAMESPACE
-
-QT_END_HEADER
-
-
-#endif
diff --git a/src/multimedia/controls/qvideoencodersettingscontrol.cpp b/src/multimedia/controls/qvideoencodersettingscontrol.cpp
new file mode 100644
index 0000000..0b1f2d2
--- /dev/null
+++ b/src/multimedia/controls/qvideoencodersettingscontrol.cpp
@@ -0,0 +1,162 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "qvideoencodersettingscontrol.h"
+#include <QtCore/qstringlist.h>
+#include <QtCore/qvariant.h>
+
+QT_BEGIN_NAMESPACE
+
+/*!
+    \class QVideoEncoderSettingsControl
+
+    \inmodule QtMultimedia
+
+
+    \ingroup multimedia_control
+
+    \brief The QVideoEncoderSettingsControl class provides access to the settings
+    of a media service that performs video encoding.
+
+    If a QMediaService supports encoding video data it will implement
+    QVideoEncoderSettingsControl.  This control provides information about the limits
+    of restricted video encoder options and allows the selection of a set of
+    video encoder settings as specified in a QVideoEncoderSettings object.
+
+    The functionality provided by this control is exposed to application code
+    through the QMediaRecorder class.
+
+    The interface name of QVideoEncoderSettingsControl is \c org.qt-project.qt.videoencodersettingscontrol/5.0 as
+    defined in QVideoEncoderSettingsControl_iid.
+
+    \sa QMediaRecorder, QVideoEncoderSettings, QMediaService::requestControl()
+*/
+
+/*!
+    \macro QVideoEncoderSettingsControl_iid
+
+    \c org.qt-project.qt.videoencodersettingscontrol/5.0
+
+    Defines the interface name of the QVideoEncoderSettingsControl class.
+
+    \relates QVideoEncoderSettingsControl
+*/
+
+/*!
+    Create a new video encoder settings control object with the given \a parent.
+*/
+QVideoEncoderSettingsControl::QVideoEncoderSettingsControl(QObject *parent)
+    :QMediaControl(parent)
+{
+}
+
+/*!
+    Destroys a video encoder settings control.
+*/
+QVideoEncoderSettingsControl::~QVideoEncoderSettingsControl()
+{
+}
+
+/*!
+    \fn QVideoEncoderSettingsControl::supportedVideoCodecs() const
+
+    Returns the list of supported video codecs.
+*/
+
+/*!
+    \fn QVideoEncoderSettingsControl::videoCodecDescription(const QString &codec) const
+
+    Returns a description of a video \a codec.
+*/
+
+/*!
+    \fn QVideoEncoderSettingsControl::supportedResolutions(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),
+                                                   bool *continuous = 0) const
+
+    Returns a list of supported resolutions.
+
+    If non null video \a settings parameter is passed,
+    the returned list is reduced to resolution supported with partial settings like
+    \l {QVideoEncoderSettings::setCodec()}{video codec} or
+    \l {QVideoEncoderSettings::setFrameRate()}{frame rate} applied.
+
+    If the encoder supports arbitrary resolutions within the supported resolutions range,
+    *\a continuous is set to true, otherwise *\a continuous is set to false.
+
+    \sa QVideoEncoderSettings::resolution()
+*/
+
+/*!
+    \fn QVideoEncoderSettingsControl::supportedFrameRates(const QVideoEncoderSettings &settings = QVideoEncoderSettings(),
+                                                  bool *continuous = 0) const
+
+    Returns a list of supported frame rates.
+
+    If non null video \a settings parameter is passed,
+    the returned list is reduced to frame rates supported with partial settings like
+    \l {QVideoEncoderSettings::setCodec()}{video codec} or
+    \l {QVideoEncoderSettings::setResolution()}{video resolution} applied.
+
+    If the encoder supports arbitrary frame rates within the supported range,
+    *\a continuous is set to true, otherwise *\a continuous is set to false.
+
+    \sa QVideoEncoderSettings::frameRate()
+*/
+
+/*!
+    \fn QVideoEncoderSettingsControl::videoSettings() const
+
+    Returns the video encoder settings.
+
+    The returned value may be different tha passed to QVideoEncoderSettingsControl::setVideoSettings()
+    if the settings contains the default or undefined parameters.
+    In this case if the undefined parameters are already resolved, they should be returned.
+*/
+
+/*!
+    \fn QVideoEncoderSettingsControl::setVideoSettings(const QVideoEncoderSettings &settings)
+
+    Sets the selected video encoder \a settings.
+*/
+
+#include "moc_qvideoencodersettingscontrol.cpp"
+QT_END_NAMESPACE
+
diff --git a/src/multimedia/controls/qvideoencodersettingscontrol.h b/src/multimedia/controls/qvideoencodersettingscontrol.h
new file mode 100644
index 0000000..bdd707a
--- /dev/null
+++ b/src/multimedia/controls/qvideoencodersettingscontrol.h
@@ -0,0 +1,97 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef QVIDEOENCODERSETTINGSCONTROL_H
+#define QVIDEOENCODERSETTINGSCONTROL_H
+
+#include "qmediacontrol.h"
+#include "qmediarecorder.h"
+
+#include <QtCore/qpair.h>
+#include <QtCore/qsize.h>
+
+QT_BEGIN_HEADER
+
+QT_BEGIN_NAMESPACE
+
+QT_MODULE(Multimedia)
+
+class QByteArray;
+class QStringList;
+QT_END_NAMESPACE
+
+QT_BEGIN_NAMESPACE
+
+// Required for QDoc workaround
+class QString;
+
+class Q_MULTIMEDIA_EXPORT QVideoEncoderSettingsControl : public QMediaControl
+{
+    Q_OBJECT
+
+public:
+    virtual ~QVideoEncoderSettingsControl();
+
+    virtual QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings,
+                                              bool *continuous = 0) const = 0;
+
+    virtual QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings,
+                                             bool *continuous = 0) const = 0;
+
+    virtual QStringList supportedVideoCodecs() const = 0;
+    virtual QString videoCodecDescription(const QString &codecName) const = 0;
+
+    virtual QVideoEncoderSettings videoSettings() const = 0;
+    virtual void setVideoSettings(const QVideoEncoderSettings &settings) = 0;
+
+protected:
+    QVideoEncoderSettingsControl(QObject *parent = 0);
+};
+
+#define QVideoEncoderSettingsControl_iid "org.qt-project.qt.videoencodersettingscontrol/5.0"
+Q_MEDIA_DECLARE_CONTROL(QVideoEncoderSettingsControl, QVideoEncoderSettingsControl_iid)
+
+QT_END_NAMESPACE
+
+QT_END_HEADER
+
+
+#endif
diff --git a/src/multimedia/gsttools_headers/qgstreameraudioinputendpointselector_p.h b/src/multimedia/gsttools_headers/qgstreameraudioinputendpointselector_p.h
index 5d5bc71..3828b6a 100644
--- a/src/multimedia/gsttools_headers/qgstreameraudioinputendpointselector_p.h
+++ b/src/multimedia/gsttools_headers/qgstreameraudioinputendpointselector_p.h
@@ -42,12 +42,12 @@
 #ifndef QGSTREAMERAUDIOINPUTENDPOINTSELECTOR_H
 #define QGSTREAMERAUDIOINPUTENDPOINTSELECTOR_H
 
-#include <qaudioendpointselector.h>
+#include <qaudioendpointselectorcontrol.h>
 #include <QtCore/qstringlist.h>
 
 QT_BEGIN_NAMESPACE
 
-class QGstreamerAudioInputEndpointSelector : public QAudioEndpointSelector
+class QGstreamerAudioInputEndpointSelector : public QAudioEndpointSelectorControl
 {
 Q_OBJECT
 public:
diff --git a/src/multimedia/gsttools_headers/qgstreamervideoinputdevicecontrol_p.h b/src/multimedia/gsttools_headers/qgstreamervideoinputdevicecontrol_p.h
index f51a9c8..bd07c97 100644
--- a/src/multimedia/gsttools_headers/qgstreamervideoinputdevicecontrol_p.h
+++ b/src/multimedia/gsttools_headers/qgstreamervideoinputdevicecontrol_p.h
@@ -42,12 +42,12 @@
 #ifndef QGSTREAMERVIDEOINPUTDEVICECONTROL_H
 #define QGSTREAMERVIDEOINPUTDEVICECONTROL_H
 
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 #include <QtCore/qstringlist.h>
 
 QT_BEGIN_NAMESPACE
 
-class QGstreamerVideoInputDeviceControl : public QVideoDeviceControl
+class QGstreamerVideoInputDeviceControl : public QVideoDeviceSelectorControl
 {
 Q_OBJECT
 public:
diff --git a/src/multimedia/qmediaserviceproviderplugin.h b/src/multimedia/qmediaserviceproviderplugin.h
index ea80037..cc22ac5 100644
--- a/src/multimedia/qmediaserviceproviderplugin.h
+++ b/src/multimedia/qmediaserviceproviderplugin.h
@@ -190,7 +190,7 @@ public:
    Required Controls: QAudioDeviceControl
    Recording Controls (QMediaRecorder):
                         Required: QMediaRecorderControl
-                        Recommended: QAudioEncoderControl
+                        Recommended: QAudioEncoderSettingsControl
                         Optional: QMediaContainerControl
 */
 #define Q_MEDIASERVICE_AUDIOSOURCE "org.qt-project.qt.audiosource"
@@ -202,7 +202,7 @@ public:
     Still Capture Controls: QCameraImageCaptureControl
     Video Capture Controls (QMediaRecorder):
                         Required: QMediaRecorderControl
-                        Recommended: QAudioEncoderControl, QVideoEncoderControl, QMediaContainerControl
+                        Recommended: QAudioEncoderSettingsControl, QVideoEncoderSettingsControl, QMediaContainerControl
     Viewfinder Video Output Controls (used by QCameraViewfinder and QGraphicsVideoItem):
                         Required: QVideoOutputControl
                         Optional: QVideoWindowControl, QVideoRendererControl, QVideoWidgetControl
@@ -214,7 +214,7 @@ public:
     Required Controls: QRadioTunerControl
     Recording Controls (Optional, used by QMediaRecorder):
                         Required: QMediaRecorderControl
-                        Recommended: QAudioEncoderControl
+                        Recommended: QAudioEncoderSettingsControl
                         Optional: QMediaContainerControl
 */
 #define Q_MEDIASERVICE_RADIO "org.qt-project.qt.radio"
diff --git a/src/multimedia/recording/qaudiorecorder.cpp b/src/multimedia/recording/qaudiorecorder.cpp
index 0e965d4..2861511 100644
--- a/src/multimedia/recording/qaudiorecorder.cpp
+++ b/src/multimedia/recording/qaudiorecorder.cpp
@@ -40,7 +40,7 @@
 ****************************************************************************/
 
 #include "qaudiorecorder.h"
-#include "qaudioendpointselector.h"
+#include "qaudioendpointselectorcontrol.h"
 #include "qmediaobject_p.h"
 #include "qmediarecorder_p.h"
 #include <qmediaservice.h>
@@ -76,7 +76,7 @@ QT_BEGIN_NAMESPACE
     The \l {audiorecorder}{Audio Recorder} example shows how to use this class
     in more detail.
 
-    \sa QMediaRecorder, QAudioEndpointSelector
+    \sa QMediaRecorder, QAudioEndpointSelectorControl
 */
 
 class QAudioRecorderObject : public QMediaObject
@@ -105,7 +105,7 @@ public:
         QMediaService *service = mediaObject ? mediaObject->service() : 0;
 
         if (service != 0)
-            audioEndpointSelector = qobject_cast<QAudioEndpointSelector*>(service->requestControl(QAudioEndpointSelector_iid));
+            audioEndpointSelector = qobject_cast<QAudioEndpointSelectorControl*>(service->requestControl(QAudioEndpointSelectorControl_iid));
 
         if (audioEndpointSelector) {
             q->connect(audioEndpointSelector, SIGNAL(activeEndpointChanged(QString)),
@@ -121,7 +121,7 @@ public:
         audioEndpointSelector(0) {}
 
     QMediaServiceProvider *provider;
-    QAudioEndpointSelector   *audioEndpointSelector;
+    QAudioEndpointSelectorControl   *audioEndpointSelector;
 };
 
 
diff --git a/src/multimedia/recording/qmediaencodersettings.cpp b/src/multimedia/recording/qmediaencodersettings.cpp
index 5d06c3b..1c7cc35 100644
--- a/src/multimedia/recording/qmediaencodersettings.cpp
+++ b/src/multimedia/recording/qmediaencodersettings.cpp
@@ -113,7 +113,7 @@ private:
 
     \snippet doc/src/snippets/multimedia-snippets/media.cpp Audio encoder settings
 
-    \sa QMediaRecorder, QAudioEncoderControl
+    \sa QMediaRecorder, QAudioEncoderSettingsControl
 */
 
 /*!
@@ -427,7 +427,7 @@ private:
 
     \snippet doc/src/snippets/multimedia-snippets/media.cpp Video encoder settings
 
-    \sa QMediaRecorder, QVideoEncoderControl
+    \sa QMediaRecorder, QVideoEncoderSettingsControl
 */
 
 /*!
diff --git a/src/multimedia/recording/qmediarecorder.cpp b/src/multimedia/recording/qmediarecorder.cpp
index a212abd..08df4f9 100644
--- a/src/multimedia/recording/qmediarecorder.cpp
+++ b/src/multimedia/recording/qmediarecorder.cpp
@@ -47,8 +47,8 @@
 #include <qmediaservice.h>
 #include <qmediaserviceprovider_p.h>
 #include <qmetadatawritercontrol.h>
-#include <qaudioencodercontrol.h>
-#include <qvideoencodercontrol.h>
+#include <qaudioencodersettingscontrol.h>
+#include <qvideoencodersettingscontrol.h>
 #include <qmediacontainercontrol.h>
 #include <qmediaavailabilitycontrol.h>
 #include <qcamera.h>
@@ -350,8 +350,8 @@ bool QMediaRecorder::setMediaObject(QMediaObject *object)
 
             if (d->control) {
                 d->formatControl = qobject_cast<QMediaContainerControl *>(service->requestControl(QMediaContainerControl_iid));
-                d->audioControl = qobject_cast<QAudioEncoderControl *>(service->requestControl(QAudioEncoderControl_iid));
-                d->videoControl = qobject_cast<QVideoEncoderControl *>(service->requestControl(QVideoEncoderControl_iid));
+                d->audioControl = qobject_cast<QAudioEncoderSettingsControl *>(service->requestControl(QAudioEncoderSettingsControl_iid));
+                d->videoControl = qobject_cast<QVideoEncoderSettingsControl *>(service->requestControl(QVideoEncoderSettingsControl_iid));
 
                 QMediaControl *control = service->requestControl(QMetaDataWriterControl_iid);
                 if (control) {
diff --git a/src/multimedia/recording/qmediarecorder_p.h b/src/multimedia/recording/qmediarecorder_p.h
index 03919ef..56922c4 100644
--- a/src/multimedia/recording/qmediarecorder_p.h
+++ b/src/multimedia/recording/qmediarecorder_p.h
@@ -50,8 +50,8 @@ QT_BEGIN_NAMESPACE
 
 class QMediaRecorderControl;
 class QMediaContainerControl;
-class QAudioEncoderControl;
-class QVideoEncoderControl;
+class QAudioEncoderSettingsControl;
+class QVideoEncoderSettingsControl;
 class QMetaDataWriterControl;
 class QMediaAvailabilityControl;
 class QTimer;
@@ -71,8 +71,8 @@ public:
 
     QMediaRecorderControl *control;
     QMediaContainerControl *formatControl;
-    QAudioEncoderControl *audioControl;
-    QVideoEncoderControl *videoControl;
+    QAudioEncoderSettingsControl *audioControl;
+    QVideoEncoderSettingsControl *videoControl;
     QMetaDataWriterControl *metaDataControl;
     QMediaAvailabilityControl *availabilityControl;
 
diff --git a/src/multimediawidgets/qcameraviewfinder.cpp b/src/multimediawidgets/qcameraviewfinder.cpp
index 341bd79..6b6b74a 100644
--- a/src/multimediawidgets/qcameraviewfinder.cpp
+++ b/src/multimediawidgets/qcameraviewfinder.cpp
@@ -43,7 +43,7 @@
 #include "qvideowidget_p.h"
 
 #include <qcamera.h>
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 #include <private/qmediaobject_p.h>
 
 #include <QtCore/QDebug>
diff --git a/src/plugins/audiocapture/audiocaptureservice.cpp b/src/plugins/audiocapture/audiocaptureservice.cpp
index d1d8b82..ed59088 100644
--- a/src/plugins/audiocapture/audiocaptureservice.cpp
+++ b/src/plugins/audiocapture/audiocaptureservice.cpp
@@ -70,10 +70,10 @@ QMediaControl *AudioCaptureService::requestControl(const char *name)
     if (qstrcmp(name,QMediaRecorderControl_iid) == 0)
         return m_mediaControl;
 
-    if (qstrcmp(name,QAudioEncoderControl_iid) == 0)
+    if (qstrcmp(name,QAudioEncoderSettingsControl_iid) == 0)
         return m_encoderControl;
 
-    if (qstrcmp(name,QAudioEndpointSelector_iid) == 0)
+    if (qstrcmp(name,QAudioEndpointSelectorControl_iid) == 0)
         return m_endpointSelector;
 
     if (qstrcmp(name,QMediaContainerControl_iid) == 0)
diff --git a/src/plugins/audiocapture/audioencodercontrol.cpp b/src/plugins/audiocapture/audioencodercontrol.cpp
index 67d685a..b6dc98b 100644
--- a/src/plugins/audiocapture/audioencodercontrol.cpp
+++ b/src/plugins/audiocapture/audioencodercontrol.cpp
@@ -47,7 +47,7 @@
 #include <QtCore/qdebug.h>
 
 AudioEncoderControl::AudioEncoderControl(QObject *parent)
-    :QAudioEncoderControl(parent)
+    :QAudioEncoderSettingsControl(parent)
 {
     m_session = qobject_cast<AudioCaptureSession*>(parent);
 
diff --git a/src/plugins/audiocapture/audioencodercontrol.h b/src/plugins/audiocapture/audioencodercontrol.h
index bf7e7b3..e516be6 100644
--- a/src/plugins/audiocapture/audioencodercontrol.h
+++ b/src/plugins/audiocapture/audioencodercontrol.h
@@ -42,7 +42,7 @@
 #ifndef AUDIOENCODERCONTROL_H
 #define AUDIOENCODERCONTROL_H
 
-#include "qaudioencodercontrol.h"
+#include "qaudioencodersettingscontrol.h"
 
 #include <QtCore/qstringlist.h>
 #include <QtCore/qmap.h>
@@ -53,7 +53,7 @@ class AudioCaptureSession;
 
 QT_USE_NAMESPACE
 
-class AudioEncoderControl : public QAudioEncoderControl
+class AudioEncoderControl : public QAudioEncoderSettingsControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/audiocapture/audioendpointselector.cpp b/src/plugins/audiocapture/audioendpointselector.cpp
index f9eb8fa..757d779 100644
--- a/src/plugins/audiocapture/audioendpointselector.cpp
+++ b/src/plugins/audiocapture/audioendpointselector.cpp
@@ -46,7 +46,7 @@
 
 
 AudioEndpointSelector::AudioEndpointSelector(QObject *parent)
-    :QAudioEndpointSelector(parent)
+    :QAudioEndpointSelectorControl(parent)
 {
     m_session = qobject_cast<AudioCaptureSession*>(parent);
 
diff --git a/src/plugins/audiocapture/audioendpointselector.h b/src/plugins/audiocapture/audioendpointselector.h
index e4d1a09..9eb34ed 100644
--- a/src/plugins/audiocapture/audioendpointselector.h
+++ b/src/plugins/audiocapture/audioendpointselector.h
@@ -44,13 +44,13 @@
 
 #include <QStringList>
 
-#include "qaudioendpointselector.h"
+#include "qaudioendpointselectorcontrol.h"
 
 class AudioCaptureSession;
 
 QT_USE_NAMESPACE
 
-class AudioEndpointSelector : public QAudioEndpointSelector
+class AudioEndpointSelector : public QAudioEndpointSelectorControl
 {
 Q_OBJECT
 public:
diff --git a/src/plugins/directshow/camera/dscameraservice.cpp b/src/plugins/directshow/camera/dscameraservice.cpp
index d3467c0..d63e967 100644
--- a/src/plugins/directshow/camera/dscameraservice.cpp
+++ b/src/plugins/directshow/camera/dscameraservice.cpp
@@ -111,7 +111,7 @@ QMediaControl* DSCameraService::requestControl(const char *name)
     if(qstrcmp(name,QVideoRendererControl_iid) == 0)
         return m_videoRenderer;
 
-    if(qstrcmp(name,QVideoDeviceControl_iid) == 0)
+    if (qstrcmp(name,QVideoDeviceSelectorControl_iid) == 0)
         return m_videoDevice;
 
     return 0;
diff --git a/src/plugins/directshow/camera/dsvideodevicecontrol.cpp b/src/plugins/directshow/camera/dsvideodevicecontrol.cpp
index 5f2e91b..94b0704 100644
--- a/src/plugins/directshow/camera/dsvideodevicecontrol.cpp
+++ b/src/plugins/directshow/camera/dsvideodevicecontrol.cpp
@@ -57,7 +57,7 @@ extern const CLSID CLSID_VideoInputDeviceCategory;
 QT_BEGIN_NAMESPACE
 
 DSVideoDeviceControl::DSVideoDeviceControl(QObject *parent)
-    : QVideoDeviceControl(parent)
+    : QVideoDeviceSelectorControl(parent)
 {
     m_session = qobject_cast<DSCameraSession*>(parent);
 
diff --git a/src/plugins/directshow/camera/dsvideodevicecontrol.h b/src/plugins/directshow/camera/dsvideodevicecontrol.h
index 3fb7d3f..7dbf248 100644
--- a/src/plugins/directshow/camera/dsvideodevicecontrol.h
+++ b/src/plugins/directshow/camera/dsvideodevicecontrol.h
@@ -42,7 +42,7 @@
 #ifndef DSVIDEODEVICECONTROL_H
 #define DSVIDEODEVICECONTROL_H
 
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 
 QT_BEGIN_HEADER
 
@@ -51,7 +51,7 @@ class DSCameraSession;
 
 //QTM_USE_NAMESPACE
 
-class DSVideoDeviceControl : public QVideoDeviceControl
+class DSVideoDeviceControl : public QVideoDeviceSelectorControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/directshow/player/directshowaudioendpointcontrol.cpp b/src/plugins/directshow/player/directshowaudioendpointcontrol.cpp
index 0583b8d..31bc995 100644
--- a/src/plugins/directshow/player/directshowaudioendpointcontrol.cpp
+++ b/src/plugins/directshow/player/directshowaudioendpointcontrol.cpp
@@ -46,7 +46,7 @@
 
 DirectShowAudioEndpointControl::DirectShowAudioEndpointControl(
         DirectShowPlayerService *service, QObject *parent)
-    : QAudioEndpointSelector(parent)
+    : QAudioEndpointSelectorControl(parent)
     , m_service(service)
     , m_bindContext(0)
     , m_deviceEnumerator(0)
diff --git a/src/plugins/directshow/player/directshowaudioendpointcontrol.h b/src/plugins/directshow/player/directshowaudioendpointcontrol.h
index 90e44a0..17863fd 100644
--- a/src/plugins/directshow/player/directshowaudioendpointcontrol.h
+++ b/src/plugins/directshow/player/directshowaudioendpointcontrol.h
@@ -42,7 +42,7 @@
 #ifndef DIRECTSHOWAUDIOENDPOINTCONTROL_H
 #define DIRECTSHOWAUDIOENDPOINTCONTROL_H
 
-#include "qaudioendpointselector.h"
+#include "qaudioendpointselectorcontrol.h"
 
 #include <dshow.h>
 
@@ -50,7 +50,7 @@ class DirectShowPlayerService;
 
 QT_USE_NAMESPACE
 
-class DirectShowAudioEndpointControl : public QAudioEndpointSelector
+class DirectShowAudioEndpointControl : public QAudioEndpointSelectorControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/directshow/player/directshowplayerservice.cpp b/src/plugins/directshow/player/directshowplayerservice.cpp
index 2d9a5dd..ef6c66c 100644
--- a/src/plugins/directshow/player/directshowplayerservice.cpp
+++ b/src/plugins/directshow/player/directshowplayerservice.cpp
@@ -156,7 +156,7 @@ QMediaControl *DirectShowPlayerService::requestControl(const char *name)
 {
     if (qstrcmp(name, QMediaPlayerControl_iid) == 0) {
         return m_playerControl;
-    } else if (qstrcmp(name, QAudioEndpointSelector_iid) == 0) {
+    } else if (qstrcmp(name, QAudioEndpointSelectorControl_iid) == 0) {
         return m_audioEndpointControl;
     } else if (qstrcmp(name, QMetaDataReaderControl_iid) == 0) {
         return m_metaDataControl;
diff --git a/src/plugins/gstreamer/camerabin/camerabinaudioencoder.cpp b/src/plugins/gstreamer/camerabin/camerabinaudioencoder.cpp
index 72fe602..546f1aa 100644
--- a/src/plugins/gstreamer/camerabin/camerabinaudioencoder.cpp
+++ b/src/plugins/gstreamer/camerabin/camerabinaudioencoder.cpp
@@ -46,7 +46,7 @@
 #include <QtCore/qdebug.h>
 
 CameraBinAudioEncoder::CameraBinAudioEncoder(QObject *parent)
-    :QAudioEncoderControl(parent),
+    :QAudioEncoderSettingsControl(parent),
      m_codecs(QGstCodecsInfo::AudioEncoder)
 {
 }
diff --git a/src/plugins/gstreamer/camerabin/camerabinaudioencoder.h b/src/plugins/gstreamer/camerabin/camerabinaudioencoder.h
index 4727e13..f8dd342 100644
--- a/src/plugins/gstreamer/camerabin/camerabinaudioencoder.h
+++ b/src/plugins/gstreamer/camerabin/camerabinaudioencoder.h
@@ -42,7 +42,7 @@
 #ifndef CAMERABINAUDIOENCODE_H
 #define CAMERABINAUDIOENCODE_H
 
-#include <qaudioencodercontrol.h>
+#include <qaudioencodersettingscontrol.h>
 class CameraBinSession;
 
 #include <QtCore/qstringlist.h>
@@ -58,7 +58,7 @@ class CameraBinSession;
 
 QT_USE_NAMESPACE
 
-class CameraBinAudioEncoder : public QAudioEncoderControl
+class CameraBinAudioEncoder : public QAudioEncoderSettingsControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/gstreamer/camerabin/camerabinservice.cpp b/src/plugins/gstreamer/camerabin/camerabinservice.cpp
index 28b666d..5c58ea3 100644
--- a/src/plugins/gstreamer/camerabin/camerabinservice.cpp
+++ b/src/plugins/gstreamer/camerabin/camerabinservice.cpp
@@ -177,19 +177,19 @@ QMediaControl *CameraBinService::requestControl(const char *name)
         }
     }
 
-    if (qstrcmp(name,QAudioEndpointSelector_iid) == 0)
+    if (qstrcmp(name,QAudioEndpointSelectorControl_iid) == 0)
         return m_audioInputEndpointSelector;
 
-    if (qstrcmp(name,QVideoDeviceControl_iid) == 0)
+    if (qstrcmp(name,QVideoDeviceSelectorControl_iid) == 0)
         return m_videoInputDevice;
 
     if (qstrcmp(name,QMediaRecorderControl_iid) == 0)
         return m_captureSession->recorderControl();
 
-    if (qstrcmp(name,QAudioEncoderControl_iid) == 0)
+    if (qstrcmp(name,QAudioEncoderSettingsControl_iid) == 0)
         return m_captureSession->audioEncodeControl();
 
-    if (qstrcmp(name,QVideoEncoderControl_iid) == 0)
+    if (qstrcmp(name,QVideoEncoderSettingsControl_iid) == 0)
         return m_captureSession->videoEncodeControl();
 
     if (qstrcmp(name,QImageEncoderControl_iid) == 0)
diff --git a/src/plugins/gstreamer/camerabin/camerabinservice.h b/src/plugins/gstreamer/camerabin/camerabinservice.h
index d95d6ea..940ec70 100644
--- a/src/plugins/gstreamer/camerabin/camerabinservice.h
+++ b/src/plugins/gstreamer/camerabin/camerabinservice.h
@@ -46,8 +46,8 @@
 
 #include <gst/gst.h>
 QT_BEGIN_NAMESPACE
-class QAudioEndpointSelector;
-class QVideoDeviceControl;
+class QAudioEndpointSelectorControl;
+class QVideoDeviceSelectorControl;
 QT_END_NAMESPACE
 
 class CameraBinSession;
@@ -82,8 +82,8 @@ private:
     CameraBinControl *m_cameraControl;
     CameraBinMetaData *m_metaDataControl;
 
-    QAudioEndpointSelector *m_audioInputEndpointSelector;
-    QVideoDeviceControl *m_videoInputDevice;
+    QAudioEndpointSelectorControl *m_audioInputEndpointSelector;
+    QVideoDeviceSelectorControl *m_videoInputDevice;
 
     QMediaControl *m_videoOutput;
 
diff --git a/src/plugins/gstreamer/camerabin/camerabinvideoencoder.cpp b/src/plugins/gstreamer/camerabin/camerabinvideoencoder.cpp
index e163792..c7bb47c 100644
--- a/src/plugins/gstreamer/camerabin/camerabinvideoencoder.cpp
+++ b/src/plugins/gstreamer/camerabin/camerabinvideoencoder.cpp
@@ -46,7 +46,7 @@
 #include <QtCore/qdebug.h>
 
 CameraBinVideoEncoder::CameraBinVideoEncoder(CameraBinSession *session)
-    :QVideoEncoderControl(session),
+    :QVideoEncoderSettingsControl(session),
      m_session(session),
      m_codecs(QGstCodecsInfo::VideoEncoder)
 {
diff --git a/src/plugins/gstreamer/camerabin/camerabinvideoencoder.h b/src/plugins/gstreamer/camerabin/camerabinvideoencoder.h
index 9617731..554e443 100644
--- a/src/plugins/gstreamer/camerabin/camerabinvideoencoder.h
+++ b/src/plugins/gstreamer/camerabin/camerabinvideoencoder.h
@@ -42,7 +42,7 @@
 #ifndef CAMERABINVIDEOENCODE_H
 #define CAMERABINVIDEOENCODE_H
 
-#include <qvideoencodercontrol.h>
+#include <qvideoencodersettingscontrol.h>
 class CameraBinSession;
 
 #include <QtCore/qstringlist.h>
@@ -56,7 +56,7 @@ class CameraBinSession;
 
 QT_USE_NAMESPACE
 
-class CameraBinVideoEncoder : public QVideoEncoderControl
+class CameraBinVideoEncoder : public QVideoEncoderSettingsControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.cpp b/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.cpp
index 5e17ba1..a71146c 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.cpp
+++ b/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.cpp
@@ -48,7 +48,7 @@
 #include <math.h>
 
 QGstreamerAudioEncode::QGstreamerAudioEncode(QObject *parent)
-    :QAudioEncoderControl(parent)
+    :QAudioEncoderSettingsControl(parent)
 {
     QList<QByteArray> codecCandidates;
 
diff --git a/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.h b/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.h
index b8fce27..d45c4e1 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.h
+++ b/src/plugins/gstreamer/mediacapture/qgstreameraudioencode.h
@@ -42,7 +42,7 @@
 #ifndef QGSTREAMERAUDIOENCODE_H
 #define QGSTREAMERAUDIOENCODE_H
 
-#include <qaudioencodercontrol.h>
+#include <qaudioencodersettingscontrol.h>
 
 #include <QtCore/qstringlist.h>
 #include <QtCore/qmap.h>
@@ -56,7 +56,7 @@ QT_BEGIN_NAMESPACE
 
 class QGstreamerCaptureSession;
 
-class QGstreamerAudioEncode : public QAudioEncoderControl
+class QGstreamerAudioEncode : public QAudioEncoderSettingsControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.cpp b/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.cpp
index bacc9c9..61c4e3d 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.cpp
+++ b/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.cpp
@@ -132,19 +132,19 @@ QMediaControl *QGstreamerCaptureService::requestControl(const char *name)
     if (!m_captureSession)
         return 0;
 
-    if (qstrcmp(name,QAudioEndpointSelector_iid) == 0)
+    if (qstrcmp(name,QAudioEndpointSelectorControl_iid) == 0)
         return m_audioInputEndpointSelector;
 
-    if (qstrcmp(name,QVideoDeviceControl_iid) == 0)
+    if (qstrcmp(name,QVideoDeviceSelectorControl_iid) == 0)
         return m_videoInputDevice;
 
     if (qstrcmp(name,QMediaRecorderControl_iid) == 0)
         return m_captureSession->recorderControl();
 
-    if (qstrcmp(name,QAudioEncoderControl_iid) == 0)
+    if (qstrcmp(name,QAudioEncoderSettingsControl_iid) == 0)
         return m_captureSession->audioEncodeControl();
 
-    if (qstrcmp(name,QVideoEncoderControl_iid) == 0)
+    if (qstrcmp(name,QVideoEncoderSettingsControl_iid) == 0)
         return m_captureSession->videoEncodeControl();
 
     if (qstrcmp(name,QImageEncoderControl_iid) == 0)
diff --git a/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.h b/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.h
index 80445e4..d491cb8 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.h
+++ b/src/plugins/gstreamer/mediacapture/qgstreamercaptureservice.h
@@ -48,8 +48,8 @@
 #include <gst/gst.h>
 
 QT_BEGIN_NAMESPACE
-class QAudioEndpointSelector;
-class QVideoDeviceControl;
+class QAudioEndpointSelectorControl;
+class QVideoDeviceSelectorControl;
 
 class QGstreamerCaptureSession;
 class QGstreamerCameraControl;
@@ -82,8 +82,8 @@ private:
     QGstreamerV4L2Input *m_videoInput;
     QGstreamerCaptureMetaDataControl *m_metaDataControl;
 
-    QAudioEndpointSelector *m_audioInputEndpointSelector;
-    QVideoDeviceControl *m_videoInputDevice;
+    QAudioEndpointSelectorControl *m_audioInputEndpointSelector;
+    QVideoDeviceSelectorControl *m_videoInputDevice;
 
     QMediaControl *m_videoOutput;
 
diff --git a/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.cpp b/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.cpp
index 67cfd38..2d7c75c 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.cpp
+++ b/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.cpp
@@ -48,7 +48,7 @@
 #include <math.h>
 
 QGstreamerVideoEncode::QGstreamerVideoEncode(QGstreamerCaptureSession *session)
-    :QVideoEncoderControl(session), m_session(session)
+    :QVideoEncoderSettingsControl(session), m_session(session)
 {
     QList<QByteArray> codecCandidates;
     codecCandidates << "video/h264" << "video/xvid" << "video/mpeg4" << "video/mpeg1" << "video/mpeg2" << "video/theora";
diff --git a/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.h b/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.h
index b5ba233..350a8a2 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.h
+++ b/src/plugins/gstreamer/mediacapture/qgstreamervideoencode.h
@@ -42,7 +42,7 @@
 #ifndef QGSTREAMERVIDEOENCODE_H
 #define QGSTREAMERVIDEOENCODE_H
 
-#include <qvideoencodercontrol.h>
+#include <qvideoencodersettingscontrol.h>
 
 #include <QtCore/qstringlist.h>
 #include <QtCore/qmap.h>
@@ -54,7 +54,7 @@ QT_BEGIN_NAMESPACE
 
 class QGstreamerCaptureSession;
 
-class QGstreamerVideoEncode : public QVideoEncoderControl
+class QGstreamerVideoEncode : public QVideoEncoderSettingsControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/wmf/player/mfaudioendpointcontrol.cpp b/src/plugins/wmf/player/mfaudioendpointcontrol.cpp
index d0ed93b..ce4019c 100644
--- a/src/plugins/wmf/player/mfaudioendpointcontrol.cpp
+++ b/src/plugins/wmf/player/mfaudioendpointcontrol.cpp
@@ -43,7 +43,7 @@
 #include "mfaudioendpointcontrol.h"
 
 MFAudioEndpointControl::MFAudioEndpointControl(QObject *parent)
-    : QAudioEndpointSelector(parent)
+    : QAudioEndpointSelectorControl(parent)
     , m_currentActivate(0)
 {
     updateEndpoints();
diff --git a/src/plugins/wmf/player/mfaudioendpointcontrol.h b/src/plugins/wmf/player/mfaudioendpointcontrol.h
index dcbf1e9..36d91f6 100644
--- a/src/plugins/wmf/player/mfaudioendpointcontrol.h
+++ b/src/plugins/wmf/player/mfaudioendpointcontrol.h
@@ -46,13 +46,13 @@
 #include <mfidl.h>
 #include <mmdeviceapi.h>
 
-#include "qaudioendpointselector.h"
+#include "qaudioendpointselectorcontrol.h"
 
 class MFPlayerService;
 
 QT_USE_NAMESPACE
 
-class MFAudioEndpointControl : public QAudioEndpointSelector
+class MFAudioEndpointControl : public QAudioEndpointSelectorControl
 {
     Q_OBJECT
 public:
diff --git a/src/plugins/wmf/player/mfplayerservice.cpp b/src/plugins/wmf/player/mfplayerservice.cpp
index c4c3fbd..20e0561 100644
--- a/src/plugins/wmf/player/mfplayerservice.cpp
+++ b/src/plugins/wmf/player/mfplayerservice.cpp
@@ -97,7 +97,7 @@ QMediaControl* MFPlayerService::requestControl(const char *name)
 {
     if (qstrcmp(name, QMediaPlayerControl_iid) == 0) {
         return m_player;
-    } else if (qstrcmp(name, QAudioEndpointSelector_iid) == 0) {
+    } else if (qstrcmp(name, QAudioEndpointSelectorControl_iid) == 0) {
         return m_audioEndpointControl;
     } else if (qstrcmp(name, QMetaDataReaderControl_iid) == 0) {
         return m_metaDataControl;
diff --git a/tests/auto/unit/multimedia.pro b/tests/auto/unit/multimedia.pro
index f909a3b..309d412 100644
--- a/tests/auto/unit/multimedia.pro
+++ b/tests/auto/unit/multimedia.pro
@@ -25,7 +25,7 @@ SUBDIRS += \
     qmetadatawritercontrol \
     qradiodata \
     qradiotuner \
-    qvideoencodercontrol \
+    qvideoencodersettingscontrol \
     qvideoframe \
     qvideosurfaceformat \
     qwavedecoder \
diff --git a/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp b/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp
index 878b03a..676fb66 100644
--- a/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp
+++ b/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp
@@ -45,9 +45,9 @@
 #include <qaudioformat.h>
 
 #include <qaudiorecorder.h>
-#include <qaudioencodercontrol.h>
+#include <qaudioencodersettingscontrol.h>
 #include <qmediarecordercontrol.h>
-#include <qaudioendpointselector.h>
+#include <qaudioendpointselectorcontrol.h>
 #include <qaudiodeviceinfo.h>
 #include <qaudioinput.h>
 #include <qmediaobject.h>
diff --git a/tests/auto/unit/qmediabindableinterface/tst_qmediabindableinterface.cpp b/tests/auto/unit/qmediabindableinterface/tst_qmediabindableinterface.cpp
index ba4d579..58e70e2 100644
--- a/tests/auto/unit/qmediabindableinterface/tst_qmediabindableinterface.cpp
+++ b/tests/auto/unit/qmediabindableinterface/tst_qmediabindableinterface.cpp
@@ -48,10 +48,10 @@
 #include <qmediarecordercontrol.h>
 #include <qmediarecorder.h>
 #include <qmetadatawritercontrol.h>
-#include <qaudioendpointselector.h>
-#include <qaudioencodercontrol.h>
+#include <qaudioendpointselectorcontrol.h>
+#include <qaudioencodersettingscontrol.h>
 #include <qmediacontainercontrol.h>
-#include <qvideoencodercontrol.h>
+#include <qvideoencodersettingscontrol.h>
 #include <qaudioformat.h>
 
 #include "mockmediacontainercontrol.h"
diff --git a/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp b/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp
index 977037d..f249ab2 100644
--- a/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp
+++ b/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp
@@ -48,7 +48,7 @@
 #include <qmediaobject.h>
 #include <qmediaservice.h>
 #include <qmetadatareadercontrol.h>
-#include <qaudioendpointselector.h>
+#include <qaudioendpointselectorcontrol.h>
 
 #include "mockmediarecorderservice.h"
 #include "mockmediaserviceprovider.h"
diff --git a/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp b/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
index 99ea5d7..1040903 100644
--- a/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
+++ b/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
@@ -49,10 +49,10 @@
 #include <qmediarecordercontrol.h>
 #include <qmediarecorder.h>
 #include <qmetadatawritercontrol.h>
-#include <qaudioendpointselector.h>
-#include <qaudioencodercontrol.h>
+#include <qaudioendpointselectorcontrol.h>
+#include <qaudioencodersettingscontrol.h>
 #include <qmediacontainercontrol.h>
-#include <qvideoencodercontrol.h>
+#include <qvideoencodersettingscontrol.h>
 #include <qaudioformat.h>
 
 #include "mockmediarecorderservice.h"
@@ -114,13 +114,13 @@ private slots:
     void testVideoSettingsDestructor();
 
 private:
-    QAudioEncoderControl* encode;
-    QAudioEndpointSelector* audio;
+    QAudioEncoderSettingsControl* encode;
+    QAudioEndpointSelectorControl* audio;
     MockMediaObject *object;
     MockMediaRecorderService*service;
     MockMediaRecorderControl *mock;
     QMediaRecorder *capture;
-    QVideoEncoderControl* videoEncode;
+    QVideoEncoderSettingsControl* videoEncode;
 };
 
 void tst_QMediaRecorder::initTestCase()
@@ -133,9 +133,9 @@ void tst_QMediaRecorder::initTestCase()
     object = new MockMediaObject(this, service);
     capture = new QMediaRecorder(object);
 
-    audio = qobject_cast<QAudioEndpointSelector*>(service->requestControl(QAudioEndpointSelector_iid));
-    encode = qobject_cast<QAudioEncoderControl*>(service->requestControl(QAudioEncoderControl_iid));
-    videoEncode = qobject_cast<QVideoEncoderControl*>(service->requestControl(QVideoEncoderControl_iid));
+    audio = qobject_cast<QAudioEndpointSelectorControl*>(service->requestControl(QAudioEndpointSelectorControl_iid));
+    encode = qobject_cast<QAudioEncoderSettingsControl*>(service->requestControl(QAudioEncoderSettingsControl_iid));
+    videoEncode = qobject_cast<QVideoEncoderSettingsControl*>(service->requestControl(QVideoEncoderSettingsControl_iid));
 }
 
 void tst_QMediaRecorder::cleanupTestCase()
diff --git a/tests/auto/unit/qmediaservice/tst_qmediaservice.cpp b/tests/auto/unit/qmediaservice/tst_qmediaservice.cpp
index 2b49779..09c4ba1 100644
--- a/tests/auto/unit/qmediaservice/tst_qmediaservice.cpp
+++ b/tests/auto/unit/qmediaservice/tst_qmediaservice.cpp
@@ -43,7 +43,7 @@
 
 #include <QtTest/QtTest>
 
-#include <qvideodevicecontrol.h>
+#include <qvideodeviceselectorcontrol.h>
 #include <qmediacontrol.h>
 #include <qmediaservice.h>
 
diff --git a/tests/auto/unit/qmultimedia_common/mockaudioencodercontrol.h b/tests/auto/unit/qmultimedia_common/mockaudioencodercontrol.h
index 7fb83e3..ffe1800 100644
--- a/tests/auto/unit/qmultimedia_common/mockaudioencodercontrol.h
+++ b/tests/auto/unit/qmultimedia_common/mockaudioencodercontrol.h
@@ -42,14 +42,14 @@
 #ifndef MOCKAUDIOENCODERCONTROL_H
 #define MOCKAUDIOENCODERCONTROL_H
 
-#include "qaudioencodercontrol.h"
+#include "qaudioencodersettingscontrol.h"
 
-class MockAudioEncoderControl : public QAudioEncoderControl
+class MockAudioEncoderControl : public QAudioEncoderSettingsControl
 {
     Q_OBJECT
 public:
     MockAudioEncoderControl(QObject *parent):
-        QAudioEncoderControl(parent)
+        QAudioEncoderSettingsControl(parent)
     {
         m_codecs << "audio/pcm" << "audio/mpeg";
         m_descriptions << "Pulse Code Modulation" << "mp3 format";
diff --git a/tests/auto/unit/qmultimedia_common/mockaudioendpointselector.h b/tests/auto/unit/qmultimedia_common/mockaudioendpointselector.h
index ef20b3a..34b584b 100644
--- a/tests/auto/unit/qmultimedia_common/mockaudioendpointselector.h
+++ b/tests/auto/unit/qmultimedia_common/mockaudioendpointselector.h
@@ -42,14 +42,14 @@
 #ifndef MOCKAUDIOENDPOINTSELECTOR_H
 #define MOCKAUDIOENDPOINTSELECTOR_H
 
-#include "qaudioendpointselector.h"
+#include "qaudioendpointselectorcontrol.h"
 
-class MockAudioEndpointSelector : public QAudioEndpointSelector
+class MockAudioEndpointSelector : public QAudioEndpointSelectorControl
 {
     Q_OBJECT
 public:
     MockAudioEndpointSelector(QObject *parent):
-        QAudioEndpointSelector(parent)
+        QAudioEndpointSelectorControl(parent)
     {
         m_names << "device1" << "device2" << "device3";
         m_descriptions << "dev1 comment" << "dev2 comment" << "dev3 comment";
diff --git a/tests/auto/unit/qmultimedia_common/mockmediarecorderservice.h b/tests/auto/unit/qmultimedia_common/mockmediarecorderservice.h
index f642c43..0921889 100644
--- a/tests/auto/unit/qmultimedia_common/mockmediarecorderservice.h
+++ b/tests/auto/unit/qmultimedia_common/mockmediarecorderservice.h
@@ -73,15 +73,15 @@ public:
 
     QMediaControl* requestControl(const char *name)
     {
-        if (hasControls && qstrcmp(name,QAudioEncoderControl_iid) == 0)
+        if (hasControls && qstrcmp(name,QAudioEncoderSettingsControl_iid) == 0)
             return mockAudioEncoderControl;
-        if (hasControls && qstrcmp(name,QAudioEndpointSelector_iid) == 0)
+        if (hasControls && qstrcmp(name,QAudioEndpointSelectorControl_iid) == 0)
             return mockAudioEndpointSelector;
         if (hasControls && qstrcmp(name,QMediaRecorderControl_iid) == 0)
             return mockControl;
         if (hasControls && qstrcmp(name,QMediaContainerControl_iid) == 0)
             return mockFormatControl;
-        if (hasControls && qstrcmp(name,QVideoEncoderControl_iid) == 0)
+        if (hasControls && qstrcmp(name,QVideoEncoderSettingsControl_iid) == 0)
             return mockVideoEncoderControl;
         if (hasControls && qstrcmp(name, QMetaDataWriterControl_iid) == 0)
             return mockMetaDataControl;
@@ -98,10 +98,10 @@ public:
     }
 
     QMediaControl   *mockControl;
-    QAudioEndpointSelector  *mockAudioEndpointSelector;
-    QAudioEncoderControl    *mockAudioEncoderControl;
+    QAudioEndpointSelectorControl  *mockAudioEndpointSelector;
+    QAudioEncoderSettingsControl    *mockAudioEncoderControl;
     QMediaContainerControl     *mockFormatControl;
-    QVideoEncoderControl    *mockVideoEncoderControl;
+    QVideoEncoderSettingsControl    *mockVideoEncoderControl;
     MockMetaDataWriterControl *mockMetaDataControl;
     MockAvailabilityControl *mockAvailabilityControl;
     MockAudioProbeControl *mockAudioProbeControl;
diff --git a/tests/auto/unit/qmultimedia_common/mockvideoencodercontrol.h b/tests/auto/unit/qmultimedia_common/mockvideoencodercontrol.h
index 1e756d3..e9f9744 100644
--- a/tests/auto/unit/qmultimedia_common/mockvideoencodercontrol.h
+++ b/tests/auto/unit/qmultimedia_common/mockvideoencodercontrol.h
@@ -42,14 +42,14 @@
 #ifndef MOCKVIDEOENCODERCONTROL_H
 #define MOCKVIDEOENCODERCONTROL_H
 
-#include "qvideoencodercontrol.h"
+#include "qvideoencodersettingscontrol.h"
 
-class MockVideoEncoderControl : public QVideoEncoderControl
+class MockVideoEncoderControl : public QVideoEncoderSettingsControl
 {
     Q_OBJECT
 public:
     MockVideoEncoderControl(QObject *parent):
-        QVideoEncoderControl(parent)
+        QVideoEncoderSettingsControl(parent)
     {
         m_videoCodecs << "video/3gpp" << "video/H264";
         m_sizes << QSize(320,240) << QSize(640,480);
diff --git a/tests/auto/unit/qvideoencodercontrol/qvideoencodercontrol.pro b/tests/auto/unit/qvideoencodercontrol/qvideoencodercontrol.pro
deleted file mode 100644
index ad14a25..0000000
--- a/tests/auto/unit/qvideoencodercontrol/qvideoencodercontrol.pro
+++ /dev/null
@@ -1,9 +0,0 @@
-CONFIG += testcase
-TARGET = tst_qvideoencodercontrol
-
-QT += multimedia-private testlib
-CONFIG += no_private_qt_headers_warning
-
-SOURCES += \
-    tst_qvideoencodercontrol.cpp
-
diff --git a/tests/auto/unit/qvideoencodercontrol/tst_qvideoencodercontrol.cpp b/tests/auto/unit/qvideoencodercontrol/tst_qvideoencodercontrol.cpp
deleted file mode 100644
index 3df6d05..0000000
--- a/tests/auto/unit/qvideoencodercontrol/tst_qvideoencodercontrol.cpp
+++ /dev/null
@@ -1,118 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the test suite of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:LGPL$
-** GNU Lesser General Public License Usage
-** This file may be used under the terms of the GNU Lesser General Public
-** License version 2.1 as published by the Free Software Foundation and
-** appearing in the file LICENSE.LGPL included in the packaging of this
-** file. Please review the following information to ensure the GNU Lesser
-** General Public License version 2.1 requirements will be met:
-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
-**
-** In addition, as a special exception, Nokia gives you certain additional
-** rights. These rights are described in the Nokia Qt LGPL Exception
-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
-**
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU General
-** Public License version 3.0 as published by the Free Software Foundation
-** and appearing in the file LICENSE.GPL included in the packaging of this
-** file. Please review the following information to ensure the GNU General
-** Public License version 3.0 requirements will be met:
-** http://www.gnu.org/copyleft/gpl.html.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms and
-** conditions contained in a signed written agreement between you and Nokia.
-**
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//TESTED_COMPONENT=src/multimedia
-
-#include <QtTest/QtTest>
-#include "qvideoencodercontrol.h"
-class MyVideEncoderControl: public QVideoEncoderControl
-{
-    Q_OBJECT
-
-public:
-    MyVideEncoderControl(QObject *parent = 0 ):QVideoEncoderControl(parent)
-    {
-
-    }
-
-    ~MyVideEncoderControl()
-    {
-
-    }
-
-    QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings,bool *continuous = 0) const
-    {
-        Q_UNUSED(settings);
-        Q_UNUSED(continuous);
-
-        return (QList<QSize>());
-    }
-
-    QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings, bool *continuous = 0) const
-    {
-        Q_UNUSED(settings);
-        Q_UNUSED(continuous);
-
-        return (QList<qreal>());
-
-    }
-
-    QStringList supportedVideoCodecs() const
-    {
-        return QStringList();
-
-    }
-
-    QString videoCodecDescription(const QString &codecName) const
-    {
-        Q_UNUSED(codecName)
-        return QString();
-
-    }
-
-    QVideoEncoderSettings videoSettings() const
-    {
-        return QVideoEncoderSettings();
-    }
-
-    void setVideoSettings(const QVideoEncoderSettings &settings)
-    {
-        Q_UNUSED(settings);
-    }
-};
-
-class tst_QVideoEncoderControl: public QObject
-{
-    Q_OBJECT
-private slots:
-    void constructor();
-};
-
-void tst_QVideoEncoderControl::constructor()
-{
-    QObject parent;
-    MyVideEncoderControl control(&parent);
-}
-
-QTEST_MAIN(tst_QVideoEncoderControl)
-#include "tst_qvideoencodercontrol.moc"
-
-
diff --git a/tests/auto/unit/qvideoencodersettingscontrol/qvideoencodersettingscontrol.pro b/tests/auto/unit/qvideoencodersettingscontrol/qvideoencodersettingscontrol.pro
new file mode 100644
index 0000000..8919852
--- /dev/null
+++ b/tests/auto/unit/qvideoencodersettingscontrol/qvideoencodersettingscontrol.pro
@@ -0,0 +1,9 @@
+CONFIG += testcase
+TARGET = tst_qvideoencodersettingscontrol
+
+QT += multimedia-private testlib
+CONFIG += no_private_qt_headers_warning
+
+SOURCES += \
+    tst_qvideoencodersettingscontrol.cpp
+
diff --git a/tests/auto/unit/qvideoencodersettingscontrol/tst_qvideoencodersettingscontrol.cpp b/tests/auto/unit/qvideoencodersettingscontrol/tst_qvideoencodersettingscontrol.cpp
new file mode 100644
index 0000000..059f2c7
--- /dev/null
+++ b/tests/auto/unit/qvideoencodersettingscontrol/tst_qvideoencodersettingscontrol.cpp
@@ -0,0 +1,118 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the test suite of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+//TESTED_COMPONENT=src/multimedia
+
+#include <QtTest/QtTest>
+#include "qvideoencodersettingscontrol.h"
+class MyVideEncoderControl: public QVideoEncoderSettingsControl
+{
+    Q_OBJECT
+
+public:
+    MyVideEncoderControl(QObject *parent = 0 ):QVideoEncoderSettingsControl(parent)
+    {
+
+    }
+
+    ~MyVideEncoderControl()
+    {
+
+    }
+
+    QList<QSize> supportedResolutions(const QVideoEncoderSettings &settings,bool *continuous = 0) const
+    {
+        Q_UNUSED(settings);
+        Q_UNUSED(continuous);
+
+        return (QList<QSize>());
+    }
+
+    QList<qreal> supportedFrameRates(const QVideoEncoderSettings &settings, bool *continuous = 0) const
+    {
+        Q_UNUSED(settings);
+        Q_UNUSED(continuous);
+
+        return (QList<qreal>());
+
+    }
+
+    QStringList supportedVideoCodecs() const
+    {
+        return QStringList();
+
+    }
+
+    QString videoCodecDescription(const QString &codecName) const
+    {
+        Q_UNUSED(codecName)
+        return QString();
+
+    }
+
+    QVideoEncoderSettings videoSettings() const
+    {
+        return QVideoEncoderSettings();
+    }
+
+    void setVideoSettings(const QVideoEncoderSettings &settings)
+    {
+        Q_UNUSED(settings);
+    }
+};
+
+class tst_QVideoEncoderSettingsControl: public QObject
+{
+    Q_OBJECT
+private slots:
+    void constructor();
+};
+
+void tst_QVideoEncoderSettingsControl::constructor()
+{
+    QObject parent;
+    MyVideEncoderControl control(&parent);
+}
+
+QTEST_MAIN(tst_QVideoEncoderSettingsControl)
+#include "tst_qvideoencodersettingscontrol.moc"
+
+