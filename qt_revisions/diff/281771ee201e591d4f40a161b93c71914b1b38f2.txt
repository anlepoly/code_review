diff --git a/src/corelib/tools/qregexp.cpp b/src/corelib/tools/qregexp.cpp
index 79ceba5..792b9ce 100644
--- a/src/corelib/tools/qregexp.cpp
+++ b/src/corelib/tools/qregexp.cpp
@@ -1839,7 +1839,7 @@ bool QRegExpMatchState::testAnchor(int i, int a, const int *capBegin)
                 QRegExpMatchState matchState;
                 matchState.prepareForMatch(ahead[j]->eng);
                 matchState.match(in + pos + i, len - pos - i, 0,
-                    true, true, matchState.caretPos - matchState.pos - i);
+                    true, true, caretPos - pos - i);
                 if ((matchState.captured[0] == 0) == ahead[j]->neg)
                     return false;
             }
diff --git a/tests/auto/corelib/tools/qregexp/tst_qregexp.cpp b/tests/auto/corelib/tools/qregexp/tst_qregexp.cpp
index 4e1fba5..b1ef096 100644
--- a/tests/auto/corelib/tools/qregexp/tst_qregexp.cpp
+++ b/tests/auto/corelib/tools/qregexp/tst_qregexp.cpp
@@ -571,7 +571,6 @@ void tst_QRegExp::indexIn()
         int mylen = rx.matchedLength();
         QStringList mycaps = rx.capturedTexts();
 
-        QEXPECT_FAIL("anc11", "QRegExp has bugs with anchors inside lookaheads", Abort);
         QCOMPARE( mypos, pos );
         QCOMPARE( mylen, len );
         if ( caps.size() > 1 && caps[1] != "IGNORE ME" ) {
@@ -625,7 +624,6 @@ void tst_QRegExp::lastIndexIn()
         QStringList mycaps = rx.capturedTexts();
 
         if ( mypos <= pos || pos == -1 ) {
-            QEXPECT_FAIL("anc11", "QRegExp has bugs with anchors inside lookaheads", Abort);
             QCOMPARE( mypos, pos );
             QCOMPARE( mylen, len );