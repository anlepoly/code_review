diff --git a/src/gui/kernel/qguiapplication.cpp b/src/gui/kernel/qguiapplication.cpp
index a7e9dea..61d52ff 100644
--- a/src/gui/kernel/qguiapplication.cpp
+++ b/src/gui/kernel/qguiapplication.cpp
@@ -1410,7 +1410,7 @@ void QGuiApplicationPrivate::processActivatedEvent(QWindowSystemInterfacePrivate
         QFocusEvent focusOut(QEvent::FocusOut);
         QCoreApplication::sendSpontaneousEvent(previous, &focusOut);
         QObject::disconnect(previous, SIGNAL(focusObjectChanged(QObject*)),
-                            qApp, SLOT(q_updateFocusObject(QObject*)));
+                            qApp, SLOT(_q_updateFocusObject(QObject*)));
     } else {
         QEvent appActivate(QEvent::ApplicationActivate);
         qApp->sendSpontaneousEvent(qApp, &appActivate);
@@ -1420,7 +1420,7 @@ void QGuiApplicationPrivate::processActivatedEvent(QWindowSystemInterfacePrivate
         QFocusEvent focusIn(QEvent::FocusIn);
         QCoreApplication::sendSpontaneousEvent(QGuiApplicationPrivate::focus_window, &focusIn);
         QObject::connect(QGuiApplicationPrivate::focus_window, SIGNAL(focusObjectChanged(QObject*)),
-                         qApp, SLOT(q_updateFocusObject(QObject*)));
+                         qApp, SLOT(_q_updateFocusObject(QObject*)));
     } else {
         QEvent appActivate(QEvent::ApplicationDeactivate);
         qApp->sendSpontaneousEvent(qApp, &appActivate);
@@ -1430,7 +1430,7 @@ void QGuiApplicationPrivate::processActivatedEvent(QWindowSystemInterfacePrivate
         self->notifyActiveWindowChange(previous);
 
         if (previousFocusObject != qApp->focusObject())
-            self->q_updateFocusObject(qApp->focusObject());
+            self->_q_updateFocusObject(qApp->focusObject());
     }
 
     emit qApp->focusWindowChanged(newFocus);
@@ -2543,7 +2543,7 @@ const QDrawHelperGammaTables *QGuiApplicationPrivate::gammaTables()
     return result;
 }
 
-void QGuiApplicationPrivate::q_updateFocusObject(QObject *object)
+void QGuiApplicationPrivate::_q_updateFocusObject(QObject *object)
 {
     Q_Q(QGuiApplication);
 
diff --git a/src/gui/kernel/qguiapplication.h b/src/gui/kernel/qguiapplication.h
index 9d90cde..1c0ce17 100644
--- a/src/gui/kernel/qguiapplication.h
+++ b/src/gui/kernel/qguiapplication.h
@@ -158,7 +158,7 @@ private:
     Q_DISABLE_COPY(QGuiApplication)
     Q_DECLARE_PRIVATE(QGuiApplication)
 
-    Q_PRIVATE_SLOT(d_func(), void q_updateFocusObject(QObject *object))
+    Q_PRIVATE_SLOT(d_func(), void _q_updateFocusObject(QObject *object))
 
 #ifndef QT_NO_GESTURES
     friend class QGestureManager;
diff --git a/src/gui/kernel/qguiapplication_p.h b/src/gui/kernel/qguiapplication_p.h
index 58a82a9..21f5751 100644
--- a/src/gui/kernel/qguiapplication_p.h
+++ b/src/gui/kernel/qguiapplication_p.h
@@ -162,7 +162,7 @@ public:
 
     QPixmap getPixmapCursor(Qt::CursorShape cshape);
 
-    void q_updateFocusObject(QObject *object);
+    void _q_updateFocusObject(QObject *object);
 
     static QGuiApplicationPrivate *instance() { return self; }
 
diff --git a/src/gui/kernel/qinputmethod.cpp b/src/gui/kernel/qinputmethod.cpp
index c8d143c..ec2c3ed 100644
--- a/src/gui/kernel/qinputmethod.cpp
+++ b/src/gui/kernel/qinputmethod.cpp
@@ -54,7 +54,7 @@ QInputMethod::QInputMethod()
     : QObject(*new QInputMethodPrivate)
 {
     // might be instantiated before QGuiApplication is fully done, need to connect later
-    QTimer::singleShot(0, this, SLOT(q_connectFocusObject()));
+    QTimer::singleShot(0, this, SLOT(_q_connectFocusObject()));
 }
 
 /*!
@@ -358,15 +358,15 @@ void QInputMethod::invokeAction(Action a, int cursorPosition)
 }
 
 // temporary handlers for updating focus item based on application focus
-void QInputMethodPrivate::q_connectFocusObject()
+void QInputMethodPrivate::_q_connectFocusObject()
 {
     Q_Q(QInputMethod);
     QObject::connect(qApp, SIGNAL(focusObjectChanged(QObject*)),
-                     q, SLOT(q_checkFocusObject(QObject*)));
-    q_checkFocusObject(qApp->focusObject());
+                     q, SLOT(_q_checkFocusObject(QObject*)));
+    _q_checkFocusObject(qApp->focusObject());
 }
 
-void QInputMethodPrivate::q_checkFocusObject(QObject *object)
+void QInputMethodPrivate::_q_checkFocusObject(QObject *object)
 {
     bool enabled = objectAcceptsInputMethod(object);
     setInputItem(enabled ? object : 0);
diff --git a/src/gui/kernel/qinputmethod.h b/src/gui/kernel/qinputmethod.h
index 095c17f..4b21e4a 100644
--- a/src/gui/kernel/qinputmethod.h
+++ b/src/gui/kernel/qinputmethod.h
@@ -129,8 +129,9 @@ private:
     QInputMethod();
     ~QInputMethod();
 
-    Q_PRIVATE_SLOT(d_func(), void q_connectFocusObject())
-    Q_PRIVATE_SLOT(d_func(), void q_checkFocusObject(QObject* object))
+    Q_PRIVATE_SLOT(d_func(), void _q_connectFocusObject())
+    Q_PRIVATE_SLOT(d_func(), void _q_checkFocusObject(QObject* object))
+
 };
 
 QT_END_NAMESPACE
diff --git a/src/gui/kernel/qinputmethod_p.h b/src/gui/kernel/qinputmethod_p.h
index 7b24ebe..69d3f2d 100644
--- a/src/gui/kernel/qinputmethod_p.h
+++ b/src/gui/kernel/qinputmethod_p.h
@@ -80,8 +80,8 @@ public:
         emit q->inputItemChanged();
     }
 
-    void q_connectFocusObject();
-    void q_checkFocusObject(QObject *object);
+    void _q_connectFocusObject();
+    void _q_checkFocusObject(QObject *object);
     bool objectAcceptsInputMethod(QObject *object);
 
     QTransform inputItemTransform;
diff --git a/src/widgets/util/qsystemtrayicon.cpp b/src/widgets/util/qsystemtrayicon.cpp
index 343a3c1..9e667b1 100644
--- a/src/widgets/util/qsystemtrayicon.cpp
+++ b/src/widgets/util/qsystemtrayicon.cpp
@@ -391,7 +391,7 @@ void QSystemTrayIcon::showMessage(const QString& title, const QString& msg,
         d->showMessage_sys(title, msg, icon, msecs);
 }
 
-void QSystemTrayIconPrivate::emitActivated(QPlatformSystemTrayIcon::ActivationReason reason)
+void QSystemTrayIconPrivate::_q_emitActivated(QPlatformSystemTrayIcon::ActivationReason reason)
 {
     Q_Q(QSystemTrayIcon);
     emit q->activated(static_cast<QSystemTrayIcon::ActivationReason>(reason));
diff --git a/src/widgets/util/qsystemtrayicon.h b/src/widgets/util/qsystemtrayicon.h
index ee640b2..870081e 100644
--- a/src/widgets/util/qsystemtrayicon.h
+++ b/src/widgets/util/qsystemtrayicon.h
@@ -118,7 +118,7 @@ private:
     Q_DISABLE_COPY(QSystemTrayIcon)
     Q_DECLARE_PRIVATE(QSystemTrayIcon)
 
-    Q_PRIVATE_SLOT(d_func(), void emitActivated(QPlatformSystemTrayIcon::ActivationReason))
+    Q_PRIVATE_SLOT(d_func(), void _q_emitActivated(QPlatformSystemTrayIcon::ActivationReason))
 
     friend class QSystemTrayIconSys;
     friend class QBalloonTip;
diff --git a/src/widgets/util/qsystemtrayicon_p.h b/src/widgets/util/qsystemtrayicon_p.h
index 3ab2ebc..6650b4c 100644
--- a/src/widgets/util/qsystemtrayicon_p.h
+++ b/src/widgets/util/qsystemtrayicon_p.h
@@ -90,7 +90,7 @@ public:
     static bool isSystemTrayAvailable_sys();
     static bool supportsMessages_sys();
 
-    void emitActivated(QPlatformSystemTrayIcon::ActivationReason reason);
+    void _q_emitActivated(QPlatformSystemTrayIcon::ActivationReason reason);
 
     QPointer<QMenu> menu;
     QIcon icon;