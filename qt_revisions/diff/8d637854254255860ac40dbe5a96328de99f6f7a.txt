diff --git a/src/gsttools/qvideosurfacegstsink.cpp b/src/gsttools/qvideosurfacegstsink.cpp
index 65aca1f..c1f2792 100644
--- a/src/gsttools/qvideosurfacegstsink.cpp
+++ b/src/gsttools/qvideosurfacegstsink.cpp
@@ -581,7 +581,11 @@ gboolean QVideoSurfaceGstSink::set_caps(GstBaseSink *base, GstCaps *caps)
         return TRUE;
     } else {
         int bytesPerLine = 0;
-        QVideoSurfaceFormat format = formatForCaps(caps, &bytesPerLine);
+        QGstBufferPoolInterface *pool = sink->delegate->pool();
+        QAbstractVideoBuffer::HandleType handleType =
+                pool ? pool->handleType() : QAbstractVideoBuffer::NoHandle;
+
+        QVideoSurfaceFormat format = formatForCaps(caps, &bytesPerLine, handleType);
 
         if (sink->delegate->isActive()) {
             QVideoSurfaceFormat surfaceFormst = sink->delegate->surfaceFormat();
@@ -612,7 +616,7 @@ gboolean QVideoSurfaceGstSink::set_caps(GstBaseSink *base, GstCaps *caps)
     return FALSE;
 }
 
-QVideoSurfaceFormat QVideoSurfaceGstSink::formatForCaps(GstCaps *caps, int *bytesPerLine)
+QVideoSurfaceFormat QVideoSurfaceGstSink::formatForCaps(GstCaps *caps, int *bytesPerLine, QAbstractVideoBuffer::HandleType handleType)
 {
     const GstStructure *structure = gst_caps_get_structure(caps, 0);
 
@@ -655,7 +659,7 @@ QVideoSurfaceFormat QVideoSurfaceGstSink::formatForCaps(GstCaps *caps, int *byte
     }
 
     if (pixelFormat != QVideoFrame::Format_Invalid) {
-        QVideoSurfaceFormat format(size, pixelFormat);
+        QVideoSurfaceFormat format(size, pixelFormat, handleType);
 
         QPair<int, int> rate;
         gst_structure_get_fraction(structure, "framerate", &rate.first, &rate.second);
@@ -771,7 +775,11 @@ GstFlowReturn QVideoSurfaceGstSink::buffer_alloc(
 
     if (!sink->delegate->isActive()) {
         int bytesPerLine = 0;
-        QVideoSurfaceFormat format = formatForCaps(intersection, &bytesPerLine);
+        QGstBufferPoolInterface *pool = sink->delegate->pool();
+        QAbstractVideoBuffer::HandleType handleType =
+                pool ? pool->handleType() : QAbstractVideoBuffer::NoHandle;
+
+        QVideoSurfaceFormat format = formatForCaps(intersection, &bytesPerLine, handleType);
 
         if (!sink->delegate->start(format, bytesPerLine)) {
             qWarning() << "failed to start video surface";
diff --git a/src/multimedia/gsttools_headers/qvideosurfacegstsink_p.h b/src/multimedia/gsttools_headers/qvideosurfacegstsink_p.h
index 143f65d..6ee6907 100644
--- a/src/multimedia/gsttools_headers/qvideosurfacegstsink_p.h
+++ b/src/multimedia/gsttools_headers/qvideosurfacegstsink_p.h
@@ -134,7 +134,9 @@ public:
     GstVideoSink parent;
 
     static QVideoSurfaceGstSink *createSink(QAbstractVideoSurface *surface);
-    static QVideoSurfaceFormat formatForCaps(GstCaps *caps, int *bytesPerLine = 0);
+    static QVideoSurfaceFormat formatForCaps(GstCaps *caps,
+                                             int *bytesPerLine = 0,
+                                             QAbstractVideoBuffer::HandleType handleType = QAbstractVideoBuffer::NoHandle);
     static void setFrameTimeStamps(QVideoFrame *frame, GstBuffer *buffer);
 
     static void handleShowPrerollChange(GObject *o, GParamSpec *p, gpointer d);