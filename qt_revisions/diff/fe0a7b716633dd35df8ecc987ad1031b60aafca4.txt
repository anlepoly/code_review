diff --git a/src/plugins/qmltooling/qmldbg_tcp/qtcpserverconnection.h b/src/plugins/qmltooling/qmldbg_tcp/qtcpserverconnection.h
index e2b32b0..6f5f0f4 100644
--- a/src/plugins/qmltooling/qmldbg_tcp/qtcpserverconnection.h
+++ b/src/plugins/qmltooling/qmldbg_tcp/qtcpserverconnection.h
@@ -42,7 +42,6 @@
 #ifndef QTCPSERVERCONNECTION_H
 #define QTCPSERVERCONNECTION_H
 
-#include <QtWidgets/QStylePlugin>
 #include <QtQml/private/qqmldebugserverconnection_p.h>
 
 QT_BEGIN_NAMESPACE
diff --git a/src/qmltest/quicktest.cpp b/src/qmltest/quicktest.cpp
index 3a2103a..66f1d86 100644
--- a/src/qmltest/quicktest.cpp
+++ b/src/qmltest/quicktest.cpp
@@ -145,9 +145,8 @@ void handleCompileErrors(const QFileInfo &fi, QQuickView *view)
     results.stopLogging();
 }
 
-int quick_test_main(int argc, char **argv, const char *name, quick_test_viewport_create createViewport, const char *sourceDir)
+int quick_test_main(int argc, char **argv, const char *name, const char *sourceDir)
 {
-    Q_UNUSED(createViewport);
     QGuiApplication* app = 0;
     if (!QCoreApplication::instance()) {
         app = new QGuiApplication(argc, argv);
diff --git a/src/qmltest/quicktest.h b/src/qmltest/quicktest.h
index 163c377..ad7f7c0 100644
--- a/src/qmltest/quicktest.h
+++ b/src/qmltest/quicktest.h
@@ -43,35 +43,25 @@
 #define QUICKTEST_H
 
 #include <QtQuickTest/quicktestglobal.h>
-#include <QtWidgets/qwidget.h>
-#ifdef QT_OPENGL_LIB
-#include <QtGui/qopengl.h>
-#endif
 
 QT_BEGIN_HEADER
 
 QT_BEGIN_NAMESPACE
 
-typedef QWidget *(*quick_test_viewport_create)();
-
-Q_QUICK_TEST_EXPORT int quick_test_main(int argc, char **argv, const char *name, quick_test_viewport_create createViewport, const char *sourceDir);
+Q_QUICK_TEST_EXPORT int quick_test_main(int argc, char **argv, const char *name, const char *sourceDir);
 
 #ifdef QUICK_TEST_SOURCE_DIR
 
 #define QUICK_TEST_MAIN(name) \
     int main(int argc, char **argv) \
     { \
-        return quick_test_main(argc, argv, #name, 0, QUICK_TEST_SOURCE_DIR); \
+        return quick_test_main(argc, argv, #name, QUICK_TEST_SOURCE_DIR); \
     }
 
 #define QUICK_TEST_OPENGL_MAIN(name) \
-    static QWidget *name##_create_viewport() \
-    { \
-        return new QOpenGLWidget(); \
-    } \
     int main(int argc, char **argv) \
     { \
-        return quick_test_main(argc, argv, #name, name##_create_viewport, QUICK_TEST_SOURCE_DIR); \
+        return quick_test_main(argc, argv, #name, QUICK_TEST_SOURCE_DIR); \
     }
 
 #else
@@ -79,17 +69,13 @@ Q_QUICK_TEST_EXPORT int quick_test_main(int argc, char **argv, const char *name,
 #define QUICK_TEST_MAIN(name) \
     int main(int argc, char **argv) \
     { \
-        return quick_test_main(argc, argv, #name, 0, 0); \
+        return quick_test_main(argc, argv, #name, 0); \
     }
 
 #define QUICK_TEST_OPENGL_MAIN(name) \
-    static QWidget *name##_create_viewport() \
-    { \
-        return new QOpenGLWidget(); \
-    } \
     int main(int argc, char **argv) \
     { \
-        return quick_test_main(argc, argv, #name, name##_create_viewport, 0); \
+        return quick_test_main(argc, argv, #name, 0); \
     }
 
 #endif
diff --git a/src/quick/scenegraph/qsgshareddistancefieldglyphcache.cpp b/src/quick/scenegraph/qsgshareddistancefieldglyphcache.cpp
index dd9db4e..536adb0 100644
--- a/src/quick/scenegraph/qsgshareddistancefieldglyphcache.cpp
+++ b/src/quick/scenegraph/qsgshareddistancefieldglyphcache.cpp
@@ -54,8 +54,6 @@
 
 #include <QtQuick/qquickcanvas.h>
 
-#include <QtOpenGL/qglframebufferobject.h>
-
 // #define QSGSHAREDDISTANCEFIELDGLYPHCACHE_DEBUG
 
 Q_DECLARE_METATYPE(QVector<quint32>)
diff --git a/tools/qmleasing/main.cpp b/tools/qmleasing/main.cpp
index 59daa0e..a2b1510 100644
--- a/tools/qmleasing/main.cpp
+++ b/tools/qmleasing/main.cpp
@@ -41,7 +41,7 @@
 
 #include <QPainter>
 #include <QtQuick/QQuickView>
-#include <QApplication>
+#include <QGuiApplication>
 #include <QEasingCurve>
 #include <QtQuick/QQuickPaintedItem>
 
@@ -102,7 +102,7 @@ void EasingPlot::paint(QPainter *painter)
 
 int main(int argc, char ** argv)
 {
-    QApplication app(argc, argv);
+    QGuiApplication app(argc, argv);
 
     qmlRegisterType<EasingPlot>("EasingPlot", 1, 0, "EasingPlot");
 
diff --git a/tools/qmleasing/qmleasing.pro b/tools/qmleasing/qmleasing.pro
index 488ec57..b43071c 100644
--- a/tools/qmleasing/qmleasing.pro
+++ b/tools/qmleasing/qmleasing.pro
@@ -1,4 +1,4 @@
-QT += qml quick widgets
+QT += qml quick
 CONFIG -= app_bundle
 
 SOURCES += main.cpp
diff --git a/tools/qmlscene/qmlscene.pro b/tools/qmlscene/qmlscene.pro
index 464f9b3..1cf7b3c 100644
--- a/tools/qmlscene/qmlscene.pro
+++ b/tools/qmlscene/qmlscene.pro
@@ -3,7 +3,7 @@ TARGET = qmlscene
 DESTDIR= $$QT.qml.bins
 
 QT += qml quick core-private
-!isEmpty(QT.widgets.name): QT += widgets
+!contains(QT_CONFIG, no-widgets):QT += widgets
 
 target.path = $$[QT_INSTALL_BINS]
 INSTALLS += target
diff --git a/tools/qmltestrunner/main.cpp b/tools/qmltestrunner/main.cpp
index 8c7ad4c..09cfc7f 100644
--- a/tools/qmltestrunner/main.cpp
+++ b/tools/qmltestrunner/main.cpp
@@ -45,31 +45,7 @@
 #include <QtOpenGL/qgl.h>
 #endif
 
-#ifdef QT_OPENGL_LIB
-
-static QWidget *qmltestrunner_create_gl_viewport()
-{
-    return new QGLWidget();
-}
-
-#endif
-
 int main(int argc, char **argv)
 {
-#ifdef QT_OPENGL_LIB
-    bool isOpenGL = false;
-    for (int index = 1; index < argc; ++index) {
-        if (strcmp(argv[index], "-opengl") == 0) {
-            isOpenGL = true;
-            break;
-        }
-    }
-    if (isOpenGL) {
-        return quick_test_main(argc, argv, "qmltestrunner",
-                               qmltestrunner_create_gl_viewport, ".");
-    } else
-#endif
-    {
-        return quick_test_main(argc, argv, "qmltestrunner", 0, ".");
-    }
+    return quick_test_main(argc, argv, "qmltestrunner", ".");
 }
diff --git a/tools/tools.pro b/tools/tools.pro
index 186c7e9..70aebf4 100644
--- a/tools/tools.pro
+++ b/tools/tools.pro
@@ -1,6 +1,6 @@
 TEMPLATE = subdirs
-SUBDIRS +=  qmlscene qmlplugindump qmlmin qmleasing qmlprofiler easingcurveeditor
-
+SUBDIRS +=  qmlscene qmlplugindump qmlmin qmleasing qmlprofiler
+!contains(QT_CONFIG, no-widgets):SUBDIRS += easingcurveeditor
 contains(QT_CONFIG, qmltest): SUBDIRS += qmltestrunner