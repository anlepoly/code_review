diff --git a/src/designer/src/designer/qdesigner.cpp b/src/designer/src/designer/qdesigner.cpp
index 169b3f5..bd15422 100644
--- a/src/designer/src/designer/qdesigner.cpp
+++ b/src/designer/src/designer/qdesigner.cpp
@@ -69,15 +69,14 @@ QT_BEGIN_NAMESPACE
 
 static const char *designerApplicationName = "Designer";
 static const char *designerWarningPrefix = "Designer: ";
+static QMessageHandler previousMessageHandler = 0;
 
-static void designerMessageHandler(QtMsgType type, const char *msg)
+static void designerMessageHandler(QtMsgType type, const QMessageLogContext &context, const char *msg)
 {
     // Only Designer warnings are displayed as box
     QDesigner *designerApp = qDesigner;
     if (type != QtWarningMsg || !designerApp || qstrncmp(designerWarningPrefix, msg, qstrlen(designerWarningPrefix))) {
-        qInstallMsgHandler(0);
-        qt_message_output(type, msg);
-        qInstallMsgHandler (designerMessageHandler);
+        previousMessageHandler(type, context, msg);
         return;
     }
     designerApp->showErrorMessage(msg);
@@ -118,9 +117,8 @@ void QDesigner::showErrorMessage(const char *message)
     if (m_mainWindow) {
         showErrorMessageBox(qMessage);
     } else {
-        qInstallMsgHandler(0);
-        qt_message_output(QtWarningMsg, message); // just in case we crash
-        qInstallMsgHandler (designerMessageHandler);
+        const QMessageLogContext emptyContext;
+        previousMessageHandler(QtWarningMsg, emptyContext, message); // just in case we crash
         m_initializationErrors += qMessage;
         m_initializationErrors += QLatin1Char('\n');
     }
@@ -243,7 +241,8 @@ void QDesigner::initialize()
     m_workbench = new QDesignerWorkbench();
 
     emit initialized();
-    qInstallMsgHandler(designerMessageHandler); // Warn when loading faulty forms
+    previousMessageHandler = qInstallMessageHandler(designerMessageHandler); // Warn when loading faulty forms
+    Q_ASSERT(previousMessageHandler);
 
     m_suppressNewFormShow = m_workbench->readInBackup();
 
diff --git a/src/designer/src/lib/shared/dialoggui.cpp b/src/designer/src/lib/shared/dialoggui.cpp
index 2809284..325a8a9 100644
--- a/src/designer/src/lib/shared/dialoggui.cpp
+++ b/src/designer/src/lib/shared/dialoggui.cpp
@@ -234,7 +234,7 @@ QString DialogGui::getOpenImageFileName(QWidget *parent, const QString &caption,
         return QString();
 
     if (selectedFilter)
-        *selectedFilter =  fileDialog.selectedFilter();
+        *selectedFilter =  fileDialog.selectedNameFilter();
 
     return selectedFiles.front();
 #else
@@ -252,7 +252,7 @@ QStringList DialogGui::getOpenImageFileNames(QWidget *parent, const QString &cap
 
     const QStringList selectedFiles = fileDialog.selectedFiles();
     if (!selectedFiles.empty() && selectedFilter)
-        *selectedFilter =  fileDialog.selectedFilter();
+        *selectedFilter =  fileDialog.selectedNameFilter();
 
     return selectedFiles;
 #else
diff --git a/src/designer/src/lib/shared/previewconfigurationwidget.cpp b/src/designer/src/lib/shared/previewconfigurationwidget.cpp
index 7c6b489..99a0827 100644
--- a/src/designer/src/lib/shared/previewconfigurationwidget.cpp
+++ b/src/designer/src/lib/shared/previewconfigurationwidget.cpp
@@ -280,7 +280,7 @@ int  PreviewConfigurationWidget::PreviewConfigurationWidgetPrivate::browseSkin()
     dlg.setFileMode(QFileDialog::DirectoryOnly);
     const QString title = tr("Load Custom Device Skin");
     dlg.setWindowTitle(title);
-    dlg.setFilter(tr("All QVFB Skins (*.%1)").arg(QLatin1String(skinExtensionC)));
+    dlg.setNameFilter(tr("All QVFB Skins (*.%1)").arg(QLatin1String(skinExtensionC)));
 
     int rc = m_lastSkinIndex;
     do {