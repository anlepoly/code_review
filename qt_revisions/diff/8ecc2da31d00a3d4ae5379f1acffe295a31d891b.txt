diff --git a/dist/changes-5.0.0 b/dist/changes-5.0.0
index e870943..31d5a81 100644
--- a/dist/changes-5.0.0
+++ b/dist/changes-5.0.0
@@ -157,6 +157,8 @@ information about a particular change.
 
 - QTcpServer::incomingConnection() now takes a qintptr instead of an int.
 
+- QNetworkConfiguration::bearerName() removed, and bearerTypeName() should be used.
+
 
 ****************************************************************************
 *                           General                                        *
diff --git a/src/network/bearer/qnetworkconfiguration.cpp b/src/network/bearer/qnetworkconfiguration.cpp
index 150e1cf..87edc94 100644
--- a/src/network/bearer/qnetworkconfiguration.cpp
+++ b/src/network/bearer/qnetworkconfiguration.cpp
@@ -397,14 +397,6 @@ QList<QNetworkConfiguration> QNetworkConfiguration::children() const
 }
 
 /*!
-    \fn QString QNetworkConfiguration::bearerName() const
-    \deprecated
-
-    This function is deprecated.  It is equivalent to calling bearerTypeName(), however
-    bearerType() should be used in preference.
-*/
-
-/*!
     Returns the type of bearer used by this network configuration.
 
     If the bearer type is \l {QNetworkConfiguration::BearerUnknown}{unknown} the bearerTypeName()
diff --git a/src/network/bearer/qnetworkconfiguration.h b/src/network/bearer/qnetworkconfiguration.h
index 5b650d0..9a4d780 100644
--- a/src/network/bearer/qnetworkconfiguration.h
+++ b/src/network/bearer/qnetworkconfiguration.h
@@ -108,10 +108,6 @@ public:
     Type type() const;
     Purpose purpose() const;
 
-#ifdef QT_DEPRECATED
-    // Required to maintain source compatibility with Qt Mobility.
-    QT_DEPRECATED inline QString bearerName() const { return bearerTypeName(); }
-#endif
     BearerType bearerType() const;
     QString bearerTypeName() const;
 
diff --git a/tests/auto/network/bearer/qnetworksession/test/tst_qnetworksession.cpp b/tests/auto/network/bearer/qnetworksession/test/tst_qnetworksession.cpp
index 26bdec5..f60dfa6 100644
--- a/tests/auto/network/bearer/qnetworksession/test/tst_qnetworksession.cpp
+++ b/tests/auto/network/bearer/qnetworksession/test/tst_qnetworksession.cpp
@@ -273,17 +273,17 @@ void tst_QNetworkSession::sessionProperties()
                                                  << QLatin1String("WiMAX");
 
     if (!configuration.isValid()) {
-        QVERIFY(configuration.bearerName().isEmpty());
+        QVERIFY(configuration.bearerTypeName().isEmpty());
     } else {
         switch (configuration.type())
         {
             case QNetworkConfiguration::ServiceNetwork:
             case QNetworkConfiguration::UserChoice:
             default:
-                QVERIFY(configuration.bearerName().isEmpty());
+                QVERIFY(configuration.bearerTypeName().isEmpty());
                 break;
             case QNetworkConfiguration::InternetAccessPoint:
-                QVERIFY(validBearerNames.contains(configuration.bearerName()));
+                QVERIFY(validBearerNames.contains(configuration.bearerTypeName()));
                 break;
         }
     }
@@ -1016,15 +1016,15 @@ QNetworkConfiguration suitableConfiguration(QString bearerType, QNetworkConfigur
             discoveredConfigs.removeOne(config);
         } else if ((config.type() == QNetworkConfiguration::InternetAccessPoint) &&
                     bearerType == "cellular") { // 'cellular' bearertype is for convenience
-            if (config.bearerName() != "2G" &&
-                config.bearerName() != "CDMA2000" &&
-                config.bearerName() != "WCDMA" &&
-                config.bearerName() != "HSPA") {
+            if (config.bearerTypeName() != "2G" &&
+                config.bearerTypeName() != "CDMA2000" &&
+                config.bearerTypeName() != "WCDMA" &&
+                config.bearerTypeName() != "HSPA") {
                 // qDebug() << "Dumping config because bearer mismatches (cellular): " << config.name();
                 discoveredConfigs.removeOne(config);
             }
         } else if ((config.type() == QNetworkConfiguration::InternetAccessPoint) && 
-                    bearerType != config.bearerName()) {
+                    bearerType != config.bearerTypeName()) {
             // qDebug() << "Dumping config because bearer mismatches (WLAN): " << config.name();
             discoveredConfigs.removeOne(config);
         }