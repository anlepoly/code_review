diff --git a/src/dbus/qdbusutil.cpp b/src/dbus/qdbusutil.cpp
index 00141bb..39e6381 100644
--- a/src/dbus/qdbusutil.cpp
+++ b/src/dbus/qdbusutil.cpp
@@ -86,7 +86,7 @@ static bool variantToString(const QVariant &arg, QString &out)
     if (argType == QVariant::StringList) {
         out += QLatin1Char('{');
         QStringList list = arg.toStringList();
-        foreach (QString item, list)
+        foreach (const QString &item, list)
             out += QLatin1Char('\"') + item + QLatin1String("\", ");
         if (!list.isEmpty())
             out.chop(2);
@@ -104,7 +104,7 @@ static bool variantToString(const QVariant &arg, QString &out)
     } else if (argType == QVariant::List) {
         out += QLatin1Char('{');
         QList<QVariant> list = arg.toList();
-        foreach (QVariant item, list) {
+        foreach (const QVariant &item, list) {
             if (!variantToString(item, out))
                 return false;
             out += QLatin1String(", ");
diff --git a/src/gui/image/qimagereader.cpp b/src/gui/image/qimagereader.cpp
index 4cda730..9052187 100644
--- a/src/gui/image/qimagereader.cpp
+++ b/src/gui/image/qimagereader.cpp
@@ -605,7 +605,7 @@ void QImageReaderPrivate::getText()
 {
     if (!text.isEmpty() || (!handler && !initHandler()) || !handler->supportsOption(QImageIOHandler::Description))
         return;
-    foreach (QString pair, handler->option(QImageIOHandler::Description).toString().split(
+    foreach (const QString &pair, handler->option(QImageIOHandler::Description).toString().split(
                 QLatin1String("\n\n"))) {
         int index = pair.indexOf(QLatin1Char(':'));
         if (index >= 0 && pair.indexOf(QLatin1Char(' ')) < index) {
diff --git a/src/gui/text/qtextengine.cpp b/src/gui/text/qtextengine.cpp
index 11dded8..df1e153 100644
--- a/src/gui/text/qtextengine.cpp
+++ b/src/gui/text/qtextengine.cpp
@@ -2981,7 +2981,7 @@ void QTextEngine::drawItemDecorationList(QPainter *painter, const ItemDecoration
     if (decorationList.isEmpty())
         return;
 
-    foreach (const ItemDecoration decoration, decorationList) {
+    foreach (const ItemDecoration &decoration, decorationList) {
         painter->setPen(decoration.pen);
         QLineF line(decoration.x1, decoration.y, decoration.x2, decoration.y);
         painter->drawLine(line);
diff --git a/src/gui/text/qzip.cpp b/src/gui/text/qzip.cpp
index d1bc94a..b22b5ff 100644
--- a/src/gui/text/qzip.cpp
+++ b/src/gui/text/qzip.cpp
@@ -1052,7 +1052,7 @@ bool QZipReader::extractAll(const QString &destinationDir) const
 
     // create directories first
     QList<FileInfo> allFiles = fileInfoList();
-    foreach (FileInfo fi, allFiles) {
+    foreach (const FileInfo &fi, allFiles) {
         const QString absPath = destinationDir + QDir::separator() + fi.filePath;
         if (fi.isDir) {
             if (!baseDir.mkpath(fi.filePath))
@@ -1063,7 +1063,7 @@ bool QZipReader::extractAll(const QString &destinationDir) const
     }
 
     // set up symlinks
-    foreach (FileInfo fi, allFiles) {
+    foreach (const FileInfo &fi, allFiles) {
         const QString absPath = destinationDir + QDir::separator() + fi.filePath;
         if (fi.isSymLink) {
             QString destination = QFile::decodeName(fileData(fi.filePath));
@@ -1081,7 +1081,7 @@ bool QZipReader::extractAll(const QString &destinationDir) const
         }
     }
 
-    foreach (FileInfo fi, allFiles) {
+    foreach (const FileInfo &fi, allFiles) {
         const QString absPath = destinationDir + QDir::separator() + fi.filePath;
         if (fi.isFile) {
             QFile f(absPath);
diff --git a/src/network/access/qnetworkdiskcache.cpp b/src/network/access/qnetworkdiskcache.cpp
index 0a1d43f..4afca95 100644
--- a/src/network/access/qnetworkdiskcache.cpp
+++ b/src/network/access/qnetworkdiskcache.cpp
@@ -195,7 +195,7 @@ QIODevice *QNetworkDiskCache::prepare(const QNetworkCacheMetaData &metaData)
         return 0;
     }
 
-    foreach (QNetworkCacheMetaData::RawHeader header, metaData.rawHeaders()) {
+    foreach (const QNetworkCacheMetaData::RawHeader &header, metaData.rawHeaders()) {
         if (header.first.toLower() == "content-length") {
             qint64 size = header.second.toInt();
             if (size > (maximumCacheSize() * 3)/4)
@@ -636,7 +636,7 @@ bool QCacheItem::canCompress() const
 {
     bool sizeOk = false;
     bool typeOk = false;
-    foreach (QNetworkCacheMetaData::RawHeader header, metaData.rawHeaders()) {
+    foreach (const QNetworkCacheMetaData::RawHeader &header, metaData.rawHeaders()) {
         if (header.first.toLower() == "content-length") {
             qint64 size = header.second.toLongLong();
             if (size > MAX_COMPRESSION_SIZE)
diff --git a/src/network/kernel/qnetworkproxy_generic.cpp b/src/network/kernel/qnetworkproxy_generic.cpp
index bb3ae47..8d7e3b8 100644
--- a/src/network/kernel/qnetworkproxy_generic.cpp
+++ b/src/network/kernel/qnetworkproxy_generic.cpp
@@ -57,7 +57,7 @@ static bool ignoreProxyFor(const QNetworkProxyQuery &query)
 {
     const QList<QByteArray> noProxyTokens = qgetenv("no_proxy").split(',');
 
-    foreach (const QByteArray rawToken, noProxyTokens) {
+    foreach (const QByteArray &rawToken, noProxyTokens) {
         QByteArray token = rawToken.trimmed();
         QString peerHostName = query.peerHostName();
 
diff --git a/src/platformsupport/input/evdevkeyboard/qevdevkeyboardmanager.cpp b/src/platformsupport/input/evdevkeyboard/qevdevkeyboardmanager.cpp
index 4143d10..39d07bc 100644
--- a/src/platformsupport/input/evdevkeyboard/qevdevkeyboardmanager.cpp
+++ b/src/platformsupport/input/evdevkeyboard/qevdevkeyboardmanager.cpp
@@ -84,7 +84,7 @@ QEvdevKeyboardManager::QEvdevKeyboardManager(const QString &key, const QString &
         if (m_deviceDiscovery) {
             // scan and add already connected keyboards
             QStringList devices = m_deviceDiscovery->scanConnectedDevices();
-            foreach (QString device, devices) {
+            foreach (const QString &device, devices) {
                 addKeyboard(device);
             }
 
diff --git a/src/platformsupport/input/evdevmouse/qevdevmousemanager.cpp b/src/platformsupport/input/evdevmouse/qevdevmousemanager.cpp
index d8e9586..7d4a35b 100644
--- a/src/platformsupport/input/evdevmouse/qevdevmousemanager.cpp
+++ b/src/platformsupport/input/evdevmouse/qevdevmousemanager.cpp
@@ -90,7 +90,7 @@ QEvdevMouseManager::QEvdevMouseManager(const QString &key, const QString &specif
         if (m_deviceDiscovery) {
             // scan and add already connected keyboards
             QStringList devices = m_deviceDiscovery->scanConnectedDevices();
-            foreach (QString device, devices) {
+            foreach (const QString &device, devices) {
                 addMouse(device);
             }
 
diff --git a/src/plugins/bearer/connman/qconnmanengine.cpp b/src/plugins/bearer/connman/qconnmanengine.cpp
index 0e54668..453ebc7 100644
--- a/src/plugins/bearer/connman/qconnmanengine.cpp
+++ b/src/plugins/bearer/connman/qconnmanengine.cpp
@@ -82,7 +82,7 @@ void QConnmanEngine::initialize()
     connect(connmanManager,SIGNAL(propertyChangedContext(QString,QString,QDBusVariant)),
             this,SLOT(propertyChangedContext(QString,QString,QDBusVariant)));
 
-    foreach(const QString techPath, connmanManager->getTechnologies()) {
+    foreach (const QString &techPath, connmanManager->getTechnologies()) {
         QConnmanTechnologyInterface *tech;
         tech = new QConnmanTechnologyInterface(techPath, this);
 
@@ -90,7 +90,7 @@ void QConnmanEngine::initialize()
                 this,SLOT(technologyPropertyChangedContext(QString,QString,QDBusVariant)));
     }
 
-    foreach(const QString servPath, connmanManager->getServices()) {
+    foreach (const QString &servPath, connmanManager->getServices()) {
         addServiceConfiguration(servPath);
     }
 
@@ -157,7 +157,7 @@ void QConnmanEngine::connectToId(const QString &id)
             QOfonoManagerInterface ofonoManager(0);
             QString modemPath = ofonoManager.currentModem().path();
             QOfonoDataConnectionManagerInterface dc(modemPath,0);
-            foreach(const QDBusObjectPath dcPath,dc.getPrimaryContexts()) {
+            foreach (const QDBusObjectPath &dcPath,dc.getPrimaryContexts()) {
                 if(dcPath.path().contains(servicePath.section("_",-1))) {
                     QOfonoPrimaryDataContextInterface primaryContext(dcPath.path(),0);
                     primaryContext.setActive(true);
@@ -181,7 +181,7 @@ void QConnmanEngine::disconnectFromId(const QString &id)
             QOfonoManagerInterface ofonoManager(0);
             QString modemPath = ofonoManager.currentModem().path();
             QOfonoDataConnectionManagerInterface dc(modemPath,0);
-            foreach(const QDBusObjectPath dcPath,dc.getPrimaryContexts()) {
+            foreach (const QDBusObjectPath &dcPath,dc.getPrimaryContexts()) {
                 if(dcPath.path().contains(servicePath.section("_",-1))) {
                     QOfonoPrimaryDataContextInterface primaryContext(dcPath.path(),0);
                     primaryContext.setActive(false);
@@ -200,7 +200,7 @@ void QConnmanEngine::requestUpdate()
 QString QConnmanEngine::serviceFromId(const QString &id)
 {
     QMutexLocker locker(&mutex);
-    foreach(const QString service, serviceNetworks) {
+    foreach (const QString &service, serviceNetworks) {
         if (id == QString::number(qHash(service)))
             return service;
     }
@@ -315,7 +315,7 @@ void QConnmanEngine::propertyChangedContext(const QString &path,const QString &i
         QStringList list = qdbus_cast<QStringList>(arg);
 
         if(list.count() > accessPointConfigurations.count()) {
-            foreach(const QString service, list) {
+            foreach (const QString &service, list) {
                 addServiceConfiguration(service);
             }
         }
@@ -327,7 +327,7 @@ void QConnmanEngine::propertyChangedContext(const QString &path,const QString &i
         if(newlist.count() > 0) {
             QMap<QString,QConnmanTechnologyInterface *> oldtech = technologies;
 
-            foreach(const QString listPath, newlist) {
+            foreach (const QString &listPath, newlist) {
                 if(!oldtech.contains(listPath)) {
                     QConnmanTechnologyInterface *tech;
                     tech = new QConnmanTechnologyInterface(listPath,this);
@@ -461,10 +461,10 @@ QNetworkConfiguration::BearerType QConnmanEngine::ofonoTechToBearerType(const QS
     QOfonoNetworkRegistrationInterface ofonoNetwork(ofonoManager.currentModem().path(),this);
 
     if(ofonoNetwork.isValid()) {
-        foreach(const QDBusObjectPath op,ofonoNetwork.getOperators() ) {
+        foreach (const QDBusObjectPath &op,ofonoNetwork.getOperators() ) {
             QOfonoNetworkOperatorInterface opIface(op.path(),this);
 
-            foreach(const QString opTech, opIface.getTechnologies()) {
+            foreach (const QString &opTech, opIface.getTechnologies()) {
 
                 if(opTech == "gsm") {
                     return QNetworkConfiguration::Bearer2G;
@@ -492,7 +492,7 @@ bool QConnmanEngine::isRoamingAllowed(const QString &context)
     QOfonoManagerInterface ofonoManager(this);
     QString modemPath = ofonoManager.currentModem().path();
     QOfonoDataConnectionManagerInterface dc(modemPath,this);
-    foreach(const QDBusObjectPath dcPath,dc.getPrimaryContexts()) {
+    foreach (const QDBusObjectPath &dcPath,dc.getPrimaryContexts()) {
         if(dcPath.path().contains(context.section("_",-1))) {
             return dc.isRoamingAllowed();
         }
diff --git a/src/plugins/bearer/connman/qconnmanservice_linux.cpp b/src/plugins/bearer/connman/qconnmanservice_linux.cpp
index 83f9ff1..cd10f18 100644
--- a/src/plugins/bearer/connman/qconnmanservice_linux.cpp
+++ b/src/plugins/bearer/connman/qconnmanservice_linux.cpp
@@ -313,7 +313,7 @@ QStringList QConnmanManagerInterface::getServices()
 
 QString QConnmanManagerInterface::getPathForTechnology(const QString &name)
 {
-    foreach(const QString path, getTechnologies()) {
+    foreach (const QString &path, getTechnologies()) {
         if(path.contains(name)) {
             return path;
         }
diff --git a/src/plugins/bearer/connman/qofonoservice_linux.cpp b/src/plugins/bearer/connman/qofonoservice_linux.cpp
index 6e01029..54074a8 100644
--- a/src/plugins/bearer/connman/qofonoservice_linux.cpp
+++ b/src/plugins/bearer/connman/qofonoservice_linux.cpp
@@ -79,7 +79,7 @@ QList <QDBusObjectPath> QOfonoManagerInterface::getModems()
 QDBusObjectPath QOfonoManagerInterface::currentModem()
 {
     QList<QDBusObjectPath> modems = getModems();
-    foreach(const QDBusObjectPath modem, modems) {
+    foreach (const QDBusObjectPath &modem, modems) {
         QOfonoModemInterface device(modem.path());
         if(device.isPowered() && device.isOnline())
         return modem;;
diff --git a/src/testlib/qbenchmarkvalgrind.cpp b/src/testlib/qbenchmarkvalgrind.cpp
index 7adf8e4..e351367 100644
--- a/src/testlib/qbenchmarkvalgrind.cpp
+++ b/src/testlib/qbenchmarkvalgrind.cpp
@@ -141,7 +141,7 @@ QString QBenchmarkValgrindUtils::getNewestFileName()
     QFileInfo lastFileInfo;
     const QString pattern = QString::fromLatin1("%1.(\\d+)").arg(base);
     QRegExp rx(pattern);
-    foreach (QFileInfo fileInfo, fiList) {
+    foreach (const QFileInfo &fileInfo, fiList) {
         const int index = rx.indexIn(fileInfo.fileName());
         Q_ASSERT(index == 0);
         Q_UNUSED(index);
@@ -172,7 +172,7 @@ void QBenchmarkValgrindUtils::cleanup()
         << base // overall summary
         << QString::fromLatin1("%1.*").arg(base); // individual dumps
     QFileInfoList fiList = QDir().entryInfoList(nameFilters, QDir::Files | QDir::Readable);
-    foreach (QFileInfo fileInfo, fiList) {
+    foreach (const QFileInfo &fileInfo, fiList) {
         const bool removeOk = QFile::remove(fileInfo.fileName());
         Q_ASSERT(removeOk);
         Q_UNUSED(removeOk);
diff --git a/src/tools/qdbuscpp2xml/qdbuscpp2xml.cpp b/src/tools/qdbuscpp2xml/qdbuscpp2xml.cpp
index 60fd730..41756de 100644
--- a/src/tools/qdbuscpp2xml/qdbuscpp2xml.cpp
+++ b/src/tools/qdbuscpp2xml/qdbuscpp2xml.cpp
@@ -269,7 +269,7 @@ QString qDBusInterfaceFromClassDef(const ClassDef *mo)
 {
     QString interface;
 
-    foreach (ClassInfoDef cid, mo->classInfoList) {
+    foreach (const ClassInfoDef &cid, mo->classInfoList) {
         if (cid.name == QCLASSINFO_DBUS_INTERFACE)
             return QString::fromUtf8(cid.value);
     }
diff --git a/src/tools/qdbusxml2cpp/qdbusxml2cpp.cpp b/src/tools/qdbusxml2cpp/qdbusxml2cpp.cpp
index 2fbe38b..ef81aea 100644
--- a/src/tools/qdbusxml2cpp/qdbusxml2cpp.cpp
+++ b/src/tools/qdbusxml2cpp/qdbusxml2cpp.cpp
@@ -561,7 +561,7 @@ static void writeProxy(const QString &filename, const QDBusIntrospection::Interf
        << includeList
        << "#include <QtDBus/QtDBus>" << endl;
 
-    foreach (QString include, includes) {
+    foreach (const QString &include, includes) {
         hs << "#include \"" << include << "\"" << endl;
         if (headerName.isEmpty())
             cs << "#include \"" << include << "\"" << endl;
@@ -869,7 +869,7 @@ static void writeAdaptor(const QString &filename, const QDBusIntrospection::Inte
            << "#include <QtCore/QVariant>" << endl;
     hs << "#include <QtDBus/QtDBus>" << endl;
 
-    foreach (QString include, includes) {
+    foreach (const QString &include, includes) {
         hs << "#include \"" << include << "\"" << endl;
         if (headerName.isEmpty())
             cs << "#include \"" << include << "\"" << endl;
diff --git a/src/tools/qdoc/codeparser.cpp b/src/tools/qdoc/codeparser.cpp
index 1f82171..e811120 100644
--- a/src/tools/qdoc/codeparser.cpp
+++ b/src/tools/qdoc/codeparser.cpp
@@ -170,7 +170,7 @@ CodeParser *CodeParser::parserForHeaderFile(const QString &filePath)
     while (p != parsers.constEnd()) {
 
         QStringList headerPatterns = (*p)->headerFileNameFilter();
-        foreach (QString pattern, headerPatterns) {
+        foreach (const QString &pattern, headerPatterns) {
             QRegExp re(pattern, Qt::CaseInsensitive, QRegExp::Wildcard);
             if (re.exactMatch(fileName))
                 return *p;
@@ -188,7 +188,7 @@ CodeParser *CodeParser::parserForSourceFile(const QString &filePath)
     while (p != parsers.constEnd()) {
 
         QStringList sourcePatterns = (*p)->sourceFileNameFilter();
-        foreach (QString pattern, sourcePatterns) {
+        foreach (const QString &pattern, sourcePatterns) {
             QRegExp re(pattern, Qt::CaseInsensitive, QRegExp::Wildcard);
             if (re.exactMatch(fileName))
                 return *p;
diff --git a/src/tools/qdoc/generator.cpp b/src/tools/qdoc/generator.cpp
index b87e79b..762f115 100644
--- a/src/tools/qdoc/generator.cpp
+++ b/src/tools/qdoc/generator.cpp
@@ -1729,7 +1729,7 @@ void Generator::initialize(const Config &config)
 
     QStringList prefixes = config.getStringList(CONFIG_OUTPUTPREFIXES);
     if (!prefixes.isEmpty()) {
-        foreach (QString prefix, prefixes)
+        foreach (const QString &prefix, prefixes)
             outputPrefixes[prefix] = config.getString(
                         CONFIG_OUTPUTPREFIXES + Config::dot + prefix);
     } else
diff --git a/src/tools/qdoc/main.cpp b/src/tools/qdoc/main.cpp
index ec6a072..4099a6e 100644
--- a/src/tools/qdoc/main.cpp
+++ b/src/tools/qdoc/main.cpp
@@ -577,7 +577,7 @@ int main(int argc, char **argv)
     /*
       Main loop.
      */
-    foreach (QString qf, qdocFiles) {
+    foreach (const QString &qf, qdocFiles) {
         //qDebug() << "PROCESSING:" << qf;
         processQdocconfFile(qf);
     }
diff --git a/src/tools/rcc/main.cpp b/src/tools/rcc/main.cpp
index ad20b9e..a8c00f9 100644
--- a/src/tools/rcc/main.cpp
+++ b/src/tools/rcc/main.cpp
@@ -78,7 +78,7 @@ void dumpRecursive(const QDir &dir, QTextStream &out)
 {
     QFileInfoList entries = dir.entryInfoList(QDir::Files | QDir::Dirs | QDir::NoDotAndDotDot
                                               | QDir::NoSymLinks);
-    foreach (QFileInfo entry, entries) {
+    foreach (const QFileInfo &entry, entries) {
         if (entry.isDir()) {
             dumpRecursive(entry.filePath(), out);
         } else {
diff --git a/src/widgets/graphicsview/qgraphicsscene.cpp b/src/widgets/graphicsview/qgraphicsscene.cpp
index 07e94e0..c617e63 100644
--- a/src/widgets/graphicsview/qgraphicsscene.cpp
+++ b/src/widgets/graphicsview/qgraphicsscene.cpp
@@ -4547,7 +4547,7 @@ void QGraphicsScenePrivate::drawItemHelper(QGraphicsItem *item, QPainter *painte
                 for (int i = 0; i < exposed.size(); ++i)
                     br |= exposed.at(i);
                 QTransform pixmapToItem = itemToPixmap.inverted();
-                foreach (QRect r, scrollExposure.rects())
+                foreach (const QRect &r, scrollExposure.rects())
                     br |= pixmapToItem.mapRect(r);
             }
             styleOptionTmp = *option;