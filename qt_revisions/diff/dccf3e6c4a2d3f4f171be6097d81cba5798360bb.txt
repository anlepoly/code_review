diff --git a/examples/designer/arthurplugin/plugin.cpp b/examples/designer/arthurplugin/plugin.cpp
index e6c966b..185146b 100644
--- a/examples/designer/arthurplugin/plugin.cpp
+++ b/examples/designer/arthurplugin/plugin.cpp
@@ -271,6 +271,7 @@ class ArthurPlugins : public QObject, public QDesignerCustomWidgetCollectionInte
 {
     Q_OBJECT
     Q_INTERFACES(QDesignerCustomWidgetCollectionInterface)
+    Q_PLUGIN_METADATA(IID "org.qt-project.Qt.QDesignerCustomWidgetCollectionInterface")
 
 public:
     explicit ArthurPlugins(QObject *parent = 0);
@@ -293,4 +294,3 @@ ArthurPlugins::ArthurPlugins(QObject *parent) :
 
 #include "plugin.moc"
 
-Q_EXPORT_PLUGIN2(ArthurPlugins, ArthurPlugins)
diff --git a/src/designer/src/lib/uilib/customwidget.qdoc b/src/designer/src/lib/uilib/customwidget.qdoc
index 4be8265..06efc19 100644
--- a/src/designer/src/lib/uilib/customwidget.qdoc
+++ b/src/designer/src/lib/uilib/customwidget.qdoc
@@ -66,12 +66,11 @@
     construct and return an instance of a custom widget with the specified
     parent widget. 
 
-    In the implementation of the class you must remember to export
-    your custom widget plugin to \QD using the Q_EXPORT_PLUGIN2()
+    Exporting your custom widget plugin to \QD using the Q_PLUGIN_METADATA()
     macro. For example, if a library called \c libcustomwidgetplugin.so
     (on Unix) or \c libcustomwidget.dll (on Windows) contains a widget
     class called \c MyCustomWidget, we can export it by adding the
-    following line to the file containing the plugin implementation:
+    following line to the file containing the plugin header:
 
     \snippet doc/src/snippets/code/doc_src_qtdesigner.cpp 14
 
@@ -272,8 +271,8 @@
     \snippet doc/src/snippets/code/doc_src_qtdesigner.cpp 13
 
     Note that instead of exporting each custom widget plugin using the
-    Q_EXPORT_PLUGIN2() macro, you export the entire collection. The
-    Q_EXPORT_PLUGIN2() macro ensures that \QD can access and construct
+    Q_PLUGIN_METADATA() macro, you export the entire collection. The
+    Q_PLUGIN_METADATA() macro ensures that \QD can access and construct
     the custom widgets. Without this macro, there is no way for \QD to
     use them.
 
diff --git a/src/designer/src/plugins/tools/view3d/view3d_plugin.cpp b/src/designer/src/plugins/tools/view3d/view3d_plugin.cpp
index ad8df6d..993f930 100644
--- a/src/designer/src/plugins/tools/view3d/view3d_plugin.cpp
+++ b/src/designer/src/plugins/tools/view3d/view3d_plugin.cpp
@@ -114,5 +114,3 @@ void QView3DPlugin::removeFormWindow(QDesignerFormWindowInterface *formWindow)
 
     delete tool;
 }
-
-Q_EXPORT_PLUGIN2(view3d, QView3DPlugin)
diff --git a/src/designer/src/plugins/tools/view3d/view3d_plugin.h b/src/designer/src/plugins/tools/view3d/view3d_plugin.h
index a30b911..9d632f2 100644
--- a/src/designer/src/plugins/tools/view3d/view3d_plugin.h
+++ b/src/designer/src/plugins/tools/view3d/view3d_plugin.h
@@ -59,6 +59,7 @@ class VIEW3D_EXPORT QView3DPlugin : public QObject, public QDesignerFormEditorPl
 {
     Q_OBJECT
     Q_INTERFACES(QDesignerFormEditorPluginInterface)
+    Q_PLUGIN_METADATA(IID "org.qt-project.Qt.Designer.QDesignerFormEditorPluginInterface")
 
 public:
     QView3DPlugin();