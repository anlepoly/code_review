diff --git a/src/network/bearer/qnetworksession.cpp b/src/network/bearer/qnetworksession.cpp
index 21535e7..2012257 100644
--- a/src/network/bearer/qnetworksession.cpp
+++ b/src/network/bearer/qnetworksession.cpp
@@ -238,7 +238,7 @@ QT_BEGIN_NAMESPACE
     \fn void QNetworkSession::usagePoliciesChanged(UsagePolicies)
     \since 5.0
 
-    This signal is emitted when the usage policies in force are changed by the system.
+    This signal is emitted when the \a UsagePolicies in force are changed by the system.
 */
 
 /*!
diff --git a/src/network/doc/src/network-programming.qdoc b/src/network/doc/src/network-programming.qdoc
index 0a62a9e..0b3ee5a 100644
--- a/src/network/doc/src/network-programming.qdoc
+++ b/src/network/doc/src/network-programming.qdoc
@@ -148,13 +148,13 @@
     you use synchronous sockets only in non-GUI threads. When used
     synchronously, QTcpSocket doesn't require an event loop.
 
-    The \l{network/fortuneclient}{Fortune Client} and
-    \l{network/fortuneserver}{Fortune Server} examples show how to use
+    The \l{fortuneclient}{Fortune Client} and
+    \l{fortuneserver}{Fortune Server} examples show how to use
     QTcpSocket and QTcpServer to write TCP client-server
-    applications. See also \l{network/blockingfortuneclient}{Blocking
+    applications. See also \l{blockingfortuneclient}{Blocking
     Fortune Client} for an example on how to use a synchronous
     QTcpSocket in a separate thread (without using an event loop),
-    and \l{network/threadedfortuneserver}{Threaded Fortune Server}
+    and \l{threadedfortuneserver}{Threaded Fortune Server}
     for an example of a multithreaded TCP server with one thread per
     active client.
 
@@ -195,13 +195,13 @@
     \l{QUdpSocket::readyRead()}{readyRead()} signal. Call
     QUdpSocket::readDatagram() to read the datagram.
 
-    The \l{network/broadcastsender}{Broadcast Sender} and
-    \l{network/broadcastreceiver}{Broadcast Receiver} examples show how to
+    The \l{broadcastsender}{Broadcast Sender} and
+    \l{broadcastreceiver}{Broadcast Receiver} examples show how to
     write a UDP sender and a UDP receiver using Qt.
 
     QUdpSocket also supports multicasting. The
-    \l{network/multicastsender}{Multicast Sender} and
-    \l{network/multicastreceiver}{Multicast Receiver} examples show how to use
+    \l{multicastsender}{Multicast Sender} and
+    \l{multicastreceiver}{Multicast Receiver} examples show how to use
     write UDP multicast clients.
 
     \section1 Resolving Host Names using QHostInfo
diff --git a/src/network/socket/qabstractsocket.cpp b/src/network/socket/qabstractsocket.cpp
index 73b9b27..14691dd 100644
--- a/src/network/socket/qabstractsocket.cpp
+++ b/src/network/socket/qabstractsocket.cpp
@@ -151,7 +151,7 @@
     require an event loop and typically leads to simpler code.
     However, in a GUI application, blocking sockets should only be
     used in non-GUI threads, to avoid freezing the user interface.
-    See the \l network/fortuneclient and \l network/blockingfortuneclient
+    See the \l fortuneclient and \l blockingfortuneclient
     examples for an overview of both approaches.
 
     \note We discourage the use of the blocking functions together
diff --git a/src/network/socket/qlocalserver.cpp b/src/network/socket/qlocalserver.cpp
index 8284ae4..eda4c48 100644
--- a/src/network/socket/qlocalserver.cpp
+++ b/src/network/socket/qlocalserver.cpp
@@ -91,6 +91,7 @@ QT_BEGIN_NAMESPACE
     that support access permissions on the socket. Both GroupAccess and OtherAccess
     may vary slightly in meanings depending on the platform.
 
+    \value NoOptions No access restrictions have been set.
     \value UserAccessOption
     Access is restricted to the same user as the process that created the socket.
     \value GroupAccessOption
@@ -102,7 +103,7 @@ QT_BEGIN_NAMESPACE
     \value WorldAccessOption
     No access restrictions.
 
-    \sa SocketOptions
+    \sa socketOptions
 */
 
 
diff --git a/src/network/socket/qudpsocket.cpp b/src/network/socket/qudpsocket.cpp
index 925b1e7..f95fe2b 100644
--- a/src/network/socket/qudpsocket.cpp
+++ b/src/network/socket/qudpsocket.cpp
@@ -89,10 +89,10 @@
     to exchange datagrams without specifying the receiver for each
     datagram.
 
-    The \l{network/broadcastsender}{Broadcast Sender},
-    \l{network/broadcastreceiver}{Broadcast Receiver},
-    \l{network/multicastsender}{Multicast Sender}, and
-    \l{network/multicastreceiver}{Multicast Receiver} examples illustrate how
+    The \l{broadcastsender}{Broadcast Sender},
+    \l{broadcastreceiver}{Broadcast Receiver},
+    \l{multicastsender}{Multicast Sender}, and
+    \l{multicastreceiver}{Multicast Receiver} examples illustrate how
     to use QUdpSocket in applications.
 
     \sa QTcpSocket