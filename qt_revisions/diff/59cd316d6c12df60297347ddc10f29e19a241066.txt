diff --git a/src/gui/image/qimage.cpp b/src/gui/image/qimage.cpp
index 2c74804..71ec636 100644
--- a/src/gui/image/qimage.cpp
+++ b/src/gui/image/qimage.cpp
@@ -737,10 +737,9 @@ QImage::QImage()
     fill() to fill the image with an appropriate pixel value before
     drawing onto it with QPainter.
 */
-QImage::QImage(int width, int height, Format format, QColorProfile *profile)
+QImage::QImage(int width, int height, Format format)
     : QPaintDevice()
 {
-    Q_UNUSED(profile);
     d = QImageData::create(QSize(width, height), format, 0);
 }
 
@@ -753,10 +752,9 @@ QImage::QImage(int width, int height, Format format, QColorProfile *profile)
     fill() to fill the image with an appropriate pixel value before
     drawing onto it with QPainter.
 */
-QImage::QImage(const QSize &size, Format format, QColorProfile *profile)
+QImage::QImage(const QSize &size, Format format)
     : QPaintDevice()
 {
-    Q_UNUSED(profile);
     d = QImageData::create(size, format, 0);
 }
 
@@ -822,10 +820,9 @@ QImageData *QImageData::create(uchar *data, int width, int height,  int bpl, QIm
     initially empty and must be sufficiently expanded with
     setColorCount() or setColorTable() before the image is used.
 */
-QImage::QImage(uchar* data, int width, int height, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo, QColorProfile *profile)
+QImage::QImage(uchar* data, int width, int height, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo)
     : QPaintDevice()
 {
-    Q_UNUSED(profile);
     d = QImageData::create(data, width, height, 0, format, false, cleanupFunction, cleanupInfo);
 }
 
@@ -854,10 +851,9 @@ QImage::QImage(uchar* data, int width, int height, Format format, QImageCleanupF
     constructing a QImage from raw data, without the possibility of the raw
     data being changed.
 */
-QImage::QImage(const uchar* data, int width, int height, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo, QColorProfile *profile)
+QImage::QImage(const uchar* data, int width, int height, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo)
     : QPaintDevice()
 {
-    Q_UNUSED(profile);
     d = QImageData::create(const_cast<uchar*>(data), width, height, 0, format, true, cleanupFunction, cleanupInfo);
 }
 
@@ -878,10 +874,9 @@ QImage::QImage(const uchar* data, int width, int height, Format format, QImageCl
     initially empty and must be sufficiently expanded with
     setColorCount() or setColorTable() before the image is used.
 */
-QImage::QImage(uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo, QColorProfile *profile)
+QImage::QImage(uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo)
     :QPaintDevice()
 {
-    Q_UNUSED(profile);
     d = QImageData::create(data, width, height, bytesPerLine, format, false, cleanupFunction, cleanupInfo);
 }
 
@@ -911,10 +906,9 @@ QImage::QImage(uchar *data, int width, int height, int bytesPerLine, Format form
     data being changed.
 */
 
-QImage::QImage(const uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo, QColorProfile *profile)
+QImage::QImage(const uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction, void *cleanupInfo)
     :QPaintDevice()
 {
-    Q_UNUSED(profile);
     d = QImageData::create(const_cast<uchar*>(data), width, height, bytesPerLine, format, true, cleanupFunction, cleanupInfo);
 }
 
diff --git a/src/gui/image/qimage.h b/src/gui/image/qimage.h
index 60aebac..eafd7eb 100644
--- a/src/gui/image/qimage.h
+++ b/src/gui/image/qimage.h
@@ -63,8 +63,6 @@ class QStringList;
 class QMatrix;
 class QTransform;
 class QVariant;
-class QColorProfile;
-
 template <class T> class QList;
 template <class T> class QVector;
 
@@ -130,12 +128,12 @@ public:
     };
 
     QImage();
-    QImage(const QSize &size, Format format, QColorProfile *profile = 0);
-    QImage(int width, int height, Format format, QColorProfile *profile = 0);
-    QImage(uchar *data, int width, int height, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0, QColorProfile *profile = 0);
-    QImage(const uchar *data, int width, int height, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0, QColorProfile *profile = 0);
-    QImage(uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0, QColorProfile *profile = 0);
-    QImage(const uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0, QColorProfile *profile = 0);
+    QImage(const QSize &size, Format format);
+    QImage(int width, int height, Format format);
+    QImage(uchar *data, int width, int height, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0);
+    QImage(const uchar *data, int width, int height, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0);
+    QImage(uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0);
+    QImage(const uchar *data, int width, int height, int bytesPerLine, Format format, QImageCleanupFunction cleanupFunction = 0, void *cleanupInfo = 0);
 
 #ifndef QT_NO_IMAGEFORMAT_XPM
     explicit QImage(const char * const xpm[]);