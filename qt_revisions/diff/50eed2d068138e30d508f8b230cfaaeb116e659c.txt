diff --git a/src/gui/accessible/qaccessible.cpp b/src/gui/accessible/qaccessible.cpp
index 7fc01c7..ba6e0ef 100644
--- a/src/gui/accessible/qaccessible.cpp
+++ b/src/gui/accessible/qaccessible.cpp
@@ -126,6 +126,8 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QAccessible::State
 
+    \inmodule QtGui
+
     This structure defines bit flags that indicate
     the state of an accessible object. The values are:
 
diff --git a/src/gui/accessible/qaccessible2.cpp b/src/gui/accessible/qaccessible2.cpp
index da053db..4127562 100644
--- a/src/gui/accessible/qaccessible2.cpp
+++ b/src/gui/accessible/qaccessible2.cpp
@@ -62,6 +62,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QAccessibleTextInterface
     \internal
+    \inmodule QtGui
 
     \ingroup accessibility
 
@@ -182,6 +183,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QAccessibleEditableTextInterface
     \ingroup accessibility
+    \inmodule QtGui
     \internal
 
     \brief The QAccessibleEditableTextInterface class implements support for objects with editable text.
@@ -249,6 +251,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QAccessibleSimpleEditableTextInterface
+    \inmodule QtGui
     \ingroup accessibility
     \internal
 
@@ -262,6 +265,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QAccessibleValueInterface
+    \inmodule QtGui
     \ingroup accessibility
     \internal
 
@@ -315,6 +319,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QAccessibleImageInterface
+    \inmodule QtGui
     \ingroup accessibility
     \internal
     \preliminary
@@ -327,6 +332,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QAccessibleTableCellInterface
+    \inmodule QtGui
     \ingroup accessibility
     \internal
 
diff --git a/src/gui/doc/src/coordsys.qdoc b/src/gui/doc/src/coordsys.qdoc
index bfa046f..c0e33c9 100644
--- a/src/gui/doc/src/coordsys.qdoc
+++ b/src/gui/doc/src/coordsys.qdoc
@@ -42,12 +42,12 @@
     painter uses to draw onto different types of devices.
 
     The QPaintDevice class is the base class of objects that can be
-    painted: Its drawing capabilities are inherited by the QWidget,
-    QPixmap, QPicture, QImage, and QPrinter classes. The default
-    coordinate system of a paint device has its origin at the top-left
-    corner. The \e x values increase to the right and the \e y values
-    increase downwards. The default unit is one pixel on pixel-based
-    devices and one point (1/72 of an inch) on printers.
+    painted: Its drawing capabilities are inherited by the
+    QOpenGLPaintDevice, QImage, QPixmap and QPicture classes. The
+    default coordinate system of a paint device has its origin at the
+    top-left corner. The \e x values increase to the right and the \e
+    y values increase downwards. The default unit is one pixel on
+    pixel-based devices and one point (1/72 of an inch) on printers.
 
     The mapping of the logical QPainter coordinates to the physical
     QPaintDevice coordinates are handled by QPainter's transformation
@@ -195,12 +195,10 @@
     \endtable
 
     You can also twist the coordinate system around the origin using
-    the QPainter::shear() function. See the \l {painting/affine}{Affine
-    Transformations} example for a visualization of a sheared coordinate
-    system. All the transformation operations operate on QPainter's
-    transformation matrix that you can retrieve using the
-    QPainter::worldTransform() function. A matrix transforms a point
-    in the plane to another point.
+    the QPainter::shear() function. All the transformation operations
+    operate on QPainter's transformation matrix that you can retrieve
+    using the QPainter::worldTransform() function. A matrix transforms
+    a point in the plane to another point.
 
     If you need the same transformations over and over, you can also
     use QTransform objects and the QPainter::worldTransform() and
@@ -225,12 +223,6 @@
     The Analog Clock example shows how to draw the contents of a
     custom widget using QPainter's transformation matrix.
 
-    Qt's example directory provides a complete walk-through of the
-    example. Here, we will only review the example's \l
-    {QWidget::paintEvent()}{paintEvent()} function to see how we can
-    use the transformation matrix (i.e. QPainter's matrix functions)
-    to draw the clock's face.
-
     We recommend compiling and running this example before you read
     any further. In particular, try resizing the window to different
     sizes.
@@ -283,15 +275,6 @@
     painting so that doesn't matter.
     \endtable
 
-    For a demonstation of Qt's ability to perform affine
-    transformations on painting operations, see the \l
-    {painting/affine}{Affine Transformations} example which allows the user
-    to experiment with the transformation operations.  See also the \l
-    {painting/transformations}{Transformations} example which shows
-    how transformations influence the way that QPainter renders
-    graphics primitives. In particular, it shows how the order of
-    transformations affects the result.
-
     For more information about the transformation matrix, see the
     QTransform documentation.
 
@@ -457,5 +440,9 @@
     \endtable
     \endomit
 
-    \sa {Analog Clock Example}, {Transformations Example}
+    \sa {Analog Clock Example}
 */
+
+/*
+    ### DOC-TODO: rewrite analog clock to be QWindow based
+ */
\ No newline at end of file
diff --git a/src/gui/doc/src/paintsystem.qdoc b/src/gui/doc/src/paintsystem.qdoc
index 0864c3b..ea0a3bd 100644
--- a/src/gui/doc/src/paintsystem.qdoc
+++ b/src/gui/doc/src/paintsystem.qdoc
@@ -78,8 +78,6 @@
         \li \l{Drawing and Filling}
         \li \l{Coordinate System}
         \li \l{Reading and Writing Image Files}
-        \li \l{Styling}
-        \li \l{Printing with Qt}
     \endlist
 
     \section1 Classes for Painting
@@ -88,11 +86,6 @@
 
     \annotatedlist painting
 
-    Alternatively, Qt provides the QtOpenGL module, offering classes
-    that makes it easy to use OpenGL in Qt applications. Among others,
-    the module provides an OpenGL widget class that can be used just
-    like any other Qt widget, except that it opens an OpenGL display
-    buffer where the OpenGL API can be used to render the contents.
 */
 
 
@@ -108,18 +101,12 @@
     The QPaintDevice class is the base class of objects that can be
     painted, i.e. QPainter can draw on any QPaintDevice
     subclass. QPaintDevice's drawing capabilities are currently
-    implemented by the QWidget, QImage, QPixmap, QGLWidget,
-    QGLPixelBuffer, QPicture and QPrinter subclasses.
+    implemented by the QImage, QPixmap, QGLPixelBuffer, QPicture and
+    QPrinter subclasses.
 
     \image paintsystem-devices.png
 
     \table 100%
-    \row \li \b Widget
-
-    The QWidget class is the base class of all user interface
-    objects. The widget is the atom of the user interface: it receives
-    mouse, keyboard and other events from the window system, and
-    paints a representation of itself on the screen.
 
     \row \li \b Image
 
@@ -152,40 +139,13 @@
     Qt also provides the QBitmap convenience class, inheriting
     QPixmap. QBitmap guarantees monochrome (1-bit depth) pixmaps, and
     is mainly used for creating custom QCursor and QBrush objects,
-    constructing QRegion objects, and for setting masks for pixmaps
-    and widgets.
-
-    \row \li \b {OpenGL Widget}
-
-    As mentioned previously, Qt provides the QtOpenGL module offering
-    classes that makes it easy to use OpenGL in Qt applications. For
-    example, the QGLWidget enables the OpenGL API for
-    rendering.
-
-    But QGLWidget is also a QWidget subclass, and can be used by
-    QPainter as any other paint device. One huge benefit from this is
-    that it enables Qt to utilize the high performance of OpenGL for
-    most drawing operations, such as transformations and pixmap
-    drawing.
-
-    \row \li \b {Pixel Buffer}
+    constructing QRegion objects.
 
-    The QtOpenGL module also provides the QGLPixelBuffer class which
-    inherits QPaintDevice directly.
+    \row \li \b {OpenGL Paint Device}
 
-    QGLPixelBuffer encapsulates an OpenGL pbuffer. Rendering into a
-    pbuffer is normally done using full hardware acceleration which
-    can be significantly faster than rendering into a QPixmap.
-
-    \row \li \b {Framebuffer Object}
-
-    The QtOpenGL module also provides the QGLFramebufferObject class
-    which inherits QPaintDevice directly.
-
-    QGLFramebufferObject encapsulates an OpenGL framebuffer object.
-    Framebuffer objects can also be used for off-screen rendering, and
-    offer several advantages over pixel buffers for this purpose.
-    These are described in the QGLFramebufferObject class documentation.
+    As mentioned previously, Qt is offering classes that makes it easy
+    to use OpenGL in Qt applications. For example, the QOpenGLPaintDevice
+    enables the OpenGL API for rendering with QPainter.
 
     \row \li \b {Picture}
 
@@ -199,23 +159,7 @@
     Qt provides the QPicture::load() and QPicture::save() functions
     as well as streaming operators for loading and saving pictures.
 
-    \row \li \b {Printer}
-
-    The QPrinter class is a paint device that paints on a printer. On
-    Windows or Mac OS X, QPrinter uses the built-in printer
-    drivers. On X11, QPrinter generates postscript and sends that to
-    lpr, lp, or another print program. QPrinter can also print to any
-    other QPrintEngine object.
-
-    The QPrintEngine class defines an interface for how QPrinter
-    interacts with a given printing subsystem. The common case when
-    creating your own print engine, is to derive from both
-    QPaintEngine and QPrintEngine.
 
-    The output format is by default determined by the platform the
-    printer is running on, but by explicitly setting the output format
-    to QPrinter::PdfFormat, QPrinter will generate its output as a PDF
-    file.
 
     \row \li \b {Custom Backends}
 
@@ -229,43 +173,6 @@
     
     \endtable
 
-    \section1 Selecting the Painting Backend
-
-    Since Qt 4.5, it is possible to replace the paint engines and paint
-    devices used for widgets, pixmaps and the offscreen double buffer. By
-    default the backends are:
-
-    \table
-        \row
-            \li Windows
-            \li Software Rasterizer
-        \row
-            \li X11
-            \li X11
-        \row
-            \li Mac OS X
-            \li CoreGraphics
-        \row
-            \li Embedded
-            \li Software Rasterizer
-    \endtable
-
-    Passing a command line parameter to the application, such as,
-    \c{-graphicssystem raster}, specifies that Qt should use the software
-    rasterizer for this application. The Software rasterizer is fully
-    supported on all platforms.
-
-    \code
-      > analogclock -graphicssystem raster
-    \endcode
-
-    There is also a \c{-graphicssystem opengl} mode that uses OpenGL for
-    all drawing. Currently, this engine is experimental as it does not draw
-    everything correctly.
-
-    Qt also supports being configured using \c {-graphicssystem
-    raster|opengl} in which case all applications will use the
-    specified graphics system for its graphics.
 */
 
 /*!
@@ -360,12 +267,6 @@
     colors are mapped to hardware using the QColormap class). For more
     information, see the QColor class documentation.
 
-    When creating a new widget, it is recommend to use the colors in
-    the widget's palette rather than hard-coding specific colors. All
-    widgets in Qt contain a palette and use their palette to draw
-    themselves. A widget's palette is represented by the QPalette
-    class which contains color groups for each widget state.
-
     The available fill patterns are described by the Qt::BrushStyle
     enum. These include basic patterns spanning from uniform color to
     very sparse pattern, various line combinations, gradient fills and
@@ -398,7 +299,6 @@
 
     \previouspage Coordinate System
     \contentspage The Paint System
-    \nextpage Styling
 
     The most common way to read images is through QImage and QPixmap's
     constructors, or by calling the QImage::load() and QPixmap::load()
@@ -446,71 +346,3 @@
     and start using it.
 */
 
-/*!
-    \page paintsystem-styling.html
-    \title Styling
-
-    \previouspage Reading and Writing Image Files
-    \contentspage The Paint System
-    \nextpage Printing with Qt
-
-    Qt's built-in widgets use the QStyle class to perform nearly all
-    of their drawing.  QStyle is an abstract base class that
-    encapsulates the look and feel of a GUI, and can be used to make
-    the widgets look exactly like the equivalent native widgets or to
-    give the widgets a custom look.
-
-    Qt provides a set of QStyle subclasses that emulate the native
-    look of the different platforms supported by Qt (QWindowsStyle,
-    QMacStyle, QMotifStyle, etc.). These styles are built into the
-    QtGui library, other styles can be made available using Qt's
-    plugin mechansim.
-
-    Most functions for drawing style elements take four arguments:
-
-    \list
-    \li an enum value specifying which graphical element to draw
-    \li a QStyleOption object specifying how and where to render that element
-    \li a QPainter object that should be used to draw the element
-    \li a QWidget object on which the drawing is performed (optional)
-    \endlist
-
-    The style gets all the information it needs to render the
-    graphical element from the QStyleOption class. The widget is
-    passed as the last argument in case the style needs it to perform
-    special effects (such as animated default buttons on Mac OS X),
-    but it isn't mandatory. In fact, QStyle can be used to draw on any
-    paint device (not just widgets), in which case the widget argument
-    is a zero pointer.
-
-    \image paintsystem-stylepainter.png
-
-    The paint system also provides the QStylePainter class inheriting
-    from QPainter.  QStylePainter is a convenience class for drawing
-    QStyle elements inside a widget, and extends QPainter with a set
-    of high-level drawing functions implemented on top of QStyle's
-    API. The advantage of using QStylePainter is that the parameter
-    lists get considerably shorter.
-
-    \table 100%
-    \row
-    \li \inlineimage paintsystem-icon.png
-    \li \b QIcon
-
-    The QIcon class provides scalable icons in different modes and states.
-
-    QIcon can generate pixmaps reflecting an icon's state, mode and
-    size. These pixmaps are generated from the set of pixmaps
-    made available to the icon, and are used by Qt widgets to show an
-    icon representing a particular action.
-
-    The rendering of a QIcon object is handled by the QIconEngine
-    class. Each icon has a corresponding icon engine that is
-    responsible for drawing the icon with a requested size, mode and
-    state.
-
-    \endtable
-    
-    For more information about widget styling and appearance, see the
-    \l{Styles and Style Aware Widgets}.
-*/
diff --git a/src/gui/doc/src/qtgui.qdoc b/src/gui/doc/src/qtgui.qdoc
index 7e11aa5..64d9cb6 100644
--- a/src/gui/doc/src/qtgui.qdoc
+++ b/src/gui/doc/src/qtgui.qdoc
@@ -27,13 +27,138 @@
 
 /*!
     \module QtGui
-    \title QtGui Module
+    \title The Qt GUI Module
     \ingroup modules
 
-    \brief The QtGui module extends QtCore with GUI functionality.
+    \brief The Qt GUI module provides the basic enablers for graphical
+    applications written with Qt.
 
-    To include the definitions of both modules' classes, use the
+    The Qt GUI module provides classes for windowing system
+    integration, event handling, OpenGL and OpenGL ES integration, 2D
+    graphics, imaging, fonts and typography. These classes are used
+    internally by Qt's user interface technologies and can also be
+    used directly, for instance to write applications using low-level
+    OpenGL ES graphics APIs.
+
+    To include the definitions of the module's classes, use the
     following directive:
 
     \snippet code/doc_src_qtgui.pro 0
+
+    See the \l {Qt GUI Module Overview} for more details.
+
+*/
+
+/*!
+    \page qtgui-overview.html
+    \title Qt GUI Module Overview
+
+    The Qt GUI module provides classes for windowing system
+    integration, event handling, OpenGL and OpenGL ES integration, 2D
+    graphics, basic imaging, fonts and text. These classes are used
+    internally by Qt's user interface technologies and can also be
+    used directly, for instance to write applications using low-level
+    OpenGL ES graphics APIs.
+
+    For application developers writing user interfaces, Qt provides
+    higher level API's, like Qt Quick, that are much more suitable
+    than the enablers found in the Qt GUI module. 
+
+
+    
+    \section1 Application Windows
+
+    The most important classes in the Qt GUI module are
+    QGuiApplication and QWindow. A Qt application that wants to show
+    content on screen, will need to make use of these. QGuiApplication
+    contains the main event loop, where all events from the window
+    system and other sources are processed and dispatched. It also
+    handles the application's initialization and finalization. 
+
+    The \l QWindow class represents a window in the underlying
+    windowing system. It provides a number of virtual functions to
+    handle events (\l {QEvent}) from the windowing system, such as
+    touch-input, exposure, focus, key strokes and geometry changes.
+
+
+
+    \section1 2D Graphics
+ 
+    The Qt GUI module contains classes for 2D graphics, imaging, fonts
+    and advanced typography.
+    
+    A \l QWindow created with the surface type \l
+    {QSurface::RasterSurface} can be used in combination with \l
+    {QBackingStore} and \l {QPainter}, Qt's highly optimized 2D vector
+    graphics API. QPainter supports drawing lines, polygons, vector
+    paths, images and text. For more information, see \l{Paint
+    System}.
+
+    Qt can load and save images using the \l QImage and \l QPixmap
+    classes. By default, Qt supports the most common image formats
+    including JPEG and PNG among others. Users can add support for
+    additional formats via the \l QImageIOPlugin class. For more
+    information, see \l {Reading and Writing Image Files}
+
+    Typography in Qt is done with \l QTextDocument which uses the \l
+    QPainter API in combination with Qt's font classes, primarily
+    QFont. Applications that prefer more low-level APIs  to text
+    and font handling, classes like QRawFont and QGlyphRun can be
+    used.
+
+
+
+    \section1 OpenGL and OpenGL ES integration
+    
+    QWindow supports rendering using desktop OpenGL, OpenGL ES 1.1 and
+    OpenGL ES 2.0, depending on what the platform supports. OpenGL
+    rendering is enabled by setting the QWindow's surface type to
+    QSurface::OpenGLSurface, then creating a QOpenGLContext to manage
+    the native OpenGL context.
+
+    For more information, see \l {OpenGL Enablers}.
+
+    The Qt GUI module also contains a few math classes to aid with the
+    most common mathmatical operations related to 3D graphics. These
+    classes include \l {QMatrix4x4}, \l {QVector4D} and \l {QQuaternion}
+
+    A \l {QWindow} created with the \l {QSurface::OpenGLSurface} can
+    be used in combination with \l QPainter and \l QOpenGLPaintDevice
+    to have OpenGL hardware accellerated 2D graphics, by sacrificing
+    some of the visual quality.
+    
+
+
+
+    \section1 Qt GUI prior to Qt 5.0
+
+    Prior to Qt 5.0, the Qt GUI library was the monolithic container
+    for all things relating to graphical user interfaces in Qt, and
+    included the Qt widget set, the item views, the graphics view
+    framework and also printing. Starting Qt 5, these classes have
+    been moved to the QtWidgets library. Printing has been
+    moved to the QtPrintSupport library.  Please note that these
+    libraries can be excluded from a Qt installation.
+
+    QtGui now contains only a small set of enablers, which are generally
+    useful for all graphical applications.
+
+ */
+
+
+/*
+
+    ### DOC-TODO: link under AppWindows to hello-world for QWindow in
+        examples/gui/windows/hello-qtgui. (Idea: QWindow which
+        reimplements mouseEvent() to exit)
+
+    ### DOC-TODO: link under Painting to hello-raster for QWindow
+        in examples/gui/graphics/rasterwindow. Idea: QWindow with BS
+        which draws a rotating rectangle with some text underneath.
+
+    ### DOC-TODO: link under OpenGL to hello-opengl for QWindow in
+        examples/gui/opengl/openglwindow. Idea: QWindow which draws a
+        triangle using GLES 2.0 compatible shaders. Do not care about
+        1.1 API as almost everyone has 2.0 support these days.
+
 */
diff --git a/src/gui/image/qbitmap.cpp b/src/gui/image/qbitmap.cpp
index 837e5d0..59756d8 100644
--- a/src/gui/image/qbitmap.cpp
+++ b/src/gui/image/qbitmap.cpp
@@ -52,6 +52,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QBitmap
+    \inmodule QtGui
     \brief The QBitmap class provides monochrome (1-bit depth) pixmaps.
 
     \ingroup painting
diff --git a/src/gui/image/qimage.cpp b/src/gui/image/qimage.cpp
index 0b33010..8536e59 100644
--- a/src/gui/image/qimage.cpp
+++ b/src/gui/image/qimage.cpp
@@ -266,6 +266,7 @@ bool QImageData::checkForAlphaPixels() const
 /*!
     \class QImage
 
+    \inmodule QtGui
     \ingroup painting
     \ingroup shared
 
diff --git a/src/gui/image/qimageiohandler.cpp b/src/gui/image/qimageiohandler.cpp
index 9a82056..fcf2dd4 100644
--- a/src/gui/image/qimageiohandler.cpp
+++ b/src/gui/image/qimageiohandler.cpp
@@ -44,6 +44,7 @@
     \brief The QImageIOHandler class defines the common image I/O
     interface for all image formats in Qt.
     \reentrant
+    \inmodule QtGui
 
     Qt uses QImageIOHandler for reading and writing images through
     QImageReader and QImageWriter. You can also derive from this class
@@ -160,6 +161,7 @@
 
 /*!
     \class QImageIOPlugin
+    \inmodule QtGui
     \brief The QImageIOPlugin class defines an interface for writing
     an image format plugin.
     \reentrant
diff --git a/src/gui/image/qimagereader.cpp b/src/gui/image/qimagereader.cpp
index 9052187..67a23df 100644
--- a/src/gui/image/qimagereader.cpp
+++ b/src/gui/image/qimagereader.cpp
@@ -46,6 +46,7 @@
     \brief The QImageReader class provides a format independent interface
     for reading images from files or other devices.
 
+    \inmodule QtGui
     \reentrant
     \ingroup painting
     \ingroup io
diff --git a/src/gui/image/qimagewriter.cpp b/src/gui/image/qimagewriter.cpp
index c1b7a64..ba647b7 100644
--- a/src/gui/image/qimagewriter.cpp
+++ b/src/gui/image/qimagewriter.cpp
@@ -44,6 +44,7 @@
     \brief The QImageWriter class provides a format independent interface
     for writing images to files or other devices.
 
+    \inmodule QtGui
     \reentrant
     \ingroup painting
     \ingroup io
diff --git a/src/gui/image/qmovie.cpp b/src/gui/image/qmovie.cpp
index e1ddcf1..8d3c6d3 100644
--- a/src/gui/image/qmovie.cpp
+++ b/src/gui/image/qmovie.cpp
@@ -42,11 +42,11 @@
 /*! 
     \class QMovie
 
+    \inmodule QtGui
+
     \brief The QMovie class is a convenience class for playing movies
     with QImageReader.
 
-    \ingroup painting
-
     This class is used to show simple animations without sound. If you want
     to display video and media content, use the \l{Phonon Module}{Phonon}
     multimedia framework instead.
diff --git a/src/gui/image/qpicture.cpp b/src/gui/image/qpicture.cpp
index eaf8f8f..47a483a 100644
--- a/src/gui/image/qpicture.cpp
+++ b/src/gui/image/qpicture.cpp
@@ -71,7 +71,7 @@ void qt_format_text(const QFont &fnt, const QRectF &_r,
     \brief The QPicture class is a paint device that records and
     replays QPainter commands.
 
-    \ingroup painting
+    \inmodule QtGui
     \ingroup shared
 
 
diff --git a/src/gui/image/qpixmap.cpp b/src/gui/image/qpixmap.cpp
index 4cdf611..183c136 100644
--- a/src/gui/image/qpixmap.cpp
+++ b/src/gui/image/qpixmap.cpp
@@ -1192,6 +1192,7 @@ QPixmap QPixmap::transformed(const QMatrix &matrix, Qt::TransformationMode mode)
 
 /*!
     \class QPixmap
+    \inmodule QtGui
 
     \brief The QPixmap class is an off-screen image representation
     that can be used as a paint device.
diff --git a/src/gui/image/qpixmapcache.cpp b/src/gui/image/qpixmapcache.cpp
index b0e5b7e..f6c3a88 100644
--- a/src/gui/image/qpixmapcache.cpp
+++ b/src/gui/image/qpixmapcache.cpp
@@ -49,11 +49,10 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QPixmapCache
+    \inmodule QtGui
 
     \brief The QPixmapCache class provides an application-wide cache for pixmaps.
 
-    \ingroup painting
-
     This class is a tool for optimized drawing with QPixmap. You can
     use it to store temporary pixmaps that are expensive to generate
     without using more storage space than cacheLimit(). Use insert()
@@ -97,6 +96,7 @@ static int cache_limit = 10240; // 10 MB cache limit for desktop
     \class QPixmapCache::Key
     \brief The QPixmapCache::Key class can be used for efficient access
     to the QPixmapCache.
+    \inmodule QtGui
     \since 4.6
 
     Use QPixmapCache::insert() to receive an instance of Key generated
diff --git a/src/gui/kernel/qclipboard.cpp b/src/gui/kernel/qclipboard.cpp
index 3ac7fbb..c551e98 100644
--- a/src/gui/kernel/qclipboard.cpp
+++ b/src/gui/kernel/qclipboard.cpp
@@ -55,6 +55,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QClipboard
     \brief The QClipboard class provides access to the window system clipboard.
+    \inmodule QtGui
 
     The clipboard offers a simple mechanism to copy and paste data
     between applications.
diff --git a/src/gui/kernel/qcursor.cpp b/src/gui/kernel/qcursor.cpp
index 26a36a6..a52eb46 100644
--- a/src/gui/kernel/qcursor.cpp
+++ b/src/gui/kernel/qcursor.cpp
@@ -59,6 +59,7 @@ QT_BEGIN_NAMESPACE
     \brief The QCursor class provides a mouse cursor with an arbitrary
     shape.
 
+    \inmodule QtGui
     \ingroup appearance
     \ingroup shared
 
diff --git a/src/gui/kernel/qdrag.cpp b/src/gui/kernel/qdrag.cpp
index e20401c..fc53474 100644
--- a/src/gui/kernel/qdrag.cpp
+++ b/src/gui/kernel/qdrag.cpp
@@ -51,6 +51,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QDrag
+    \inmodule QtGui
     \brief The QDrag class provides support for MIME-based drag and drop data
     transfer.
 
diff --git a/src/gui/kernel/qevent.cpp b/src/gui/kernel/qevent.cpp
index 0ea32f3..abd6baf 100644
--- a/src/gui/kernel/qevent.cpp
+++ b/src/gui/kernel/qevent.cpp
@@ -58,6 +58,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QInputEvent
     \ingroup events
+    \inmodule QtGui
 
     \brief The QInputEvent class is the base class for events that
     describe user input.
@@ -450,6 +451,7 @@ QHoverEvent::~QHoverEvent()
 /*!
     \class QWheelEvent
     \brief The QWheelEvent class contains parameters that describe a wheel event.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -944,6 +946,7 @@ bool QKeyEvent::matches(QKeySequence::StandardKey matchKey) const
     \class QFocusEvent
     \brief The QFocusEvent class contains event parameters for widget focus
     events.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1005,6 +1008,7 @@ Qt::FocusReason QFocusEvent::reason() const
 /*!
     \class QPaintEvent
     \brief The QPaintEvent class contains event parameters for paint events.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1076,6 +1080,7 @@ QPaintEvent::~QPaintEvent()
 /*!
     \class QMoveEvent
     \brief The QMoveEvent class contains event parameters for move events.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1119,6 +1124,7 @@ QMoveEvent::~QMoveEvent()
     \class QExposeEvent
     \since 5.0
     \brief The QExposeEvent class contains event parameters for expose events.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1143,6 +1149,7 @@ QExposeEvent::~QExposeEvent()
 /*!
     \class QResizeEvent
     \brief The QResizeEvent class contains event parameters for resize events.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1187,6 +1194,7 @@ QResizeEvent::~QResizeEvent()
     \brief The QCloseEvent class contains parameters that describe a close event.
 
     \ingroup events
+    \inmodule QtGui
 
     Close events are sent to widgets that the user wants to close,
     usually by choosing "Close" from the window menu, or by clicking
@@ -1249,6 +1257,7 @@ QCloseEvent::~QCloseEvent()
 /*!
    \class QIconDragEvent
    \brief The QIconDragEvent class indicates that a main icon drag has begun.
+    \inmodule QtGui
 
    \ingroup events
 
@@ -1280,6 +1289,7 @@ QIconDragEvent::~QIconDragEvent()
 /*!
     \class QContextMenuEvent
     \brief The QContextMenuEvent class contains parameters that describe a context menu event.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1437,6 +1447,7 @@ QContextMenuEvent::QContextMenuEvent(Reason reason, const QPoint &pos)
 /*!
     \class QInputMethodEvent
     \brief The QInputMethodEvent class provides parameters for input method events.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -1735,6 +1746,7 @@ void QInputMethodEvent::setCommitString(const QString &commitString, int replace
 /*!
     \class QInputMethodQueryEvent
     \since 5.0
+    \inmodule QtGui
 
     \brief This event is sent by the input context to input objects.
 
@@ -1802,6 +1814,7 @@ QVariant QInputMethodQueryEvent::value(Qt::InputMethodQuery query) const
 /*!
     \class QTabletEvent
     \brief The QTabletEvent class contains parameters that describe a Tablet event.
+    \inmodule QtGui
 
     \ingroup events
 
@@ -2191,6 +2204,7 @@ QDragMoveEvent::~QDragMoveEvent()
     \class QDropEvent
     \ingroup events
     \ingroup draganddrop
+    \inmodule QtGui
 
     \brief The QDropEvent class provides an event which is sent when a
     drag and drop action is completed.
@@ -2357,6 +2371,7 @@ void QDropEvent::setDropAction(Qt::DropAction action)
 
     \ingroup events
     \ingroup draganddrop
+    \inmodule QtGui
 
     A widget must accept this event in order to receive the \l
     {QDragMoveEvent}{drag move events} that are sent while the drag
@@ -2399,6 +2414,7 @@ QDragEnterEvent::~QDragEnterEvent()
 
     \ingroup events
     \ingroup draganddrop
+    \inmodule QtGui
 
     A widget will receive drag move events repeatedly while the drag
     is within its boundaries, if it accepts
@@ -2426,6 +2442,7 @@ QDragEnterEvent::~QDragEnterEvent()
 
     \ingroup events
     \ingroup draganddrop
+    \inmodule QtGui
 
     This event is always preceded by a QDragEnterEvent and a series
     of \l{QDragMoveEvent}s. It is not sent if a QDropEvent is sent
@@ -2458,6 +2475,7 @@ QDragLeaveEvent::~QDragLeaveEvent()
 
     \ingroup events
     \ingroup helpsystem
+    \inmodule QtGui
 
     This event can be intercepted in applications to provide tooltips
     or "What's This?" help for custom widgets. The type() can be
@@ -2543,6 +2561,7 @@ QHelpEvent::~QHelpEvent()
 
     \ingroup events
     \ingroup helpsystem
+    \inmodule QtGui
 
     Status tips can be set on a widget using the
     QWidget::setStatusTip() function.  They are shown in the status
@@ -2612,6 +2631,7 @@ QStatusTipEvent::~QStatusTipEvent()
 
     \ingroup events
     \ingroup helpsystem
+    \inmodule QtGui
 
     \sa QWhatsThis, QHelpEvent, QStatusTipEvent
 */
@@ -2649,6 +2669,7 @@ QWhatsThisClickedEvent::~QWhatsThisClickedEvent()
     when a QAction is added, removed, or changed.
 
     \ingroup events
+    \inmodule QtGui
 
     Actions can be added to widgets using QWidget::addAction(). This
     generates an \l ActionAdded event, which you can handle to provide
@@ -2703,6 +2724,7 @@ QActionEvent::~QActionEvent()
     \brief The QHideEvent class provides an event which is sent after a widget is hidden.
 
     \ingroup events
+    \inmodule QtGui
 
     This event is sent just before QWidget::hide() returns, and also
     when a top-level window has been hidden (iconified) by the user.
@@ -2735,6 +2757,7 @@ QHideEvent::~QHideEvent()
     \brief The QShowEvent class provides an event that is sent when a widget is shown.
 
     \ingroup events
+    \inmodule QtGui
 
     There are two kinds of show events: show events caused by the
     window system (spontaneous), and internal show events. Spontaneous (QEvent::spontaneous())
@@ -2765,6 +2788,7 @@ QShowEvent::~QShowEvent()
     sent when there is a request to open a file or a URL.
 
     \ingroup events
+    \inmodule QtGui
 
     File open events will be sent to the QApplication::instance()
     when the operating system requests that a file or URL should be opened.
@@ -2844,6 +2868,7 @@ bool QFileOpenEvent::openFile(QFile &file, QIODevice::OpenMode flags) const
     sent whenever a the toolbar button is clicked on Mac OS X.
 
     \ingroup events
+    \inmodule QtGui
 
     The QToolBarChangeEvent is sent when the toolbar button is clicked. On Mac
     OS X, this is the long oblong button on the right side of the window
@@ -3199,6 +3224,7 @@ QDebug operator<<(QDebug dbg, const QEvent *e) {
     the user presses a key combination.
 
     \ingroup events
+    \inmodule QtGui
 
     Normally you don't need to use this class directly; QShortcut
     provides a higher-level interface to handle shortcut keys.
@@ -3233,6 +3259,7 @@ QDebug operator<<(QDebug dbg, const QEvent *e) {
 /*!
     \class QWindowStateChangeEvent
     \ingroup events
+    \inmodule QtGui
 
     \brief The QWindowStateChangeEvent class provides the window state before a
     window state change.
@@ -3270,6 +3297,7 @@ QWindowStateChangeEvent::~QWindowStateChangeEvent()
     \since 4.6
     \ingroup events
     \ingroup touch
+    \inmodule QtGui
 
     \section1 Enabling Touch Events
 
@@ -3526,6 +3554,7 @@ QTouchEvent::~QTouchEvent()
 /*! \class QTouchEvent::TouchPoint
     \brief The TouchPoint class provides information about a touch point in a QTouchEvent.
     \since 4.6
+    \inmodule QtGui
 */
 
 /*! \enum QTouchEvent::TouchPoint::InfoFlags
@@ -4001,6 +4030,7 @@ void QTouchEvent::TouchPoint::setFlags(InfoFlags flags)
     \class QScrollPrepareEvent
     \since 4.8
     \ingroup events
+    \inmodule QtGui
 
     \brief The QScrollPrepareEvent class is send in preparation of a scrolling.
 
@@ -4100,6 +4130,7 @@ void QScrollPrepareEvent::setContentPos(const QPointF &pos)
     \class QScrollEvent
     \since 4.8
     \ingroup events
+    \inmodule QtGui
 
     \brief The QScrollEvent class is send when scrolling.
 
diff --git a/src/gui/kernel/qinputmethod.cpp b/src/gui/kernel/qinputmethod.cpp
index a699938..87b94b0 100644
--- a/src/gui/kernel/qinputmethod.cpp
+++ b/src/gui/kernel/qinputmethod.cpp
@@ -67,6 +67,7 @@ QInputMethod::~QInputMethod()
 /*!
     \class QInputMethod
     \brief The QInputMethod class provides access to the active text input method.
+    \inmodule QtGui
 
     QInputMethod is used by the text editors for integrating to the platform text input
     methods and more commonly by application views for querying various text input method-related
diff --git a/src/gui/kernel/qkeysequence.cpp b/src/gui/kernel/qkeysequence.cpp
index b71a803..e7534c7 100644
--- a/src/gui/kernel/qkeysequence.cpp
+++ b/src/gui/kernel/qkeysequence.cpp
@@ -153,6 +153,7 @@ void Q_GUI_EXPORT qt_set_sequence_auto_mnemonic(bool b) { qt_sequence_no_mnemoni
     by shortcuts.
 
     \ingroup shared
+    \inmodule QtGui
 
 
     In its most common form, a key sequence describes a combination of
diff --git a/src/gui/kernel/qopenglcontext.cpp b/src/gui/kernel/qopenglcontext.cpp
index b99a4db..c8662ff 100644
--- a/src/gui/kernel/qopenglcontext.cpp
+++ b/src/gui/kernel/qopenglcontext.cpp
@@ -77,6 +77,7 @@ QMutex QOpenGLContextPrivate::makeCurrentTrackerMutex;
 
 /*!
     \class QOpenGLContext
+    \inmodule QtGui
     \since 5.0
     \brief The QOpenGLContext represents a native OpenGL context, enabling
            OpenGL rendering on a QSurface.
@@ -632,6 +633,7 @@ void QOpenGLContext::deleteQGLContext()
     \since 5.0
     \brief The QOpenGLContextGroup represents a group of contexts sharing
     OpenGL resources.
+    \inmodule QtGui
 
     QOpenGLContextGroup is automatically created and managed by QOpenGLContext
     instances.  Its purpose is to identify all the contexts that are sharing
@@ -746,6 +748,7 @@ void QOpenGLContextGroupPrivate::deletePendingResources(QOpenGLContext *ctx)
     that are shared between OpenGL contexts (like textures, framebuffer
     objects, shader programs, etc), and clean them up in a safe way when
     they're no longer needed.
+    \inmodule QtGui
 
     The QOpenGLSharedResource instance should never be deleted, instead free()
     should be called when it's no longer needed. Thus it will be put on a queue
@@ -799,6 +802,8 @@ void QOpenGLSharedResource::free()
     QOpenGLSharedResource to be used to track a single OpenGL object with a
     GLuint identifier. The constructor takes a function pointer to a function
     that will be used to free the resource if and when necessary.
+    \inmodule QtGui
+
 */
 void QOpenGLSharedResourceGuard::freeResource(QOpenGLContext *context)
 {
@@ -820,6 +825,7 @@ void QOpenGLSharedResourceGuard::freeResource(QOpenGLContext *context)
     QOpenGLContext *. To get an instance for a given context one calls
     T *QOpenGLMultiGroupSharedResource::value<T>(context), where T is a sub-class
     of QOpenGLSharedResource.
+    \inmodule QtGui
 
     You should not call free() on QOpenGLSharedResources owned by a
     QOpenGLMultiGroupSharedResource instance.
diff --git a/src/gui/kernel/qpalette.cpp b/src/gui/kernel/qpalette.cpp
index 73515f6..d858571 100644
--- a/src/gui/kernel/qpalette.cpp
+++ b/src/gui/kernel/qpalette.cpp
@@ -326,10 +326,9 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     \brief The QPalette class contains color groups for each widget state.
 
+    \inmodule QtGui
     \ingroup appearance
     \ingroup shared
-    \ingroup painting
-
 
     A palette consists of three color groups: \e Active, \e Disabled,
     and \e Inactive. All widgets in Qt contain a palette and
diff --git a/src/gui/kernel/qscreen.cpp b/src/gui/kernel/qscreen.cpp
index fe8b15e..5d32a83 100644
--- a/src/gui/kernel/qscreen.cpp
+++ b/src/gui/kernel/qscreen.cpp
@@ -52,6 +52,7 @@ QT_BEGIN_NAMESPACE
     \class QScreen
     \since 5.0
     \brief The QScreen class is used to query screen properties.
+    \inmodule QtGui
 
     A note on logical vs physical dots per inch: physical DPI is based on the
     actual physical pixel sizes when available, and is useful for print preview
diff --git a/src/gui/kernel/qstylehints.cpp b/src/gui/kernel/qstylehints.cpp
index 53c5a07..194b5d3 100644
--- a/src/gui/kernel/qstylehints.cpp
+++ b/src/gui/kernel/qstylehints.cpp
@@ -54,6 +54,7 @@ static inline QVariant hint(QPlatformIntegration::StyleHint h)
     \class QStyleHints
     \since 5.0
     \brief The QStyleHints contains platform specific hints and settings.
+    \inmodule QtGui
  */
 QStyleHints::QStyleHints()
     : QObject()
diff --git a/src/gui/kernel/qsurface.cpp b/src/gui/kernel/qsurface.cpp
index 8b71fc3..1e58eb6 100644
--- a/src/gui/kernel/qsurface.cpp
+++ b/src/gui/kernel/qsurface.cpp
@@ -46,6 +46,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QSurface
+    \inmodule QtGui
     \since 5.0
     \brief The QSurface class is an abstraction of renderable surfaces in Qt.
 
diff --git a/src/gui/kernel/qsurfaceformat.cpp b/src/gui/kernel/qsurfaceformat.cpp
index ecfeb80..b410fc8 100644
--- a/src/gui/kernel/qsurfaceformat.cpp
+++ b/src/gui/kernel/qsurfaceformat.cpp
@@ -113,6 +113,7 @@ public:
     \class QSurfaceFormat
     \since 5.0
     \brief The QSurfaceFormat class represents the format of a QSurface.
+    \inmodule QtGui
 
     The format includes the size of the color buffers, red, green, and blue;
     the size of the alpha buffer; the size of the depth and stencil buffers;
diff --git a/src/gui/kernel/qtouchdevice.cpp b/src/gui/kernel/qtouchdevice.cpp
index b054381..590d175 100644
--- a/src/gui/kernel/qtouchdevice.cpp
+++ b/src/gui/kernel/qtouchdevice.cpp
@@ -52,6 +52,7 @@ QT_BEGIN_NAMESPACE
     \brief The QTouchDevice class describes the device from with touch events originate.
     \since 5.0
     \ingroup touch
+    \inmodule QtGui
 
     Each QTouchEvent contains a QTouchDevice pointer to allow accessing
     device-specific properties like type and capabilities. It is the
diff --git a/src/gui/kernel/qwindow.cpp b/src/gui/kernel/qwindow.cpp
index 0316d22..3c5d70d 100644
--- a/src/gui/kernel/qwindow.cpp
+++ b/src/gui/kernel/qwindow.cpp
@@ -65,6 +65,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QWindow
+    \inmodule QtGui
     \since 5.0
     \brief The QWindow class represents a window in the underlying windowing system.
 
diff --git a/src/gui/math3d/qgenericmatrix.cpp b/src/gui/math3d/qgenericmatrix.cpp
index 08ed0ae..a05a47f 100644
--- a/src/gui/math3d/qgenericmatrix.cpp
+++ b/src/gui/math3d/qgenericmatrix.cpp
@@ -49,6 +49,7 @@ QT_BEGIN_NAMESPACE
     \since 4.6
     \ingroup painting
     \ingroup painting-3D
+    \inmodule QtGui
 
     The QGenericMatrix template has three parameters:
 
diff --git a/src/gui/math3d/qmatrix4x4.cpp b/src/gui/math3d/qmatrix4x4.cpp
index 0eb3506..76135f0 100644
--- a/src/gui/math3d/qmatrix4x4.cpp
+++ b/src/gui/math3d/qmatrix4x4.cpp
@@ -54,6 +54,7 @@ QT_BEGIN_NAMESPACE
     \brief The QMatrix4x4 class represents a 4x4 transformation matrix in 3D space.
     \since 4.6
     \ingroup painting-3D
+    \inmodule QtGui
 
     The QMatrix4x4 class in general is treated as a row-major matrix, in that the
     constructors and operator() functions take data in row-major format, as is
diff --git a/src/gui/math3d/qquaternion.cpp b/src/gui/math3d/qquaternion.cpp
index e61dc4b..9671680 100644
--- a/src/gui/math3d/qquaternion.cpp
+++ b/src/gui/math3d/qquaternion.cpp
@@ -53,6 +53,7 @@ QT_BEGIN_NAMESPACE
     \brief The QQuaternion class represents a quaternion consisting of a vector and scalar.
     \since 4.6
     \ingroup painting-3D
+    \inmodule QtGui
 
     Quaternions are used to represent rotations in 3D space, and
     consist of a 3D rotation axis specified by the x, y, and z
diff --git a/src/gui/math3d/qvector2d.cpp b/src/gui/math3d/qvector2d.cpp
index 3c3581f..ae4df34 100644
--- a/src/gui/math3d/qvector2d.cpp
+++ b/src/gui/math3d/qvector2d.cpp
@@ -56,6 +56,7 @@ QT_BEGIN_NAMESPACE
     \since 4.6
     \ingroup painting
     \ingroup painting-3D
+    \inmodule QtGui
 
     The QVector2D class can also be used to represent vertices in 2D space.
     We therefore do not need to provide a separate vertex class.
diff --git a/src/gui/math3d/qvector3d.cpp b/src/gui/math3d/qvector3d.cpp
index adf3da4..b282163 100644
--- a/src/gui/math3d/qvector3d.cpp
+++ b/src/gui/math3d/qvector3d.cpp
@@ -55,6 +55,7 @@ QT_BEGIN_NAMESPACE
     \brief The QVector3D class represents a vector or vertex in 3D space.
     \since 4.6
     \ingroup painting-3D
+    \inmodule QtGui
 
     Vectors are one of the main building blocks of 3D representation and
     drawing.  They consist of three coordinates, traditionally called
diff --git a/src/gui/math3d/qvector4d.cpp b/src/gui/math3d/qvector4d.cpp
index 6b29221..3f542c1 100644
--- a/src/gui/math3d/qvector4d.cpp
+++ b/src/gui/math3d/qvector4d.cpp
@@ -55,6 +55,7 @@ QT_BEGIN_NAMESPACE
     \brief The QVector4D class represents a vector or vertex in 4D space.
     \since 4.6
     \ingroup painting-3D
+    \inmodule QtGui
 
     The QVector4D class can also be used to represent vertices in 4D space.
     We therefore do not need to provide a separate vertex class.
diff --git a/src/gui/opengl/qopenglbuffer.cpp b/src/gui/opengl/qopenglbuffer.cpp
index 045eec0..e9517f3 100644
--- a/src/gui/opengl/qopenglbuffer.cpp
+++ b/src/gui/opengl/qopenglbuffer.cpp
@@ -52,6 +52,7 @@ QT_BEGIN_NAMESPACE
     \brief The QOpenGLBuffer class provides functions for creating and managing OpenGL buffer objects.
     \since 5.0
     \ingroup painting-3D
+    \inmodule QtGui
 
     Buffer objects are created in the OpenGL server so that the
     client application can avoid uploading vertices, indices,
diff --git a/src/gui/opengl/qopenglframebufferobject.cpp b/src/gui/opengl/qopenglframebufferobject.cpp
index 2fc45fd..b17942b 100644
--- a/src/gui/opengl/qopenglframebufferobject.cpp
+++ b/src/gui/opengl/qopenglframebufferobject.cpp
@@ -76,6 +76,7 @@ QT_BEGIN_NAMESPACE
     \class QOpenGLFramebufferObjectFormat
     \brief The QOpenGLFramebufferObjectFormat class specifies the format of an OpenGL
     framebuffer object.
+    \inmodule QtGui
 
     \since 5.0
 
@@ -645,6 +646,7 @@ void QOpenGLFramebufferObjectPrivate::initAttachments(QOpenGLContext *ctx, QOpen
     \class QOpenGLFramebufferObject
     \brief The QOpenGLFramebufferObject class encapsulates an OpenGL framebuffer object.
     \since 5.0
+    \inmodule QtGui
 
     \ingroup painting-3D
 
diff --git a/src/gui/opengl/qopenglfunctions.cpp b/src/gui/opengl/qopenglfunctions.cpp
index 3c77e92..ece6405 100644
--- a/src/gui/opengl/qopenglfunctions.cpp
+++ b/src/gui/opengl/qopenglfunctions.cpp
@@ -52,6 +52,7 @@ QT_BEGIN_NAMESPACE
     \brief The QOpenGLFunctions class provides cross-platform access to the OpenGL/ES 2.0 API.
     \since 5.0
     \ingroup painting-3D
+    \inmodule QtGui
 
     OpenGL/ES 2.0 defines a subset of the OpenGL specification that is
     common across many desktop and embedded OpenGL implementations.
diff --git a/src/gui/opengl/qopenglpaintdevice.cpp b/src/gui/opengl/qopenglpaintdevice.cpp
index ff4b76d..60f5e31 100644
--- a/src/gui/opengl/qopenglpaintdevice.cpp
+++ b/src/gui/opengl/qopenglpaintdevice.cpp
@@ -59,6 +59,7 @@ QT_BEGIN_NAMESPACE
     \class QOpenGLPaintDevice
     \brief The QOpenGLPaintDevice class enables painting to an OpenGL context using QPainter.
     \since 5.0
+    \inmodule QtGui
 
     \ingroup painting-3D
 
diff --git a/src/gui/opengl/qopenglshaderprogram.cpp b/src/gui/opengl/qopenglshaderprogram.cpp
index 264a198..100fc0b 100644
--- a/src/gui/opengl/qopenglshaderprogram.cpp
+++ b/src/gui/opengl/qopenglshaderprogram.cpp
@@ -57,6 +57,7 @@ QT_BEGIN_NAMESPACE
     \brief The QOpenGLShaderProgram class allows OpenGL shader programs to be linked and used.
     \since 5.0
     \ingroup painting-3D
+    \inmodule QtGui
 
     \section1 Introduction
 
@@ -127,6 +128,7 @@ QT_BEGIN_NAMESPACE
     \brief The QOpenGLShader class allows OpenGL shaders to be compiled.
     \since 5.0
     \ingroup painting-3D
+    \inmodule QtGui
 
     This class supports shaders written in the OpenGL Shading Language (GLSL)
     and in the OpenGL/ES Shading Language (GLSL/ES).
diff --git a/src/gui/painting/qbackingstore.cpp b/src/gui/painting/qbackingstore.cpp
index 1469476..88be97b 100644
--- a/src/gui/painting/qbackingstore.cpp
+++ b/src/gui/painting/qbackingstore.cpp
@@ -68,6 +68,7 @@ public:
 /*!
     \class QBackingStore
     \since 5.0
+    \inmodule QtGui
 
     \brief The QBackingStore class provides the drawing area for top-level windows.
 */
diff --git a/src/gui/painting/qbrush.cpp b/src/gui/painting/qbrush.cpp
index 6ee28a4..32686c5 100644
--- a/src/gui/painting/qbrush.cpp
+++ b/src/gui/painting/qbrush.cpp
@@ -261,6 +261,7 @@ struct QBrushDataPointerDeleter
     \class QBrush
     \ingroup painting
     \ingroup shared
+    \inmodule QtGui
 
     \brief The QBrush class defines the fill pattern of shapes drawn
     by QPainter.
@@ -1171,6 +1172,7 @@ QDataStream &operator>>(QDataStream &s, QBrush &b)
     \class QGradient
     \ingroup painting
     \ingroup shared
+    \inmodule QtGui
 
     \brief The QGradient class is used in combination with QBrush to
     specify gradient fills.
@@ -1526,6 +1528,7 @@ bool QGradient::operator==(const QGradient &gradient) const
 /*!
     \class QLinearGradient
     \ingroup painting
+    \inmodule QtGui
 
     \brief The QLinearGradient class is used in combination with QBrush to
     specify a linear gradient brush.
@@ -1705,6 +1708,7 @@ void QLinearGradient::setFinalStop(const QPointF &stop)
 /*!
     \class QRadialGradient
     \ingroup painting
+    \inmodule QtGui
 
     \brief The QRadialGradient class is used in combination with QBrush to
     specify a radial gradient brush.
@@ -2087,6 +2091,7 @@ void QRadialGradient::setFocalPoint(const QPointF &focalPoint)
 /*!
     \class QConicalGradient
     \ingroup painting
+    \inmodule QtGui
 
     \brief The QConicalGradient class is used in combination with QBrush to
     specify a conical gradient brush.
diff --git a/src/gui/painting/qcolor.cpp b/src/gui/painting/qcolor.cpp
index c45136e..61a218d 100644
--- a/src/gui/painting/qcolor.cpp
+++ b/src/gui/painting/qcolor.cpp
@@ -58,6 +58,7 @@ QT_BEGIN_NAMESPACE
 
     \ingroup painting
     \ingroup appearance
+    \inmodule QtGui
 
 
     A color is normally specified in terms of RGB (red, green, and
diff --git a/src/gui/painting/qmatrix.cpp b/src/gui/painting/qmatrix.cpp
index 5b2ccbd..1ab6e66 100644
--- a/src/gui/painting/qmatrix.cpp
+++ b/src/gui/painting/qmatrix.cpp
@@ -59,6 +59,7 @@ QT_BEGIN_NAMESPACE
     \obsolete
 
     \ingroup painting
+    \inmodule QtGui
 
     A matrix specifies how to translate, scale, shear or rotate the
     coordinate system, and is typically used when rendering graphics.
diff --git a/src/gui/painting/qpagedpaintdevice.cpp b/src/gui/painting/qpagedpaintdevice.cpp
index 7195ab8..dc05bc3 100644
--- a/src/gui/painting/qpagedpaintdevice.cpp
+++ b/src/gui/painting/qpagedpaintdevice.cpp
@@ -82,6 +82,7 @@ static const struct {
 
 /*!
     \class QPagedPaintDevice
+    \inmodule QtGui
 
     \brief The QPagedPaintDevice class is a represents a paintdevice that supports
     multiple pages.
diff --git a/src/gui/painting/qpaintengine.cpp b/src/gui/painting/qpaintengine.cpp
index 4af2651..3233338 100644
--- a/src/gui/painting/qpaintengine.cpp
+++ b/src/gui/painting/qpaintengine.cpp
@@ -56,6 +56,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QTextItem
+    \inmodule QtGui
 
     \brief The QTextItem class provides all the information required to draw
     text in a custom paint engine.
@@ -146,6 +147,7 @@ QFont QTextItem::font() const
 /*!
   \class QPaintEngine
   \ingroup painting
+    \inmodule QtGui
 
   \brief The QPaintEngine class provides an abstract definition of how
   QPainter draws to a given device on a given platform.
diff --git a/src/gui/painting/qpainter.cpp b/src/gui/painting/qpainter.cpp
index f49b4d9..6c361bf 100644
--- a/src/gui/painting/qpainter.cpp
+++ b/src/gui/painting/qpainter.cpp
@@ -926,6 +926,7 @@ void QPainterPrivate::updateState(QPainterState *newState)
     \brief The QPainter class performs low-level painting on widgets and
     other paint devices.
 
+    \inmodule QtGui
     \ingroup painting
 
     \reentrant
@@ -7764,6 +7765,7 @@ void QPainterState::init(QPainter *p) {
 /*!
     \class QPaintEngineState
     \since 4.1
+    \inmodule QtGui
 
     \brief The QPaintEngineState class provides information about the
     active paint engine's current state.
@@ -8306,6 +8308,7 @@ void QPainter::drawPixmapFragments(const PixmapFragment *fragments, int fragment
 /*!
     \since 4.7
     \class QPainter::PixmapFragment
+    \inmodule QtGui
 
     \brief This class is used in conjunction with the
     QPainter::drawPixmapFragments() function to specify how a pixmap, or
diff --git a/src/gui/painting/qpainterpath.cpp b/src/gui/painting/qpainterpath.cpp
index f249fe1..823ced7 100644
--- a/src/gui/painting/qpainterpath.cpp
+++ b/src/gui/painting/qpainterpath.cpp
@@ -166,6 +166,7 @@ static void qt_debug_path(const QPainterPath &path)
     \class QPainterPath
     \ingroup painting
     \ingroup shared
+    \inmodule QtGui
 
     \brief The QPainterPath class provides a container for painting operations,
     enabling graphical shapes to be constructed and reused.
@@ -349,6 +350,7 @@ static void qt_debug_path(const QPainterPath &path)
 
 /*!
     \class QPainterPath::Element
+    \inmodule QtGui
 
     \brief The QPainterPath::Element class specifies the position and
     type of a subpath.
@@ -2477,6 +2479,7 @@ void qt_path_stroke_cubic_to(qfixed c1x, qfixed c1y,
     \since 4.1
     \class QPainterPathStroker
     \ingroup painting
+    \inmodule QtGui
 
     \brief The QPainterPathStroker class is used to generate fillable
     outlines for a given painter path.
diff --git a/src/gui/painting/qpdfwriter.cpp b/src/gui/painting/qpdfwriter.cpp
index f9a969c..e3bddb7 100644
--- a/src/gui/painting/qpdfwriter.cpp
+++ b/src/gui/painting/qpdfwriter.cpp
@@ -67,6 +67,7 @@ public:
 
 
 /*! \class QPdfWriter
+    \inmodule QtGui
 
     \brief The QPdfWriter class is a class to generate PDFs
     that can be used as a paint device.
diff --git a/src/gui/painting/qpen.cpp b/src/gui/painting/qpen.cpp
index 9d03f75..bfea2c5 100644
--- a/src/gui/painting/qpen.cpp
+++ b/src/gui/painting/qpen.cpp
@@ -52,6 +52,7 @@ typedef QPenPrivate QPenData;
 
 /*!
     \class QPen
+    \inmodule QtGui
     \ingroup painting
     \ingroup shared
 
diff --git a/src/gui/painting/qpolygon.cpp b/src/gui/painting/qpolygon.cpp
index 38f70d9..d3d90ff 100644
--- a/src/gui/painting/qpolygon.cpp
+++ b/src/gui/painting/qpolygon.cpp
@@ -88,6 +88,7 @@ static void qt_polygon_isect_line(const QPointF &p1, const QPointF &p2, const QP
     \class QPolygon
     \brief The QPolygon class provides a vector of points using
     integer precision.
+    \inmodule QtGui
 
     \reentrant
 
@@ -481,6 +482,7 @@ QDebug operator<<(QDebug dbg, const QPolygon &a)
     \class QPolygonF
     \brief The QPolygonF class provides a vector of points using
     floating point precision.
+    \inmodule QtGui
 
     \reentrant
     \ingroup painting
diff --git a/src/gui/painting/qregion.cpp b/src/gui/painting/qregion.cpp
index 357380e..cea9f74 100644
--- a/src/gui/painting/qregion.cpp
+++ b/src/gui/painting/qregion.cpp
@@ -57,6 +57,7 @@ QT_BEGIN_NAMESPACE
     \class QRegion
     \brief The QRegion class specifies a clip region for a painter.
 
+    \inmodule QtGui
     \ingroup painting
     \ingroup shared
 
diff --git a/src/gui/painting/qtransform.cpp b/src/gui/painting/qtransform.cpp
index 924a444..94f9aca 100644
--- a/src/gui/painting/qtransform.cpp
+++ b/src/gui/painting/qtransform.cpp
@@ -96,6 +96,7 @@ QT_BEGIN_NAMESPACE
     \brief The QTransform class specifies 2D transformations of a coordinate system.
     \since 4.3
     \ingroup painting
+    \inmodule QtGui
 
     A transformation specifies how to translate, scale, shear, rotate
     or project the coordinate system, and is typically used when
diff --git a/src/gui/text/qabstracttextdocumentlayout.cpp b/src/gui/text/qabstracttextdocumentlayout.cpp
index 45903f6..9c523f1 100644
--- a/src/gui/text/qabstracttextdocumentlayout.cpp
+++ b/src/gui/text/qabstracttextdocumentlayout.cpp
@@ -54,6 +54,7 @@ QT_BEGIN_NAMESPACE
 
     \brief The QAbstractTextDocumentLayout class is an abstract base
     class used to implement custom layouts for QTextDocuments.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -80,6 +81,7 @@ QT_BEGIN_NAMESPACE
     \brief The QTextObjectInterface class allows drawing of
            custom text objects in \l{QTextDocument}s.
     \since 4.5
+    \inmodule QtGui
 
     A text object describes the structure of one or more elements in a
     text document; for instance, images imported from HTML are
@@ -289,6 +291,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QAbstractTextDocumentLayout::PaintContext
     \reentrant
+    \inmodule QtGui
 
     \brief The QAbstractTextDocumentLayout::PaintContext class is a convenience
     class defining the parameters used when painting a document's layout.
@@ -353,6 +356,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QAbstractTextDocumentLayout::Selection
     \reentrant
+    \inmodule QtGui
 
     \brief The QAbstractTextDocumentLayout::Selection class is a convenience
     class defining the parameters of a selection.
diff --git a/src/gui/text/qfont.cpp b/src/gui/text/qfont.cpp
index 7b2288c..2144930 100644
--- a/src/gui/text/qfont.cpp
+++ b/src/gui/text/qfont.cpp
@@ -344,6 +344,7 @@ QFontEngineData::~QFontEngineData()
     \ingroup appearance
     \ingroup shared
     \ingroup richtext-processing
+    \inmodule QtGui
 
 
     When you create a QFont object you specify various attributes that
@@ -2208,6 +2209,7 @@ QDataStream &operator>>(QDataStream &s, QFont &font)
     \reentrant
 
     \brief The QFontInfo class provides general information about fonts.
+    \inmodule QtGui
 
     \ingroup appearance
     \ingroup shared
diff --git a/src/gui/text/qfontdatabase.cpp b/src/gui/text/qfontdatabase.cpp
index 4b8a18d..1d4eaa5 100644
--- a/src/gui/text/qfontdatabase.cpp
+++ b/src/gui/text/qfontdatabase.cpp
@@ -1157,6 +1157,7 @@ QString QFontDatabase::styleString(const QFontInfo &fontInfo)
 /*!
     \class QFontDatabase
     \threadsafe
+    \inmodule QtGui
 
     \brief The QFontDatabase class provides information about the fonts available in the underlying window system.
 
diff --git a/src/gui/text/qfontmetrics.cpp b/src/gui/text/qfontmetrics.cpp
index e5ddcb8..22b9038 100644
--- a/src/gui/text/qfontmetrics.cpp
+++ b/src/gui/text/qfontmetrics.cpp
@@ -65,6 +65,7 @@ extern void qt_format_text(const QFont& font, const QRectF &_r,
 /*!
     \class QFontMetrics
     \reentrant
+    \inmodule QtGui
 
     \brief The QFontMetrics class provides font metrics information.
 
@@ -937,6 +938,7 @@ int QFontMetrics::lineWidth() const
 /*!
     \class QFontMetricsF
     \reentrant
+    \inmodule QtGui
 
     \brief The QFontMetricsF class provides font metrics information.
 
diff --git a/src/gui/text/qglyphrun.cpp b/src/gui/text/qglyphrun.cpp
index 673dd8f..c298893 100644
--- a/src/gui/text/qglyphrun.cpp
+++ b/src/gui/text/qglyphrun.cpp
@@ -53,6 +53,7 @@ QT_BEGIN_NAMESPACE
     \class QGlyphRun
     \brief The QGlyphRun class provides direct access to the internal glyphs in a font.
     \since 4.8
+    \inmodule QtGui
 
     \ingroup text
     \mainclass
diff --git a/src/gui/text/qplatformfontdatabase_qpa.cpp b/src/gui/text/qplatformfontdatabase_qpa.cpp
index 3531202..7e2b890 100644
--- a/src/gui/text/qplatformfontdatabase_qpa.cpp
+++ b/src/gui/text/qplatformfontdatabase_qpa.cpp
@@ -226,6 +226,7 @@ bool QSupportedWritingSystems::supported(QFontDatabase::WritingSystem writingSys
     \brief The QSupportedWritingSystems class is used when registering fonts with the internal Qt
     fontdatabase
     \ingroup painting
+    \inmodule QtGui
 
     Its to provide an easy to use interface for indicating what writing systems a specific font
     supports.
diff --git a/src/gui/text/qrawfont.cpp b/src/gui/text/qrawfont.cpp
index ae14f1c..468ab4e 100644
--- a/src/gui/text/qrawfont.cpp
+++ b/src/gui/text/qrawfont.cpp
@@ -54,6 +54,7 @@ QT_BEGIN_NAMESPACE
    \class QRawFont
    \brief The QRawFont class provides access to a single physical instance of a font.
    \since 4.8
+    \inmodule QtGui
 
    \ingroup text
    \mainclass
diff --git a/src/gui/text/qstatictext.cpp b/src/gui/text/qstatictext.cpp
index faee6d2..534ba83 100644
--- a/src/gui/text/qstatictext.cpp
+++ b/src/gui/text/qstatictext.cpp
@@ -52,6 +52,7 @@ QT_BEGIN_NAMESPACE
     \brief The QStaticText class enables optimized drawing of text when the text and its layout
     is updated rarely.
     \since 4.7
+    \inmodule QtGui
 
     \ingroup multimedia
     \ingroup text
diff --git a/src/gui/text/qsyntaxhighlighter.cpp b/src/gui/text/qsyntaxhighlighter.cpp
index c372071..f76bb51 100644
--- a/src/gui/text/qsyntaxhighlighter.cpp
+++ b/src/gui/text/qsyntaxhighlighter.cpp
@@ -230,6 +230,7 @@ void QSyntaxHighlighterPrivate::reformatBlock(const QTextBlock &block)
 /*!
     \class QSyntaxHighlighter
     \reentrant
+    \inmodule QtGui
 
     \brief The QSyntaxHighlighter class allows you to define syntax
     highlighting rules, and in addition you can use the class to query
diff --git a/src/gui/text/qtextcursor.cpp b/src/gui/text/qtextcursor.cpp
index 048f1a5..1beff17 100644
--- a/src/gui/text/qtextcursor.cpp
+++ b/src/gui/text/qtextcursor.cpp
@@ -880,6 +880,7 @@ QTextLayout *QTextCursorPrivate::blockLayout(QTextBlock &block) const{
 /*!
     \class QTextCursor
     \reentrant
+    \inmodule QtGui
 
     \brief The QTextCursor class offers an API to access and modify QTextDocuments.
 
diff --git a/src/gui/text/qtextdocument.cpp b/src/gui/text/qtextdocument.cpp
index 0c5194e..5961ad1 100644
--- a/src/gui/text/qtextdocument.cpp
+++ b/src/gui/text/qtextdocument.cpp
@@ -217,6 +217,7 @@ QTextCodec *Qt::codecForHtml(const QByteArray &ba)
 /*!
     \class QTextDocument
     \reentrant
+    \inmodule QtGui
 
     \brief The QTextDocument class holds formatted text that can be
     viewed and edited using a QTextEdit.
diff --git a/src/gui/text/qtextdocumentfragment.cpp b/src/gui/text/qtextdocumentfragment.cpp
index d114733..dab2693 100644
--- a/src/gui/text/qtextdocumentfragment.cpp
+++ b/src/gui/text/qtextdocumentfragment.cpp
@@ -255,6 +255,7 @@ void QTextDocumentFragmentPrivate::insert(QTextCursor &_cursor) const
     \class QTextDocumentFragment
     \reentrant
 
+    \inmodule QtGui
     \brief The QTextDocumentFragment class represents a piece of formatted text
     from a QTextDocument.
 
diff --git a/src/gui/text/qtextdocumentwriter.cpp b/src/gui/text/qtextdocumentwriter.cpp
index 2894c28..5795a72 100644
--- a/src/gui/text/qtextdocumentwriter.cpp
+++ b/src/gui/text/qtextdocumentwriter.cpp
@@ -75,6 +75,7 @@ public:
     \class QTextDocumentWriter
 
     \brief The QTextDocumentWriter class provides a format-independent interface for writing a QTextDocument to files or other devices.
+    \inmodule QtGui
 
     \ingroup richtext-processing
     \ingroup io
diff --git a/src/gui/text/qtextformat.cpp b/src/gui/text/qtextformat.cpp
index a7f9de0..d8c7a4c 100644
--- a/src/gui/text/qtextformat.cpp
+++ b/src/gui/text/qtextformat.cpp
@@ -56,6 +56,7 @@ QT_BEGIN_NAMESPACE
 
     \brief The QTextLength class encapsulates the different types of length
     used in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -465,6 +466,7 @@ Q_GUI_EXPORT QDataStream &operator>>(QDataStream &stream, QTextFormat &fmt)
 
     \brief The QTextFormat class provides formatting information for a
     QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
     \ingroup shared
@@ -1256,6 +1258,7 @@ bool QTextFormat::operator==(const QTextFormat &rhs) const
 
     \brief The QTextCharFormat class provides formatting information for
     characters in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -1894,6 +1897,7 @@ QFont QTextCharFormat::font() const
 
     \brief The QTextBlockFormat class provides formatting information for
     blocks of text in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -2256,6 +2260,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     \brief The QTextListFormat class provides formatting information for
     lists in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -2416,6 +2421,7 @@ QTextListFormat::QTextListFormat(const QTextFormat &fmt)
 
     \brief The QTextFrameFormat class provides formatting information for
     frames in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -2742,6 +2748,7 @@ qreal QTextFrameFormat::rightMargin() const
 
     \brief The QTextTableFormat class provides formatting information for
     tables in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -2948,6 +2955,7 @@ QTextTableFormat::QTextTableFormat(const QTextFormat &fmt)
 
     \brief The QTextImageFormat class provides formatting information for
     images in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -3259,6 +3267,7 @@ QTextTableCellFormat::QTextTableCellFormat(const QTextFormat &fmt)
 
     \brief The QTextTableCellFormat class provides formatting information for
     table cells in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
diff --git a/src/gui/text/qtextlayout.cpp b/src/gui/text/qtextlayout.cpp
index fb495dc..b8be991 100644
--- a/src/gui/text/qtextlayout.cpp
+++ b/src/gui/text/qtextlayout.cpp
@@ -74,6 +74,7 @@ QT_BEGIN_NAMESPACE
 
     \brief The QTextLayout::FormatRange structure is used to apply extra formatting information
     for a specified area in the text layout's content.
+    \inmodule QtGui
 
     \sa QTextLayout::setAdditionalFormats(), QTextLayout::draw()
 */
@@ -99,6 +100,7 @@ QT_BEGIN_NAMESPACE
 
     \brief The QTextInlineObject class represents an inline object in
     a QTextLayout.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -254,6 +256,7 @@ Qt::LayoutDirection QTextInlineObject::textDirection() const
     \reentrant
 
     \brief The QTextLayout class is used to lay out and render text.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -1317,6 +1320,7 @@ void QTextLayout::drawCursor(QPainter *p, const QPointF &pos, int cursorPosition
     \reentrant
 
     \brief The QTextLine class represents a line of text inside a QTextLayout.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
diff --git a/src/gui/text/qtextlist.cpp b/src/gui/text/qtextlist.cpp
index cce442c..dd1aa54 100644
--- a/src/gui/text/qtextlist.cpp
+++ b/src/gui/text/qtextlist.cpp
@@ -62,6 +62,7 @@ public:
     \reentrant
 
     \brief The QTextList class provides a decorated list of items in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
diff --git a/src/gui/text/qtextobject.cpp b/src/gui/text/qtextobject.cpp
index af98642..5643233 100644
--- a/src/gui/text/qtextobject.cpp
+++ b/src/gui/text/qtextobject.cpp
@@ -60,6 +60,7 @@ QT_BEGIN_NAMESPACE
 
     \brief The QTextObject class is a base class for different kinds
     of objects that can group parts of a QTextDocument together.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -182,6 +183,7 @@ QTextDocumentPrivate *QTextObject::docHandle() const
 
     \brief The QTextBlockGroup class provides a container for text blocks within
     a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -304,6 +306,7 @@ QTextFrameLayoutData::~QTextFrameLayoutData()
     \reentrant
 
     \brief The QTextFrame class represents a frame in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -599,6 +602,7 @@ void QTextFramePrivate::remove_me()
     \brief The iterator class provides an iterator for reading
     the contents of a QTextFrame.
 
+    \inmodule QtGui
     \ingroup richtext-processing
 
     A frame consists of an arbitrary sequence of \l{QTextBlock}s and
@@ -798,6 +802,7 @@ QTextFrame::iterator &QTextFrame::iterator::operator--()
     \reentrant
 
     \brief The QTextBlockUserData class is used to associate custom data with blocks of text.
+    \inmodule QtGui
     \since 4.1
 
     \ingroup richtext-processing
@@ -829,6 +834,7 @@ QTextBlockUserData::~QTextBlockUserData()
 
     \brief The QTextBlock class provides a container for text fragments in a
     QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -929,6 +935,7 @@ bool QTextBlock::isValid() const
 
     \brief The QTextBlock::iterator class provides an iterator for reading
     the contents of a QTextBlock.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -1577,6 +1584,7 @@ QTextBlock::iterator &QTextBlock::iterator::operator--()
 
     \brief The QTextFragment class holds a piece of text in a
     QTextDocument with a single QTextCharFormat.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
diff --git a/src/gui/text/qtextoption.cpp b/src/gui/text/qtextoption.cpp
index 25760de..377e33e 100644
--- a/src/gui/text/qtextoption.cpp
+++ b/src/gui/text/qtextoption.cpp
@@ -205,6 +205,7 @@ QList<QTextOption::Tab> QTextOption::tabs() const
 
     \brief The QTextOption class provides a description of general rich text
     properties.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -359,6 +360,7 @@ QList<QTextOption::Tab> QTextOption::tabs() const
 /*!
     \class QTextOption::Tab
     \since 4.4
+    \inmodule QtGui
     Each tab definition is represented by this struct.
 */
 
diff --git a/src/gui/text/qtexttable.cpp b/src/gui/text/qtexttable.cpp
index 5589ffe..61b62eb 100644
--- a/src/gui/text/qtexttable.cpp
+++ b/src/gui/text/qtexttable.cpp
@@ -57,6 +57,7 @@ QT_BEGIN_NAMESPACE
 
     \brief The QTextTableCell class represents the properties of a
     cell in a QTextTable.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
@@ -498,6 +499,7 @@ void QTextTablePrivate::update() const
     \reentrant
 
     \brief The QTextTable class represents a table in a QTextDocument.
+    \inmodule QtGui
 
     \ingroup richtext-processing
 
diff --git a/src/gui/util/qdesktopservices.cpp b/src/gui/util/qdesktopservices.cpp
index 35494d2..623cd89 100644
--- a/src/gui/util/qdesktopservices.cpp
+++ b/src/gui/util/qdesktopservices.cpp
@@ -98,6 +98,7 @@ void QOpenUrlHandlerRegistry::handlerDestroyed(QObject *handler)
     \brief The QDesktopServices class provides methods for accessing common desktop services.
     \since 4.2
     \ingroup desktop
+    \inmodule QtGui
 
     Many desktop environments provide services that can be used by applications to
     perform common tasks, such as opening a web page, in a way that is both consistent
diff --git a/src/gui/util/qvalidator.cpp b/src/gui/util/qvalidator.cpp
index f0d795b..a137efe 100644
--- a/src/gui/util/qvalidator.cpp
+++ b/src/gui/util/qvalidator.cpp
@@ -54,6 +54,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QValidator
     \brief The QValidator class provides validation of input text.
+    \inmodule QtGui
 
     The class itself is abstract. Two subclasses, \l QIntValidator and
     \l QDoubleValidator, provide basic numeric-range checking, and \l
@@ -300,6 +301,7 @@ void QValidator::fixup(QString &) const
     \class QIntValidator
     \brief The QIntValidator class provides a validator that ensures
     a string contains a valid integer within a specified range.
+    \inmodule QtGui
 
     Example of use:
 
@@ -541,6 +543,7 @@ public:
 
     \brief The QDoubleValidator class provides range checking of
     floating-point numbers.
+    \inmodule QtGui
 
     QDoubleValidator provides an upper bound, a lower bound, and a
     limit on the number of digits after the decimal point. It does not
@@ -793,6 +796,7 @@ QDoubleValidator::Notation QDoubleValidator::notation() const
     \class QRegExpValidator
     \brief The QRegExpValidator class is used to check a string
     against a regular expression.
+    \inmodule QtGui
 
     QRegExpValidator uses a regular expression (regexp) to
     determine whether an input string is \l Acceptable, \l
diff --git a/src/printsupport/doc/src/printing.qdoc b/src/printsupport/doc/src/printing.qdoc
index cc79b41..69f3cd5 100644
--- a/src/printsupport/doc/src/printing.qdoc
+++ b/src/printsupport/doc/src/printing.qdoc
@@ -32,14 +32,12 @@
   \ingroup groups
 */
 
+
 /*!
   \page printing.html
   \title Printing with Qt
   \ingroup qt-graphics
 
-  \previouspage Styling
-  \contentspage The Paint System
-
   \brief A guide to producing printed output with Qt's paint system and widgets.
 
   Qt provides extensive cross-platform support for printing. Using the printing
diff --git a/src/widgets/styles/qstyle.cpp b/src/widgets/styles/qstyle.cpp
index 568d899..d218e85 100644
--- a/src/widgets/styles/qstyle.cpp
+++ b/src/widgets/styles/qstyle.cpp
@@ -78,6 +78,72 @@ static int unpackControlTypes(QSizePolicy::ControlTypes controls, QSizePolicy::C
 }
 
 /*!
+    \page qwidget-styling.html
+    \title Styling
+
+    Qt's built-in widgets use the QStyle class to perform nearly all
+    of their drawing.  QStyle is an abstract base class that
+    encapsulates the look and feel of a GUI, and can be used to make
+    the widgets look exactly like the equivalent native widgets or to
+    give the widgets a custom look.
+
+    Qt provides a set of QStyle subclasses that emulate the native
+    look of the different platforms supported by Qt (QWindowsStyle,
+    QMacStyle, QMotifStyle, etc.). These styles are built into the
+    QtGui library, other styles can be made available using Qt's
+    plugin mechansim.
+
+    Most functions for drawing style elements take four arguments:
+
+    \list
+    \li an enum value specifying which graphical element to draw
+    \li a QStyleOption object specifying how and where to render that element
+    \li a QPainter object that should be used to draw the element
+    \li a QWidget object on which the drawing is performed (optional)
+    \endlist
+
+    The style gets all the information it needs to render the
+    graphical element from the QStyleOption class. The widget is
+    passed as the last argument in case the style needs it to perform
+    special effects (such as animated default buttons on Mac OS X),
+    but it isn't mandatory. In fact, QStyle can be used to draw on any
+    paint device (not just widgets), in which case the widget argument
+    is a zero pointer.
+
+    \image paintsystem-stylepainter.png
+
+    The paint system also provides the QStylePainter class inheriting
+    from QPainter.  QStylePainter is a convenience class for drawing
+    QStyle elements inside a widget, and extends QPainter with a set
+    of high-level drawing functions implemented on top of QStyle's
+    API. The advantage of using QStylePainter is that the parameter
+    lists get considerably shorter.
+
+    \table 100%
+    \row
+    \li \inlineimage paintsystem-icon.png
+    \li \b QIcon
+
+    The QIcon class provides scalable icons in different modes and states.
+
+    QIcon can generate pixmaps reflecting an icon's state, mode and
+    size. These pixmaps are generated from the set of pixmaps
+    made available to the icon, and are used by Qt widgets to show an
+    icon representing a particular action.
+
+    The rendering of a QIcon object is handled by the QIconEngine
+    class. Each icon has a corresponding icon engine that is
+    responsible for drawing the icon with a requested size, mode and
+    state.
+
+    \endtable
+    
+    For more information about widget styling and appearance, see the
+    \l{Styles and Style Aware Widgets}.
+*/
+
+
+/*!
     \class QStyle
     \brief The QStyle class is an abstract base class that encapsulates the look and feel of a GUI.
 
@@ -322,7 +388,7 @@ static int unpackControlTypes(QSizePolicy::ControlTypes controls, QSizePolicy::C
     control over size of header items and row and column sizes.
 
     \sa QStyleOption, QStylePainter, {Styles Example},
-        {Styles and Style Aware Widgets}, QStyledItemDelegate
+        {Styles and Style Aware Widgets}, QStyledItemDelegate, {Styling}
 */
 
 /*!