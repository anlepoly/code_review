diff --git a/src/corelib/io/qstandardpaths.cpp b/src/corelib/io/qstandardpaths.cpp
index 78bf6c7..55f824c 100644
--- a/src/corelib/io/qstandardpaths.cpp
+++ b/src/corelib/io/qstandardpaths.cpp
@@ -267,6 +267,48 @@ QString QStandardPaths::findExecutable(const QString &executableName, const QStr
     an empty QString if no relevant location can be found.
 */
 
+#ifndef Q_OS_MAC
+QString QStandardPaths::displayName(StandardLocation type)
+{
+    switch (type) {
+    case DesktopLocation:
+        return QCoreApplication::translate("QStandardPaths", "Desktop");
+    case DocumentsLocation:
+        return QCoreApplication::translate("QStandardPaths", "Documents");
+    case FontsLocation:
+        return QCoreApplication::translate("QStandardPaths", "Fonts");
+    case ApplicationsLocation:
+        return QCoreApplication::translate("QStandardPaths", "Applications");
+    case MusicLocation:
+        return QCoreApplication::translate("QStandardPaths", "Music");
+    case MoviesLocation:
+        return QCoreApplication::translate("QStandardPaths", "Movies");
+    case PicturesLocation:
+        return QCoreApplication::translate("QStandardPaths", "Pictures");
+    case TempLocation:
+        return QCoreApplication::translate("QStandardPaths", "Temporary Directory");
+    case HomeLocation:
+        return QCoreApplication::translate("QStandardPaths", "Home");
+    case DataLocation:
+        return QCoreApplication::translate("QStandardPaths", "Application Data");
+    case CacheLocation:
+        return QCoreApplication::translate("QStandardPaths", "Cache");
+    case GenericDataLocation:
+        return QCoreApplication::translate("QStandardPaths", "Shared Data");
+    case RuntimeLocation:
+        return QCoreApplication::translate("QStandardPaths", "Runtime");
+    case ConfigLocation:
+        return QCoreApplication::translate("QStandardPaths", "Configuration");
+    case GenericCacheLocation:
+        return QCoreApplication::translate("QStandardPaths", "Shared Cache");
+    case DownloadLocation:
+        return QCoreApplication::translate("QStandardPaths", "Download");
+    }
+    // not reached
+    return QString();
+}
+#endif
+
 QT_END_NAMESPACE
 
 #endif // QT_NO_STANDARDPATHS
diff --git a/src/corelib/io/qstandardpaths_json.cpp b/src/corelib/io/qstandardpaths_json.cpp
index 52b194b..7d7a0a9 100644
--- a/src/corelib/io/qstandardpaths_json.cpp
+++ b/src/corelib/io/qstandardpaths_json.cpp
@@ -173,12 +173,6 @@ QStringList QStandardPaths::standardLocations(StandardLocation type)
     return dirs;
 }
 
-QString QStandardPaths::displayName(StandardLocation type)
-{
-    Q_UNUSED(type);
-    return QString();
-}
-
 QT_END_NAMESPACE
 
 #endif // QT_NO_STANDARDPATHS
diff --git a/src/corelib/io/qstandardpaths_unix.cpp b/src/corelib/io/qstandardpaths_unix.cpp
index b27b19e..1a2ae96 100644
--- a/src/corelib/io/qstandardpaths_unix.cpp
+++ b/src/corelib/io/qstandardpaths_unix.cpp
@@ -280,12 +280,6 @@ QStringList QStandardPaths::standardLocations(StandardLocation type)
     return dirs;
 }
 
-QString QStandardPaths::displayName(StandardLocation type)
-{
-    Q_UNUSED(type);
-    return QString();
-}
-
 QT_END_NAMESPACE
 
 #endif // QT_NO_STANDARDPATHS
diff --git a/src/corelib/io/qstandardpaths_win.cpp b/src/corelib/io/qstandardpaths_win.cpp
index 848dd44..8bd32eb 100644
--- a/src/corelib/io/qstandardpaths_win.cpp
+++ b/src/corelib/io/qstandardpaths_win.cpp
@@ -206,12 +206,6 @@ QStringList QStandardPaths::standardLocations(StandardLocation type)
     return dirs;
 }
 
-QString QStandardPaths::displayName(StandardLocation type)
-{
-    Q_UNUSED(type);
-    return QString();
-}
-
 QT_END_NAMESPACE
 
 #endif // QT_NO_STANDARDPATHS