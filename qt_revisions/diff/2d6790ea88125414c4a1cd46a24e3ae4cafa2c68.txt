diff --git a/src/serialport_unix.cpp b/src/serialport_unix.cpp
index 72a15ec..55685c4 100644
--- a/src/serialport_unix.cpp
+++ b/src/serialport_unix.cpp
@@ -337,7 +337,7 @@ bool SerialPortPrivate::setRts(bool set)
 
 bool SerialPortPrivate::flush()
 {
-    return ::tcdrain(descriptor) != -1;
+    return writeNotification(false) && (::tcdrain(descriptor) != -1);
 }
 
 bool SerialPortPrivate::reset()
@@ -747,7 +747,7 @@ bool SerialPortPrivate::readNotification()
     return true;
 }
 
-bool SerialPortPrivate::writeNotification()
+bool SerialPortPrivate::writeNotification(bool byChunk)
 {
     const int tmp = writeBuffer.size();
 
@@ -756,7 +756,10 @@ bool SerialPortPrivate::writeNotification()
         return false;
     }
 
-    const int nextSize = qMin(writeBuffer.nextDataBlockSize(), int(WriteChunkSize));
+    int nextSize = writeBuffer.nextDataBlockSize();
+    if (byChunk)
+        nextSize = qMin(nextSize, int(WriteChunkSize));
+
     const char *ptr = writeBuffer.readPointer();
 
     // Attempt to write it chunk.
diff --git a/src/serialport_unix_p.h b/src/serialport_unix_p.h
index 246ff6f..63ba427 100644
--- a/src/serialport_unix_p.h
+++ b/src/serialport_unix_p.h
@@ -90,7 +90,7 @@ public:
     bool setDataErrorPolicy(SerialPort::DataErrorPolicy policy);
 
     bool readNotification();
-    bool writeNotification();
+    bool writeNotification(bool byChunk = true);
     bool exceptionNotification();
 
     static QString portNameToSystemLocation(const QString &port);
diff --git a/src/serialport_win.cpp b/src/serialport_win.cpp
index 574b78a..e354d3b 100644
--- a/src/serialport_win.cpp
+++ b/src/serialport_win.cpp
@@ -360,11 +360,15 @@ bool SerialPortPrivate::setRts(bool set)
     return ::EscapeCommFunction(descriptor, set ? SETRTS : CLRRTS);
 }
 
+#ifndef Q_OS_WINCE
+
 bool SerialPortPrivate::flush()
 {
-    return ::FlushFileBuffers(descriptor);
+    return startAsyncWrite(false) && ::FlushFileBuffers(descriptor);
 }
 
+#endif
+
 bool SerialPortPrivate::reset()
 {
     static const DWORD flags = PURGE_TXABORT | PURGE_RXABORT | PURGE_TXCLEAR | PURGE_RXCLEAR;
@@ -695,11 +699,14 @@ bool SerialPortPrivate::startAsyncRead()
     return true;
 }
 
-bool SerialPortPrivate::startAsyncWrite()
+bool SerialPortPrivate::startAsyncWrite(bool byChunk)
 {
     writeSequenceStarted = true;
 
-    const DWORD nextSize = qMin(writeBuffer.nextDataBlockSize(), int(WriteChunkSize));
+    int nextSize = writeBuffer.nextDataBlockSize();
+    if (byChunk)
+        nextSize = qMin(nextSize, int(WriteChunkSize));
+
     const char *ptr = writeBuffer.readPointer();
 
     if (::WriteFile(descriptor, ptr, nextSize, 0, &writeOverlapped))
diff --git a/src/serialport_win_p.h b/src/serialport_win_p.h
index 0c717df..f8c5ce5 100644
--- a/src/serialport_win_p.h
+++ b/src/serialport_win_p.h
@@ -94,12 +94,12 @@ public:
     bool processIoErrors();
 #ifndef Q_OS_WINCE
     bool startAsyncRead();
-    bool startAsyncWrite();
+    bool startAsyncWrite(bool byChunk = true);
     bool completeAsyncRead(DWORD numberOfBytes);
     bool completeAsyncWrite(DWORD numberOfBytes);
 #else
     bool notifyRead();
-    bool notifyWrite();
+    bool notifyWrite(bool byChunk = true);
 #endif
 
     static QString portNameToSystemLocation(const QString &port);
diff --git a/src/serialport_wince.cpp b/src/serialport_wince.cpp
index eacd847..6df97d1 100644
--- a/src/serialport_wince.cpp
+++ b/src/serialport_wince.cpp
@@ -223,6 +223,11 @@ void SerialPortPrivate::close()
     descriptor = INVALID_HANDLE_VALUE;
 }
 
+bool SerialPortPrivate::flush()
+{
+    return notifyWrite(false) && ::FlushFileBuffers(descriptor);
+}
+
 qint64 SerialPortPrivate::readFromBuffer(char *data, qint64 maxSize)
 {
     if (readBuffer.isEmpty())
@@ -369,9 +374,12 @@ bool SerialPortPrivate::notifyRead()
     return true;
 }
 
-bool SerialPortPrivate::notifyWrite()
+bool SerialPortPrivate::notifyWrite(bool byChunk)
 {
-    const DWORD nextSize = qMin(writeBuffer.nextDataBlockSize(), int(WriteChunkSize));
+    int nextSize = writeBuffer.nextDataBlockSize();
+    if (byChunk)
+        nextSize = qMin(nextSize, int(WriteChunkSize));
+
     const char *ptr = writeBuffer.readPointer();
 
     DWORD bytesWritten = 0;