diff --git a/doc/src/imports/qtmobilitysensors1.qdoc b/doc/src/imports/qtmobilitysensors1.qdoc
index 40ec4b6..94db11d 100644
--- a/doc/src/imports/qtmobilitysensors1.qdoc
+++ b/doc/src/imports/qtmobilitysensors1.qdoc
@@ -39,7 +39,7 @@
     This causes some limitations due to the use of types that do not work in the QML environment.
     See \l{QtMobility.sensors QML Limitations}{below} for a list of the known limitations.
 
-    See \l QtSensors for more information about the Sensors API.
+    See \l Qt Sensors for more information about the Sensors API.
 
     \section1 QtMobility.sensors QML Limitations
 
diff --git a/doc/src/qmlsensorgtestures.qdoc b/doc/src/qmlsensorgtestures.qdoc
index 96b6987..317105a 100644
--- a/doc/src/qmlsensorgtestures.qdoc
+++ b/doc/src/qmlsensorgtestures.qdoc
@@ -58,6 +58,6 @@
 \snippet ../examples/sensors/qmlsensorgestures/qml_app/GestureList.qml 4
 
 \sa {ShakeIt! QML Sensor Gestures Example}
-
+\sa {Qt Sensor Gestures}
 */
 
diff --git a/doc/src/qtsensorgestures-cpp.qdoc b/doc/src/qtsensorgestures-cpp.qdoc
index 2667ae8..d0173b4 100644
--- a/doc/src/qtsensorgestures-cpp.qdoc
+++ b/doc/src/qtsensorgestures-cpp.qdoc
@@ -39,8 +39,9 @@
 
 With QtSensorGestures, you are able to easily utilize device gesturing using
 sensors such as the accelerometer and proximity.
-For example 'shake','spin', 'drop','cover' and 'turnover'.
 
+A list of currently supported sensor gestures and their descriptions can be found here:
+\l  {Qt Sensor Gestures}
 
 Using QtSensorGestures is easy. There are two main classes you will need to use.
 
diff --git a/doc/src/qtsensorgestures-plugins.qdoc b/doc/src/qtsensorgestures-plugins.qdoc
index 9e662c1..6bc5794 100644
--- a/doc/src/qtsensorgestures-plugins.qdoc
+++ b/doc/src/qtsensorgestures-plugins.qdoc
@@ -49,14 +49,14 @@ function. QSensorGestureManager will retain ownership of the recognizer object.
 \snippet snippets/sensorgestures/plugin.cpp Plugin
 
 
-\section1 Recognizer Classes
+\section2 Recognizer Classes
 If you are making sensorgestures available through the QtSensorGestures API, these are the
 sensor gesture classes to use.
 
 \annotatedlist sensorgestures_recognizer
 
-
-\section1 Recognizer Plugins
+\target Qt Sensor Gestures
+\section3 Recognizer Plugins
 Here is a list of included plugins and their signals
 
 For ShakeGestures plugin:
@@ -79,7 +79,7 @@ For QtSensorGestures plugin:
         \row
             \o QtSensors.cover
             \o cover
-            \o Hand covers up phone display for one second, when it's face up, using the IR Proximity sensor.
+            \o Hand covers up phone display for one second, when it's face up, using the IR Proximity and Orientation sensors.
             \o \image sensorgesture-cover.png
         \row
             \o QtSensors.doubletap
@@ -95,7 +95,7 @@ For QtSensorGestures plugin:
         \row
             \o QtSensors.pickup
             \o pickup
-            \o Phone is picked up and brought up into view, using the Accelerometer sensor.
+            \o Phone is resting face up on a flat curface, and is then picked up and brought up into viewing position, using the Accelerometer sensor.
             \o \image sensorgesture-faceup.png
         \row
             \o QtSensors.shake2
@@ -105,7 +105,7 @@ For QtSensorGestures plugin:
         \row
             \o QtSensors.slam
             \o slam
-            \o Move phone quickly down and then back up, using the Accelerometer sensor.
+            \o Move phone quickly down and then back up, using the Accelerometer and Orientation sensors.
             \o \image sensorgesture-slam.png
         \row
             \o QtSensors.turnover
@@ -115,12 +115,12 @@ For QtSensorGestures plugin:
         \row
             \o QtSensors.twist
             \o twistLeft, twistRight
-            \o Phone is held face up and then quickly twisted left or right (left side up or right side up) and back, using the Accelerometer sensor.
+            \o Phone is held face up and then twisted left or right (left side up or right side up) and back, using the Accelerometer and Orientation sensors.
             \o \image sensorgesture-twist.png
         \row
             \o QtSensors.whip
             \o whip
-            \o Phone is moved like a whip gesture, using the Accelerometer sensor.
+            \o Phone held top up, is moved like a whip gesture, back towards one side of the phone, then forward towards the other side, using the Accelerometer and Orientation sensors.
             \o \image sensorgesture-whip_1.png
                \image sensorgesture-whip_2.png
    \endtable
diff --git a/src/imports/sensors2/qsensor2gesture.cpp b/src/imports/sensors2/qsensor2gesture.cpp
index 2185fb0..0730e56 100644
--- a/src/imports/sensors2/qsensor2gesture.cpp
+++ b/src/imports/sensors2/qsensor2gesture.cpp
@@ -75,6 +75,10 @@ QT_BEGIN_NAMESPACE
        }
     }
     \endqml
+
+A list of currently supported sensor gestures and their descriptions can be found here:
+\l {Qt Sensor Gestures}
+
 */
 QSensor2Gesture::QSensor2Gesture(QObject* parent)
     : QObject(parent)
@@ -128,6 +132,8 @@ QStringList QSensor2Gesture::availableGestures()
     This property cannot be changed while the element is enabled.
     To determine all available getures on the system please use the
     \l {QtSensors5::SensorGesture::availableGestures} {availableGestures} property.
+
+    \sa {QtSensorGestures Plugins}
 */
 QStringList QSensor2Gesture::gestures() const
 {