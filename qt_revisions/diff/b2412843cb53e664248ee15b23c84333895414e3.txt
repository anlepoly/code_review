diff --git a/src/corelib/kernel/qobject.cpp b/src/corelib/kernel/qobject.cpp
index d32a43f..d00f8cf 100644
--- a/src/corelib/kernel/qobject.cpp
+++ b/src/corelib/kernel/qobject.cpp
@@ -3825,7 +3825,7 @@ QDebug operator<<(QDebug dbg, const QObject *o) {
     See the \l{tools/plugandpaintplugins/basictools}{Plug & Paint
     Basic Tools} example for details.
 
-    \sa Q_DECLARE_INTERFACE(), Q_EXPORT_PLUGIN2(), {How to Create Qt Plugins}
+    \sa Q_DECLARE_INTERFACE(), Q_PLUGIN_METADATA(), {How to Create Qt Plugins}
 */
 
 /*!
diff --git a/src/gui/image/qimageiohandler.cpp b/src/gui/image/qimageiohandler.cpp
index c586429..9a82056 100644
--- a/src/gui/image/qimageiohandler.cpp
+++ b/src/gui/image/qimageiohandler.cpp
@@ -514,7 +514,7 @@ int QImageIOHandler::nextImageDelay() const
 
 /*!
     Constructs an image plugin with the given \a parent. This is
-    invoked automatically by the Q_EXPORT_PLUGIN2() macro.
+    invoked automatically by the moc generated code that exports the plugin.
 */
 QImageIOPlugin::QImageIOPlugin(QObject *parent)
     : QObject(parent)
diff --git a/src/gui/image/qpictureformatplugin.cpp b/src/gui/image/qpictureformatplugin.cpp
index d5cbb0c..a39c32a 100644
--- a/src/gui/image/qpictureformatplugin.cpp
+++ b/src/gui/image/qpictureformatplugin.cpp
@@ -85,7 +85,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     Constructs an picture format plugin with the given \a parent.
-    This is invoked automatically by the Q_EXPORT_PLUGIN2() macro.
+    This is invoked automatically by the moc generated code that exports the plugin.
 */
 QPictureFormatPlugin::QPictureFormatPlugin(QObject *parent)
     : QObject(parent)
diff --git a/src/gui/kernel/qgenericplugin_qpa.cpp b/src/gui/kernel/qgenericplugin_qpa.cpp
index ef57ab8..4cd12d0 100644
--- a/src/gui/kernel/qgenericplugin_qpa.cpp
+++ b/src/gui/kernel/qgenericplugin_qpa.cpp
@@ -73,7 +73,7 @@ QT_BEGIN_NAMESPACE
     Constructs a plugin with the given \a parent.
 
     Note that this constructor is invoked automatically by the
-    Q_EXPORT_PLUGIN2() macro, so there is no need for calling it
+    moc generated code that exports the plugin, so there is no need for calling it
     explicitly.
 */
 QGenericPlugin::QGenericPlugin(QObject *parent)
diff --git a/src/sql/doc/src/sql-driver.qdoc b/src/sql/doc/src/sql-driver.qdoc
index 97e9adc..2e6dc55 100644
--- a/src/sql/doc/src/sql-driver.qdoc
+++ b/src/sql/doc/src/sql-driver.qdoc
@@ -817,7 +817,7 @@
 
     To implement a Qt SQL driver as a plugin (so that it is
     recognized and loaded by the Qt library at runtime), the driver
-    must use the Q_EXPORT_PLUGIN2() macro. Read \l{How to Create Qt
+    must use the Q_PLUGIN_METADATA() macro. Read \l{How to Create Qt
     Plugins} for more information on this. You can also check out how
     this is done in the SQL plugins that are provided with Qt in
     \c{QTDIR/src/plugins/sqldrivers} and \c{QTDIR/src/sql/drivers}.
diff --git a/src/sql/kernel/qsqldriverplugin.cpp b/src/sql/kernel/qsqldriverplugin.cpp
index 3477222..71797eb 100644
--- a/src/sql/kernel/qsqldriverplugin.cpp
+++ b/src/sql/kernel/qsqldriverplugin.cpp
@@ -83,7 +83,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     Constructs a SQL driver plugin and sets the parent to \a parent.
-    This is invoked automatically by the Q_EXPORT_PLUGIN2() macro.
+    This is invoked automatically by the moc generated code that exports the plugin.
 */
 
 QSqlDriverPlugin::QSqlDriverPlugin(QObject *parent)
diff --git a/src/widgets/styles/qstyleplugin.cpp b/src/widgets/styles/qstyleplugin.cpp
index be3ea3c..ed68b7c 100644
--- a/src/widgets/styles/qstyleplugin.cpp
+++ b/src/widgets/styles/qstyleplugin.cpp
@@ -91,7 +91,7 @@ QT_BEGIN_NAMESPACE
     Constructs a style plugin with the given \a parent.
 
     Note that this constructor is invoked automatically by the
-    Q_EXPORT_PLUGIN2() macro, so there is no need for calling it
+    moc generated code that exports the plugin, so there is no need for calling it
     explicitly.
 */
 QStylePlugin::QStylePlugin(QObject *parent)