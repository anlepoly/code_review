diff --git a/doc/src/xml-processing/xquery-introduction.qdoc b/doc/src/xml-processing/xquery-introduction.qdoc
index 3fde9aa..524b46c 100644
--- a/doc/src/xml-processing/xquery-introduction.qdoc
+++ b/doc/src/xml-processing/xquery-introduction.qdoc
@@ -73,7 +73,7 @@ A path expression looks somewhat like a typical \e{file pathname} for
 locating a file in a hierarchical file system. It is a sequence of one
 or more \e{steps} separated by slash '/' or double slash '//'.
 Although path expressions are used for traversing XML trees, not file
-systems, in QtXmlPatterms we can model a file system to look like an
+systems, in Qt XML Patterns we can model a file system to look like an
 XML tree, so in Qt XML Patterns we can use XQuery to traverse a file
 system. See the \l {File System Example} {file system example}.
 
diff --git a/examples/xmlpatterns/filetree/filetree.cpp b/examples/xmlpatterns/filetree/filetree.cpp
index c5129e7..f6af453 100644
--- a/examples/xmlpatterns/filetree/filetree.cpp
+++ b/examples/xmlpatterns/filetree/filetree.cpp
@@ -180,7 +180,7 @@ QXmlNodeModelIndex FileTree::nextSibling(const QXmlNodeModelIndex &nodeIndex,
 //! [5]
 
 /*!
-  This function is called by the QtXmlPatterns query engine when it
+  This function is called by the Qt XML Patterns query engine when it
   wants to move to the next node in the model. It moves along an \a
   axis, \e from the node specified by \a nodeIndex.
 
diff --git a/src/xmlpatterns/api/qabstractxmlnodemodel.cpp b/src/xmlpatterns/api/qabstractxmlnodemodel.cpp
index 4e7c362..f300bc0 100644
--- a/src/xmlpatterns/api/qabstractxmlnodemodel.cpp
+++ b/src/xmlpatterns/api/qabstractxmlnodemodel.cpp
@@ -87,7 +87,7 @@ bool QAbstractXmlNodeModel::isIgnorableInDeepEqual(const QXmlNodeModelIndex &n)
   structure that can be queried as if the data were XML.
 
   The node model represented by a subclass of QAbstractXmlNodeModel is
-  meant to be accessed by the QtXmlPatterns query engine. If the API
+  meant to be accessed by the Qt XML Patterns query engine. If the API
   seems a little strange in a few places, it is because the member
   functions are called by the query engine as it evaluates an
   XQuery. They aren't meant to be used programatically.
@@ -190,7 +190,7 @@ bool QAbstractXmlNodeModel::isIgnorableInDeepEqual(const QXmlNodeModelIndex &n)
   \section1 Thread Safety
 
   Because the node model can be accessed concurrently by threads in
-  the QtXmlPatterns module, subclasses of QAbstractXmlNodeModel must
+  the Qt XML Patterns module, subclasses of QAbstractXmlNodeModel must
   be written to be \l{Reentrancy and Thread-Safety}{thread-safe}.
   Classes that simplify implementing thread-safety include QReadLocker
   and QWriteLocker.
@@ -557,8 +557,8 @@ QAbstractXmlNodeModel::mapToSequence(const QXmlNodeModelIndex &ni,
   available on AxisAttribute.
 
   The value past in \a axis is not guaranteed based on what is used in
-  a query. QtXmlPatterns may call this function arbitrarily with any
-  value for \a axis. This is because QtXmlPatterns may rewrite queries
+  a query. Qt XML Patterns may call this function arbitrarily with any
+  value for \a axis. This is because Qt XML Patterns may rewrite queries
   to be more efficient, using axes in different ways from the original
   query.
 
@@ -750,7 +750,7 @@ QAbstractXmlNodeModel::iterate(const QXmlNodeModelIndex &ni,
 /*!
   \fn QXmlNodeModelIndex QAbstractXmlNodeModel::nextFromSimpleAxis(SimpleAxis axis, const QXmlNodeModelIndex &origin) const
 
-  When QtXmlPatterns evaluate path expressions, it emulate them through a
+  When Qt XML Patterns evaluate path expressions, it emulate them through a
   combination of calls with QSimpleXmlNodeModel::SimpleAxis values. Therefore,
   the implementation of this function must return the node, if any, that
   appears on the \a axis emanating from the \a origin.
@@ -1111,7 +1111,7 @@ bool QAbstractXmlNodeModel::isDeepEqual(const QXmlNodeModelIndex &n1,
   in base64), a date, a float, and an attribute.
 
   QXmlItem is the class that represents these XQuery items in the
-  QtXmlPatterns API. A non-null instance of QXmlItem is either a node
+  Qt XML Patterns API. A non-null instance of QXmlItem is either a node
   or an atomic value. Calling isNode() or isAtomicValue() tells you
   which it is. Atomic values are represented elsewhere in the Qt API
   as instances of QVariant, and an instance of QXmlItem that
diff --git a/src/xmlpatterns/api/qxmlquery.cpp b/src/xmlpatterns/api/qxmlquery.cpp
index c3552d5..b98d44d 100644
--- a/src/xmlpatterns/api/qxmlquery.cpp
+++ b/src/xmlpatterns/api/qxmlquery.cpp
@@ -895,13 +895,13 @@ void QXmlQuery::setUriResolver(const QAbstractUriResolver *resolver)
 
 /*!
   Returns the query's URI resolver. If no URI resolver has been set,
-  QtXmlPatterns will use the URIs in queries as they are.
+  Qt XML Patterns will use the URIs in queries as they are.
 
   The URI resolver provides a level of abstraction, or \e{polymorphic
   URIs}. A resolver can rewrite \e{logical} URIs to physical ones, or
   it can translate obsolete or invalid URIs to valid ones.
 
-  QtXmlPatterns calls the URI resolver for all URIs it encounters,
+  Qt XML Patterns calls the URI resolver for all URIs it encounters,
   except for namespaces. Specifically, all builtin functions that deal
   with URIs (\c{fn:doc()}, and \c{fn:doc-available()}).
 
@@ -910,7 +910,7 @@ void QXmlQuery::setUriResolver(const QAbstractUriResolver *resolver)
   Rather than use the URI the user specified, the return value of
   QAbstractUriResolver::resolve() will be used.
 
-  When QtXmlPatterns calls QAbstractUriResolver::resolve() the
+  When Qt XML Patterns calls QAbstractUriResolver::resolve() the
   absolute URI is the URI mandated by the XQuery language, and the
   relative URI is the URI specified by the user.
 
diff --git a/src/xmlpatterns/api/qxmlschema.cpp b/src/xmlpatterns/api/qxmlschema.cpp
index 6bf4e5c..00a4b69 100644
--- a/src/xmlpatterns/api/qxmlschema.cpp
+++ b/src/xmlpatterns/api/qxmlschema.cpp
@@ -264,13 +264,13 @@ void QXmlSchema::setUriResolver(const QAbstractUriResolver *resolver)
 
 /*!
   Returns the schema's URI resolver. If no URI resolver has been set,
-  QtXmlPatterns will use the URIs in schemas as they are.
+  Qt XML Patterns will use the URIs in schemas as they are.
 
   The URI resolver provides a level of abstraction, or \e{polymorphic
   URIs}. A resolver can rewrite \e{logical} URIs to physical ones, or
   it can translate obsolete or invalid URIs to valid ones.
 
-  When QtXmlPatterns calls QAbstractUriResolver::resolve() the
+  When Qt XML Patterns calls QAbstractUriResolver::resolve() the
   absolute URI is the URI mandated by the schema specification, and the
   relative URI is the URI specified by the user.
 
diff --git a/src/xmlpatterns/api/qxmlschemavalidator.cpp b/src/xmlpatterns/api/qxmlschemavalidator.cpp
index 3e0f050..4a724e8 100644
--- a/src/xmlpatterns/api/qxmlschemavalidator.cpp
+++ b/src/xmlpatterns/api/qxmlschemavalidator.cpp
@@ -305,13 +305,13 @@ void QXmlSchemaValidator::setUriResolver(const QAbstractUriResolver *resolver)
 
 /*!
   Returns the schema's URI resolver. If no URI resolver has been set,
-  QtXmlPatterns will use the URIs in instance documents as they are.
+  Qt XML Patterns will use the URIs in instance documents as they are.
 
   The URI resolver provides a level of abstraction, or \e{polymorphic
   URIs}. A resolver can rewrite \e{logical} URIs to physical ones, or
   it can translate obsolete or invalid URIs to valid ones.
 
-  When QtXmlPatterns calls QAbstractUriResolver::resolve() the
+  When Qt XML Patterns calls QAbstractUriResolver::resolve() the
   absolute URI is the URI mandated by the schema specification, and the
   relative URI is the URI specified by the user.
 
diff --git a/tests/auto/xmlpatternsdiagnosticsts/tst_xmlpatternsdiagnosticsts.cpp b/tests/auto/xmlpatternsdiagnosticsts/tst_xmlpatternsdiagnosticsts.cpp
index d21e536..149ca01 100644
--- a/tests/auto/xmlpatternsdiagnosticsts/tst_xmlpatternsdiagnosticsts.cpp
+++ b/tests/auto/xmlpatternsdiagnosticsts/tst_xmlpatternsdiagnosticsts.cpp
@@ -50,7 +50,7 @@
  \class tst_XmlPatternsDiagnosticsTS
  \internal
  \since 4.5
- \brief Test QtXmlPatterns test suite driver in tests/auto/xmlpatternsxqts/lib/.
+ \brief Test Qt XML Patterns test suite driver in tests/auto/xmlpatternsxqts/lib/.
  */
 class tst_XmlPatternsDiagnosticsTS : public tst_SuiteTest
 {
diff --git a/tests/auto/xmlpatternsxslts/tst_xmlpatternsxslts.cpp b/tests/auto/xmlpatternsxslts/tst_xmlpatternsxslts.cpp
index 1c4ef75..9568198 100644
--- a/tests/auto/xmlpatternsxslts/tst_xmlpatternsxslts.cpp
+++ b/tests/auto/xmlpatternsxslts/tst_xmlpatternsxslts.cpp
@@ -50,7 +50,7 @@
  \class tst_XmlPatternsXSLTS
  \internal
  \since 4.5
- \brief Test QtXmlPatterns against W3C's XSL-T 2.0 test suite, XSLTS.
+ \brief Test Qt XML Patterns against W3C's XSL-T 2.0 test suite, XSLTS.
  */
 class tst_XmlPatternsXSLTS : public tst_SuiteTest
 {