diff --git a/src/dbus/qdbusconnection.cpp b/src/dbus/qdbusconnection.cpp
index 08a840c..8afe714 100644
--- a/src/dbus/qdbusconnection.cpp
+++ b/src/dbus/qdbusconnection.cpp
@@ -789,7 +789,7 @@ bool QDBusConnection::registerObject(const QString &path, QObject *object, Regis
     QDBusWriteLocker locker(RegisterObjectAction, d);
 
     // lower-bound search for where this object should enter in the tree
-    QDBusConnectionPrivate::ObjectTreeNode *node = &d->rootNode;
+    QDBusConnectionPrivate::ObjectTreeNode::DataList::Iterator node = &d->rootNode;
     int i = 1;
     while (node) {
         if (pathComponents.count() == i) {
diff --git a/src/dbus/qdbusintegrator.cpp b/src/dbus/qdbusintegrator.cpp
index 35b40a1..e814724 100644
--- a/src/dbus/qdbusintegrator.cpp
+++ b/src/dbus/qdbusintegrator.cpp
@@ -442,7 +442,7 @@ static bool findObject(const QDBusConnectionPrivate::ObjectTreeNode *root,
         start = 1;
 
     // walk the object tree
-    const QDBusConnectionPrivate::ObjectTreeNode *node = root;
+    QDBusConnectionPrivate::ObjectTreeNode::DataList::ConstIterator node = root;
     while (start < length && node) {
         if (node->flags & QDBusConnection::ExportChildObjects)
             break;
@@ -1538,7 +1538,7 @@ void QDBusActivateObjectEvent::placeMetaCall(QObject *)
 
 void QDBusConnectionPrivate::handleSignal(const QString &key, const QDBusMessage& msg)
 {
-    SignalHookHash::const_iterator it = signalHooks.find(key);
+    SignalHookHash::const_iterator it = signalHooks.constFind(key);
     SignalHookHash::const_iterator end = signalHooks.constEnd();
     //qDebug("looking for: %s", path.toLocal8Bit().constData());
     //qDBusDebug() << signalHooks.keys();
@@ -2071,7 +2071,7 @@ bool QDBusConnectionPrivate::connectSignal(const QString &service,
         return false;           // don't connect
 
     // avoid duplicating:
-    QDBusConnectionPrivate::SignalHookHash::ConstIterator it = signalHooks.find(key);
+    QDBusConnectionPrivate::SignalHookHash::ConstIterator it = signalHooks.constFind(key);
     QDBusConnectionPrivate::SignalHookHash::ConstIterator end = signalHooks.constEnd();
     for ( ; it != end && it.key() == key; ++it) {
         const QDBusConnectionPrivate::SignalHook &entry = it.value();
@@ -2252,7 +2252,7 @@ void QDBusConnectionPrivate::connectRelay(const QString &service,
 
     // add it to our list:
     QDBusWriteLocker locker(ConnectRelayAction, this);
-    SignalHookHash::ConstIterator it = signalHooks.find(key);
+    SignalHookHash::ConstIterator it = signalHooks.constFind(key);
     SignalHookHash::ConstIterator end = signalHooks.constEnd();
     for ( ; it != end && it.key() == key; ++it) {
         const SignalHook &entry = it.value();