diff --git a/src/imports/xmllistmodel/qqmlxmllistmodel.cpp b/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
index 8c0751c..fd946c5 100644
--- a/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
+++ b/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
@@ -968,7 +968,7 @@ qreal QQuickXmlListModel::progress() const
 }
 
 /*!
-    \qmlmethod void QtQuick.XmlListModel2::XmlListModel::errorString()
+    \qmlmethod QtQuick.XmlListModel2::XmlListModel::errorString()
 
     Returns a string description of the last error that occurred
     if \l status is XmlListModel::Error.
diff --git a/src/particles/qquickcustomaffector.cpp b/src/particles/qquickcustomaffector.cpp
index 0482b27..5f013cf 100644
--- a/src/particles/qquickcustomaffector.cpp
+++ b/src/particles/qquickcustomaffector.cpp
@@ -49,7 +49,7 @@ QT_BEGIN_NAMESPACE
 
 //TODO: Move docs (and inheritence) to real base when docs can propagate. Currently this pretends to be the base class!
 /*!
-    \qmlsignal QtQuick.Particles2::Affector::affectParticles(Array particles, real dt)
+    \qmlsignal QtQuick.Particles2::Affector::onAffectParticles(Array particles, real dt)
 
     This handler is called when particles are selected to be affected. particles contains
     an array of particle objects which can be directly manipulated.
diff --git a/src/particles/qquickitemparticle.cpp b/src/particles/qquickitemparticle.cpp
index bd4168e..d7dbbef 100644
--- a/src/particles/qquickitemparticle.cpp
+++ b/src/particles/qquickitemparticle.cpp
@@ -60,19 +60,19 @@ QT_BEGIN_NAMESPACE
 
 
 /*!
-    \qmlmethod void QtQuick.Particles2::ItemParticle::freeze(Item item)
+    \qmlmethod QtQuick.Particles2::ItemParticle::freeze(Item item)
 
     Suspends the flow of time for the logical particle which item represents, allowing you to control its movement.
 */
 
 /*!
-    \qmlmethod void QtQuick.Particles2::ItemParticle::unfreeze(Item item)
+    \qmlmethod QtQuick.Particles2::ItemParticle::unfreeze(Item item)
 
     Restarts the flow of time for the logical particle which item represents, allowing it to be moved by the particle system again.
 */
 
 /*!
-    \qmlmethod void QtQuick.Particles2::ItemParticle::take(Item item, bool prioritize)
+    \qmlmethod QtQuick.Particles2::ItemParticle::take(Item item, bool prioritize)
 
     Asks the ItemParticle to take over control of item. It will be emitted when there is a logical particle available.
 
@@ -80,7 +80,7 @@ QT_BEGIN_NAMESPACE
     head of the queue.
 */
 /*!
-    \qmlmethod void QtQuick.Particles2::ItemParticle::give(Item item)
+    \qmlmethod QtQuick.Particles2::ItemParticle::give(Item item)
 
     Orders the ItemParticle to give you control of the item. It will cease controlling it and the item will lose its association to the logical particle.
 */
diff --git a/src/particles/qquickparticleaffector.cpp b/src/particles/qquickparticleaffector.cpp
index 29f88fb..94c2573 100644
--- a/src/particles/qquickparticleaffector.cpp
+++ b/src/particles/qquickparticleaffector.cpp
@@ -115,15 +115,15 @@ QT_BEGIN_NAMESPACE
     non-rectangular area.
 */
 /*!
-    \qmlsignal QtQuick.Particles2::Affector::affected(real x, real y)
+    \qmlsignal QtQuick.Particles2::Affector::onAffected(real x, real y)
 
     This handler is called when a particle is selected to be affected. It will not be called
     if a particle is considered by the Affector but not actually altered in any way.
 
     In the special case where an Affector has no possible effect (e.g. Affector {}), affected
     will be emitted for all particles being considered if you connect to it. This allows you to
-    execute arbitrary code in response to particles (use the \l {QtQuick.Particles2::Affector::affectParticles}
-    {affectParticles} signal handler if you want to execute code which affects the particles
+    execute arbitrary code in response to particles (use the Affector::onAffectParticles
+    signal handler if you want to execute code which affects the particles
     themselves). As this executes JavaScript code per particle, it is not recommended to use this
     signal with a high-volume particle system.
 
diff --git a/src/particles/qquicktrailemitter.cpp b/src/particles/qquicktrailemitter.cpp
index 2371a5e..9d0ad37 100644
--- a/src/particles/qquicktrailemitter.cpp
+++ b/src/particles/qquicktrailemitter.cpp
@@ -119,7 +119,7 @@ QQuickTrailEmitter::QQuickTrailEmitter(QQuickItem *parent) :
     \qmlproperty real QtQuick.Particles2::TrailEmitter::emitRatePerParticle
 */
 /*!
-    \qmlsignal QtQuick.Particles2::TrailEmitter::emitFollowParticles(Array particles, Particle followed)
+    \qmlsignal QtQuick.Particles2::TrailEmitter::onEmitFollowParticles(Array particles, Particle followed)
 
     This handler is called when particles are emitted from the \a followed particle. \a particles contains an array of particle objects which can be directly manipulated.
 
diff --git a/src/quick/items/qquickdroparea.cpp b/src/quick/items/qquickdroparea.cpp
index ab27993..7d482da 100644
--- a/src/quick/items/qquickdroparea.cpp
+++ b/src/quick/items/qquickdroparea.cpp
@@ -408,8 +408,8 @@ QStringList QQuickDropEvent::keys() const
 */
 
 /*!
-    \qmlmethod void QtQuick2::DragEvent::accept()
-    \qmlmethod void QtQuick2::DragEvent::accept(enumeration action)
+    \qmlmethod QtQuick2::DragEvent::accept()
+    \qmlmethod QtQuick2::DragEvent::accept(enumeration action)
 
     Accepts the drag event.
 
diff --git a/src/quick/items/qquickmousearea.cpp b/src/quick/items/qquickmousearea.cpp
index 26031fd..123aae2 100644
--- a/src/quick/items/qquickmousearea.cpp
+++ b/src/quick/items/qquickmousearea.cpp
@@ -1176,7 +1176,7 @@ void QQuickMouseArea::setHovered(bool h)
 }
 
 /*!
-    \qmlproperty Qt::MouseButtons MouseArea::acceptedButtons
+    \qmlproperty Qt::MouseButtons QtQuick2::MouseArea::acceptedButtons
     This property holds the mouse buttons that the mouse area reacts to.
 
     To specify that the MouseArea will react to multiple buttons,
@@ -1256,7 +1256,7 @@ bool QQuickMouseArea::setPressed(Qt::MouseButton button, bool p)
 
 
 /*!
-    \qmlproperty QtQuick2::Qt::CursorShape MouseArea::cursorShape
+    \qmlproperty Qt::CursorShape QtQuick2::MouseArea::cursorShape
     This property holds the cursor shape for this mouse area.
     Note that on platforms that do not display a mouse cursor this may have
     no effect.
diff --git a/src/quick/items/qquickshadereffectsource.cpp b/src/quick/items/qquickshadereffectsource.cpp
index 2bb2aa6..219258b 100644
--- a/src/quick/items/qquickshadereffectsource.cpp
+++ b/src/quick/items/qquickshadereffectsource.cpp
@@ -608,7 +608,7 @@ QSGTextureProvider *QQuickShaderEffectSource::textureProvider() const
 }
 
 /*!
-    \qmlproperty enumeration ShaderEffectSource::wrapMode
+    \qmlproperty enumeration QtQuick2::ShaderEffectSource::wrapMode
 
     This property defines the OpenGL wrap modes associated with the texture.
     Modifying this property makes most sense when the item is used as a
@@ -640,7 +640,7 @@ void QQuickShaderEffectSource::setWrapMode(WrapMode mode)
 }
 
 /*!
-    \qmlproperty Item ShaderEffectSource::sourceItem
+    \qmlproperty Item QtQuick2::ShaderEffectSource::sourceItem
 
     This property holds the item to be rendered into the texture.
     Setting this to null while \l live is true, will release the texture
@@ -700,7 +700,7 @@ void QQuickShaderEffectSource::sourceItemDestroyed(QObject *item)
 
 
 /*!
-    \qmlproperty rect ShaderEffectSource::sourceRect
+    \qmlproperty rect QtQuick2::ShaderEffectSource::sourceRect
 
     This property defines which rectangular area of the \l sourceItem to
     render into the texture. The source rectangle can be larger than
@@ -723,7 +723,7 @@ void QQuickShaderEffectSource::setSourceRect(const QRectF &rect)
 }
 
 /*!
-    \qmlproperty size ShaderEffectSource::textureSize
+    \qmlproperty size QtQuick2::ShaderEffectSource::textureSize
 
     This property holds the requested size of the texture. If it is empty,
     which is the default, the size of the source rectangle is used.
@@ -748,7 +748,7 @@ void QQuickShaderEffectSource::setTextureSize(const QSize &size)
 }
 
 /*!
-    \qmlproperty enumeration ShaderEffectSource::format
+    \qmlproperty enumeration QtQuick2::ShaderEffectSource::format
 
     This property defines the internal OpenGL format of the texture.
     Modifying this property makes most sense when the item is used as a
@@ -779,7 +779,7 @@ void QQuickShaderEffectSource::setFormat(QQuickShaderEffectSource::Format format
 }
 
 /*!
-    \qmlproperty bool ShaderEffectSource::live
+    \qmlproperty bool QtQuick2::ShaderEffectSource::live
 
     If this property is true, the texture is updated whenever the
     \l sourceItem updates. Otherwise, it will be a frozen image, even if
@@ -801,7 +801,7 @@ void QQuickShaderEffectSource::setLive(bool live)
 }
 
 /*!
-    \qmlproperty bool ShaderEffectSource::hideSource
+    \qmlproperty bool QtQuick2::ShaderEffectSource::hideSource
 
     If this property is true, the \l sourceItem is hidden, though it will still
     be rendered into the texture. As opposed to hiding the \l sourceItem by
@@ -830,7 +830,7 @@ void QQuickShaderEffectSource::setHideSource(bool hide)
 }
 
 /*!
-    \qmlproperty bool ShaderEffectSource::mipmap
+    \qmlproperty bool QtQuick2::ShaderEffectSource::mipmap
 
     If this property is true, mipmaps are generated for the texture.
 
@@ -853,7 +853,7 @@ void QQuickShaderEffectSource::setMipmap(bool enabled)
 }
 
 /*!
-    \qmlproperty bool ShaderEffectSource::recursive
+    \qmlproperty bool QtQuick2::ShaderEffectSource::recursive
 
     Set this property to true if the ShaderEffectSource has a dependency on
     itself. ShaderEffectSources form a dependency chain, where one
@@ -884,7 +884,7 @@ void QQuickShaderEffectSource::setRecursive(bool enabled)
 }
 
 /*!
-    \qmlmethod ShaderEffectSource::scheduleUpdate()
+    \qmlmethod QtQuick2::ShaderEffectSource::scheduleUpdate()
 
     Schedules a re-rendering of the texture for the next frame.
     Use this to update the texture when \l live is false.
diff --git a/src/quick/items/qquickspritesequence.cpp b/src/quick/items/qquickspritesequence.cpp
index 525984c..e7d1e3a 100644
--- a/src/quick/items/qquickspritesequence.cpp
+++ b/src/quick/items/qquickspritesequence.cpp
@@ -252,7 +252,7 @@ struct SpriteVertices {
     If it is possible to return to the goalState from the starting point of the goalState
     it will continue to do so until goalState is set to "" or an unreachable state.
 */
-/*! \qmlmethod void QtQuick2::SpriteSequence::jumpTo(string sprite)
+/*! \qmlmethod QtQuick2::SpriteSequence::jumpTo(string sprite)
 
     This function causes the SpriteSequence to jump to the specified sprite immediately, intermediate
     sprites are not played. The \a sprite argument is the name of the sprite you wish to jump to.
diff --git a/src/quick/items/qquickstateoperations.cpp b/src/quick/items/qquickstateoperations.cpp
index 18d6c6b..995ebbc 100644
--- a/src/quick/items/qquickstateoperations.cpp
+++ b/src/quick/items/qquickstateoperations.cpp
@@ -187,12 +187,12 @@ QQuickParentChange::~QQuickParentChange()
 }
 
 /*!
-    \qmlproperty real ParentChange::x
-    \qmlproperty real ParentChange::y
-    \qmlproperty real ParentChange::width
-    \qmlproperty real ParentChange::height
-    \qmlproperty real ParentChange::scale
-    \qmlproperty real ParentChange::rotation
+    \qmlproperty real QtQuick2::ParentChange::x
+    \qmlproperty real QtQuick2::ParentChange::y
+    \qmlproperty real QtQuick2::ParentChange::width
+    \qmlproperty real QtQuick2::ParentChange::height
+    \qmlproperty real QtQuick2::ParentChange::scale
+    \qmlproperty real QtQuick2::ParentChange::rotation
     These properties hold the new position, size, scale, and rotation
     for the item in this state.
 */
@@ -311,7 +311,7 @@ QQuickItem *QQuickParentChange::originalParent() const
 }
 
 /*!
-    \qmlproperty Item ParentChange::target
+    \qmlproperty Item QtQuick2::ParentChange::target
     This property holds the item to be reparented
 */
 QQuickItem *QQuickParentChange::object() const
@@ -327,7 +327,7 @@ void QQuickParentChange::setObject(QQuickItem *target)
 }
 
 /*!
-    \qmlproperty Item ParentChange::parent
+    \qmlproperty Item QtQuick2::ParentChange::parent
     This property holds the new parent for the item in this state.
 */
 QQuickItem *QQuickParentChange::parent() const
@@ -914,7 +914,7 @@ QQuickAnchorSet *QQuickAnchorChanges::anchors()
 }
 
 /*!
-    \qmlproperty Item AnchorChanges::target
+    \qmlproperty Item QtQuick2::AnchorChanges::target
     This property holds the \l Item for which the anchor changes will be applied.
 */
 QQuickItem *QQuickAnchorChanges::object() const
@@ -930,13 +930,13 @@ void QQuickAnchorChanges::setObject(QQuickItem *target)
 }
 
 /*!
-    \qmlproperty AnchorLine AnchorChanges::anchors.left
-    \qmlproperty AnchorLine AnchorChanges::anchors.right
-    \qmlproperty AnchorLine AnchorChanges::anchors.horizontalCenter
-    \qmlproperty AnchorLine AnchorChanges::anchors.top
-    \qmlproperty AnchorLine AnchorChanges::anchors.bottom
-    \qmlproperty AnchorLine AnchorChanges::anchors.verticalCenter
-    \qmlproperty AnchorLine AnchorChanges::anchors.baseline
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.left
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.right
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.horizontalCenter
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.top
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.bottom
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.verticalCenter
+    \qmlproperty AnchorLine QtQuick2::AnchorChanges::anchors.baseline
 
     These properties change the respective anchors of the item.
 
diff --git a/src/quick/items/qquicktextedit.cpp b/src/quick/items/qquicktextedit.cpp
index 2855070..d84a0e6 100644
--- a/src/quick/items/qquicktextedit.cpp
+++ b/src/quick/items/qquicktextedit.cpp
@@ -822,7 +822,7 @@ int QQuickTextEdit::positionAt(qreal x, qreal y) const
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::moveCursorSelection(int position, SelectionMode mode = TextEdit.SelectCharacters)
+    \qmlmethod QtQuick2::TextEdit::moveCursorSelection(int position, SelectionMode mode = TextEdit.SelectCharacters)
 
     Moves the cursor to \a position and updates the selection according to the optional \a mode
     parameter. (To only move the cursor, set the \l cursorPosition property.)
@@ -1366,7 +1366,7 @@ void QQuickTextEdit::keyReleaseEvent(QKeyEvent *event)
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::deselect()
+    \qmlmethod QtQuick2::TextEdit::deselect()
 
     Removes active text selection.
 */
@@ -1379,7 +1379,7 @@ void QQuickTextEdit::deselect()
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::selectAll()
+    \qmlmethod QtQuick2::TextEdit::selectAll()
 
     Causes all text to be selected.
 */
@@ -1390,7 +1390,7 @@ void QQuickTextEdit::selectAll()
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::selectWord()
+    \qmlmethod QtQuick2::TextEdit::selectWord()
 
     Causes the word closest to the current cursor position to be selected.
 */
@@ -1403,7 +1403,7 @@ void QQuickTextEdit::selectWord()
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::select(int start, int end)
+    \qmlmethod QtQuick2::TextEdit::select(int start, int end)
 
     Causes the text from \a start to \a end to be selected.
 
@@ -1432,7 +1432,7 @@ void QQuickTextEdit::select(int start, int end)
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::isRightToLeft(int start, int end)
+    \qmlmethod QtQuick2::TextEdit::isRightToLeft(int start, int end)
 
     Returns true if the natural reading direction of the editor text
     found between positions \a start and \a end is right to left.
@@ -2106,7 +2106,7 @@ QString QQuickTextEdit::getFormattedText(int start, int end) const
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextEdit::insert(int position, string text)
+    \qmlmethod QtQuick2::TextEdit::insert(int position, string text)
 
     Inserts \a text into the TextEdit at position.
 */
diff --git a/src/quick/items/qquicktextinput.cpp b/src/quick/items/qquicktextinput.cpp
index 54cea8b..60157a6 100644
--- a/src/quick/items/qquicktextinput.cpp
+++ b/src/quick/items/qquicktextinput.cpp
@@ -791,7 +791,7 @@ int QQuickTextInput::selectionEnd() const
     return d->lastSelectionEnd;
 }
 /*!
-    \qmlmethod void QtQuick2::TextInput::select(int start, int end)
+    \qmlmethod QtQuick2::TextInput::select(int start, int end)
 
     Causes the text from \a start to \a end to be selected.
 
@@ -1853,7 +1853,7 @@ QVariant QQuickTextInput::inputMethodQuery(Qt::InputMethodQuery property) const
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextInput::deselect()
+    \qmlmethod QtQuick2::TextInput::deselect()
 
     Removes active text selection.
 */
@@ -1864,7 +1864,7 @@ void QQuickTextInput::deselect()
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextInput::selectAll()
+    \qmlmethod QtQuick2::TextInput::selectAll()
 
     Causes all text to be selected.
 */
@@ -1875,7 +1875,7 @@ void QQuickTextInput::selectAll()
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextInput::isRightToLeft(int start, int end)
+    \qmlmethod QtQuick2::TextInput::isRightToLeft(int start, int end)
 
     Returns true if the natural reading direction of the editor text
     found between positions \a start and \a end is right to left.
@@ -1962,7 +1962,7 @@ void QQuickTextInput::redo()
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextInput::insert(int position, string text)
+    \qmlmethod QtQuick2::TextInput::insert(int position, string text)
 
     Inserts \a text into the TextInput at position.
 */
@@ -2114,7 +2114,7 @@ void QQuickTextInput::remove(int start, int end)
 
 
 /*!
-    \qmlmethod void QtQuick2::TextInput::selectWord()
+    \qmlmethod QtQuick2::TextInput::selectWord()
 
     Causes the word closest to the current cursor position to be selected.
 */
@@ -2320,7 +2320,7 @@ void QQuickTextInput::moveCursorSelection(int position)
 }
 
 /*!
-    \qmlmethod void QtQuick2::TextInput::moveCursorSelection(int position, SelectionMode mode = TextInput.SelectCharacters)
+    \qmlmethod QtQuick2::TextInput::moveCursorSelection(int position, SelectionMode mode = TextInput.SelectCharacters)
 
     Moves the cursor to \a position and updates the selection according to the optional \a mode
     parameter.  (To only move the cursor, set the \l cursorPosition property.)