diff --git a/src/plugins/sensorgestures/qtsensors/qcoversensorgesturerecognizer.cpp b/src/plugins/sensorgestures/qtsensors/qcoversensorgesturerecognizer.cpp
index 76cf15e..bfc1f82 100644
--- a/src/plugins/sensorgestures/qtsensors/qcoversensorgesturerecognizer.cpp
+++ b/src/plugins/sensorgestures/qtsensors/qcoversensorgesturerecognizer.cpp
@@ -113,7 +113,7 @@ void QCoverSensorGestureRecognizer::proximityChanged(QIRProximityReading *readin
         return;
 
     proximityReading = reading->reflectance();
-    qreal difference =  lastProx - proximityReading;
+    const qreal difference =  lastProx - proximityReading;
 
     if (qAbs(difference) < .15) {
         return;
diff --git a/src/plugins/sensorgestures/qtsensors/qpickupsensorgesturerecognizer.cpp b/src/plugins/sensorgestures/qtsensors/qpickupsensorgesturerecognizer.cpp
index cbe2e46..dd3d768 100644
--- a/src/plugins/sensorgestures/qtsensors/qpickupsensorgesturerecognizer.cpp
+++ b/src/plugins/sensorgestures/qtsensors/qpickupsensorgesturerecognizer.cpp
@@ -109,12 +109,12 @@ bool QPickupSensorGestureRecognizer::isActive()
 void QPickupSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
 {
     accelReading = reading;
-    qreal x = reading->x();
-    qreal xdiff =  pXaxis - x;
-    qreal y = reading->y();
-    qreal ydiff = pYaxis - y;
-    qreal z = reading->z();
-    qreal zdiff =  pZaxis - z;
+    const qreal x = reading->x();
+    const qreal xdiff =  pXaxis - x;
+    const qreal y = reading->y();
+    const qreal ydiff = pYaxis - y;
+    const qreal z = reading->z();
+    const qreal zdiff =  pZaxis - z;
 
     pitch = qAtan(y / qSqrt(x*x + z*z)) * RADIANS_TO_DEGREES;
 
@@ -159,11 +159,11 @@ void QPickupSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading
 
 void QPickupSensorGestureRecognizer::timeout()
 {
-    qreal x = accelReading->x();
-    qreal y = accelReading->y();
-    qreal z = accelReading->z();
+    const qreal x = accelReading->x();
+    const qreal y = accelReading->y();
+    const qreal z = accelReading->z();
 
-    qreal roll = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
+    const qreal roll = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
 
     bool ok = true;
     for (int i = 0; i < zList.count() - 1; i++) {
diff --git a/src/plugins/sensorgestures/qtsensors/qshake2recognizer.cpp b/src/plugins/sensorgestures/qtsensors/qshake2recognizer.cpp
index 58aad7c..c7686c8 100644
--- a/src/plugins/sensorgestures/qtsensors/qshake2recognizer.cpp
+++ b/src/plugins/sensorgestures/qtsensors/qshake2recognizer.cpp
@@ -107,9 +107,9 @@ QString QShake2SensorGestureRecognizer::id() const
 
 void QShake2SensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
 {
-    qreal x = reading->x();
-    qreal y = reading->y();
-    qreal z = reading->z();
+    const qreal x = reading->x();
+    const qreal y = reading->y();
+    const qreal z = reading->z();
 
     currentData.x = x;
     currentData.y = y;
@@ -150,10 +150,10 @@ void QShake2SensorGestureRecognizer::accelChanged(QAccelerometerReading *reading
 
         if (shakeCount == 0 && shakeDirection == QShake2SensorGestureRecognizer::ShakeUndefined) {
 
-            int xdiff = currentData.x - prevData.x;
-            int ydiff = currentData.y - prevData.y;
+            const int xdiff = currentData.x - prevData.x;
+            const int ydiff = currentData.y - prevData.y;
 
-            int max = qMax(qAbs(ydiff), qAbs(xdiff));
+            const int max = qMax(qAbs(ydiff), qAbs(xdiff));
 
             if (max == qAbs(xdiff)) {
                 if (isNegative(xdiff))
@@ -188,9 +188,9 @@ void QShake2SensorGestureRecognizer::timeout()
 }
 bool QShake2SensorGestureRecognizer::checkForShake(ShakeData prevSensorData, ShakeData currentSensorData, qreal threshold)
 {
-    double deltaX = qAbs(prevSensorData.x - currentSensorData.x);
-    double deltaY = qAbs(prevSensorData.y - currentSensorData.y);
-    double deltaZ = qAbs(prevSensorData.z - currentSensorData.z);
+    const double deltaX = qAbs(prevSensorData.x - currentSensorData.x);
+    const double deltaY = qAbs(prevSensorData.y - currentSensorData.y);
+    const double deltaZ = qAbs(prevSensorData.z - currentSensorData.z);
 
     return (deltaX > threshold
             || deltaY > threshold
diff --git a/src/plugins/sensorgestures/qtsensors/qslamgesturerecognizer.cpp b/src/plugins/sensorgestures/qtsensors/qslamgesturerecognizer.cpp
index 5d9c6b4..f8db7c2 100644
--- a/src/plugins/sensorgestures/qtsensors/qslamgesturerecognizer.cpp
+++ b/src/plugins/sensorgestures/qtsensors/qslamgesturerecognizer.cpp
@@ -132,9 +132,9 @@ void QSlamSensorGestureRecognizer::orientationReadingChanged(QOrientationReading
 
 void QSlamSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
 {
-    qreal x = reading->x();
-    qreal y = reading->y();
-    qreal z = reading->z();
+    const qreal x = reading->x();
+    const qreal y = reading->y();
+    const qreal z = reading->z();
 
     if (qAbs(lastX - x) < 2 && qAbs(lastY - y) < 2 && qAbs(lastZ - z) < 2) {
         resting = true;
@@ -153,7 +153,7 @@ void QSlamSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
     if (orientationReading == 0)
         return;
 
-    qreal difference = lastX - x;
+    const qreal difference = lastX - x;
 
     roll = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
 
diff --git a/src/plugins/sensorgestures/qtsensors/qtwistsensorgesturerecognizer.cpp b/src/plugins/sensorgestures/qtsensors/qtwistsensorgesturerecognizer.cpp
index 80eb378..3956f17 100644
--- a/src/plugins/sensorgestures/qtsensors/qtwistsensorgesturerecognizer.cpp
+++ b/src/plugins/sensorgestures/qtsensors/qtwistsensorgesturerecognizer.cpp
@@ -129,15 +129,15 @@ void QTwistSensorGestureRecognizer::orientationReadingChanged(QOrientationReadin
 
 void QTwistSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
 {
-    qreal x = reading->x();
-    qreal y = reading->y();
-    qreal z = reading->z();
+    const qreal x = reading->x();
+    const qreal y = reading->y();
+    const qreal z = reading->z();
 
-    qreal diffX = lastX - x;
-    qreal diffY = lastY - y;
+    const qreal diffX = lastX - x;
+    const qreal diffY = lastY - y;
     pitch = qAtan(y / qSqrt(x*x + z*z)) * RADIANS_TO_DEGREES;
 
-    qreal degrees = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
+    const qreal degrees = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
 
     if (orientationReading == 0)
         return;
diff --git a/src/plugins/sensorgestures/qtsensors/qwhipsensorgesturerecognizer.cpp b/src/plugins/sensorgestures/qtsensors/qwhipsensorgesturerecognizer.cpp
index 27aff5b..e36fd26 100644
--- a/src/plugins/sensorgestures/qtsensors/qwhipsensorgesturerecognizer.cpp
+++ b/src/plugins/sensorgestures/qtsensors/qwhipsensorgesturerecognizer.cpp
@@ -130,12 +130,12 @@ void QWhipSensorGestureRecognizer::orientationReadingChanged(QOrientationReading
 
 void QWhipSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
 {
-    qreal x = reading->x();
-    qreal difference = lastX - x;
-    qreal z = reading->z();
+    const qreal x = reading->x();
+    const qreal difference = lastX - x;
+    const qreal z = reading->z();
 
     qreal averageZ = 0;
-    Q_FOREACH (qreal az, zList) {
+    Q_FOREACH (const qreal az, zList) {
         averageZ += az;
     }
     if (zList.count() > 0)
@@ -151,8 +151,8 @@ void QWhipSensorGestureRecognizer::accelChanged(QAccelerometerReading *reading)
     if (orientationReading == 0)
         return;
 
-    qreal y = reading->y();
-    qreal roll = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
+    const qreal y = reading->y();
+    const qreal roll = qAtan(x / qSqrt(y*y + z*z)) * RADIANS_TO_DEGREES;
 
     if (detecting) {
         if (roll > WHIP_Y_DEGREES