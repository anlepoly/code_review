diff --git a/tools/qdoc3/ditaxmlgenerator.cpp b/tools/qdoc3/ditaxmlgenerator.cpp
index 0713c80..cd8c349 100644
--- a/tools/qdoc3/ditaxmlgenerator.cpp
+++ b/tools/qdoc3/ditaxmlgenerator.cpp
@@ -200,6 +200,7 @@ QString DitaXmlGenerator::ditaTags[] =
         "linktext",
         "lq",
         "map",
+        "mapref",
         "metadata",
         "note",
         "ol",
@@ -5979,18 +5980,21 @@ void DitaXmlGenerator::writeDitaMap(const DitaMapNode* node)
     xmlWriter().writeCharacters(node->title());
     writeEndTag(); // </shortdesc>
     writeEndTag(); // </topicmeta>
-    const QList<Topicref*> map = node->map();
-    writeTopicrefs(map);
+    const DitaRefList map = node->map();
+    writeDitaRefs(map);
     endSubPage();
 }
 
 /*!
-  Write the \a topicrefs to the current output file.
+  Write the \a ditarefs to the current output file.
  */
-void DitaXmlGenerator::writeTopicrefs(const QList<Topicref*>& topicrefs)
+void DitaXmlGenerator::writeDitaRefs(const DitaRefList& ditarefs)
 {
-    foreach (Topicref* t, topicrefs) {
-        writeStartTag(DT_topicref);
+    foreach (DitaRef* t, ditarefs) {
+        if (t->isMapRef())
+            writeStartTag(DT_mapref);
+        else
+            writeStartTag(DT_topicref);
         xmlWriter().writeAttribute("navtitle",t->navtitle());
         if (t->href().isEmpty()) {
             const FakeNode* fn = tree_->findFakeNodeByTitle(t->navtitle());
@@ -5999,9 +6003,9 @@ void DitaXmlGenerator::writeTopicrefs(const QList<Topicref*>& topicrefs)
         }
         else
             xmlWriter().writeAttribute("href",t->href());
-        if (!t->subrefs().isEmpty())
-            writeTopicrefs(t->subrefs());
-        writeEndTag(); // </topicref>
+        if (t->subrefs() && !t->subrefs()->isEmpty())
+            writeDitaRefs(*(t->subrefs()));
+        writeEndTag(); // </topicref> or </mapref>
     }
 }
 
diff --git a/tools/qdoc3/ditaxmlgenerator.h b/tools/qdoc3/ditaxmlgenerator.h
index 7a9440c..581ad57 100644
--- a/tools/qdoc3/ditaxmlgenerator.h
+++ b/tools/qdoc3/ditaxmlgenerator.h
@@ -209,6 +209,7 @@ class DitaXmlGenerator : public PageGenerator
         DT_linktext,
         DT_lq,
         DT_map,
+        DT_mapref,
         DT_metadata,
         DT_note,
         DT_ol,
@@ -455,7 +456,7 @@ class DitaXmlGenerator : public PageGenerator
     QString metadataDefault(DitaTag t) const;
     QString stripMarkup(const QString& src) const;
     void collectNodesByTypeAndSubtype(const InnerNode* parent);
-    void writeTopicrefs(const QList<Topicref*>& topicrefs);
+    void writeDitaRefs(const DitaRefList& ditarefs);
     void writeTopicrefs(NodeMultiMap* nmm, const QString& navtitle);
     bool isDuplicate(NodeMultiMap* nmm, const QString& key, Node* node);
 
diff --git a/tools/qdoc3/doc.cpp b/tools/qdoc3/doc.cpp
index 427da7a..f437707 100644
--- a/tools/qdoc3/doc.cpp
+++ b/tools/qdoc3/doc.cpp
@@ -99,6 +99,7 @@ enum {
     CMD_ENDLEGALESE,
     CMD_ENDLINK,
     CMD_ENDLIST,
+    CMD_ENDMAPREF,
     CMD_ENDOMIT,
     CMD_ENDPART,
     CMD_ENDQUOTATION,
@@ -127,6 +128,7 @@ enum {
     CMD_LEGALESE,
     CMD_LINK,
     CMD_LIST,
+    CMD_MAPREF,
     CMD_META,
     CMD_NEWCODE,
     CMD_NOTE,
@@ -210,6 +212,7 @@ static struct {
     { "endlegalese", CMD_ENDLEGALESE, 0 },
     { "endlink", CMD_ENDLINK, 0 },
     { "endlist", CMD_ENDLIST, 0 },
+    { "endmapref", CMD_ENDMAPREF, 0 },
     { "endomit", CMD_ENDOMIT, 0 },
     { "endpart", CMD_ENDPART, 0 },
     { "endquotation", CMD_ENDQUOTATION, 0 },
@@ -238,6 +241,7 @@ static struct {
     { "legalese", CMD_LEGALESE, 0 },
     { "link", CMD_LINK, 0 },
     { "list", CMD_LIST, 0 },
+    { "mapref", CMD_MAPREF, 0 },
     { "meta", CMD_META, 0 },
     { "newcode", CMD_NEWCODE, 0 },
     { "note", CMD_NOTE, 0 },
@@ -361,7 +365,7 @@ class DocPrivate : public Shared
     bool hasSectioningUnits : 1;
     DocPrivateExtra *extra;
     TopicList topics;
-    QList<Topicref*> ditamap_;
+    DitaRefList ditamap_;
 };
 
 DocPrivate::DocPrivate(const Location& start,
@@ -377,10 +381,14 @@ DocPrivate::DocPrivate(const Location& start,
     // nothing.
 }
 
+/*!
+  If the doc is a ditamap, the destructor deletes each element
+  in the ditamap structure. These were allocated as needed.
+ */
 DocPrivate::~DocPrivate()
 {
     delete extra;
-    foreach (Topicref* t, ditamap_) {
+    foreach (DitaRef* t, ditamap_) {
         delete t;
     }
 }
@@ -519,7 +527,7 @@ class DocParser
     QStack<int> openedCommands;
     QStack<OpenedList> openedLists;
     Quoter quoter;
-    QStack<Topicref*> topicrefs_;
+    QStack<DitaRef*> ditarefs_;
 };
 
 int DocParser::tabSize;
@@ -794,9 +802,10 @@ void DocParser::parse(const QString& source,
                             openedLists.pop();
                         }
                         break;
+                    case CMD_ENDMAPREF:
                     case CMD_ENDTOPICREF:
                         if (closeCommand(cmd)) {
-                            topicrefs_.pop(); // zzz
+                            ditarefs_.pop(); // zzz
                         }
                         break;
                     case CMD_ENDOMIT:
@@ -975,17 +984,23 @@ void DocParser::parse(const QString& source,
                         }
                         break;
                     case CMD_TOPICREF:
+                    case CMD_MAPREF:
                         if (openCommand(cmd)) {
-                            Topicref* t = new Topicref();
+                            DitaRef* t = 0;
+                            if (cmd == CMD_MAPREF)
+                                t = new MapRef();
+                            else
+                                t = new TopicRef();
                             t->setNavtitle(getArgument(true));
-                            t->setHref(getOptionalArgument());
-                            if (topicrefs_.isEmpty()) {
+                            if (cmd == CMD_MAPREF)
+                                t->setHref(getArgument());
+                            else
+                                t->setHref(getOptionalArgument());
+                            if (ditarefs_.isEmpty())
                                 priv->ditamap_.append(t);
-                            }
-                            else {
-                                topicrefs_.top()->appendSubref(t);
-                            }
-                            topicrefs_.push(t);
+                            else
+                                ditarefs_.top()->appendSubref(t);
+                            ditarefs_.push(t);
                         }
                         break;
                     case CMD_META:
@@ -1847,7 +1862,9 @@ bool DocParser::openCommand(int cmd)
             ok = false;
         }
         else if (outer == CMD_TOPICREF)
-            ok = (cmd == CMD_TOPICREF);
+            ok = (cmd == CMD_TOPICREF || cmd == CMD_MAPREF);
+        else if (outer == CMD_MAPREF)
+            ok = false;
     }
 
     if (ok) {
@@ -2655,6 +2672,8 @@ int DocParser::endCmdFor(int cmd)
         return CMD_ENDTABLE;
     case CMD_TOPICREF:
         return CMD_ENDTOPICREF;
+    case CMD_MAPREF:
+        return CMD_ENDMAPREF;
     default:
         return cmd;
     }
@@ -3344,11 +3363,11 @@ void Doc::detach()
 }
 
 /*!
-  The destructor deletes all the sub-Topicrefs.
+  The destructor deletes all the sub-TopicRefs.
  */
-Topicref::~Topicref()
+TopicRef::~TopicRef()
 {
-    foreach (Topicref* t, subrefs_) {
+    foreach (DitaRef* t, subrefs_) {
         delete t;
     }
 }
@@ -3357,6 +3376,6 @@ Topicref::~Topicref()
   Returns a reference to the structure that will be used
   for generating a DITA mao.
  */
-const QList<Topicref*>& Doc::ditamap() const { return priv->ditamap_; }
+const DitaRefList& Doc::ditamap() const { return priv->ditamap_; }
 
 QT_END_NAMESPACE
diff --git a/tools/qdoc3/doc.h b/tools/qdoc3/doc.h
index 518ace9..f96240e 100644
--- a/tools/qdoc3/doc.h
+++ b/tools/qdoc3/doc.h
@@ -61,6 +61,7 @@ class DocPrivate;
 class Quoter;
 class Text;
 class FakeNode;
+class DitaRef;
 
 typedef QMap<QString, QStringList> QCommandMap;
 typedef QMap<QString, QString> QStringMap;
@@ -74,23 +75,48 @@ struct Topic
 };
 typedef QList<Topic> TopicList;
 
-class Topicref
+typedef QList<DitaRef*> DitaRefList;
+
+class DitaRef
 {
  public:
-    Topicref() { }
-    ~Topicref();
+    DitaRef() { }
+    virtual ~DitaRef() { }
 
     const QString& navtitle() const { return navtitle_; }
     const QString& href() const { return href_; }
     void setNavtitle(const QString& t) { navtitle_ = t; }
     void setHref(const QString& t) { href_ = t; }
-    const QList<Topicref*>& subrefs() const { return subrefs_; }
-    void appendSubref(Topicref* t) { subrefs_.append(t); }
+    virtual bool isMapRef() const = 0;
+    virtual const DitaRefList* subrefs() const { return 0; }
+    virtual void appendSubref(DitaRef* ) { }
 
  private:
     QString navtitle_;
     QString href_;
-    QList<Topicref*> subrefs_;
+};
+
+class TopicRef : public DitaRef
+{
+ public:
+    TopicRef() { }
+    ~TopicRef();
+
+    virtual bool isMapRef() const { return false; }
+    virtual const DitaRefList* subrefs() const { return &subrefs_; }
+    virtual void appendSubref(DitaRef* t) { subrefs_.append(t); }
+
+ private:
+    DitaRefList subrefs_;
+};
+
+class MapRef : public DitaRef
+{
+ public:
+    MapRef() { }
+    ~MapRef() { }
+
+    virtual bool isMapRef() const { return true; }
 };
 
 class Doc
@@ -126,7 +152,7 @@ class Doc
                           const QStringList &newNames);
     void simplifyEnumDoc();
     void setBody(const Text &body);
-    const QList<Topicref*>& ditamap() const;
+    const DitaRefList& ditamap() const;
 
     const Location &location() const;
     bool isEmpty() const;
diff --git a/tools/qdoc3/htmlgenerator.cpp b/tools/qdoc3/htmlgenerator.cpp
index 57adb21..1ef3bea 100644
--- a/tools/qdoc3/htmlgenerator.cpp
+++ b/tools/qdoc3/htmlgenerator.cpp
@@ -5083,18 +5083,21 @@ void HtmlGenerator::writeDitaMap(const DitaMapNode* node)
     xmlWriter().writeCharacters(node->title());
     xmlWriter().writeEndElement(); // </shortdesc>
     xmlWriter().writeEndElement(); // </topicmeta>
-    const QList<Topicref*> map = node->map();
-    writeTopicrefs(map);
+    DitaRefList map = node->map();
+    writeDitaRefs(map);
     endDitamapPage();
 }
 
 /*!
-  Write the \a topicrefs to the current output file.
+  Write the \a ditarefs to the current output file.
  */
-void HtmlGenerator::writeTopicrefs(const QList<Topicref*>& topicrefs)
+void HtmlGenerator::writeDitaRefs(const DitaRefList& ditarefs)
 {
-    foreach (Topicref* t, topicrefs) {
-        xmlWriter().writeStartElement("topicref");
+    foreach (DitaRef* t, ditarefs) {
+        if (t->isMapRef())
+            xmlWriter().writeStartElement("mapref");
+        else
+            xmlWriter().writeStartElement("topicref");
         xmlWriter().writeAttribute("navtitle",t->navtitle());
         if (t->href().isEmpty()) {
             const FakeNode* fn = myTree->findFakeNodeByTitle(t->navtitle());
@@ -5103,9 +5106,9 @@ void HtmlGenerator::writeTopicrefs(const QList<Topicref*>& topicrefs)
         }
         else
             xmlWriter().writeAttribute("href",t->href());
-        if (!t->subrefs().isEmpty())
-            writeTopicrefs(t->subrefs());
-        xmlWriter().writeEndElement(); // </topicref>
+        if (t->subrefs() && !t->subrefs()->isEmpty())
+            writeDitaRefs(*(t->subrefs()));
+        xmlWriter().writeEndElement(); // </topicref> or </mapref>
     }
 }
 
diff --git a/tools/qdoc3/htmlgenerator.h b/tools/qdoc3/htmlgenerator.h
index 5486a30..06234a8 100644
--- a/tools/qdoc3/htmlgenerator.h
+++ b/tools/qdoc3/htmlgenerator.h
@@ -253,7 +253,7 @@ class HtmlGenerator : public PageGenerator
     void beginDitamapPage(const InnerNode* node, const QString& fileName);
     void endDitamapPage();
     void writeDitaMap(const DitaMapNode* node);
-    void writeTopicrefs(const QList<Topicref*>& topicrefs);
+    void writeDitaRefs(const DitaRefList& ditarefs);
     QXmlStreamWriter& xmlWriter();
 
     QMap<QString, QString> refMap;
diff --git a/tools/qdoc3/node.h b/tools/qdoc3/node.h
index 1efcb28..c64290b 100644
--- a/tools/qdoc3/node.h
+++ b/tools/qdoc3/node.h
@@ -950,7 +950,7 @@ class DitaMapNode : public FakeNode
         : FakeNode(parent, name, Node::Page, Node::DitaMapPage) { }
     virtual ~DitaMapNode() { }
 
-    const QList<Topicref*>& map() const { return doc().ditamap(); }
+    const DitaRefList& map() const { return doc().ditamap(); }
 };
 
 QT_END_NAMESPACE