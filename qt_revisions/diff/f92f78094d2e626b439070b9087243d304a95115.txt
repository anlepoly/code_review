diff --git a/tests/auto/widgets/widgets/qmenubar/tst_qmenubar.cpp b/tests/auto/widgets/widgets/qmenubar/tst_qmenubar.cpp
index 68620f6..c8b5d95 100644
--- a/tests/auto/widgets/widgets/qmenubar/tst_qmenubar.cpp
+++ b/tests/auto/widgets/widgets/qmenubar/tst_qmenubar.cpp
@@ -110,6 +110,8 @@ private slots:
     void removeItem();
     void count();
     void insertItem_QString_QObject();
+
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
     void accel();
     void activatedCount();
     void allowActiveAndDisabled();
@@ -119,9 +121,11 @@ private slots:
     void check_cursorKeys2();
     void check_cursorKeys3();
 
-    void check_homeKey();
-    void check_endKey();
     void check_escKey();
+#endif
+
+    void check_endKey();
+    void check_homeKey();
 
 //     void check_mouse1_data();
 //     void check_mouse1();
@@ -129,12 +133,16 @@ private slots:
 //     void check_mouse2();
 
     void check_altPress();
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
     void check_shortcutPress();
     void check_menuPosition();
+#endif
     void task223138_triggered();
     void task256322_highlight();
     void menubarSizeHint();
+#ifndef Q_OS_MAC
     void taskQTBUG4965_escapeEaten();
+#endif
     void taskQTBUG11823_crashwithInvisibleActions();
 
 protected slots:
@@ -324,12 +332,10 @@ void tst_QMenuBar::onActivated( QAction* action )
 //     printf( QString("acceleratorId: %1, count: %1\n").arg( i ).arg(activated_count) );
 }
 
+// On Mac/WinCE, native key events are needed to test menu action activation
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::accel()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("On Mac/WinCE, native key events are needed to test menu action activation");
-#endif
-
     // create a popup menu with menu items set the accelerators later...
     initSimpleMenubar();
 
@@ -341,12 +347,12 @@ void tst_QMenuBar::accel()
 
     QCOMPARE( last_accel_id, action );
 }
+#endif
 
+// On Mac/WinCE, native key events are needed to test menu action activation
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::activatedCount()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("On Mac/WinCE, native key events are needed to test menu action activation");
-#endif
     // create a popup menu with menu items set the accelerators later...
     initSimpleMenubar();
 
@@ -354,6 +360,7 @@ void tst_QMenuBar::activatedCount()
 //wait(5000);
     QCOMPARE( activated_count, 2 ); //1 from the popupmenu and 1 from the menubar
 }
+#endif
 
 void tst_QMenuBar::clear()
 {
@@ -556,11 +563,10 @@ void tst_QMenuBar::insertItem_QString_QObject()
     QVERIFY(actions.size() < 4); // there is no menu 4!
 }
 
+// On Mac/WinCE, native key events are needed to test menu action activation
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_accelKeys()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("On Mac/WinCE, native key events are needed to test menu action activation");
-#endif
     initComplexMenubar();
 
     // start with a bogus key that shouldn't trigger anything
@@ -624,13 +630,12 @@ void tst_QMenuBar::check_accelKeys()
     QCOMPARE(item2_C->selCount(), 1u);
     QCOMPARE(item2_D->selCount(), 1u);
 }
+#endif
 
+// On Mac/WinCE, native key events are needed to test menu action activation
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_cursorKeys1()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("Qt/Mac,WinCE does not use the native popups/menubar");
-#endif
-
     initComplexMenubar();
 
     // start with a ALT + 1 that activates the first popupmenu
@@ -655,13 +660,12 @@ void tst_QMenuBar::check_cursorKeys1()
     QCOMPARE(item2_C->selCount(), 0u);
     QCOMPARE(item2_D->selCount(), 0u);
 }
+#endif
 
+// Qt/Mac,WinCE does not use the native popups/menubar
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_cursorKeys2()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("Qt/Mac,WinCE does not use the native popups/menubar");
-#endif
-
     initComplexMenubar();
 
     // select popupmenu2
@@ -682,16 +686,15 @@ void tst_QMenuBar::check_cursorKeys2()
     QCOMPARE(item2_C->selCount(), 0u);
     QCOMPARE(item2_D->selCount(), 1u);
 }
+#endif
 
 /*!
     If a popupmenu is active you can use Left to move to the menu to the left of it.
 */
+// Qt/Mac,WinCE does not use the native popups/menubar
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_cursorKeys3()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("Qt/Mac,WinCE does not use the native popups/menubar");
-#endif
-
     initComplexMenubar();
 
     // select Popupmenu 2
@@ -710,6 +713,7 @@ void tst_QMenuBar::check_cursorKeys3()
     QCOMPARE(item2_C->selCount(), 0u);
     QCOMPARE(item2_D->selCount(), 0u);
 }
+#endif
 
 /*!
     If a popupmenu is active you can use home to go quickly to the first item in the menu.
@@ -790,12 +794,10 @@ void tst_QMenuBar::check_endKey()
     If Down is pressed next the popup is activated again.
 */
 
+// Qt/Mac,WinCE does not use the native popups/menubar
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_escKey()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("Qt/Mac,WinCE does not use the native popups/menubar");
-#endif
-
     initComplexMenubar();
 
     QVERIFY( !pm1->isActiveWindow() );
@@ -824,6 +826,7 @@ void tst_QMenuBar::check_escKey()
     // Let's see if the correct slot is called...
     QVERIFY2( item2_C->selCount() == 1, "Expected item 2C to be selected" );
 }
+#endif
 
 
 // void tst_QMenuBar::check_mouse1_data()
@@ -932,10 +935,9 @@ void tst_QMenuBar::check_escKey()
 //     QCOMPARE(item2_H->selCount(), (uint)itemH_count);
 // }
 
-void
-tst_QMenuBar::allowActiveAndDisabled()
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
+void tst_QMenuBar::allowActiveAndDisabled()
 {
-#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE_WM)
     mb->hide();
     mb->clear();
 
@@ -973,8 +975,8 @@ tst_QMenuBar::allowActiveAndDisabled()
         QCOMPARE(mb->activeAction()->text(), fileMenu.title());
 
     mb->hide();
-#endif //Q_OS_MAC
 }
+#endif
 
 void tst_QMenuBar::check_altPress()
 {
@@ -993,12 +995,10 @@ void tst_QMenuBar::check_altPress()
     QVERIFY( ::qobject_cast<QMenuBar *>(qApp->focusWidget()) );
 }
 
+// Qt/Mac,WinCE does not use the native popups/menubar
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_shortcutPress()
 {
-#if defined(Q_OS_MAC) || defined(Q_OS_WINCE_WM)
-    QSKIP("Qt/Mac,WinCE does not use the native popups/menubar");
-#endif
-
     initComplexMenubar();
 
     qApp->setActiveWindow(mw);
@@ -1013,15 +1013,12 @@ void tst_QMenuBar::check_shortcutPress()
     QTest::keyClick(mb, Qt::Key_2);
     QVERIFY(pm1->isActiveWindow());
 }
+#endif
 
+// Qt/Mac,WinCE does not use the native popups/menubar
+#if !defined(Q_OS_MAC) && !defined(Q_OS_WINCE)
 void tst_QMenuBar::check_menuPosition()
 {
-#ifdef Q_OS_MAC
-    QSKIP("Qt/Mac does not use the native popups/menubar");
-#endif
-#ifdef Q_OS_WINCE_WM
-    QSKIP("Qt/CE uses native menubar");
-#endif
     Menu menu;
     initComplexMenubar();
     menu.setTitle("&menu");
@@ -1086,8 +1083,8 @@ void tst_QMenuBar::check_menuPosition()
         menu.close();
         qApp->setLayoutDirection(dir);
     }
-
 }
+#endif
 
 void tst_QMenuBar::task223138_triggered()
 {
@@ -1228,11 +1225,10 @@ void tst_QMenuBar::menubarSizeHint()
     QCOMPARE(resSize, mb.sizeHint());
 }
 
+// On Mac, do not test the menubar with escape key
+#ifndef Q_OS_MAC
 void tst_QMenuBar::taskQTBUG4965_escapeEaten()
 {
-#ifdef Q_OS_MAC
-    QSKIP("On Mac, do not test the menubar with escape key");
-#endif
     QMenuBar menubar;
     QMenu menu("menu1");
     QAction *first = menubar.addMenu(&menu);
@@ -1254,6 +1250,7 @@ void tst_QMenuBar::taskQTBUG4965_escapeEaten()
     QTest::keyClick(static_cast<QWidget *>(0), Qt::Key_Escape); //now the action should be triggered
     QTRY_VERIFY(!menubar.isVisible());
 }
+#endif
 
 void tst_QMenuBar::taskQTBUG11823_crashwithInvisibleActions()
 {