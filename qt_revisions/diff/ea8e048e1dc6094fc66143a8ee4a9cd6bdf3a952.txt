diff --git a/src/corelib/statemachine/qstatemachine.cpp b/src/corelib/statemachine/qstatemachine.cpp
index cba85d2..52fd806 100644
--- a/src/corelib/statemachine/qstatemachine.cpp
+++ b/src/corelib/statemachine/qstatemachine.cpp
@@ -2346,7 +2346,7 @@ QStateMachine::SignalEvent::~SignalEvent()
 /*!
   \class QStateMachine::WrappedEvent
 
-  \brief The WrappedEvent class holds a clone of an event associated with a QObject.
+  \brief The WrappedEvent class inherits QEvent and holds a clone of an event associated with a QObject.
 
   \since 4.6
   \ingroup statemachine
diff --git a/src/corelib/tools/qdatetime.cpp b/src/corelib/tools/qdatetime.cpp
index 25851bf..f34176c 100644
--- a/src/corelib/tools/qdatetime.cpp
+++ b/src/corelib/tools/qdatetime.cpp
@@ -398,7 +398,7 @@ int QDate::day() const
 }
 
 /*!
-    Returns the weekday (1 to 7) for this date.
+    Returns the weekday (1 = Monday to 7 = Sunday) for this date.
 
     Returns 0 if the date is invalid.
 
diff --git a/src/corelib/tools/qelapsedtimer.cpp b/src/corelib/tools/qelapsedtimer.cpp
index 7013e4f..e8f2ce1 100644
--- a/src/corelib/tools/qelapsedtimer.cpp
+++ b/src/corelib/tools/qelapsedtimer.cpp
@@ -230,7 +230,7 @@ void QElapsedTimer::invalidate()
 }
 
 /*!
-    Returns true if this object was invalidated by a call to invalidate() and
+    Returns false if this object was invalidated by a call to invalidate() and
     has not been restarted since.
 
     \sa invalidate(), start(), restart()
diff --git a/src/sql/kernel/qsqlrecord.cpp b/src/sql/kernel/qsqlrecord.cpp
index 6be7539..93ef589 100644
--- a/src/sql/kernel/qsqlrecord.cpp
+++ b/src/sql/kernel/qsqlrecord.cpp
@@ -243,8 +243,9 @@ int QSqlRecord::indexOf(const QString& name) const
 }
 
 /*!
-    Returns the field at position \a index. If the position is out of
-    range, an empty field is returned.
+    Returns the field at position \a index. If the \a index
+    is out of range, function returns
+    a \l{default-constructed value}.
  */
 QSqlField QSqlRecord::field(int index) const
 {
diff --git a/src/widgets/widgets/qmenubar.cpp b/src/widgets/widgets/qmenubar.cpp
index 543ed0d..f1269fd 100644
--- a/src/widgets/widgets/qmenubar.cpp
+++ b/src/widgets/widgets/qmenubar.cpp
@@ -1785,6 +1785,8 @@ QWidget *QMenuBar::cornerWidget(Qt::Corner corner) const
     The default is to follow whether the Qt::AA_DontUseNativeMenuBar attribute
     is set for the application. Explicitly settings this property overrides
     the presence (or abscence) of the attribute.
+
+    \sa void-qt-mac-set-native-menubar-bool-enable
 */
 
 void QMenuBar::setNativeMenuBar(bool nativeMenuBar)
@@ -1882,6 +1884,8 @@ QAction *QMenuBar::defaultAction() const
     is triggered as a result of a mouse click; \a action is the action that
     caused the signal to be emitted.
 
+    \note QMenuBar has to have ownership of the QMenu in order this signal to work.
+
     Normally, you connect each menu action to a single slot using
     QAction::triggered(), but sometimes you will want to connect
     several items to a single slot (most often if the user selects