diff --git a/src/corelib/statemachine/qstatemachine.cpp b/src/corelib/statemachine/qstatemachine.cpp
index 2453ae9..e53d86a 100644
--- a/src/corelib/statemachine/qstatemachine.cpp
+++ b/src/corelib/statemachine/qstatemachine.cpp
@@ -757,20 +757,7 @@ void QStateMachinePrivate::applyProperties(const QList<QAbstractTransition*> &tr
     }
 
     // Find the animations to use for the state change.
-    QList<QAbstractAnimation*> selectedAnimations;
-    if (animated) {
-        for (int i = 0; i < transitionList.size(); ++i) {
-            QAbstractTransition *transition = transitionList.at(i);
-
-            selectedAnimations << transition->animations();
-            selectedAnimations << defaultAnimationsForSource.values(transition->sourceState());
-
-            QList<QAbstractState *> targetStates = transition->targetStates();
-            for (int j=0; j<targetStates.size(); ++j) 
-                selectedAnimations << defaultAnimationsForTarget.values(targetStates.at(j));
-        }
-        selectedAnimations << defaultAnimations;
-    }
+    QList<QAbstractAnimation *> selectedAnimations = selectAnimations(transitionList);
 
     // Initialize animations from property assignments.
     for (int i = 0; i < selectedAnimations.size(); ++i) {
@@ -1153,6 +1140,25 @@ void QStateMachinePrivate::_q_animationFinished()
     }
 }
 
+QList<QAbstractAnimation *> QStateMachinePrivate::selectAnimations(const QList<QAbstractTransition *> &transitionList) const
+{
+    QList<QAbstractAnimation *> selectedAnimations;
+    if (animated) {
+        for (int i = 0; i < transitionList.size(); ++i) {
+            QAbstractTransition *transition = transitionList.at(i);
+
+            selectedAnimations << transition->animations();
+            selectedAnimations << defaultAnimationsForSource.values(transition->sourceState());
+
+            QList<QAbstractState *> targetStates = transition->targetStates();
+            for (int j=0; j<targetStates.size(); ++j)
+                selectedAnimations << defaultAnimationsForTarget.values(targetStates.at(j));
+        }
+        selectedAnimations << defaultAnimations;
+    }
+    return selectedAnimations;
+}
+
 #endif // !QT_NO_ANIMATION
 
 namespace {
diff --git a/src/corelib/statemachine/qstatemachine_p.h b/src/corelib/statemachine/qstatemachine_p.h
index 6159107..b971648 100644
--- a/src/corelib/statemachine/qstatemachine_p.h
+++ b/src/corelib/statemachine/qstatemachine_p.h
@@ -228,6 +228,7 @@ public:
     QMultiHash<QAbstractState *, QAbstractAnimation *> defaultAnimationsForSource;
     QMultiHash<QAbstractState *, QAbstractAnimation *> defaultAnimationsForTarget;
 
+    QList<QAbstractAnimation *> selectAnimations(const QList<QAbstractTransition *> &transitionList) const;
 #endif // QT_NO_ANIMATION
 
     QSignalEventGenerator *signalEventGenerator;