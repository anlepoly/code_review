diff --git a/src/corelib/tools/qchar.cpp b/src/corelib/tools/qchar.cpp
index 165bda7..ef229fc 100644
--- a/src/corelib/tools/qchar.cpp
+++ b/src/corelib/tools/qchar.cpp
@@ -1238,10 +1238,24 @@ ushort QChar::toCaseFolded(ushort ucs2)
     Returns the Latin-1 character equivalent to the QChar, or 0. This
     is mainly useful for non-internationalized software.
 
+    \note It is not possible to distinguish a non-Latin-1 character from a Latin-1 0
+    (NUL) character. Prefer to use unicode(), which does not have this ambiguity.
+
     \sa toAscii(), unicode()
 */
 
 /*!
+    \fn QChar QChar::fromLatin1(char)
+
+    Converts the Latin-1 character \a c to its equivalent QChar. This
+    is mainly useful for non-internationalized software.
+
+    An alternative is to use QLatin1Char.
+
+    \sa fromAscii(), unicode()
+*/
+
+/*!
     \fn char QChar::toAscii() const
 
     Returns the Latin-1 character value of the QChar, or 0 if the character is not
@@ -1254,6 +1268,9 @@ ushort QChar::toCaseFolded(ushort ucs2)
     \note It is not possible to distinguish a non-Latin 1 character from an ASCII 0
     (NUL) character. Prefer to use unicode(), which does not have this ambiguity.
 
+    \note This function does not check whether the character value is inside
+    the valid range of US-ASCII.
+
     \sa toLatin1(), unicode()
 */
 
@@ -1307,7 +1324,7 @@ QDataStream &operator>>(QDataStream &in, QChar &chr)
 /*!
     \fn ushort QChar::unicode() const
 
-    \overload
+    Returns the numeric Unicode value of the QChar.
 */
 
 /*****************************************************************************