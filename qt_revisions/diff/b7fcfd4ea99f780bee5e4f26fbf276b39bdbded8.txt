diff --git a/src/imports/multimedia/qdeclarativecamera.cpp b/src/imports/multimedia/qdeclarativecamera.cpp
index 0ef22e4..6045e83 100644
--- a/src/imports/multimedia/qdeclarativecamera.cpp
+++ b/src/imports/multimedia/qdeclarativecamera.cpp
@@ -93,7 +93,7 @@ void QDeclarativeCamera::_q_updateState(QCamera::State state)
 
         flash.mode: Camera.FlashRedEyeReduction
 
-        onImageCaptured : {
+        onImageCaptured: {
             photoPreview.source = preview  // Show the preview in an Image element
         }
     }
@@ -114,6 +114,7 @@ void QDeclarativeCamera::_q_updateState(QCamera::State state)
 
 /*!
     \class QDeclarativeCamera
+    \internal
     \brief The QDeclarativeCamera class provides a camera item that you can add to a QDeclarativeView.
 */
 
diff --git a/src/imports/multimedia/qdeclarativecamerafocus.cpp b/src/imports/multimedia/qdeclarativecamerafocus.cpp
index 4be4dd9..1441546 100644
--- a/src/imports/multimedia/qdeclarativecamerafocus.cpp
+++ b/src/imports/multimedia/qdeclarativecamerafocus.cpp
@@ -72,6 +72,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QDeclarativeCameraFocus
+    \internal
     \brief The CameraFocus element provides interface for focus related camera settings.
 */
 
diff --git a/src/multimedia/audio/qsoundeffect.cpp b/src/multimedia/audio/qsoundeffect.cpp
index f7d3308..2595a9f 100644
--- a/src/multimedia/audio/qsoundeffect.cpp
+++ b/src/multimedia/audio/qsoundeffect.cpp
@@ -65,17 +65,17 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \class QSoundEffect
-    \brief The QSoundEffect provides a way to play low latency sound effects.
+    \brief The QSoundEffect class provides a way to play low latency sound effects.
 
     \ingroup multimedia
     \ingroup multimedia_audio
 
-*/
-
 
+*/
 
 /*!
     \qmlproperty url SoundEffect::source
+    \property QSoundEffect::source
 
     This property provides a way to control the sound to play.
 */
@@ -85,11 +85,19 @@ QT_BEGIN_NAMESPACE
 
     This property provides a way to control the number of times to repeat the sound on each play().
 
-    Set to -1 (infinite) to enable infinite loop.
+    Set to SoundEffect.Infinite to enable infinite looping.
+*/
+
+/*!
+    \property QSoundEffect::loops
+    This property provides a way to control the number of times to repeat the sound on each play().
+
+    Set to QSoundEffect::Infinite to enable infinite looping.
 */
 
 /*!
     \qmlproperty qreal SoundEffect::volume
+    \property QSoundEffect::volume
 
     This property holds the volume of the playback, from 0.0 (silent) to 1.0 (maximum volume).
     Note: Currently this has no effect on Mac OS X.
@@ -97,12 +105,14 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \qmlproperty bool SoundEffect::muted
+    \property QSoundEffect::muted
 
-    This property provides a way to control muting.
+    This property provides a way to control muting. A value of \c true will mute this effect.
 */
 
 /*!
     \qmlproperty bool SoundEffect::playing
+    \property QSoundEffect::source
 
     This property indicates if the soundeffect is playing or not.
 */
@@ -120,50 +130,63 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \qmlsignal SoundEffect::sourceChanged()
+    \fn void QSoundEffect::sourceChanged()
 
     This handler is called when the source has changed.
 */
+/*!
+    \qmlsignal SoundEffect::loadedChanged()
+    \fn void QSoundEffect::loadedChanged()
+
+    This handler is called when the loading state has changed.
+*/
 
 /*!
     \qmlsignal SoundEffect::loopCountChanged()
+    \fn void QSoundEffect::loopCountChanged()
 
     This handler is called when the initial number of loops has changed.
 */
 
 /*!
     \qmlsignal SoundEffect::loopsRemainingChanged()
+    \fn void QSoundEffect::loopsRemainingChanged()
 
     This handler is called when the remaining number of loops has changed.
 */
 
 /*!
     \qmlsignal SoundEffect::volumeChanged()
+    \fn void QSoundEffect::volumeChanged()
 
     This handler is called when the volume has changed.
 */
 
 /*!
     \qmlsignal SoundEffect::mutedChanged()
+    \fn void QSoundEffect::mutedChanged()
 
     This handler is called when the mute state has changed.
 */
 
 /*!
     \qmlsignal SoundEffect::playingChanged()
+    \fn void QSoundEffect::playingChanged()
 
     This handler is called when the playing property has changed.
 */
 
 /*!
     \qmlsignal SoundEffect::statusChanged()
+    \fn void QSoundEffect::statusChanged()
 
     This handler is called when the status property has changed.
 */
 
 
 /*!
+    Creates a QSoundEffect with the given \a parent.
 */
-
 QSoundEffect::QSoundEffect(QObject *parent) :
     QObject(parent)
 {
@@ -176,6 +199,9 @@ QSoundEffect::QSoundEffect(QObject *parent) :
     connect(d, SIGNAL(statusChanged()), SIGNAL(statusChanged()));
 }
 
+/*!
+    Destroys this sound effect.
+ */
 QSoundEffect::~QSoundEffect()
 {
     d->release();
@@ -266,7 +292,7 @@ bool QSoundEffect::isLoaded() const
   \qmlmethod SoundEffect::play()
 
   Start playback of the sound effect, looping the effect for the number of
-  times as specificed in the loops property.
+  times as specified in the loops property.
 
   This is the default method for SoundEffect.
 
@@ -282,6 +308,17 @@ bool QSoundEffect::isPlaying() const
     return d->isPlaying();
 }
 
+/*!
+    \enum QSoundEffect::Status
+    \value Null         This sound effect does not have a source set.
+    \value Loading      The source is being loaded
+    \value Ready        The source has been loaded, and can be played.
+    \value Error        An error occurred while loading the source or during playback.
+*/
+
+/*!
+    Returns the current status of this sound effect.
+ */
 QSoundEffect::Status QSoundEffect::status() const
 {
     return d->status();
diff --git a/src/multimedia/camera/qcamerafocus.cpp b/src/multimedia/camera/qcamerafocus.cpp
index 5ee06b9..9bcdf6d 100644
--- a/src/multimedia/camera/qcamerafocus.cpp
+++ b/src/multimedia/camera/qcamerafocus.cpp
@@ -130,7 +130,7 @@ public:
 */
 
 /*!
-    \enum QCameraFocusZone::Status
+    \enum QCameraFocusZone::FocusZoneStatus
 
     \value Invalid      This zone is not valid
     \value Unused       This zone may be used for autofocusing, but is not currently.
diff --git a/src/multimedia/camera/qcameraimagecapture.cpp b/src/multimedia/camera/qcameraimagecapture.cpp
index cb4deeb..2aea35f 100644
--- a/src/multimedia/camera/qcameraimagecapture.cpp
+++ b/src/multimedia/camera/qcameraimagecapture.cpp
@@ -432,7 +432,7 @@ QList<QVideoFrame::PixelFormat> QCameraImageCapture::supportedBufferFormats() co
 /*!
     Returns the buffer image capture format being used.
 
-    \sa supportedBufferCaptureFormats() setBufferCaptureFormat()
+    \sa supportedBufferFormats() setBufferFormat()
 */
 QVideoFrame::PixelFormat QCameraImageCapture::bufferFormat() const
 {
@@ -445,7 +445,7 @@ QVideoFrame::PixelFormat QCameraImageCapture::bufferFormat() const
 /*!
     Sets the buffer image capture format to be used.
 
-    \sa bufferCaptureFormat() supportedBufferCaptureFormats() captureDestination()
+    \sa BufferFormat() supportedBufferFormats() captureDestination()
 */
 void QCameraImageCapture::setBufferFormat(const QVideoFrame::PixelFormat format)
 {
diff --git a/src/multimedia/controls/qmedianetworkaccesscontrol.cpp b/src/multimedia/controls/qmedianetworkaccesscontrol.cpp
index 0fefc3f..0e8c917 100644
--- a/src/multimedia/controls/qmedianetworkaccesscontrol.cpp
+++ b/src/multimedia/controls/qmedianetworkaccesscontrol.cpp
@@ -55,8 +55,8 @@ QT_BEGIN_NAMESPACE
     setting of a Network Access Point.
 
     This control can be used to set a network access for various
-    network related activities. the exact nature in dependant on the underlying
-    usage by the supported QMediaObject
+    network related activities.  The exact nature is dependent on the underlying
+    usage by the supported QMediaObject.
 */
 
 QMediaNetworkAccessControl::QMediaNetworkAccessControl(QObject *parent) :
@@ -72,9 +72,9 @@ QMediaNetworkAccessControl::~QMediaNetworkAccessControl()
 }
 
 /*!
-    \fn void QMediaNetworkAccessControl::setConfigurations(const QList<QNetworkConfiguration> &configurations);
+    \fn void QMediaNetworkAccessControl::setConfigurations(const QList<QNetworkConfiguration> &configurations)
 
-    \a configurations contains a list of network configurations to be used for network access.
+    The \a configurations parameter contains a list of network configurations to be used for network access.
 
     It is assumed the list is given in highest to lowest preference order.
     By calling this function all previous configurations will be invalidated
diff --git a/src/multimedia/multimedia.pro b/src/multimedia/multimedia.pro
index 05213b0..3519330 100644
--- a/src/multimedia/multimedia.pro
+++ b/src/multimedia/multimedia.pro
@@ -63,3 +63,7 @@ mac {
 }
 
 HEADERS += $$PUBLIC_HEADERS $$PRIVATE_HEADERS
+
+OTHER_FILES += \
+    qaudionamespace.qdoc \
+
diff --git a/src/multimedia/playback/qmediaplaylist.cpp b/src/multimedia/playback/qmediaplaylist.cpp
index ff8ec2f..a8c961e 100644
--- a/src/multimedia/playback/qmediaplaylist.cpp
+++ b/src/multimedia/playback/qmediaplaylist.cpp
@@ -244,7 +244,7 @@ bool QMediaPlaylist::setMediaObject(QMediaObject *mediaObject)
 /*!
   \property QMediaPlaylist::playbackMode
 
-  This property defines the order, items in playlist are played.
+  This property defines the order that items in the playlist are played.
 
   \sa QMediaPlaylist::PlaybackMode
 */
diff --git a/src/multimedia/qaudionamespace.qdoc b/src/multimedia/qaudionamespace.qdoc
index f8ca465..b399264 100644
--- a/src/multimedia/qaudionamespace.qdoc
+++ b/src/multimedia/qaudionamespace.qdoc
@@ -32,6 +32,7 @@
     \brief The QAudio namespace contains enums used by the audio classes.
     \inmodule QtMultimedia
     \ingroup multimedia
+    \inheaderfile qaudio.h
 */
 
 /*
diff --git a/src/multimedia/qmediaobject.cpp b/src/multimedia/qmediaobject.cpp
index ca611df..1521975 100644
--- a/src/multimedia/qmediaobject.cpp
+++ b/src/multimedia/qmediaobject.cpp
@@ -242,7 +242,7 @@ QMediaObject::QMediaObject(QMediaObjectPrivate &dd, QObject *parent,
 
 /*!
     Watch the property \a name. The property's notify signal will be emitted
-    once every \code notifyInterval milliseconds.
+    once every \c notifyInterval milliseconds.
 
     \sa notifyInterval
 */
diff --git a/src/multimedia/qmediatimerange.cpp b/src/multimedia/qmediatimerange.cpp
index fe67050..85611ee 100644
--- a/src/multimedia/qmediatimerange.cpp
+++ b/src/multimedia/qmediatimerange.cpp
@@ -60,8 +60,8 @@ QT_BEGIN_NAMESPACE
     integer.
 
     The isNormal() method determines if a time interval is normal (a normal
-    time interval has start() <= end()). An abnormal interval can be converted
-    in to a normal interval by calling the normalized() method.
+    time interval has start() <= end()). A normal interval can be received
+    from an abnormal interval by calling the normalized() method.
 
     The contains() method determines if a specified time lies within the time
     interval.
@@ -362,7 +362,7 @@ QMediaTimeRange::QMediaTimeRange(qint64 start, qint64 end)
 /*!
     \fn QMediaTimeRange::QMediaTimeRange(const QMediaTimeInterval &interval)
 
-    Constructs a time range that contains an intitial interval, \a interval.
+    Constructs a time range that contains an initial interval, \a interval.
 
     If \a interval is not \l{QMediaTimeInterval::isNormal()}{normal},
     the resulting time range will be empty.
diff --git a/src/multimedia/radio/qradiodata.cpp b/src/multimedia/radio/qradiodata.cpp
index a2891ca..06dbb77 100644
--- a/src/multimedia/radio/qradiodata.cpp
+++ b/src/multimedia/radio/qradiodata.cpp
@@ -302,7 +302,7 @@ QString QRadioData::errorString() const
 */
 
 /*!
-    \fn void QRadioData::stationNameChanged(int stationName)
+    \fn void QRadioData::stationNameChanged(QString stationName)
 
     Signals that the Program Service has changed to \a stationName
 */
@@ -310,7 +310,14 @@ QString QRadioData::errorString() const
 /*!
     \fn void QRadioData::alternativeFrequenciesEnabledChanged(bool enabled)
 
-    Signals that the AF has been enabled or disabled
+    Signals that automatically tuning to alternative frequencies has been
+    enabled or disabled according to \a enabled.
+*/
+
+/*!
+    \fn void QRadioData::radioTextChanged(QString radioText)
+
+    Signals that the Radio Text property has changed to \a radioText
 */
 
 /*!
@@ -330,9 +337,62 @@ QString QRadioData::errorString() const
     \value OutOfRangeError An attempt to set a frequency or band that is not supported by radio device.
 */
 
-/*! \fn void QRadioData::stateChanged(QRadioData::State state)
-  This signal is emitted when the state changes to \a state.
- */
+/*!
+    \enum QRadioData::ProgramType
+
+    This property holds the type of the currently playing program as transmitted
+    by the radio station. The value can be any one of the values defined in the
+    table below.
+
+    \value Undefined
+    \value News
+    \value CurrentAffairs
+    \value Information
+    \value Sport
+    \value Education
+    \value Drama
+    \value Culture
+    \value Science
+    \value Varied
+    \value PopMusic
+    \value RockMusic
+    \value EasyListening
+    \value LightClassical
+    \value SeriousClassical
+    \value OtherMusic
+    \value Weather
+    \value Finance
+    \value ChildrensProgrammes
+    \value SocialAffairs
+    \value Religion
+    \value PhoneIn
+    \value Travel
+    \value Leisure
+    \value JazzMusic
+    \value CountryMusic
+    \value NationalMusic
+    \value OldiesMusic
+    \value FolkMusic
+    \value Documentary
+    \value AlarmTest
+    \value Alarm
+    \value Talk
+    \value ClassicRock
+    \value AdultHits
+    \value SoftRock
+    \value Top40
+    \value Soft
+    \value Nostalgia
+    \value Classical
+    \value RhythmAndBlues
+    \value SoftRhythmAndBlues
+    \value Language
+    \value ReligiousMusic
+    \value ReligiousTalk
+    \value Personality
+    \value Public
+    \value College
+*/
 
 #include "moc_qradiodata.cpp"
 QT_END_NAMESPACE
diff --git a/src/multimedia/radio/qradiotuner.cpp b/src/multimedia/radio/qradiotuner.cpp
index 9caa3ad..9910ef7 100644
--- a/src/multimedia/radio/qradiotuner.cpp
+++ b/src/multimedia/radio/qradiotuner.cpp
@@ -456,6 +456,15 @@ void QRadioTuner::searchBackward()
 }
 
 /*!
+    \enum QRadioTuner::SearchMode
+
+    Enumerates how the radio tuner should search for stations.
+
+    \value SearchFast           Use only signal strength when searching.
+    \value SearchGetStationId   After finding a strong signal, wait for the RDS station id (PI) before continuing.
+*/
+
+/*!
     Search all stations in current band
 
     Emits QRadioTuner::stationFound(int, QString) for every found station.