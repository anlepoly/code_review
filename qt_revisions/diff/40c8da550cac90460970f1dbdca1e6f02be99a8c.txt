diff --git a/src/declarative/qml/qdeclarativevaluetype.cpp b/src/declarative/qml/qdeclarativevaluetype.cpp
index 9e5dc90..12ee78e 100644
--- a/src/declarative/qml/qdeclarativevaluetype.cpp
+++ b/src/declarative/qml/qdeclarativevaluetype.cpp
@@ -92,8 +92,14 @@ QDeclarativeValueTypeFactory::~QDeclarativeValueTypeFactory()
 
 bool QDeclarativeValueTypeFactory::isValueType(int idx)
 {
-    if ((uint)idx < QVariant::UserType && (uint)idx != QVariant::StringList)
+    if ((uint)idx < QVariant::UserType
+            && idx != QVariant::StringList
+            && idx != QMetaType::QObjectStar
+            && idx != QMetaType::QWidgetStar
+            && idx != QMetaType::VoidStar
+            && idx != QMetaType::QVariant) {
         return true;
+    }
     return false;
 }
 
diff --git a/tests/auto/declarative/debugger/qdeclarativeenginedebug/tst_qdeclarativeenginedebug.cpp b/tests/auto/declarative/debugger/qdeclarativeenginedebug/tst_qdeclarativeenginedebug.cpp
index 83c092b..446ad8b 100644
--- a/tests/auto/declarative/debugger/qdeclarativeenginedebug/tst_qdeclarativeenginedebug.cpp
+++ b/tests/auto/declarative/debugger/qdeclarativeenginedebug/tst_qdeclarativeenginedebug.cpp
@@ -229,7 +229,7 @@ void tst_QDeclarativeEngineDebug::recursiveObjectTest(QObject *o, const QDeclara
 
         QCOMPARE(p.name(), QString::fromUtf8(pmeta.name()));
 
-        if (pmeta.type() < QVariant::UserType) // TODO test complex types
+        if (pmeta.type() < QVariant::UserType && pmeta.userType() != QMetaType::QVariant) // TODO test complex types
             QCOMPARE(p.value(), pmeta.read(o));
 
         if (p.name() == "parent")