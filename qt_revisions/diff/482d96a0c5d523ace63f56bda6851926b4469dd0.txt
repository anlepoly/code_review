diff --git a/configure b/configure
index a3b94e1..d497c2f 100755
--- a/configure
+++ b/configure
@@ -7066,6 +7066,11 @@ else
     echo "#define QT_POINTER_SIZE $?" >>"$outpath/src/corelib/global/qconfig.h.new"
 fi
 
+#REDUCE_RELOCATIONS is a elf/unix only thing, so not in windows configure.exe
+if [ "$CFG_REDUCE_RELOCATIONS" = "yes" ]; then
+    echo "#define QT_REDUCE_RELOCATIONS" >>"$outpath/src/corelib/global/qconfig.h.new"
+fi
+
 
 echo "" >>"$outpath/src/corelib/global/qconfig.h.new"
 
diff --git a/mkspecs/common/gcc-base.conf b/mkspecs/common/gcc-base.conf
index 0e90666..28e3b87 100644
--- a/mkspecs/common/gcc-base.conf
+++ b/mkspecs/common/gcc-base.conf
@@ -39,6 +39,7 @@ QMAKE_CFLAGS_RELEASE        += -O2
 QMAKE_CFLAGS_DEBUG          += -g
 QMAKE_CFLAGS_SHLIB          += -fPIC
 QMAKE_CFLAGS_STATIC_LIB     += -fPIC
+QMAKE_CFLAGS_APP            += -fPIE
 QMAKE_CFLAGS_YACC           += -Wno-unused -Wno-parentheses
 QMAKE_CFLAGS_HIDESYMS       += -fvisibility=hidden
 
@@ -50,6 +51,7 @@ QMAKE_CXXFLAGS_RELEASE    += $$QMAKE_CFLAGS_RELEASE
 QMAKE_CXXFLAGS_DEBUG      += $$QMAKE_CFLAGS_DEBUG
 QMAKE_CXXFLAGS_SHLIB      += $$QMAKE_CFLAGS_SHLIB
 QMAKE_CXXFLAGS_STATIC_LIB += $$QMAKE_CFLAGS_STATIC_LIB
+QMAKE_CXXFLAGS_APP        += $$QMAKE_CFLAGS_APP
 QMAKE_CXXFLAGS_YACC       += $$QMAKE_CFLAGS_YACC
 QMAKE_CXXFLAGS_HIDESYMS   += $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden
 
diff --git a/src/corelib/global/qglobal.h b/src/corelib/global/qglobal.h
index 33b5b8b..ffeb8a2 100644
--- a/src/corelib/global/qglobal.h
+++ b/src/corelib/global/qglobal.h
@@ -62,6 +62,7 @@
 #include <QtCore/qconfig.h>
 #endif
 
+
 #include <QtCore/qsystemdetection.h>
 #include <QtCore/qcompilerdetection.h>
 #include <QtCore/qprocessordetection.h>
@@ -1783,6 +1784,11 @@ Q_CORE_EXPORT int qrand();
 #  endif
 #endif
 
+#if defined(QT_REDUCE_RELOCATIONS) && defined(__ELF__) && !defined(__PIC__)
+#  error "You must build your code with position independent code if Qt was built with -reduce-relocations. "\
+         "Compile your code with -fPIC or -fPIE."
+#endif
+
 namespace QtPrivate {
 //like std::enable_if
 template <bool B, typename T = void> struct QEnableIf;
diff --git a/tests/auto/corelib/kernel/qobject/tst_qobject.cpp b/tests/auto/corelib/kernel/qobject/tst_qobject.cpp
index 91b93e4..8f4203a 100644
--- a/tests/auto/corelib/kernel/qobject/tst_qobject.cpp
+++ b/tests/auto/corelib/kernel/qobject/tst_qobject.cpp
@@ -4152,9 +4152,6 @@ void tst_QObject::pointerConnect()
     QVERIFY( connect( s, &SenderObject::signal1 , r2, &ReceiverObject::slot1 ) );
     QVERIFY( connect( s, &SenderObject::signal1 , r1, &ReceiverObject::slot3 ) );
     QVERIFY( connect( s, &SenderObject::signal3 , r1, &ReceiverObject::slot3 ) );
-#if defined(Q_CC_GNU) && defined(Q_OS_UNIX)
-    QEXPECT_FAIL("", "Test may fail due to failing comparison of pointers to member functions caused by problems with -reduce-relocations on this platform.", Continue);
-#endif
     QVERIFY2( connect( &timer, &QTimer::timeout, r1, &ReceiverObject::deleteLater ),
              "Signal connection failed most likely due to failing comparison of pointers to member functions caused by problems with -reduce-relocations on this platform.");
 
diff --git a/tests/auto/tools/moc/tst_moc.cpp b/tests/auto/tools/moc/tst_moc.cpp
index 7c47d60..0aa1a68 100644
--- a/tests/auto/tools/moc/tst_moc.cpp
+++ b/tests/auto/tools/moc/tst_moc.cpp
@@ -614,7 +614,7 @@ void tst_Moc::oldStyleCasts()
 
     QStringList args;
     args << "-c" << "-x" << "c++" << "-Wold-style-cast" << "-I" << "."
-         << "-I" << qtIncludePath << "-o" << "/dev/null" << "-";
+         << "-I" << qtIncludePath << "-o" << "/dev/null" << "-fPIE" << "-";
     proc.start("gcc", args);
     QVERIFY(proc.waitForStarted());
     proc.write(mocOut);
@@ -683,7 +683,7 @@ void tst_Moc::inputFileNameWithDotsButNoExtension()
 
     QStringList args;
     args << "-c" << "-x" << "c++" << "-I" << ".."
-         << "-I" << qtIncludePath << "-o" << "/dev/null" << "-";
+         << "-I" << qtIncludePath << "-o" << "/dev/null" << "-fPIE" <<  "-";
     proc.start("gcc", args);
     QVERIFY(proc.waitForStarted());
     proc.write(mocOut);