diff --git a/src/plugins/sensors/blackberry/bbcompass.cpp b/src/plugins/sensors/blackberry/bbcompass.cpp
new file mode 100644
index 0000000..a77c99a
--- /dev/null
+++ b/src/plugins/sensors/blackberry/bbcompass.cpp
@@ -0,0 +1,79 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Research In Motion
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the QtSensors module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+#include "bbcompass.h"
+
+BbCompass::BbCompass(QSensor *sensor)
+    : BbSensorBackend<QCompassReading>(devicePath(), SENSOR_TYPE_AZIMUTH_PITCH_ROLL, sensor)
+{
+    setDescription(QLatin1String("Azimuth in degrees from magnetic north"));
+}
+
+bool BbCompass::updateReadingFromEvent(const sensor_event_t &event, QCompassReading *reading)
+{
+    reading->setAzimuth(event.apr.azimuth);
+
+    switch (event.accuracy) {
+    case SENSOR_ACCURACY_UNRELIABLE:
+        reading->setCalibrationLevel(0.0f);
+        break;
+    case SENSOR_ACCURACY_LOW:
+        reading->setCalibrationLevel(0.1f);
+        break;
+
+    // We determined that MEDIUM should map to 1.0, because existing code samples
+    // show users should pop a calibration screen when seeing < 1.0. The MEDIUM accuracy
+    // is actually good enough not to require calibration, so we don't want to make it seem
+    // like it is required artificially.
+    case SENSOR_ACCURACY_MEDIUM:
+        reading->setCalibrationLevel(1.0f);
+        break;
+    case SENSOR_ACCURACY_HIGH:
+        reading->setCalibrationLevel(1.0f);
+        break;
+    }
+
+    return true;
+}
+
+QString BbCompass::devicePath()
+{
+    return QLatin1String("/dev/sensor/apr");
+}
diff --git a/src/plugins/sensors/blackberry/bbcompass.h b/src/plugins/sensors/blackberry/bbcompass.h
new file mode 100644
index 0000000..64075d6
--- /dev/null
+++ b/src/plugins/sensors/blackberry/bbcompass.h
@@ -0,0 +1,60 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Research In Motion
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the QtSensors module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+#ifndef BBCOMPASS_H
+#define BBCOMPASS_H
+
+#include "bbsensorbackend.h"
+#include <qcompass.h>
+
+class BbCompass : public BbSensorBackend<QCompassReading>
+{
+    Q_OBJECT
+
+public:
+    explicit BbCompass(QSensor *sensor);
+
+    static QString devicePath();
+
+protected:
+    bool updateReadingFromEvent(const sensor_event_t &event, QCompassReading *reading);
+};
+
+#endif
diff --git a/src/plugins/sensors/blackberry/blackberry.pro b/src/plugins/sensors/blackberry/blackberry.pro
index 052683e..a1c7389 100644
--- a/src/plugins/sensors/blackberry/blackberry.pro
+++ b/src/plugins/sensors/blackberry/blackberry.pro
@@ -11,6 +11,7 @@ DESTDIR = $$QT.sensors.plugins/sensors
 HEADERS += bbsensorbackend.h \
     bbaccelerometer.h \
     bbaltimeter.h \
+    bbcompass.h \
     bbgyroscope.h \
     bbirproximitysensor.h \
     bblightsensor.h \
@@ -25,6 +26,7 @@ HEADERS += bbsensorbackend.h \
 SOURCES += bbsensorbackend.cpp \
     bbaccelerometer.cpp \
     bbaltimeter.cpp \
+    bbcompass.cpp \
     bbgyroscope.cpp \
     bbirproximitysensor.cpp \
     bblightsensor.cpp \
diff --git a/src/plugins/sensors/blackberry/main.cpp b/src/plugins/sensors/blackberry/main.cpp
index 0d264e5..daf7444 100644
--- a/src/plugins/sensors/blackberry/main.cpp
+++ b/src/plugins/sensors/blackberry/main.cpp
@@ -40,6 +40,7 @@
 ****************************************************************************/
 #include "bbaccelerometer.h"
 #include "bbaltimeter.h"
+#include "bbcompass.h"
 #include "bbgyroscope.h"
 #include "bbirproximitysensor.h"
 #include "bblightsensor.h"
@@ -55,6 +56,7 @@
 
 static const char *bbAccelerometerId = "bbAccelerometer";
 static const char *bbAltitmeterId = "bbAltimeter";
+static const char *bbCompassId = "bbCompass";
 static const char *bbGyroscopeId = "bbGyroscope";
 static const char *bbIRProximitySensorId = "bbIRProximitySensor";
 static const char *bbLightSensorId = "bbLightSensor";
@@ -78,6 +80,8 @@ public:
             QSensorManager::registerBackend("QAccelerometer", bbAccelerometerId, this);
         if (sensorSupported(BbAltimeter::devicePath()))
             QSensorManager::registerBackend("BbAltimeter", bbAltitmeterId, this);
+        if (sensorSupported(BbCompass::devicePath()))
+            QSensorManager::registerBackend("BbCompass", bbCompassId, this);
         if (sensorSupported(BbGyroscope::devicePath()))
             QSensorManager::registerBackend("QGyroscope", bbGyroscopeId, this);
         if (sensorSupported(BbIRProximitySensor::devicePath()))
@@ -105,6 +109,8 @@ public:
             backend = new BbAccelerometer(sensor);
         if (sensor->identifier() == bbAltitmeterId)
             backend = new BbAltimeter(sensor);
+        if (sensor->identifier() == bbCompassId)
+            backend = new BbCompass(sensor);
         if (sensor->identifier() == bbGyroscopeId)
             backend = new BbGyroscope(sensor);
         if (sensor->identifier() == bbIRProximitySensorId)