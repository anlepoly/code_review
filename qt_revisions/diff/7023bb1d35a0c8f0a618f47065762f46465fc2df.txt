diff --git a/src/corelib/kernel/qtimerinfo_unix.cpp b/src/corelib/kernel/qtimerinfo_unix.cpp
index 1ffe12c..c9ffee5 100644
--- a/src/corelib/kernel/qtimerinfo_unix.cpp
+++ b/src/corelib/kernel/qtimerinfo_unix.cpp
@@ -147,6 +147,18 @@ bool QTimerInfoList::timeChanged(timeval *delta)
     return elapsedTimeTicks < ((qAbs(*delta) - tickGranularity) * 10);
 }
 
+/*
+  repair broken timer
+*/
+void QTimerInfoList::timerRepair(const timeval &diff)
+{
+    // repair all timers
+    for (int i = 0; i < size(); ++i) {
+        register QTimerInfo *t = at(i);
+        t->timeout = t->timeout + diff;
+    }
+}
+
 void QTimerInfoList::repairTimersIfNeeded()
 {
     if (QElapsedTimer::isMonotonic())
@@ -178,18 +190,6 @@ void QTimerInfoList::timerInsert(QTimerInfo *ti)
     insert(index+1, ti);
 }
 
-/*
-  repair broken timer
-*/
-void QTimerInfoList::timerRepair(const timeval &diff)
-{
-    // repair all timers
-    for (int i = 0; i < size(); ++i) {
-        register QTimerInfo *t = at(i);
-        t->timeout = t->timeout + diff;
-    }
-}
-
 inline timeval &operator+=(timeval &t1, int ms)
 {
     t1.tv_sec += ms / 1000;
diff --git a/src/corelib/kernel/qtimerinfo_unix_p.h b/src/corelib/kernel/qtimerinfo_unix_p.h
index c397703..89d4d45 100644
--- a/src/corelib/kernel/qtimerinfo_unix_p.h
+++ b/src/corelib/kernel/qtimerinfo_unix_p.h
@@ -86,6 +86,7 @@ class QTimerInfoList : public QList<QTimerInfo*>
     int msPerTick;
 
     bool timeChanged(timeval *delta);
+    void timerRepair(const timeval &);
 #endif
 
     // state variables used by activateTimers()
@@ -102,7 +103,6 @@ public:
 
     bool timerWait(timeval &);
     void timerInsert(QTimerInfo *);
-    void timerRepair(const timeval &);
 
     void registerTimer(int timerId, int interval, Qt::TimerType timerType, QObject *object);
     bool unregisterTimer(int timerId);