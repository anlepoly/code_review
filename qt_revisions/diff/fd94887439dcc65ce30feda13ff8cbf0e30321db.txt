diff --git a/tests/auto/qml/qrcqml/data/SameDir.qml b/tests/auto/qml/qrcqml/data/SameDir.qml
new file mode 100644
index 0000000..b4950b9
--- /dev/null
+++ b/tests/auto/qml/qrcqml/data/SameDir.qml
@@ -0,0 +1,5 @@
+import QtQuick 2.0
+
+QtObject {
+    property string tokenProperty: "hello"
+}
diff --git a/tests/auto/qml/qrcqml/data/SubDir.qml b/tests/auto/qml/qrcqml/data/SubDir.qml
new file mode 100644
index 0000000..d1c40af
--- /dev/null
+++ b/tests/auto/qml/qrcqml/data/SubDir.qml
@@ -0,0 +1,3 @@
+import QtQuick 2.0
+
+QtObject {}
diff --git a/tests/auto/qml/qrcqml/data/main.qml b/tests/auto/qml/qrcqml/data/main.qml
new file mode 100644
index 0000000..e9069b5
--- /dev/null
+++ b/tests/auto/qml/qrcqml/data/main.qml
@@ -0,0 +1,6 @@
+import QtQuick 2.0
+import "data" as Subdirectory
+
+SameDir {
+    property QtObject other: Subdirectory.SubDir{}
+}
diff --git a/tests/auto/qml/qrcqml/qrcqml.pro b/tests/auto/qml/qrcqml/qrcqml.pro
new file mode 100644
index 0000000..d5cc8ae
--- /dev/null
+++ b/tests/auto/qml/qrcqml/qrcqml.pro
@@ -0,0 +1,9 @@
+CONFIG += testcase
+TARGET = tst_qrcqml
+QT += qml testlib
+macx:CONFIG -= app_bundle
+
+SOURCES += tst_qrcqml.cpp
+RESOURCES = qrcqml.qrc
+
+CONFIG += parallel_test
diff --git a/tests/auto/qml/qrcqml/qrcqml.qrc b/tests/auto/qml/qrcqml/qrcqml.qrc
new file mode 100644
index 0000000..47b88ab
--- /dev/null
+++ b/tests/auto/qml/qrcqml/qrcqml.qrc
@@ -0,0 +1,7 @@
+<!DOCTYPE RCC><RCC version="1.0">
+<qresource>
+    <file>data/SubDir.qml</file>
+    <file alias="main.qml">data/main.qml</file>
+    <file alias="SameDir.qml">data/SameDir.qml</file>
+</qresource>
+</RCC>
diff --git a/tests/auto/qml/qrcqml/tst_qrcqml.cpp b/tests/auto/qml/qrcqml/tst_qrcqml.cpp
new file mode 100644
index 0000000..f5d7dd5
--- /dev/null
+++ b/tests/auto/qml/qrcqml/tst_qrcqml.cpp
@@ -0,0 +1,80 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the test suite of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include <qtest.h>
+#include <QObject>
+#include <QQmlEngine>
+#include <QQmlComponent>
+#include <QDebug>
+
+// Loading QML files from embedded resources is a common QML usecase.
+// This test just verifies that it works at a basic level, and with the qrc:/ syntax
+
+class tst_qrcqml : public QObject
+{
+    Q_OBJECT
+public:
+    tst_qrcqml();
+
+private slots:
+    void basicLoad();
+};
+
+tst_qrcqml::tst_qrcqml()
+{
+}
+
+void tst_qrcqml::basicLoad()
+{
+    QQmlEngine e;
+    QQmlComponent c(&e, QUrl("qrc:/main.qml"));
+    if (c.isError())
+        qDebug() << "Error: " << c.errors();
+    QEXPECT_FAIL("", "QTBUG-25937", Abort);
+    QVERIFY(c.isReady());
+    QObject* o = c.create();
+    QVERIFY(o);
+    QCOMPARE(o->property("tokenProperty").toString(), QLatin1String("hello"));
+    delete o;
+}
+QTEST_MAIN(tst_qrcqml)
+
+#include "tst_qrcqml.moc"