diff --git a/tools/qdoc3/ditaxmlgenerator.cpp b/tools/qdoc3/ditaxmlgenerator.cpp
index f1f2add..5508e33 100644
--- a/tools/qdoc3/ditaxmlgenerator.cpp
+++ b/tools/qdoc3/ditaxmlgenerator.cpp
@@ -1455,11 +1455,16 @@ int DitaXmlGenerator::generateAtom(const Atom *atom,
         leaveSection();
         break;
     case Atom::SectionHeadingLeft:
-        writeStartTag(DT_p);
-        writeGuidAttribute(Doc::canonicalTitle(Text::sectionHeading(atom).toString()));
-        hx = QLatin1Char('h') + QString::number(atom->string().toInt() + hOffset(relative));
-        xmlWriter().writeAttribute("outputclass",hx);
-        inSectionHeading = true;
+        {
+            writeStartTag(DT_p);
+            QString id = Text::sectionHeading(atom).toString();
+            id = stripMarkup(id);
+            id = Doc::canonicalTitle(id);
+            writeGuidAttribute(id);
+            hx = QLatin1Char('h') + QString::number(atom->string().toInt() + hOffset(relative));
+            xmlWriter().writeAttribute("outputclass",hx);
+            inSectionHeading = true;
+        }
         break;
     case Atom::SectionHeadingRight:
         writeEndTag(); // </title> (see case Atom::SectionHeadingLeft)
@@ -5879,4 +5884,37 @@ void DitaXmlGenerator::writeHrefAttribute(const QString& href)
         xmlWriter().writeAttribute("scope", "external");
 }
 
+/*!
+  Strips the markup tags from \a src, when we are trying to
+  create an \e{id} attribute. Returns the stripped text.
+ */
+QString DitaXmlGenerator::stripMarkup(const QString& src) const
+{
+    QString text;
+    const QChar charAt = '@';
+    const QChar charSlash = '/';
+    const QChar charLangle = '<';
+    const QChar charRangle = '>';
+
+    int n = src.size();
+    int i = 0;
+    while (i < n) {
+        if (src.at(i) == charLangle) {
+            ++i;
+            if (src.at(i) == charAt || (src.at(i) == charSlash && src.at(i+1) == charAt)) {
+                while (i < n && src.at(i) != charRangle)
+                    ++i;
+                ++i;
+            }
+            else {
+                text += charLangle;
+            }
+        }
+        else
+            text += src.at(i++);
+    }
+    return text;
+}
+
+
 QT_END_NAMESPACE
diff --git a/tools/qdoc3/ditaxmlgenerator.h b/tools/qdoc3/ditaxmlgenerator.h
index f9593ea..f308923 100644
--- a/tools/qdoc3/ditaxmlgenerator.h
+++ b/tools/qdoc3/ditaxmlgenerator.h
@@ -367,7 +367,6 @@ class DitaXmlGenerator : public PageGenerator
     void generateLegaleseList(const Node* relative, CodeMarker* marker);
     void generateOverviewList(const Node* relative, CodeMarker* marker);
 
-#ifdef QDOC_QML
     void generateQmlSummary(const Section& section,
                             const Node* relative,
                             CodeMarker* marker);
@@ -382,7 +381,6 @@ class DitaXmlGenerator : public PageGenerator
     void generateQmlInheritedBy(const QmlClassNode* qcn, CodeMarker* marker);
     void generateQmlInstantiates(const QmlClassNode* qcn, CodeMarker* marker);
     void generateInstantiatedBy(const ClassNode* cn, CodeMarker* marker);
-#endif
 
     void generateSection(const NodeList& nl,
                          const Node* relative,
@@ -452,6 +450,7 @@ class DitaXmlGenerator : public PageGenerator
     bool inSection() const { return (sectionNestingLevel > 0); }
     int currentSectionNestingLevel() const { return sectionNestingLevel; }
     QString metadataDefault(DitaTag t) const;
+    QString stripMarkup(const QString& src) const;
 
  private:
     /*
diff --git a/tools/qdoc3/node.cpp b/tools/qdoc3/node.cpp
index f0ef35a..0e14a06 100644
--- a/tools/qdoc3/node.cpp
+++ b/tools/qdoc3/node.cpp
@@ -2340,7 +2340,6 @@ QString Node::cleanId(QString str)
     if (name.isEmpty())
         return clean;
 
-    name = name.toLower();
     name = name.replace("::","-");
     name = name.replace(" ","-");
     name = name.replace("()","-call");
@@ -2350,6 +2349,7 @@ QString Node::cleanId(QString str)
     const uint u = c.unicode();
 
     if ((u >= 'a' && u <= 'z') ||
+        (u >= 'A' && u <= 'Z') ||
         (u >= '0' && u <= '9')) {
         clean += c;
     }
@@ -2367,6 +2367,7 @@ QString Node::cleanId(QString str)
         const QChar c = name[i];
         const uint u = c.unicode();
         if ((u >= 'a' && u <= 'z') ||
+            (u >= 'A' && u <= 'Z') ||
             (u >= '0' && u <= '9') || u == '-' ||
             u == '_' || u == '.') {
             clean += c;
diff --git a/tools/qdoc3/text.cpp b/tools/qdoc3/text.cpp
index 40d25c1..57d533b 100644
--- a/tools/qdoc3/text.cpp
+++ b/tools/qdoc3/text.cpp
@@ -146,6 +146,7 @@ QString Text::toString() const
     while (atom != 0) {
 	if (atom->type() == Atom::String ||
              atom->type() == Atom::AutoLink ||
+             atom->type() == Atom::C ||
              atom->type() == Atom::GuidLink)
 	    str += atom->string();
 	atom = atom->next();