diff --git a/tests/auto/corelib/io/qtextstream/tst_qtextstream.cpp b/tests/auto/corelib/io/qtextstream/tst_qtextstream.cpp
index f37209d..9e2cd5e 100644
--- a/tests/auto/corelib/io/qtextstream/tst_qtextstream.cpp
+++ b/tests/auto/corelib/io/qtextstream/tst_qtextstream.cpp
@@ -195,9 +195,11 @@ private slots:
     void pos();
     void pos2();
     void pos3LargeFile();
+#ifndef Q_OS_WINCE
     void readStdin();
     void readAllFromStdin();
     void readLineFromStdin();
+#endif
     void read();
     void qbool();
     void forcePoint();
@@ -1385,11 +1387,10 @@ void tst_QTextStream::pos3LargeFile()
 }
 
 // ------------------------------------------------------------------------------
+#ifndef Q_OS_WINCE
+// Qt/CE has no stdin/out support for processes
 void tst_QTextStream::readStdin()
 {
-#if defined(Q_OS_WINCE)
-    QSKIP("Qt/CE has no stdin/out support for processes");
-#endif
     QProcess stdinProcess;
     stdinProcess.start("stdinProcess/stdinProcess");
     stdinProcess.setReadChannel(QProcess::StandardError);
@@ -1409,13 +1410,13 @@ void tst_QTextStream::readStdin()
     QCOMPARE(b, 2);
     QCOMPARE(c, 3);
 }
+#endif
 
 // ------------------------------------------------------------------------------
+#ifndef Q_OS_WINCE
+// Qt/CE has no stdin/out support for processes
 void tst_QTextStream::readAllFromStdin()
 {
-#if defined(Q_OS_WINCE)
-    QSKIP("Qt/CE has no stdin/out support for processes");
-#endif
     QProcess stdinProcess;
     stdinProcess.start("readAllStdinProcess/readAllStdinProcess", QIODevice::ReadWrite | QIODevice::Text);
     stdinProcess.setReadChannel(QProcess::StandardError);
@@ -1430,13 +1431,13 @@ void tst_QTextStream::readAllFromStdin()
     QChar quoteChar('"');
     QCOMPARE(stream.readAll(), QString::fromLatin1("%1hello world%2 \n").arg(quoteChar).arg(quoteChar));
 }
+#endif
 
 // ------------------------------------------------------------------------------
+#ifndef Q_OS_WINCE
+// Qt/CE has no stdin/out support for processes
 void tst_QTextStream::readLineFromStdin()
 {
-#if defined(Q_OS_WINCE)
-    QSKIP("Qt/CE has no stdin/out support for processes");
-#endif
     QProcess stdinProcess;
     stdinProcess.start("readLineStdinProcess/readLineStdinProcess", QIODevice::ReadWrite | QIODevice::Text);
     stdinProcess.setReadChannel(QProcess::StandardError);
@@ -1453,6 +1454,7 @@ void tst_QTextStream::readLineFromStdin()
 
     QVERIFY(stdinProcess.waitForFinished(5000));
 }
+#endif
 
 // ------------------------------------------------------------------------------
 void tst_QTextStream::read()