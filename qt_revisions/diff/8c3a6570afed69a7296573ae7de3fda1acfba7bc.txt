diff --git a/src/plugins/platforms/kms/qkmsdevice.cpp b/src/plugins/platforms/kms/qkmsdevice.cpp
index 8d42871..43f2101 100644
--- a/src/plugins/platforms/kms/qkmsdevice.cpp
+++ b/src/plugins/platforms/kms/qkmsdevice.cpp
@@ -52,9 +52,9 @@ QT_BEGIN_NAMESPACE
 QKmsDevice::QKmsDevice(const QString &path, QKmsIntegration *parent) :
     QObject(0), m_integration(parent)
 {
-    m_fd = QT_OPEN(path.toAscii().constData(), O_RDWR);
+    m_fd = QT_OPEN(path.toLatin1().constData(), O_RDWR);
     if (m_fd < 0) {
-        qWarning("Could not open %s.", path.toAscii().constData());
+        qWarning("Could not open %s.", path.toLatin1().constData());
         qFatal("No DRM display device");
     }
 
diff --git a/src/plugins/platforms/linuxfb/qlinuxfbintegration.cpp b/src/plugins/platforms/linuxfb/qlinuxfbintegration.cpp
index e846050..ed19c1c 100644
--- a/src/plugins/platforms/linuxfb/qlinuxfbintegration.cpp
+++ b/src/plugins/platforms/linuxfb/qlinuxfbintegration.cpp
@@ -121,7 +121,7 @@ void QLinuxFbIntegrationPrivate::openTty()
                 break;
         }
     } else {
-        ttyfd = QT_OPEN(ttyDevice.toAscii().constData(), O_RDWR);
+        ttyfd = QT_OPEN(ttyDevice.toLatin1().constData(), O_RDWR);
     }
 
     if (ttyfd == -1)
diff --git a/src/plugins/platforms/qnx/qqnxrootwindow.cpp b/src/plugins/platforms/qnx/qqnxrootwindow.cpp
index 6f6b89a..2f38b25 100644
--- a/src/plugins/platforms/qnx/qqnxrootwindow.cpp
+++ b/src/plugins/platforms/qnx/qqnxrootwindow.cpp
@@ -246,7 +246,7 @@ void QQnxRootWindow::resize(const QSize &size)
 void QQnxRootWindow::createWindowGroup()
 {
     // Generate a random window group name
-    m_windowGroupName = QUuid::createUuid().toString().toAscii();
+    m_windowGroupName = QUuid::createUuid().toString().toLatin1();
 
     // Create window group so child windows can be parented by container window
     errno = 0;
diff --git a/src/plugins/platforms/windows/qwindowsbackingstore.cpp b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
index fad7dbd..e86b41a 100644
--- a/src/plugins/platforms/windows/qwindowsbackingstore.cpp
+++ b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
@@ -97,7 +97,7 @@ void QWindowsBackingStore::flush(QWindow *window, const QRegion &region,
     // Write image for debug purposes.
     if (QWindowsContext::verboseBackingStore > 2) {
         static int n = 0;
-        const QString fileName = QString::fromAscii("win%1_%2.png").
+        const QString fileName = QString::fromLatin1("win%1_%2.png").
                 arg(rw->winId()).arg(n++);
         m_image->image().save(fileName);
         qDebug() << "Wrote " << m_image->image().size() << fileName;
diff --git a/src/plugins/platforms/xcb/qxcbintegration.cpp b/src/plugins/platforms/xcb/qxcbintegration.cpp
index 255c49f..2d3971d 100644
--- a/src/plugins/platforms/xcb/qxcbintegration.cpp
+++ b/src/plugins/platforms/xcb/qxcbintegration.cpp
@@ -105,7 +105,7 @@ QXcbIntegration::QXcbIntegration(const QStringList &parameters)
         qDebug() << "QXcbIntegration: Connecting to additional display: " << parameters.at(i) << parameters.at(i+1);
 #endif
         QString display = parameters.at(i) + ':' + parameters.at(i+1);
-        m_connections << new QXcbConnection(m_nativeInterface.data(), display.toAscii().constData());
+        m_connections << new QXcbConnection(m_nativeInterface.data(), display.toLatin1().constData());
     }
 
     foreach (QXcbConnection *connection, m_connections)