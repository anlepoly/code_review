diff --git a/examples/player/histogramwidget.cpp b/examples/player/histogramwidget.cpp
new file mode 100644
index 0000000..cf7ae6f
--- /dev/null
+++ b/examples/player/histogramwidget.cpp
@@ -0,0 +1,127 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the examples of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:BSD$
+** You may use this file under the terms of the BSD license as follows:
+**
+** "Redistribution and use in source and binary forms, with or without
+** modification, are permitted provided that the following conditions are
+** met:
+**   * Redistributions of source code must retain the above copyright
+**     notice, this list of conditions and the following disclaimer.
+**   * Redistributions in binary form must reproduce the above copyright
+**     notice, this list of conditions and the following disclaimer in
+**     the documentation and/or other materials provided with the
+**     distribution.
+**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
+**     the names of its contributors may be used to endorse or promote
+**     products derived from this software without specific prior written
+**     permission.
+**
+** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include "histogramwidget.h"
+#include <QPainter>
+
+HistogramWidget::HistogramWidget(QWidget *parent)
+    : QWidget(parent)
+    , m_levels(128)
+{
+}
+
+void HistogramWidget::processFrame(QVideoFrame frame)
+{
+    m_histogram.clear();
+
+    do {
+        if (!m_levels)
+            break;
+
+        if (!frame.map(QAbstractVideoBuffer::ReadOnly))
+            break;
+
+        m_histogram.resize(m_levels);
+
+        if (frame.pixelFormat() == QVideoFrame::Format_YUV420P) {
+            // Process YUV420P data
+            uchar *b = frame.bits();
+            for (int y = 0; y < frame.height(); y++) {
+                uchar *lastPixel = b + frame.width();
+                for (uchar *curPixel = b; curPixel < lastPixel; curPixel++)
+                    m_histogram[(*curPixel * m_levels) / 256] += 1.0;
+                b += frame.bytesPerLine();
+            }
+        } else {
+            QImage::Format imageFormat = QVideoFrame::imageFormatFromPixelFormat(frame.pixelFormat());
+            if (imageFormat != QImage::Format_Invalid) {
+                // Process RGB data
+                QImage image(frame.bits(), frame.width(), frame.height(), imageFormat);
+                image = image.convertToFormat(QImage::Format_RGB32);
+
+                const QRgb* b = (const QRgb*)image.bits();
+                for (int y = 0; y < image.height(); y++) {
+                    const QRgb *lastPixel = b + frame.width();
+                    for (const QRgb *curPixel = b; curPixel < lastPixel; curPixel++)
+                        m_histogram[(qGray(*curPixel) * m_levels) / 256] += 1.0;
+                    b = (const QRgb*)((uchar*)b + image.bytesPerLine());
+                }
+            }
+        }
+
+        // find maximum value
+        qreal maxValue = 0.0;
+        for (int i = 0; i < m_histogram.size(); i++) {
+            if (m_histogram[i] > maxValue)
+                maxValue = m_histogram[i];
+        }
+
+        if (maxValue > 0.0) {
+            for (int i = 0; i < m_histogram.size(); i++)
+                m_histogram[i] /= maxValue;
+        }
+
+        frame.unmap();
+    } while (false);
+
+    update();
+}
+
+void HistogramWidget::paintEvent(QPaintEvent *event)
+{
+    Q_UNUSED(event);
+
+    QPainter painter(this);
+
+    if (m_histogram.isEmpty()) {
+        painter.fillRect(0, 0, width(), height(), QColor::fromRgb(0, 0, 0));
+        return;
+    }
+
+    qreal barWidth = width() / (qreal)m_histogram.size();
+
+    for (int i = 0; i < m_histogram.size(); i++) {
+        qreal h = m_histogram[i] * height();
+        // draw level
+        painter.fillRect(barWidth * i, height() - h, barWidth * (i + 1), height(), Qt::red);
+        // clear the rest of the control
+        painter.fillRect(barWidth * i, 0, barWidth * (i + 1), height() - h, Qt::black);
+    }
+}
diff --git a/examples/player/histogramwidget.h b/examples/player/histogramwidget.h
new file mode 100644
index 0000000..2d1883f
--- /dev/null
+++ b/examples/player/histogramwidget.h
@@ -0,0 +1,67 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the examples of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:BSD$
+** You may use this file under the terms of the BSD license as follows:
+**
+** "Redistribution and use in source and binary forms, with or without
+** modification, are permitted provided that the following conditions are
+** met:
+**   * Redistributions of source code must retain the above copyright
+**     notice, this list of conditions and the following disclaimer.
+**   * Redistributions in binary form must reproduce the above copyright
+**     notice, this list of conditions and the following disclaimer in
+**     the documentation and/or other materials provided with the
+**     distribution.
+**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
+**     the names of its contributors may be used to endorse or promote
+**     products derived from this software without specific prior written
+**     permission.
+**
+** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#ifndef HISTOGRAMWIDGET_H
+#define HISTOGRAMWIDGET_H
+
+#include <QWidget>
+#include <qvideoframe.h>
+
+QT_USE_NAMESPACE
+
+class HistogramWidget : public QWidget
+{
+    Q_OBJECT
+public:
+    explicit HistogramWidget(QWidget *parent = 0);
+    void setLevels(int levels) { m_levels = levels; }
+
+public slots:
+    void processFrame(QVideoFrame frame);
+
+protected:
+    void paintEvent(QPaintEvent *event);
+
+private:
+    QVector<qreal> m_histogram;
+    int m_levels;
+};
+
+#endif // HISTOGRAMWIDGET_H
diff --git a/examples/player/player.cpp b/examples/player/player.cpp
index 187312b..8934cab 100644
--- a/examples/player/player.cpp
+++ b/examples/player/player.cpp
@@ -42,9 +42,11 @@
 
 #include "playercontrols.h"
 #include "playlistmodel.h"
+#include "histogramwidget.h"
 
 #include <qmediaservice.h>
 #include <qmediaplaylist.h>
+#include <qvideoprobe.h>
 
 #include <QtWidgets>
 
@@ -95,6 +97,16 @@ Player::Player(QWidget *parent)
     labelDuration = new QLabel(this);
     connect(slider, SIGNAL(sliderMoved(int)), this, SLOT(seek(int)));
     
+    labelHistogram = new QLabel(this);
+    labelHistogram->setText("Histogram:");
+    histogram = new HistogramWidget(this);
+    QHBoxLayout *histogramLayout = new QHBoxLayout;
+    histogramLayout->addWidget(labelHistogram);
+    histogramLayout->addWidget(histogram, 1);
+
+    probe = new QVideoProbe(this);
+    connect(probe, SIGNAL(videoFrameProbed(const QVideoFrame&)), histogram, SLOT(processFrame(QVideoFrame)));
+    probe->setSource(player);
 
     QPushButton *openButton = new QPushButton(tr("Open"), this);
 
@@ -152,6 +164,7 @@ Player::Player(QWidget *parent)
     hLayout->addWidget(labelDuration);
     layout->addLayout(hLayout);
     layout->addLayout(controlLayout);
+    layout->addLayout(histogramLayout);
 
     setLayout(layout);
 
@@ -368,7 +381,6 @@ void Player::updateDurationInfo(qint64 currentInfo)
     labelDuration->setText(tStr);
 }
 
-
 #ifndef PLAYER_NO_COLOROPTIONS
 void Player::showColorDialog()
 {
@@ -415,3 +427,4 @@ void Player::showColorDialog()
     colorDialog->show();
 }
 #endif
+
diff --git a/examples/player/player.h b/examples/player/player.h
index a317bfc..924d4e2 100644
--- a/examples/player/player.h
+++ b/examples/player/player.h
@@ -54,6 +54,7 @@ class QLabel;
 class QModelIndex;
 class QSlider;
 class QPushButton;
+class QVideoProbe;
 
 class QMediaPlayer;
 class QVideoWidget;
@@ -62,6 +63,7 @@ QT_END_NAMESPACE
 QT_USE_NAMESPACE
 
 class PlaylistModel;
+class HistogramWidget;
 
 class Player : public QWidget
 {
@@ -113,6 +115,11 @@ private:
     QPushButton *colorButton;
     QDialog *colorDialog;
 #endif
+
+    QLabel *labelHistogram;
+    HistogramWidget *histogram;
+    QVideoProbe *probe;
+
     PlaylistModel *playlistModel;
     QAbstractItemView *playlistView;
     QString trackInfo;
diff --git a/examples/player/player.pro b/examples/player/player.pro
index 3bc6c65..5259418 100644
--- a/examples/player/player.pro
+++ b/examples/player/player.pro
@@ -12,12 +12,14 @@ HEADERS = \
     player.h \
     playercontrols.h \
     playlistmodel.h \
-    videowidget.h
+    videowidget.h \
+    histogramwidget.h
 SOURCES = main.cpp \
     player.cpp \
     playercontrols.cpp \
     playlistmodel.cpp \
-    videowidget.cpp
+    videowidget.cpp \
+    histogramwidget.cpp
 
 maemo* {
     DEFINES += PLAYER_NO_COLOROPTIONS