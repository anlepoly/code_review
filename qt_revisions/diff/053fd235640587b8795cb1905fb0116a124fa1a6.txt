diff --git a/Source/WebKit2/UIProcess/PageViewportController.cpp b/Source/WebKit2/UIProcess/PageViewportController.cpp
index e56869f..8d4bc01 100644
--- a/Source/WebKit2/UIProcess/PageViewportController.cpp
+++ b/Source/WebKit2/UIProcess/PageViewportController.cpp
@@ -234,6 +234,8 @@ void PageViewportController::didChangeViewportAttributes(const WebCore::Viewport
 
     if (updateMinimumScaleToFit(true))
         m_client->didChangeViewportAttributes();
+
+    syncVisibleContents();
 }
 
 WebCore::FloatSize PageViewportController::viewportSizeInContentsCoordinates() const
diff --git a/Source/WebKit2/WebProcess/WebPage/WebPage.cpp b/Source/WebKit2/WebProcess/WebPage/WebPage.cpp
index 3e20c83..3c256ec 100644
--- a/Source/WebKit2/WebProcess/WebPage/WebPage.cpp
+++ b/Source/WebKit2/WebProcess/WebPage/WebPage.cpp
@@ -1027,18 +1027,6 @@ void WebPage::sendViewportAttributesChanged()
     ViewportAttributes attr = computeViewportAttributes(m_page->viewportArguments(), minimumLayoutFallbackWidth, deviceWidth, deviceHeight, m_page->deviceScaleFactor(), m_viewportSize);
     attr.initialScale = m_page->viewportArguments().zoom; // Resets auto (-1) if no value was set by user.
 
-    // Keep the current position, update size only.
-    // For the new loads position is already reset to (0,0).
-    FrameView* view = m_page->mainFrame()->view();
-    IntPoint contentFixedOrigin = view->fixedVisibleContentRect().location();
-
-    // Put the width and height to the viewport width and height. In css units however.
-    // FIXME: This should be in scaled units but this currently affects viewport attributes calculation.
-    IntSize contentFixedSize = m_viewportSize;
-    contentFixedSize.scale(1 / m_page->deviceScaleFactor());
-
-    setFixedVisibleContentRect(IntRect(contentFixedOrigin, contentFixedSize));
-
     // This also takes care of the relayout.
     setFixedLayoutSize(roundedIntSize(attr.layoutSize));