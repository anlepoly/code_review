diff --git a/src/corelib/codecs/codecs.qdoc b/src/corelib/codecs/codecs.qdoc
index 05714b2..f878f33 100644
--- a/src/corelib/codecs/codecs.qdoc
+++ b/src/corelib/codecs/codecs.qdoc
@@ -346,9 +346,9 @@
 
     The environment variable \c UNICODEMAP_JP can be used to
     fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping
-    names are as for the Japanese XML working group's \link
-    http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm XML
-    Japanese Profile\endlink, because it names and explains all the
+    names are as for the Japanese XML working group's
+    \l{XML Japanese Profile},
+    because it names and explains all the
     widely used mappings. Here are brief descriptions, written by
     Serika Kurusugawa:
 
@@ -486,11 +486,10 @@
     TSCII, formally the Tamil Standard Code Information Interchange
     specification, is a commonly used charset for Tamils. The
     official page for the standard is at
-    \link http://www.tamil.net/tscii/ http://www.tamil.net/tscii/\endlink
+    \l{http://www.tamil.net/tscii/}
 
     This codec uses the mapping table found at
-    \link http://www.geocities.com/Athens/5180/tsciiset.html
-    http://www.geocities.com/Athens/5180/tsciiset.html\endlink.
+    \l{http://www.geocities.com/Athens/5180/tsciiset.html}.
     Tamil uses composed Unicode which might cause some
     problems if you are using Unicode fonts instead of TSCII fonts.
 
diff --git a/src/corelib/codecs/qtextcodec.cpp b/src/corelib/codecs/qtextcodec.cpp
index 23cf95a..b015c91 100644
--- a/src/corelib/codecs/qtextcodec.cpp
+++ b/src/corelib/codecs/qtextcodec.cpp
@@ -977,8 +977,8 @@ QTextCodec *QTextCodec::codecForName(const QByteArray &name)
 
 
 /*!
-    Returns the QTextCodec which matches the \link
-    QTextCodec::mibEnum() MIBenum\endlink \a mib.
+    Returns the QTextCodec which matches the
+    \l{QTextCodec::mibEnum()}{MIBenum} \a mib.
 */
 QTextCodec* QTextCodec::codecForMib(int mib)
 {
diff --git a/src/corelib/doc/src/external-resources.qdoc b/src/corelib/doc/src/external-resources.qdoc
new file mode 100644
index 0000000..0d1b0c3
--- /dev/null
+++ b/src/corelib/doc/src/external-resources.qdoc
@@ -0,0 +1,42 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the documentation of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:FDL$
+** GNU Free Documentation License
+** Alternatively, this file may be used under the terms of the GNU Free
+** Documentation License version 1.3 as published by the Free Software
+** Foundation and appearing in the file included in the packaging of
+** this file.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms
+** and conditions contained in a signed written agreement between you
+** and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+
+/*!
+    \externalpage http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm
+    \title XML Japanese Profile
+*/
+
+/*!
+    \externalpage http://www.geocities.com/Athens/5180/tsciiset.html
+    \title http://www.geocities.com/Athens/5180/tsciiset.html
+*/
+
+/*!
+    \externalpage http://www.tamil.net/tscii/
+    \title http://www.tamil.net/tscii/
+*/
diff --git a/src/corelib/doc/src/objectmodel/objecttrees.qdoc b/src/corelib/doc/src/objectmodel/objecttrees.qdoc
index e03a93a..298c1b6 100644
--- a/src/corelib/doc/src/objectmodel/objecttrees.qdoc
+++ b/src/corelib/doc/src/objectmodel/objecttrees.qdoc
@@ -34,9 +34,9 @@
 
     \section1 Overview
 
-    \link QObject QObjects\endlink organize themselves in object trees.
+    \l{QObject}{QObjects} organize themselves in object trees.
     When you create a QObject with another object as parent, it's added to
-    the parent's \link QObject::children() children() \endlink list, and
+    the parent's \l{QObject::children()}{children()} list, and
     is deleted when the parent is. It turns out that this approach fits
     the needs of GUI objects very well. For example, a \l QShortcut
     (keyboard shortcut) is a child of the relevant window, so when the
diff --git a/src/corelib/doc/src/objectmodel/signalsandslots.qdoc b/src/corelib/doc/src/objectmodel/signalsandslots.qdoc
index 0f12c9c..c3a7183 100644
--- a/src/corelib/doc/src/objectmodel/signalsandslots.qdoc
+++ b/src/corelib/doc/src/objectmodel/signalsandslots.qdoc
@@ -272,9 +272,9 @@
     and slot members, as well as pointers to these functions.
 
     The meta-object contains additional information such as the
-    object's \link QObject::className() class name\endlink. You can
-    also check if an object \link QObject::inherits()
-    inherits\endlink a specific class, for example:
+    object's \l{QObject::className()}{class name}. You can
+    also check if an object \l{QObject::inherits()}{inherits}
+    a specific class, for example:
 
     \snippet signalsandslots/signalsandslots.cpp 5
     \snippet signalsandslots/signalsandslots.cpp 6
diff --git a/src/corelib/doc/src/resource-system.qdoc b/src/corelib/doc/src/resource-system.qdoc
index 89a099a..87d98ed 100644
--- a/src/corelib/doc/src/resource-system.qdoc
+++ b/src/corelib/doc/src/resource-system.qdoc
@@ -69,7 +69,7 @@
 
     By default, resources are accessible in the application under the
     same file name as they have in the source tree, with a \c :/ prefix,
-    or by a \link QUrl URL\endlink with a \c qrc scheme.
+    or by a \l{QUrl}{URL} with a \c qrc scheme.
 
     For example, the file path \c :/images/cut.png or the URL
     \c qrc:///images/cut.png would give access to the
diff --git a/src/corelib/doc/src/threads.qdoc b/src/corelib/doc/src/threads.qdoc
index 80c9445..12d78e7 100644
--- a/src/corelib/doc/src/threads.qdoc
+++ b/src/corelib/doc/src/threads.qdoc
@@ -659,8 +659,7 @@
 
     \section1 Threads and Rich Text Processing
 
-    The QTextDocument, QTextCursor, and \link richtext.html all
-    related classes\endlink are reentrant.
+    The QTextDocument, QTextCursor, and \l{richtext.html}{all related classes} are reentrant.
 
     Note that a QTextDocument instance created in the GUI thread may
     contain QPixmap image resources. Use QTextDocument::clone() to
diff --git a/src/corelib/global/qnamespace.qdoc b/src/corelib/global/qnamespace.qdoc
index a613eff..8eac555 100644
--- a/src/corelib/global/qnamespace.qdoc
+++ b/src/corelib/global/qnamespace.qdoc
@@ -654,11 +654,10 @@
 
     Color/Mono preference (ignored for QBitmap):
 
-    \value AutoColor (default) - If the image has \link
-           QImage::depth() depth\endlink 1 and contains only
+    \value AutoColor (default) - If the image has \l{QImage::depth()}{depth} 1 and contains only
            black and white pixels, the pixmap becomes monochrome.
     \value ColorOnly The pixmap is dithered/converted to the
-           \link QPixmap::defaultDepth() native display depth\endlink.
+           \l{QPixmap::defaultDepth()}{native display depth}.
     \value MonoOnly The pixmap becomes monochrome. If necessary,
            it is dithered using the chosen dithering algorithm.
 
diff --git a/src/corelib/io/qurl.cpp b/src/corelib/io/qurl.cpp
index 1bad2a9..393ac8d 100644
--- a/src/corelib/io/qurl.cpp
+++ b/src/corelib/io/qurl.cpp
@@ -2875,7 +2875,7 @@ bool QUrl::isParentOf(const QUrl &childUrl) const
     Writes url \a url to the stream \a out and returns a reference
     to the stream.
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 QDataStream &operator<<(QDataStream &out, const QUrl &url)
 {
@@ -2891,7 +2891,7 @@ QDataStream &operator<<(QDataStream &out, const QUrl &url)
     Reads a url into \a url from the stream \a in and returns a
     reference to the stream.
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 QDataStream &operator>>(QDataStream &in, QUrl &url)
 {
diff --git a/src/corelib/kernel/qcoreevent.cpp b/src/corelib/kernel/qcoreevent.cpp
index ab015a4..1e3f8a2 100644
--- a/src/corelib/kernel/qcoreevent.cpp
+++ b/src/corelib/kernel/qcoreevent.cpp
@@ -323,8 +323,7 @@ QEvent &QEvent::operator=(const QEvent &other)
 }
 
 /*!
-    Destroys the event. If it was \link
-    QCoreApplication::postEvent() posted \endlink,
+    Destroys the event. If it was \l{QCoreApplication::postEvent()}{posted},
     it will be removed from the list of events to be posted.
 */
 
diff --git a/src/corelib/kernel/qtimer.cpp b/src/corelib/kernel/qtimer.cpp
index 23e1826..cef9dd9 100644
--- a/src/corelib/kernel/qtimer.cpp
+++ b/src/corelib/kernel/qtimer.cpp
@@ -300,7 +300,7 @@ QT_END_INCLUDE_NAMESPACE
     This static function calls a slot after a given time interval.
 
     It is very convenient to use this function because you do not need
-    to bother with a \link QObject::timerEvent() timerEvent\endlink or
+    to bother with a \l{QObject::timerEvent()}{timerEvent} or
     create a local QTimer object.
 
     Example:
@@ -328,7 +328,7 @@ void QTimer::singleShot(int msec, QObject *receiver, const char *member)
     This static function calls a slot after a given time interval.
 
     It is very convenient to use this function because you do not need
-    to bother with a \link QObject::timerEvent() timerEvent\endlink or
+    to bother with a \l{QObject::timerEvent()}{timerEvent} or
     create a local QTimer object.
 
     The \a receiver is the receiving object and the \a member is the slot. The
diff --git a/src/corelib/kernel/qvariant.cpp b/src/corelib/kernel/qvariant.cpp
index 3d33860..ffc8634 100644
--- a/src/corelib/kernel/qvariant.cpp
+++ b/src/corelib/kernel/qvariant.cpp
@@ -1769,8 +1769,7 @@ void QVariant::save(QDataStream &s) const
 
     Reads a variant \a p from the stream \a s.
 
-    \sa \link datastreamformat.html Format of the QDataStream
-    operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 QDataStream& operator>>(QDataStream &s, QVariant &p)
 {
@@ -1781,8 +1780,7 @@ QDataStream& operator>>(QDataStream &s, QVariant &p)
 /*!
     Writes a variant \a p to the stream \a s.
 
-    \sa \link datastreamformat.html Format of the QDataStream
-    operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 QDataStream& operator<<(QDataStream &s, const QVariant &p)
 {
diff --git a/src/corelib/tools/qbitarray.cpp b/src/corelib/tools/qbitarray.cpp
index 0e74e15..6d26d93 100644
--- a/src/corelib/tools/qbitarray.cpp
+++ b/src/corelib/tools/qbitarray.cpp
@@ -55,11 +55,10 @@ QT_BEGIN_NAMESPACE
     \reentrant
 
     A QBitArray is an array that gives access to individual bits and
-    provides operators (\link operator&() AND\endlink, \link
-    operator|() OR\endlink, \link operator^() XOR\endlink, and \link
-    operator~() NOT\endlink) that work on entire arrays of bits. It
-    uses \l{implicit sharing} (copy-on-write) to reduce memory usage
-    and to avoid the needless copying of data.
+    provides operators (\l{operator&()}{AND}, \l{operator|()}{OR},
+    \l{operator^()}{XOR}, and \l{operator~()}{NOT}) that work on
+    entire arrays of bits. It uses \l{implicit sharing} (copy-on-write)
+    to reduce memory usage and to avoid the needless copying of data.
 
     The following code constructs a QBitArray containing 200 bits
     initialized to false (0):
@@ -83,9 +82,9 @@ QT_BEGIN_NAMESPACE
 
     \snippet code/src_corelib_tools_qbitarray.cpp 2
 
-    QBitArray supports \c{&} (\link operator&() AND\endlink), \c{|}
-    (\link operator|() OR\endlink), \c{^} (\link operator^()
-    XOR\endlink), \c{~} (\link operator~() NOT\endlink), as well as
+    QBitArray supports \c{&} (\l{operator&()}{AND}), \c{|}
+    (\l{operator|()}{OR}), \c{^} (\l{operator^()}{XOR}),
+    \c{~} (\l{operator~()}{NOT}), as well as
     \c{&=}, \c{|=}, and \c{^=}. These operators work in the same way
     as the built-in C++ bitwise operators of the same name. For
     example:
diff --git a/src/corelib/tools/qhash.cpp b/src/corelib/tools/qhash.cpp
index fb56633..0a6d51c 100644
--- a/src/corelib/tools/qhash.cpp
+++ b/src/corelib/tools/qhash.cpp
@@ -1186,8 +1186,7 @@ void QHashData::checkSanity()
     Returns the first key mapped to \a value.
 
     If the hash contains no item with the \a value, the function
-    returns a \link {default-constructed value} default-constructed
-    key \endlink.
+    returns a \l{default-constructed value}{default-constructed key}.
 
     This function can be slow (\l{linear time}), because QHash's
     internal data structure is optimized for fast lookup by key, not
diff --git a/src/corelib/tools/qlinkedlist.cpp b/src/corelib/tools/qlinkedlist.cpp
index 3682818..46f5b7c 100644
--- a/src/corelib/tools/qlinkedlist.cpp
+++ b/src/corelib/tools/qlinkedlist.cpp
@@ -1059,7 +1059,7 @@ const QLinkedListData QLinkedListData::shared_null = {
     This function requires the value type to implement \c
     operator<<().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*! \fn QDataStream &operator>>(QDataStream &in, QLinkedList<T> &list)
@@ -1069,7 +1069,7 @@ const QLinkedListData QLinkedListData::shared_null = {
 
     This function requires the value type to implement \c operator>>().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*!
diff --git a/src/corelib/tools/qlist.cpp b/src/corelib/tools/qlist.cpp
index b3514d3..72924ef 100644
--- a/src/corelib/tools/qlist.cpp
+++ b/src/corelib/tools/qlist.cpp
@@ -1718,7 +1718,7 @@ void **QListData::erase(void **xi)
     This function requires the value type to implement \c
     operator<<().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*! \fn QDataStream &operator>>(QDataStream &in, QList<T> &list)
@@ -1729,7 +1729,7 @@ void **QListData::erase(void **xi)
     This function requires the value type to implement \c
     operator>>().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*! \fn QList<T> QList<T>::fromVector(const QVector<T> &vector)
diff --git a/src/corelib/tools/qmap.cpp b/src/corelib/tools/qmap.cpp
index 8002e7c..d1f8222 100644
--- a/src/corelib/tools/qmap.cpp
+++ b/src/corelib/tools/qmap.cpp
@@ -753,8 +753,8 @@ void QMapDataBase::freeData(QMapDataBase *d)
 
     Returns the first key with value \a value, or \a defaultKey if
     the map contains no item with value \a value. If no \a defaultKey
-    is provided the function returns a \link {default-constructed value}
-    default-constructed key \endlink.
+    is provided the function returns a
+    \l{default-constructed value}{default-constructed key}.
 
     This function can be slow (\l{linear time}), because QMap's
     internal data structure is optimized for fast lookup by key, not
@@ -1491,7 +1491,7 @@ void QMapDataBase::freeData(QMapDataBase *d)
     This function requires the key and value types to implement \c
     operator<<().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*! \fn QDataStream &operator>>(QDataStream &in, QMap<Key, T> &map)
@@ -1502,7 +1502,7 @@ void QMapDataBase::freeData(QMapDataBase *d)
     This function requires the key and value types to implement \c
     operator>>().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*! \class QMultiMap
diff --git a/src/corelib/tools/qregexp.cpp b/src/corelib/tools/qregexp.cpp
index 792b9ce..54b8103 100644
--- a/src/corelib/tools/qregexp.cpp
+++ b/src/corelib/tools/qregexp.cpp
@@ -236,7 +236,7 @@ int qFindString(const QChar *haystack, int haystackLen, int from,
     spellings than we want: 'Eric', 'Erik', 'Eiric' and 'Eirik'.
 
     Some of the examples discussed above are implemented in the
-    \link #code-examples code examples \endlink section.
+    \l{#code-examples}{code examples} section.
 
     \target characters-and-abbreviations-for-sets-of-characters
     \section1 Characters and Abbreviations for Sets of Characters
@@ -453,8 +453,7 @@ int qFindString(const QChar *haystack, int haystackLen, int from,
          writing \c{\\^}. For example, \b{^#include} will only
          match strings which \e begin with the characters '#include'.
          (When the caret is the first character of a character set it
-         has a special meaning, see \link #sets-of-characters Sets of
-         Characters \endlink.)
+         has a special meaning, see \l{#sets-of-characters}{Sets of Characters}.)
 
     \row \li \b{$}
          \li The dollar signifies the end of the string. For example
@@ -538,9 +537,8 @@ int qFindString(const QChar *haystack, int haystackLen, int from,
     \section1 Notes for Perl Users
 
     Most of the character class abbreviations supported by Perl are
-    supported by QRegExp, see \link
-    #characters-and-abbreviations-for-sets-of-characters characters
-    and abbreviations for sets of characters \endlink.
+    supported by QRegExp, see \l{#characters-and-abbreviations-for-sets-of-characters}
+    {characters and abbreviations for sets of characters}.
 
     In QRegExp, apart from within character classes, \c{^} always
     signifies the start of the string, so carets must always be
diff --git a/src/corelib/tools/qset.qdoc b/src/corelib/tools/qset.qdoc
index 51d9caa..e6b653d 100644
--- a/src/corelib/tools/qset.qdoc
+++ b/src/corelib/tools/qset.qdoc
@@ -939,7 +939,7 @@
 
     This function requires the value type to implement \c operator<<().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*!
@@ -950,5 +950,5 @@
 
     This function requires the value type to implement \c operator>>().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
diff --git a/src/corelib/tools/qstring.cpp b/src/corelib/tools/qstring.cpp
index a0a3a28..8d8bda4 100644
--- a/src/corelib/tools/qstring.cpp
+++ b/src/corelib/tools/qstring.cpp
@@ -7459,9 +7459,8 @@ QString &QString::setRawData(const QChar *unicode, int size)
     Many of QString's member functions are overloaded to accept
     \c{const char *} instead of QString. This includes the copy
     constructor, the assignment operator, the comparison operators,
-    and various other functions such as \link QString::insert()
-    insert() \endlink, \link QString::replace() replace()\endlink,
-    and \link QString::indexOf() indexOf()\endlink. These functions
+    and various other functions such as \l{QString::insert()}{insert()}, \l{QString::replace()}{replace()},
+    and \l{QString::indexOf()}{indexOf()}. These functions
     are usually optimized to avoid constructing a QString object for
     the \c{const char *} data. For example, assuming \c str is a
     QString,
diff --git a/src/corelib/tools/qvector.cpp b/src/corelib/tools/qvector.cpp
index 20501f9..329727c 100644
--- a/src/corelib/tools/qvector.cpp
+++ b/src/corelib/tools/qvector.cpp
@@ -1011,7 +1011,7 @@ int QVectorData::grow(int sizeOfHeader, int size, int sizeOfT)
 
     This function requires the value type to implement \c operator<<().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 /*! \fn QDataStream &operator>>(QDataStream &in, QVector<T> &vector)
@@ -1021,7 +1021,7 @@ int QVectorData::grow(int sizeOfHeader, int size, int sizeOfT)
 
     This function requires the value type to implement \c operator>>().
 
-    \sa \link datastreamformat.html Format of the QDataStream operators \endlink
+    \sa{Serializing Qt Data Types}{Format of the QDataStream operators}
 */
 
 QT_END_NAMESPACE