diff --git a/src/declarative/debugger/qdeclarativedebugtrace.cpp b/src/declarative/debugger/qdeclarativedebugtrace.cpp
index c1206a2..e255edd 100644
--- a/src/declarative/debugger/qdeclarativedebugtrace.cpp
+++ b/src/declarative/debugger/qdeclarativedebugtrace.cpp
@@ -149,7 +149,7 @@ void QDeclarativeDebugTrace::rangeDataImpl(RangeType range, const QUrl &rData)
     if (status() != Enabled || !m_enabled)
         return;
 
-    QDeclarativeDebugData rd = {m_timer.elapsed(), (int)RangeData, (int)range, rData.toString(QUrl::FormattingOption(0x100)), -1};
+    QDeclarativeDebugData rd = {m_timer.elapsed(), (int)RangeData, (int)range, rData.toString(QUrl::UrlFormattingOption(0x100)), -1};
     processMessage(rd);
 }
 
@@ -167,7 +167,7 @@ void QDeclarativeDebugTrace::rangeLocationImpl(RangeType range, const QUrl &file
     if (status() != Enabled || !m_enabled)
         return;
 
-    QDeclarativeDebugData rd = {m_timer.elapsed(), (int)RangeLocation, (int)range, fileName.toString(QUrl::FormattingOption(0x100)), line};
+    QDeclarativeDebugData rd = {m_timer.elapsed(), (int)RangeLocation, (int)range, fileName.toString(QUrl::UrlFormattingOption(0x100)), line};
     processMessage(rd);
 }
 
diff --git a/src/declarative/qml/qdeclarativebinding.cpp b/src/declarative/qml/qdeclarativebinding.cpp
index a1ef1c8..d274337 100644
--- a/src/declarative/qml/qdeclarativebinding.cpp
+++ b/src/declarative/qml/qdeclarativebinding.cpp
@@ -400,7 +400,6 @@ void QDeclarativeBinding::update(QDeclarativePropertyPrivate::WriteFlags flags)
 
                 QUrl url = QUrl(d->url);
                 int line = d->line;
-                if (url.isEmpty()) url = QUrl(QLatin1String("<Unknown File>"));
 
                 d->error.setUrl(url);
                 d->error.setLine(line);
@@ -413,7 +412,6 @@ void QDeclarativeBinding::update(QDeclarativePropertyPrivate::WriteFlags flags)
 
                 QUrl url = QUrl(d->url);
                 int line = d->line;
-                if (url.isEmpty()) url = QUrl(QLatin1String("<Unknown File>"));
 
                 d->error.setUrl(url);
                 d->error.setLine(line);
@@ -428,7 +426,6 @@ void QDeclarativeBinding::update(QDeclarativePropertyPrivate::WriteFlags flags)
 
                 QUrl url = QUrl(d->url);
                 int line = d->line;
-                if (url.isEmpty()) url = QUrl(QLatin1String("<Unknown File>"));
 
                 const char *valueType = 0;
                 if (value.userType() == QVariant::Invalid) valueType = "null";
diff --git a/src/declarative/qml/qdeclarativeexpression.cpp b/src/declarative/qml/qdeclarativeexpression.cpp
index 08cd3fe..94b662c 100644
--- a/src/declarative/qml/qdeclarativeexpression.cpp
+++ b/src/declarative/qml/qdeclarativeexpression.cpp
@@ -392,13 +392,10 @@ void QDeclarativeExpressionPrivate::exceptionToError(QScriptEngine *scriptEngine
         QScriptValue exception = scriptEngine->uncaughtException();
         QLatin1String fileNameProp("fileName");
 
-        if (!exception.property(fileNameProp).toString().isEmpty()){
+        if (!exception.property(fileNameProp).toString().isEmpty())
             fileName = exception.property(fileNameProp).toString();
-        } else {
-            fileName = QLatin1String("<Unknown File>");
-        }
 
-        error.setUrl(QUrl(fileName));
+        error.setUrl(!fileName.isEmpty() ? QUrl(fileName) : QUrl());
         error.setLine(lineNumber);
         error.setColumn(-1);
         error.setDescription(exception.toString());
diff --git a/tests/auto/declarative/qdeclarativecontext/tst_qdeclarativecontext.cpp b/tests/auto/declarative/qdeclarativecontext/tst_qdeclarativecontext.cpp
index 15bede8..1c08546 100644
--- a/tests/auto/declarative/qdeclarativecontext/tst_qdeclarativecontext.cpp
+++ b/tests/auto/declarative/qdeclarativecontext/tst_qdeclarativecontext.cpp
@@ -342,7 +342,7 @@ void tst_qdeclarativecontext::setContextProperty()
         QDeclarativeContext ctxt(engine.rootContext());
         ctxt.setContextProperty("ctxtProp", QVariant());
 
-        QTest::ignoreMessage(QtWarningMsg, "<Unknown File>:1: TypeError: Result of expression 'ctxtProp' [undefined] is not an object.");
+        QTest::ignoreMessage(QtWarningMsg, "<Unknown File>: TypeError: Result of expression 'ctxtProp' [undefined] is not an object.");
         QObject *obj = component.create(&ctxt);
 
         QVariant v = obj->property("obj");
diff --git a/tests/auto/declarative/qdeclarativeengine/tst_qdeclarativeengine.cpp b/tests/auto/declarative/qdeclarativeengine/tst_qdeclarativeengine.cpp
index 586f5da..7728655 100644
--- a/tests/auto/declarative/qdeclarativeengine/tst_qdeclarativeengine.cpp
+++ b/tests/auto/declarative/qdeclarativeengine/tst_qdeclarativeengine.cpp
@@ -271,7 +271,7 @@ void tst_qdeclarativeengine::outputWarningsToStandardError()
     delete o;
 
     QCOMPARE(warnings.count(), 1);
-    QCOMPARE(warnings.at(0), QLatin1String("<Unknown File>:1: Unable to assign [undefined] to int a"));
+    QCOMPARE(warnings.at(0), QLatin1String("<Unknown File>: Unable to assign [undefined] to int a"));
     warnings.clear();
 
 
diff --git a/tests/auto/declarative/qdeclarativetextedit/tst_qdeclarativetextedit.cpp b/tests/auto/declarative/qdeclarativetextedit/tst_qdeclarativetextedit.cpp
index 5aaea51..fe15244 100644
--- a/tests/auto/declarative/qdeclarativetextedit/tst_qdeclarativetextedit.cpp
+++ b/tests/auto/declarative/qdeclarativetextedit/tst_qdeclarativetextedit.cpp
@@ -2420,19 +2420,19 @@ void tst_qdeclarativetextedit::testQtQuick11Attributes_data()
     QTest::addColumn<QString>("error");
 
     QTest::newRow("canPaste") << "property bool foo: canPaste"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: canPaste"
+        << "<Unknown File>: ReferenceError: Can't find variable: canPaste"
         << "";
 
     QTest::newRow("lineCount") << "property int foo: lineCount"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: lineCount"
+        << "<Unknown File>: ReferenceError: Can't find variable: lineCount"
         << "";
 
     QTest::newRow("moveCursorSelection") << "Component.onCompleted: moveCursorSelection(0, TextEdit.SelectCharacters)"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: moveCursorSelection"
+        << "<Unknown File>: ReferenceError: Can't find variable: moveCursorSelection"
         << "";
 
     QTest::newRow("deselect") << "Component.onCompleted: deselect()"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: deselect"
+        << "<Unknown File>: ReferenceError: Can't find variable: deselect"
         << "";
 
     QTest::newRow("onLinkActivated") << "onLinkActivated: {}"
diff --git a/tests/auto/declarative/qdeclarativetextinput/tst_qdeclarativetextinput.cpp b/tests/auto/declarative/qdeclarativetextinput/tst_qdeclarativetextinput.cpp
index e72bbd4..1769345 100644
--- a/tests/auto/declarative/qdeclarativetextinput/tst_qdeclarativetextinput.cpp
+++ b/tests/auto/declarative/qdeclarativetextinput/tst_qdeclarativetextinput.cpp
@@ -2426,15 +2426,15 @@ void tst_qdeclarativetextinput::testQtQuick11Attributes_data()
     QTest::addColumn<QString>("error");
 
     QTest::newRow("canPaste") << "property bool foo: canPaste"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: canPaste"
+        << "<Unknown File>: ReferenceError: Can't find variable: canPaste"
         << "";
 
     QTest::newRow("moveCursorSelection") << "Component.onCompleted: moveCursorSelection(0, TextEdit.SelectCharacters)"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: moveCursorSelection"
+        << "<Unknown File>: ReferenceError: Can't find variable: moveCursorSelection"
         << "";
 
     QTest::newRow("deselect") << "Component.onCompleted: deselect()"
-        << "<Unknown File>:1: ReferenceError: Can't find variable: deselect"
+        << "<Unknown File>: ReferenceError: Can't find variable: deselect"
         << "";
 }