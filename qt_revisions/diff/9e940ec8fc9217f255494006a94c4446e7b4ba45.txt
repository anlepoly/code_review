diff --git a/src/corelib/global/qglobal.h b/src/corelib/global/qglobal.h
index fd5c5d6..4c8e336 100644
--- a/src/corelib/global/qglobal.h
+++ b/src/corelib/global/qglobal.h
@@ -760,9 +760,6 @@ namespace QT_NAMESPACE {}
 #  endif
 #  define Q_NO_USING_KEYWORD /* ### check "using" status */
 
-#elif defined(__WINSCW__) && !defined(Q_CC_NOKIAX86)
-#  define Q_CC_NOKIAX86
-
 #else
 #  error "Qt has not been tested with this compiler - talk to qt-info@nokia.com"
 #endif
@@ -1220,7 +1217,7 @@ class QDataStream;
 #endif
 
 #ifndef Q_DECL_EXPORT
-#  if defined(Q_OS_WIN) || defined(Q_CC_NOKIAX86) || defined(Q_CC_RVCT)
+#  if defined(Q_OS_WIN) || defined(Q_CC_RVCT)
 #    define Q_DECL_EXPORT __declspec(dllexport)
 #  elif defined(QT_VISIBILITY_AVAILABLE)
 #    define Q_DECL_EXPORT __attribute__((visibility("default")))
@@ -1231,7 +1228,7 @@ class QDataStream;
 #  endif
 #endif
 #ifndef Q_DECL_IMPORT
-#  if defined(Q_OS_WIN) || defined(Q_CC_NOKIAX86) || defined(Q_CC_RVCT)
+#  if defined(Q_OS_WIN) || defined(Q_CC_RVCT)
 #    define Q_DECL_IMPORT __declspec(dllimport)
 #  else
 #    define Q_DECL_IMPORT
@@ -1797,7 +1794,7 @@ inline T *q_check_ptr(T *p) { Q_CHECK_PTR(p); return p; }
 #   endif
     /* The MIPSpro and RVCT compilers postpones macro expansion,
        and therefore macros must be in scope when being used. */
-#   if !defined(Q_CC_MIPS) && !defined(Q_CC_RVCT) && !defined(Q_CC_NOKIAX86)
+#   if !defined(Q_CC_MIPS) && !defined(Q_CC_RVCT)
 #       undef QT_STRINGIFY2
 #       undef QT_STRINGIFY
 #   endif
diff --git a/src/corelib/kernel/qcoreapplication.cpp b/src/corelib/kernel/qcoreapplication.cpp
index 05f26cc..2b58d25 100644
--- a/src/corelib/kernel/qcoreapplication.cpp
+++ b/src/corelib/kernel/qcoreapplication.cpp
@@ -673,27 +673,6 @@ void QCoreApplication::init()
     qt_core_eval_init(d->application_type);
 #endif
 
-#if    defined(Q_OS_SYMBIAN)  \
-    && defined(Q_CC_NOKIAX86) \
-    && defined(QT_DEBUG)
-    /**
-     * Prevent the executable from being locked in the Symbian emulator. The
-     * code dramatically simplifies debugging on Symbian, but beyond that has
-     * no impact.
-     *
-     * Force the ZLazyUnloadTimer to fire and therefore unload code segments
-     * immediately. The code affects Symbian's file server and on the other
-     * hand needs only to be run once in each emulator run.
-     */
-    {
-        RLoader loader;
-        CleanupClosePushL(loader);
-        User::LeaveIfError(loader.Connect());
-        User::LeaveIfError(loader.CancelLazyDllUnload());
-        CleanupStack::PopAndDestroy(&loader);
-    }
-#endif
-
     d->processCommandLineArguments();
 
     qt_startup_hook();
diff --git a/src/corelib/tools/qscopedpointer.h b/src/corelib/tools/qscopedpointer.h
index 41e6dff..4d0809b 100644
--- a/src/corelib/tools/qscopedpointer.h
+++ b/src/corelib/tools/qscopedpointer.h
@@ -86,9 +86,7 @@ struct QScopedPointerPodDeleter
 template <typename T, typename Cleanup = QScopedPointerDeleter<T> >
 class QScopedPointer
 {
-#ifndef Q_CC_NOKIAX86
     typedef T *QScopedPointer:: *RestrictedBool;
-#endif
 public:
     explicit inline QScopedPointer(T *p = 0) : d(p)
     {
@@ -118,7 +116,7 @@ public:
         return !d;
     }
 
-#if defined(Q_CC_NOKIAX86) || defined(Q_QDOC)
+#if defined(Q_QDOC)
     inline operator bool() const
     {
         return isNull() ? 0 : &QScopedPointer::d;
diff --git a/src/corelib/tools/qsharedpointer_impl.h b/src/corelib/tools/qsharedpointer_impl.h
index 3cad138..21e5496 100644
--- a/src/corelib/tools/qsharedpointer_impl.h
+++ b/src/corelib/tools/qsharedpointer_impl.h
@@ -130,9 +130,7 @@ namespace QtSharedPointer {
     template <class T>
     class Basic
     {
-#ifndef Q_CC_NOKIAX86
         typedef T *Basic:: *RestrictedBool;
-#endif
     public:
         typedef T Type;
         typedef T element_type;
@@ -145,11 +143,7 @@ namespace QtSharedPointer {
 
         inline T *data() const { return value; }
         inline bool isNull() const { return !data(); }
-#ifndef Q_CC_NOKIAX86
         inline operator RestrictedBool() const { return isNull() ? 0 : &Basic::value; }
-#else
-        inline operator bool() const { return isNull() ? 0 : &Basic::value; }
-#endif
         inline bool operator !() const { return isNull(); }
         inline T &operator*() const { return *data(); }
         inline T *operator->() const { return data(); }
@@ -563,9 +557,7 @@ public:
 template <class T>
 class QWeakPointer
 {
-#ifndef Q_CC_NOKIAX86
     typedef T *QWeakPointer:: *RestrictedBool;
-#endif
     typedef QtSharedPointer::ExternalRefCountData Data;
 
 public:
@@ -578,11 +570,7 @@ public:
     typedef qptrdiff difference_type;
 
     inline bool isNull() const { return d == 0 || d->strongref.load() == 0 || value == 0; }
-#ifndef Q_CC_NOKIAX86
     inline operator RestrictedBool() const { return isNull() ? 0 : &QWeakPointer::value; }
-#else
-    inline operator bool() const { return isNull() ? 0 : &QWeakPointer::value; }
-#endif
     inline bool operator !() const { return isNull(); }
     inline T *data() const { return d == 0 || d->strongref.load() == 0 ? 0 : value; }
 
diff --git a/src/widgets/dialogs/qfilesystemmodel.cpp b/src/widgets/dialogs/qfilesystemmodel.cpp
index e44a9ea..a2d4c38 100644
--- a/src/widgets/dialogs/qfilesystemmodel.cpp
+++ b/src/widgets/dialogs/qfilesystemmodel.cpp
@@ -402,8 +402,6 @@ QFileSystemModelPrivate::QFileSystemNode *QFileSystemModelPrivate::node(const QS
 #if (defined(Q_OS_WIN) && !defined(Q_OS_WINCE)) || defined(Q_OS_SYMBIAN)
     {
         if (!pathElements.at(0).contains(QLatin1String(":"))) {
-            // The reason we express it like this instead of with anonymous, temporary
-            // variables, is to workaround a compiler crash with Q_CC_NOKIAX86.
             QString rootPath = QDir(longPath).rootPath();
             pathElements.prepend(rootPath);
         }