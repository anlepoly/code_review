diff --git a/src/activeqt/container/qaxbase.cpp b/src/activeqt/container/qaxbase.cpp
index e2cb619..0283ad1 100644
--- a/src/activeqt/container/qaxbase.cpp
+++ b/src/activeqt/container/qaxbase.cpp
@@ -401,7 +401,7 @@ public:
             Q_ASSERT(index != -1);
             const QMetaMethod signal = meta->method(index);
             Q_ASSERT(signal.methodType() == QMetaMethod::Signal);
-            Q_ASSERT(signame == signal.signature());
+            Q_ASSERT(signame == signal.methodSignature());
             // verify parameter count
             int pcount = axmeta->numParameter(signame);
             int argcount = pDispParams->cArgs;
@@ -3190,7 +3190,7 @@ QMetaObject *MetaObjectGenerator::metaObject(const QMetaObject *parentObject, co
     // put the metaobject together
     metaobj->d.data = int_data;
     metaobj->d.extradata = 0;
-    metaobj->d.stringdata = string_data;
+    metaobj->d.stringdata = reinterpret_cast<const QByteArrayData *>(string_data);
     metaobj->d.superdata = parentObject;
 
     if (d)
@@ -3243,11 +3243,11 @@ static const char qt_meta_stringdata_QAxBase[] = {
 };
 
 static QMetaObject qaxobject_staticMetaObject = {
-    { &QObject::staticMetaObject, qt_meta_stringdata_QAxBase,
+    { &QObject::staticMetaObject, reinterpret_cast<const QByteArrayData *>(qt_meta_stringdata_QAxBase),
         qt_meta_data_QAxBase, 0 }
 };
 static QMetaObject qaxwidget_staticMetaObject = {
-    { &QWidget::staticMetaObject, qt_meta_stringdata_QAxBase,
+    { &QWidget::staticMetaObject, reinterpret_cast<const QByteArrayData *>(qt_meta_stringdata_QAxBase),
         qt_meta_data_QAxBase, 0 }
 };
 
@@ -3612,7 +3612,7 @@ int QAxBase::internalInvoke(QMetaObject::Call call, int index, void **v)
     const QMetaMethod slot = mo->method(index + mo->methodOffset());
     Q_ASSERT(slot.methodType() == QMetaMethod::Slot);
 
-    QByteArray signature(slot.signature());
+    QByteArray signature(slot.methodSignature());
     QByteArray slotname(signature);
     slotname.truncate(slotname.indexOf('('));
 
@@ -3764,7 +3764,7 @@ static void qax_noSuchFunction(int disptype, const QByteArray &name, const QByte
             const QMetaMethod slot(metaObject->method(i));
             if (slot.methodType() != QMetaMethod::Slot)
                 continue;
-            QByteArray signature = slot.signature();
+            QByteArray signature = slot.methodSignature();
             if (signature.toLower().startsWith(function.toLower()))
                 qWarning("\t\t%s", signature.data());
         }
@@ -3825,7 +3825,7 @@ bool QAxBase::dynamicCallHelper(const char *name, void *inout, QList<QVariant> &
         if (id >= 0) {
             const QMetaMethod slot = mo->method(id);
             Q_ASSERT(slot.methodType() == QMetaMethod::Slot);
-            function = slot.signature();
+            function = slot.methodSignature();
             type = slot.typeName();
         }
         function.truncate(function.indexOf('('));
diff --git a/src/activeqt/container/qaxdump.cpp b/src/activeqt/container/qaxdump.cpp
index b958b0d..7801f57 100644
--- a/src/activeqt/container/qaxdump.cpp
+++ b/src/activeqt/container/qaxdump.cpp
@@ -191,7 +191,7 @@ QString qax_generateDocumentation(QAxBase *that)
             if (returntype.isEmpty())
                 returntype = "void";
             QByteArray prototype = namedPrototype(slot.parameterTypes(), slot.parameterNames(), defArgCount);
-            QByteArray signature = slot.signature();
+            QByteArray signature = slot.methodSignature();
 	    QByteArray name = signature.left(signature.indexOf('('));
 	    stream << "<li>" << returntype << " <a href=\"#" << name << "\"><b>" << name << "</b></a>" << prototype << ";</li>" << endl;
             
@@ -259,7 +259,7 @@ QString qax_generateDocumentation(QAxBase *that)
                 continue;
 
             QByteArray prototype = namedPrototype(signal.parameterTypes(), signal.parameterNames());
-	    QByteArray signature = signal.signature();
+            QByteArray signature = signal.methodSignature();
 	    QByteArray name = signature.left(signature.indexOf('('));
 	    stream << "<li>void <a href=\"#" << name << "\"><b>" << name << "</b></a>" << prototype << ";</li>" << endl;
 
diff --git a/src/activeqt/container/qaxscript.cpp b/src/activeqt/container/qaxscript.cpp
index 4ec10f6..9518377 100644
--- a/src/activeqt/container/qaxscript.cpp
+++ b/src/activeqt/container/qaxscript.cpp
@@ -747,7 +747,7 @@ QStringList QAxScript::functions(FunctionFlags flags) const
        const QMetaMethod slot(mo->method(i));
        if (slot.methodType() != QMetaMethod::Slot || slot.access() != QMetaMethod::Public)
             continue;
-        QString slotname = QString::fromLatin1(slot.signature());
+        QString slotname = QString::fromLatin1(slot.methodSignature());
         if (slotname.contains(QLatin1Char('_')))
             continue;
         
diff --git a/src/activeqt/control/qaxserver.cpp b/src/activeqt/control/qaxserver.cpp
index 06344b6..e4cd9b4 100644
--- a/src/activeqt/control/qaxserver.cpp
+++ b/src/activeqt/control/qaxserver.cpp
@@ -920,7 +920,7 @@ static HRESULT classIDL(QObject *o, const QMetaObject *mo, const QString &classN
             outBuffer = QByteArray();
         }
         
-        QByteArray signature(slot.signature());
+        QByteArray signature(slot.methodSignature());
         QByteArray name(signature.left(signature.indexOf('(')));
         if (i <= qtSlots && ignoreSlots(name))
             continue;
@@ -989,7 +989,7 @@ static HRESULT classIDL(QObject *o, const QMetaObject *mo, const QString &classN
             if (signal.methodType() != QMetaMethod::Signal)
                 continue;
             
-            QByteArray signature(signal.signature());
+            QByteArray signature(signal.methodSignature());
             QByteArray name(signature.left(signature.indexOf('(')));
             signature = signature.mid(name.length() + 1);
             signature.truncate(signature.length() - 1);
diff --git a/src/activeqt/control/qaxserverbase.cpp b/src/activeqt/control/qaxserverbase.cpp
index 61cc86c..7807161 100644
--- a/src/activeqt/control/qaxserverbase.cpp
+++ b/src/activeqt/control/qaxserverbase.cpp
@@ -1944,7 +1944,7 @@ int QAxServerBase::qt_metacall(QMetaObject::Call call, int index, void **argv)
             signal = mo->method(index);
             Q_ASSERT(signal.methodType() == QMetaMethod::Signal);
             type = signal.typeName();
-            QByteArray signature(signal.signature());
+            QByteArray signature(signal.methodSignature());
             QByteArray name(signature);
             name.truncate(name.indexOf('('));
 
@@ -2345,7 +2345,7 @@ HRESULT WINAPI QAxServerBase::Invoke(DISPID dispidMember, REFIID riid,
 		if (index == -1) {
 		    for (int i = 0; i < mo->methodCount(); ++i) {
                         const QMetaMethod slot(mo->method(i));
-                        if (slot.methodType() == QMetaMethod::Slot && QByteArray(slot.signature()).startsWith(name)) {
+                        if (slot.methodType() == QMetaMethod::Slot && slot.methodSignature().startsWith(name)) {
 			    index = i;
 			    break;
 			}
@@ -2359,7 +2359,7 @@ HRESULT WINAPI QAxServerBase::Invoke(DISPID dispidMember, REFIID riid,
 
                             for (int s = 0; s < qt.object->metaObject()->methodCount(); ++s) {
                                 QMetaMethod slot = qt.object->metaObject()->method(s);
-                                if (slot.methodType() == QMetaMethod::Slot && QByteArray(slot.signature()).startsWith(name)) {
+                                if (slot.methodType() == QMetaMethod::Slot && slot.methodSignature().startsWith(name)) {
                                     if (!--overload) {
                                         index = s;
                                         break;
@@ -2379,7 +2379,7 @@ HRESULT WINAPI QAxServerBase::Invoke(DISPID dispidMember, REFIID riid,
 	    QMetaMethod slot(mo->method(index));
             Q_ASSERT(slot.methodType() == QMetaMethod::Slot);
 	    QByteArray type = slot.typeName();
-	    name = slot.signature();
+            name = slot.methodSignature();
             nameLength = name.indexOf('(');
 	    QByteArray prototype = name.mid(nameLength + 1);
 	    prototype.truncate(prototype.length() - 1);
diff --git a/tools/dumpcpp/main.cpp b/tools/dumpcpp/main.cpp
index 292f801..7211f12 100644
--- a/tools/dumpcpp/main.cpp
+++ b/tools/dumpcpp/main.cpp
@@ -418,7 +418,7 @@ void generateClassDecl(QTextStream &out, const QString &controlID, const QMetaOb
         }
 #endif
 
-        QByteArray slotSignature(slot.signature());
+        QByteArray slotSignature(slot.methodSignature());
         QByteArray slotName = slotSignature.left(slotSignature.indexOf('('));
         if (functions.contains(slotName))
             continue;
@@ -619,7 +619,7 @@ void generateClassImpl(QTextStream &out, const QMetaObject *mo, const QByteArray
             if (signal.methodType() != QMetaMethod::Signal)
                 continue;
             out << "       ";
-            addString(signal.signature(), stringData);
+            addString(signal.methodSignature().constData(), stringData);
             addString(joinParameterNames(signal.parameterNames()), stringData);
             addString(signal.typeName(), stringData);
             addString(signal.tag(), stringData);
@@ -635,7 +635,7 @@ void generateClassImpl(QTextStream &out, const QMetaObject *mo, const QByteArray
             if (slot.methodType() != QMetaMethod::Slot)
                 continue;
             out << "       ";
-            addString(slot.signature(), stringData);
+            addString(slot.methodSignature().constData(), stringData);
             addString(joinParameterNames(slot.parameterNames()), stringData);
             addString(slot.typeName(), stringData);
             addString(slot.tag(), stringData);
diff --git a/tools/testcon/controlinfo.cpp b/tools/testcon/controlinfo.cpp
index f1ee957..810cb8f 100644
--- a/tools/testcon/controlinfo.cpp
+++ b/tools/testcon/controlinfo.cpp
@@ -82,7 +82,7 @@ void ControlInfo::setControl(QWidget *activex)
         if (method.methodType() == QMetaMethod::Signal) {
             ++count;
 	    item = new QTreeWidgetItem(group);
-            item->setText(0, QString::fromLatin1(method.signature()));
+            item->setText(0, QString::fromLatin1(method.methodSignature()));
         }
     }
     group->setText(1, QString::number(count));
@@ -96,7 +96,7 @@ void ControlInfo::setControl(QWidget *activex)
         if (method.methodType() == QMetaMethod::Slot) {
             ++count;
 	    item = new QTreeWidgetItem(group);
-            item->setText(0, QString::fromLatin1(method.signature()));
+            item->setText(0, QString::fromLatin1(method.methodSignature()));
         }
     }
     group->setText(1, QString::number(count));
diff --git a/tools/testcon/invokemethod.cpp b/tools/testcon/invokemethod.cpp
index 2456250..2ed9a08 100644
--- a/tools/testcon/invokemethod.cpp
+++ b/tools/testcon/invokemethod.cpp
@@ -79,7 +79,7 @@ void InvokeMethod::setControl(QAxBase *ax)
 	for (int i = mo->methodOffset(); i < mo->methodCount(); ++i) {
 	    const QMetaMethod method = mo->method(i);
             if (method.methodType() == QMetaMethod::Slot)
-	        comboMethods->addItem(QString::fromLatin1(method.signature()));
+                comboMethods->addItem(QString::fromLatin1(method.methodSignature()));
 	}
         comboMethods->model()->sort(0);
 
@@ -122,7 +122,7 @@ void InvokeMethod::on_comboMethods_activated(const QString &method)
 
     const QMetaObject *mo = activex->metaObject();
     const QMetaMethod slot = mo->method(mo->indexOfSlot(method.toLatin1()));
-    QString signature = QString::fromLatin1(slot.signature());
+    QString signature = QString::fromLatin1(slot.methodSignature());
     signature = signature.mid(signature.indexOf(QLatin1Char('(')) + 1);
     signature.truncate(signature.length()-1);