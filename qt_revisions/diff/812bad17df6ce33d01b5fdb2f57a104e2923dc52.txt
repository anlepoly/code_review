diff --git a/src/corelib/itemmodels/qabstractitemmodel.cpp b/src/corelib/itemmodels/qabstractitemmodel.cpp
index 5f6fcc6..6aa8b2f 100644
--- a/src/corelib/itemmodels/qabstractitemmodel.cpp
+++ b/src/corelib/itemmodels/qabstractitemmodel.cpp
@@ -1416,7 +1416,7 @@ QAbstractItemModel::~QAbstractItemModel()
 
     For example:
 
-    \snippet widgets/itemviews/simpledommodel/dommodel.cpp 2
+    \snippet itemviews/simpledommodel/dommodel.cpp 2
 
     \note When implementing a table based model, columnCount() should return 0
     when the parent is valid.
diff --git a/src/corelib/itemmodels/qsortfilterproxymodel.cpp b/src/corelib/itemmodels/qsortfilterproxymodel.cpp
index 8958c4e..53cea5e 100644
--- a/src/corelib/itemmodels/qsortfilterproxymodel.cpp
+++ b/src/corelib/itemmodels/qsortfilterproxymodel.cpp
@@ -1604,7 +1604,7 @@ void QSortFilterProxyModelPrivate::_q_sourceColumnsMoved(
     QSortFilterProxyModel and reimplementing lessThan(), which is
     used to compare items. For example:
 
-    \snippet widgets/itemviews/customsortfiltermodel/mysortfilterproxymodel.cpp 5
+    \snippet itemviews/customsortfiltermodel/mysortfilterproxymodel.cpp 5
 
     (This code snippet comes from the
     \l{itemviews/customsortfiltermodel}{Custom Sort/Filter Model}
@@ -1647,7 +1647,7 @@ void QSortFilterProxyModelPrivate::_q_sourceColumnsMoved(
     the \l{QSortFilterProxyModel::filterKeyColumn}{filterKeyColumn} property
     and performs filtering on columns 0, 1, and 2:
 
-    \snippet widgets/itemviews/customsortfiltermodel/mysortfilterproxymodel.cpp 3
+    \snippet itemviews/customsortfiltermodel/mysortfilterproxymodel.cpp 3
 
     (This code snippet comes from the
     \l{itemviews/customsortfiltermodel}{Custom Sort/Filter Model}
diff --git a/src/corelib/tools/qregularexpression.cpp b/src/corelib/tools/qregularexpression.cpp
index 034f2b8..fb18eaf 100644
--- a/src/corelib/tools/qregularexpression.cpp
+++ b/src/corelib/tools/qregularexpression.cpp
@@ -1007,11 +1007,7 @@ void QRegularExpressionPrivate::getPatternInfo()
 }
 
 
-/*!
-    \class QPcreJitStackPointer
-    \inmodule QtCore
-    \internal
-
+/*
     Simple "smartpointer" wrapper around a pcre_jit_stack, to be used with
     QThreadStorage.
 */
diff --git a/src/corelib/tools/qsize.cpp b/src/corelib/tools/qsize.cpp
index 3cefb2d..087fcc3 100644
--- a/src/corelib/tools/qsize.cpp
+++ b/src/corelib/tools/qsize.cpp
@@ -219,8 +219,11 @@ void QSize::transpose()
 */
 
 /*!
-  \overload
-  \since 5.0
+    \overload
+    \since 5.0
+
+    Return a size scaled to a rectangle with the given size \a s,
+    according to the specified \a mode.
 */
 QSize QSize::scaled(const QSize &s, Qt::AspectRatioMode mode) const
 {
@@ -648,8 +651,11 @@ void QSizeF::transpose()
 */
 
 /*!
-  \overload
-  \since 5.0
+    \overload
+    \since 5.0
+
+    Returns a size scaled to a rectangle with the given size \a s,
+    according to the specified \a mode.
 */
 QSizeF QSizeF::scaled(const QSizeF &s, Qt::AspectRatioMode mode) const
 {