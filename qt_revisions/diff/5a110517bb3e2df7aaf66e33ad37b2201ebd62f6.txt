diff --git a/src/widgets/kernel/qwidgetbackingstore.cpp b/src/widgets/kernel/qwidgetbackingstore.cpp
index a697578..eb86f25 100644
--- a/src/widgets/kernel/qwidgetbackingstore.cpp
+++ b/src/widgets/kernel/qwidgetbackingstore.cpp
@@ -1086,12 +1086,11 @@ void QWidgetBackingStore::sync()
     If the \a widget is non-zero, the content is flushed to the \a widget.
     If the \a surface is non-zero, the content of the \a surface is flushed.
 */
-void QWidgetBackingStore::flush(QWidget *widget, QBackingStore *backingStore)
+void QWidgetBackingStore::flush(QWidget *widget)
 {
     if (!dirtyOnScreen.isEmpty()) {
         QWidget *target = widget ? widget : tlw;
-        QBackingStore *source = store ? store : backingStore;
-        qt_flush(target, dirtyOnScreen, source, tlw, tlwOffset);
+        qt_flush(target, dirtyOnScreen, store, tlw, tlwOffset);
         dirtyOnScreen = QRegion();
     }
 
@@ -1102,7 +1101,7 @@ void QWidgetBackingStore::flush(QWidget *widget, QBackingStore *backingStore)
         QWidget *w = dirtyOnScreenWidgets->at(i);
         QWidgetPrivate *wd = w->d_func();
         Q_ASSERT(wd->needsFlush);
-        qt_flush(w, *wd->needsFlush, backingStore, tlw, tlwOffset);
+        qt_flush(w, *wd->needsFlush, store, tlw, tlwOffset);
         *wd->needsFlush = QRegion();
     }
     dirtyOnScreenWidgets->clear();
diff --git a/src/widgets/kernel/qwidgetbackingstore_p.h b/src/widgets/kernel/qwidgetbackingstore_p.h
index 7c35093..6f192d1 100644
--- a/src/widgets/kernel/qwidgetbackingstore_p.h
+++ b/src/widgets/kernel/qwidgetbackingstore_p.h
@@ -77,7 +77,7 @@ public:
 
     void sync(QWidget *exposedWidget, const QRegion &exposedRegion);
     void sync();
-    void flush(QWidget *widget = 0, QBackingStore *store = 0);
+    void flush(QWidget *widget = 0);
 
     inline QPoint topLevelOffset() const { return tlwOffset; }