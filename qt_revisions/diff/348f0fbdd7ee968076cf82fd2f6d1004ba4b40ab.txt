diff --git a/src/serialport_unix.cpp b/src/serialport_unix.cpp
index 55685c4..98d12f8 100644
--- a/src/serialport_unix.cpp
+++ b/src/serialport_unix.cpp
@@ -94,7 +94,7 @@ protected:
     virtual bool event(QEvent *e) {
         bool ret = QSocketNotifier::event(e);
         if (ret)
-            dptr->writeNotification();
+            dptr->writeNotification(SerialPortPrivateData::WriteChunkSize);
         return ret;
     }
 
@@ -337,7 +337,7 @@ bool SerialPortPrivate::setRts(bool set)
 
 bool SerialPortPrivate::flush()
 {
-    return writeNotification(false) && (::tcdrain(descriptor) != -1);
+    return writeNotification() && (::tcdrain(descriptor) != -1);
 }
 
 bool SerialPortPrivate::reset()
@@ -448,7 +448,7 @@ bool SerialPortPrivate::waitForReadyRead(int msecs)
         }
 
         if (readyToWrite)
-            writeNotification();
+            writeNotification(WriteChunkSize);
 
     } while (msecs == -1 || timeoutValue(msecs, stopWatch.elapsed()) > 0);
     return false;
@@ -476,7 +476,7 @@ bool SerialPortPrivate::waitForBytesWritten(int msecs)
         if (readyToRead && !readNotification())
             return false;
 
-        if (readyToWrite && writeNotification())
+        if (readyToWrite && writeNotification(WriteChunkSize))
             return true;
     }
     return false;
@@ -747,7 +747,7 @@ bool SerialPortPrivate::readNotification()
     return true;
 }
 
-bool SerialPortPrivate::writeNotification(bool byChunk)
+bool SerialPortPrivate::writeNotification(int maxSize)
 {
     const int tmp = writeBuffer.size();
 
@@ -756,9 +756,7 @@ bool SerialPortPrivate::writeNotification(bool byChunk)
         return false;
     }
 
-    int nextSize = writeBuffer.nextDataBlockSize();
-    if (byChunk)
-        nextSize = qMin(nextSize, int(WriteChunkSize));
+    int nextSize = qMin(writeBuffer.nextDataBlockSize(), maxSize);
 
     const char *ptr = writeBuffer.readPointer();
 
diff --git a/src/serialport_unix_p.h b/src/serialport_unix_p.h
index 63ba427..486085a 100644
--- a/src/serialport_unix_p.h
+++ b/src/serialport_unix_p.h
@@ -90,7 +90,7 @@ public:
     bool setDataErrorPolicy(SerialPort::DataErrorPolicy policy);
 
     bool readNotification();
-    bool writeNotification(bool byChunk = true);
+    bool writeNotification(int maxSize = INT_MAX);
     bool exceptionNotification();
 
     static QString portNameToSystemLocation(const QString &port);
diff --git a/src/serialport_win.cpp b/src/serialport_win.cpp
index e354d3b..7b72f5b 100644
--- a/src/serialport_win.cpp
+++ b/src/serialport_win.cpp
@@ -108,7 +108,7 @@ protected:
                     dptr->startAsyncRead();
             }
             if (EV_TXEMPTY & dptr->eventMask)
-                dptr->startAsyncWrite();
+                dptr->startAsyncWrite(SerialPortPrivateData::WriteChunkSize);
             ::WaitCommEvent(dptr->descriptor, &dptr->eventMask, &dptr->eventOverlapped);
         }
         return ret;
@@ -364,7 +364,7 @@ bool SerialPortPrivate::setRts(bool set)
 
 bool SerialPortPrivate::flush()
 {
-    return startAsyncWrite(false) && ::FlushFileBuffers(descriptor);
+    return startAsyncWrite() && ::FlushFileBuffers(descriptor);
 }
 
 #endif
@@ -455,7 +455,7 @@ qint64 SerialPortPrivate::writeToBuffer(const char *data, qint64 maxSize)
     }
 
     if (!writeSequenceStarted)
-        startAsyncWrite();
+        startAsyncWrite(WriteChunkSize);
 
     return maxSize;
 }
@@ -487,7 +487,7 @@ bool SerialPortPrivate::waitForReadyRead(int msecs)
         }
 
         if (readyToStartWrite) {
-            if (!startAsyncWrite())
+            if (!startAsyncWrite(WriteChunkSize))
                 return false;
         }
 
@@ -542,7 +542,7 @@ bool SerialPortPrivate::waitForBytesWritten(int msecs)
         }
 
         if (readyToStartWrite) {
-            startAsyncWrite();
+            startAsyncWrite(WriteChunkSize);
         }
 
         DWORD bytesTransferred = 0;
@@ -699,13 +699,11 @@ bool SerialPortPrivate::startAsyncRead()
     return true;
 }
 
-bool SerialPortPrivate::startAsyncWrite(bool byChunk)
+bool SerialPortPrivate::startAsyncWrite(int maxSize)
 {
     writeSequenceStarted = true;
 
-    int nextSize = writeBuffer.nextDataBlockSize();
-    if (byChunk)
-        nextSize = qMin(nextSize, int(WriteChunkSize));
+    int nextSize = qMin(writeBuffer.nextDataBlockSize(), maxSize);
 
     const char *ptr = writeBuffer.readPointer();
 
diff --git a/src/serialport_win_p.h b/src/serialport_win_p.h
index f8c5ce5..866f860 100644
--- a/src/serialport_win_p.h
+++ b/src/serialport_win_p.h
@@ -94,7 +94,7 @@ public:
     bool processIoErrors();
 #ifndef Q_OS_WINCE
     bool startAsyncRead();
-    bool startAsyncWrite(bool byChunk = true);
+    bool startAsyncWrite(int maxSize = INT_MAX);
     bool completeAsyncRead(DWORD numberOfBytes);
     bool completeAsyncWrite(DWORD numberOfBytes);
 #else
diff --git a/src/serialport_wince.cpp b/src/serialport_wince.cpp
index 6df97d1..26fe126 100644
--- a/src/serialport_wince.cpp
+++ b/src/serialport_wince.cpp
@@ -92,7 +92,7 @@ private slots:
         if (EV_RXCHAR &eventMask)
             dptr->notifyRead();
         if (EV_TXEMPTY & eventMask)
-            dptr->notifyWrite();
+            dptr->notifyWrite(SerialPortPrivateData::WriteChunkSize);
     }
 
 private:
@@ -225,7 +225,7 @@ void SerialPortPrivate::close()
 
 bool SerialPortPrivate::flush()
 {
-    return notifyWrite(false) && ::FlushFileBuffers(descriptor);
+    return notifyWrite() && ::FlushFileBuffers(descriptor);
 }
 
 qint64 SerialPortPrivate::readFromBuffer(char *data, qint64 maxSize)
@@ -287,7 +287,7 @@ bool SerialPortPrivate::waitForReadyRead(int msec)
                 return true;
         }
         if (readyToWrite)
-            notifyWrite();
+            notifyWrite(WriteChunkSize);
     }
     return false;
 }
@@ -316,7 +316,7 @@ bool SerialPortPrivate::waitForBytesWritten(int msec)
                 return false;
         }
         if (readyToWrite) {
-            if (notifyWrite())
+            if (notifyWrite(WriteChunkSize))
                 return true;
         }
     }
@@ -374,11 +374,9 @@ bool SerialPortPrivate::notifyRead()
     return true;
 }
 
-bool SerialPortPrivate::notifyWrite(bool byChunk)
+bool SerialPortPrivate::notifyWrite(int maxSize)
 {
-    int nextSize = writeBuffer.nextDataBlockSize();
-    if (byChunk)
-        nextSize = qMin(nextSize, int(WriteChunkSize));
+    int nextSize = qMin(writeBuffer.nextDataBlockSize(), maxSize);
 
     const char *ptr = writeBuffer.readPointer();