diff --git a/src/multimedia/audio/qaudiodeviceinfo_mac_p.cpp b/src/multimedia/audio/qaudiodeviceinfo_mac_p.cpp
index a9b2c87..310514a 100644
--- a/src/multimedia/audio/qaudiodeviceinfo_mac_p.cpp
+++ b/src/multimedia/audio/qaudiodeviceinfo_mac_p.cpp
@@ -218,7 +218,7 @@ QList<int> QAudioDeviceInfoInternal::supportedChannelCounts()
                                     &propSize, 
                                     0) == noErr) {
 
-        AudioBufferList* audioBufferList = static_cast<AudioBufferList*>(qMalloc(propSize));
+        AudioBufferList* audioBufferList = static_cast<AudioBufferList*>(malloc(propSize));
 
         if (audioBufferList != 0) {
             if (AudioDeviceGetProperty(deviceId, 
@@ -234,7 +234,7 @@ QList<int> QAudioDeviceInfoInternal::supportedChannelCounts()
                 }
             }
 
-            qFree(audioBufferList);
+            free(audioBufferList);
         }
     }
 
diff --git a/src/multimedia/audio/qaudioinput_mac_p.cpp b/src/multimedia/audio/qaudioinput_mac_p.cpp
index eab6111..f3fb3b0 100644
--- a/src/multimedia/audio/qaudioinput_mac_p.cpp
+++ b/src/multimedia/audio/qaudioinput_mac_p.cpp
@@ -80,7 +80,7 @@ public:
 
         dataSize = 0;
 
-        bfs = reinterpret_cast<AudioBufferList*>(qMalloc(sizeof(AudioBufferList) +
+        bfs = reinterpret_cast<AudioBufferList*>(malloc(sizeof(AudioBufferList) +
                                                                 (sizeof(AudioBuffer) * numberOfBuffers)));
 
         bfs->mNumberBuffers = numberOfBuffers;
@@ -98,7 +98,7 @@ public:
     {
         dataSize = bufferSize;
 
-        bfs = reinterpret_cast<AudioBufferList*>(qMalloc(sizeof(AudioBufferList) + sizeof(AudioBuffer)));
+        bfs = reinterpret_cast<AudioBufferList*>(malloc(sizeof(AudioBufferList) + sizeof(AudioBuffer)));
 
         bfs->mNumberBuffers = 1;
         bfs->mBuffers[0].mNumberChannels = 1;
@@ -116,13 +116,13 @@ public:
 
         dataSize = framesToBuffer * sf.mBytesPerFrame;
 
-        bfs = reinterpret_cast<AudioBufferList*>(qMalloc(sizeof(AudioBufferList) +
+        bfs = reinterpret_cast<AudioBufferList*>(malloc(sizeof(AudioBufferList) +
                                                                 (sizeof(AudioBuffer) * numberOfBuffers)));
         bfs->mNumberBuffers = numberOfBuffers;
         for (int i = 0; i < numberOfBuffers; ++i) {
             bfs->mBuffers[i].mNumberChannels = isInterleaved ? numberOfBuffers : 1;
             bfs->mBuffers[i].mDataByteSize = dataSize;
-            bfs->mBuffers[i].mData = qMalloc(dataSize);
+            bfs->mBuffers[i].mData = malloc(dataSize);
         }
     }
 
@@ -130,10 +130,10 @@ public:
     {
         if (owner) {
             for (UInt32 i = 0; i < bfs->mNumberBuffers; ++i)
-                qFree(bfs->mBuffers[i].mData);
+                free(bfs->mBuffers[i].mData);
         }
 
-        qFree(bfs);
+        free(bfs);
     }
 
     AudioBufferList* audioBufferList() const