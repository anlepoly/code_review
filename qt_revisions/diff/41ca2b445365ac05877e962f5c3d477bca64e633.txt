diff --git a/src/corelib/doc/src/plugins-howto.qdoc b/src/corelib/doc/src/plugins-howto.qdoc
index 059a02f..22a450d 100644
--- a/src/corelib/doc/src/plugins-howto.qdoc
+++ b/src/corelib/doc/src/plugins-howto.qdoc
@@ -68,7 +68,7 @@
     Since the higher-level API is built on top of the lower-level API,
     some issues are common to both.
 
-    If you want to provide plugins for use with \QD, see the QtDesigner
+    If you want to provide plugins for use with \l{Qt Designer}, see the QtDesigner
     module documentation.
 
     Topics:
@@ -193,10 +193,11 @@
     The \l{tools/plugandpaint}{Plug & Paint} example documentation
     explains this process in detail. See also \l{Creating Custom
     Widgets for Qt Designer} for information about issues that are
-    specific to \QD. You can also take a look at the \l{Echo Plugin
-    Example} is a more trivial example on how to implement a plugin
-    that extends Qt applications. Please note that a QCoreApplication
-    must have been initialized before plugins can be loaded.
+    specific to \l{Qt Designer}. You can also take a look at the
+    \l{Echo Plugin Example} which is a more trivial example on
+    how to implement a plugin that extends Qt applications.
+    Please note that a QCoreApplication must have been initialized
+    before plugins can be loaded.
 
     \section1 Locating Plugins
 
diff --git a/src/corelib/global/qnamespace.qdoc b/src/corelib/global/qnamespace.qdoc
index d755aed..453079a 100644
--- a/src/corelib/global/qnamespace.qdoc
+++ b/src/corelib/global/qnamespace.qdoc
@@ -149,6 +149,11 @@
            Command+C on the keyboard regardless of the value set, though what is output for
            QKeySequence::toString(QKeySequence::PortableText) will be different).
 
+    \value AA_Use96Dpi Assume the screen has a resolution of 96 DPI rather
+           than using the OS-provided resolution. This will cause font rendering
+           to be consistent in pixels-per-point across devices rather than
+           defining 1 point as 1/72 inch.
+
     \value AA_X11InitThreads Calls XInitThreads() as part of the QApplication
            construction in order to make Xlib calls thread-safe. This
            attribute must be set before QApplication is constructed.
@@ -2038,6 +2043,10 @@
            even the softkeys are invisible i.e. the window is displayed with
            \c showFullscreen(). Only supported for Symbian.
 
+    \value WindowTransparentForInput Informs the window system that this window
+           is used only for output (displaying something) and does not take input.
+           Therefore input events should pass through as if it wasn't there.
+
     \value WindowOverridesSystemGestures Informs the window system that this window
            implements its own set of gestures and that system level gestures, like for
            instance three-finger desktop switching, should be disabled.
@@ -2350,6 +2359,7 @@
     \enum Qt::InputMethodQuery
 
     \value ImEnabled            The widget accepts input method input.
+    \value ImMicroFocus         \obsolete replaced by \c ImCursorRectangle
     \value ImCursorRectangle    The rectangle covering the area of the input cursor in widget coordinates.
     \value ImFont               The currently used font for text input.
     \value ImCursorPosition     The logical position of the cursor within the text surrounding the input area
diff --git a/src/network/access/qnetworkaccesscache.cpp b/src/network/access/qnetworkaccesscache.cpp
index bd3cee5..91dab7b 100644
--- a/src/network/access/qnetworkaccesscache.cpp
+++ b/src/network/access/qnetworkaccesscache.cpp
@@ -135,7 +135,7 @@ void QNetworkAccessCache::clear()
 }
 
 /*!
-    Appens the entry given by @p key to the end of the linked list.
+    Appends the entry given by \a key to the end of the linked list.
     (i.e., makes it the newest entry)
  */
 void QNetworkAccessCache::linkEntry(const QByteArray &key)
@@ -164,7 +164,7 @@ void QNetworkAccessCache::linkEntry(const QByteArray &key)
 }
 
 /*!
-    Removes the entry pointed by @p key from the linked list.
+    Removes the entry pointed by \a key from the linked list.
     Returns true if the entry removed was the oldest one.
  */
 bool QNetworkAccessCache::unlinkEntry(const QByteArray &key)
diff --git a/tests/auto/corelib/xml/qxmlstream/tst_qxmlstream.cpp b/tests/auto/corelib/xml/qxmlstream/tst_qxmlstream.cpp
index 4442094..441e1b0 100644
--- a/tests/auto/corelib/xml/qxmlstream/tst_qxmlstream.cpp
+++ b/tests/auto/corelib/xml/qxmlstream/tst_qxmlstream.cpp
@@ -79,10 +79,10 @@ static inline int best(int a, int b, int c)
 }
 
 /**
- *  Opens @p filename and returns content produced as per
+ *  Opens \a filename and returns content produced as per
  *  xmlconf/xmltest/canonxml.html.
  *
- *  @p docType is the DOCTYPE name that the returned output should
+ *  \a docType is the DOCTYPE name that the returned output should
  *  have, if it doesn't already have one.
  */
 static QByteArray makeCanonical(const QString &filename,
@@ -197,10 +197,10 @@ static QByteArray makeCanonical(const QString &filename,
 }
 
 /**
- * @short Returns the lexical QName of the document element in
- * @p document.
+ * \brief Returns the lexical QName of the document element in
+ * \a document.
  *
- * It is assumed that @p document is a well-formed XML document.
+ * It is assumed that \a document is a well-formed XML document.
  */
 static QString documentElement(const QByteArray &document)
 {
@@ -219,7 +219,7 @@ static QString documentElement(const QByteArray &document)
 }
 
 /**
- * @short Loads W3C's XML conformance test suite and runs it on QXmlStreamReader.
+ * \brief Loads W3C's XML conformance test suite and runs it on QXmlStreamReader.
  *
  * Since this suite is fairly large, it runs the tests sequentially in order to not
  * have them all loaded into memory at once. In this way, the maximum memory usage stays
@@ -228,8 +228,7 @@ static QString documentElement(const QByteArray &document)
  *
  * Part of this code is a manual, ad-hoc implementation of xml:base.
  *
- * @see <a href="http://www.w3.org/XML/Test/">Extensible
- * Markup Language (XML) Conformance Test Suites</a>
+ * See \l {http://www.w3.org/XML/Test/} {Extensible Markup Language (XML) Conformance Test Suites}
  */
 class TestSuiteHandler : public QXmlDefaultHandler
 {
@@ -277,7 +276,7 @@ public:
     int skipCount;
 
     /**
-     * @p baseURI is the the URI of where the catalog file resides.
+     * \a baseURI is the the URI of where the catalog file resides.
      */
     TestSuiteHandler(const QUrl &baseURI) : runCount(0),
                                             skipCount(0)
@@ -690,8 +689,8 @@ QByteArray tst_QXmlStream::readFile(const QString &filename)
     reader.setDevice(&file);
     QByteArray outarray;
     QTextStream writer(&outarray);
-	// We always want UTF-8, and not what the system picks up.
-	writer.setCodec("UTF-8");
+    // We always want UTF-8, and not what the system picks up.
+    writer.setCodec("UTF-8");
 
     while (!reader.atEnd()) {
         reader.readNext();