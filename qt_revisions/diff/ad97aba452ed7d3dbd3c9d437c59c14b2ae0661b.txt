diff --git a/doc/src/examples/textfinder.qdoc b/doc/src/examples/textfinder.qdoc
index 8f1ed5d..2b83e86 100644
--- a/doc/src/examples/textfinder.qdoc
+++ b/doc/src/examples/textfinder.qdoc
@@ -155,5 +155,5 @@
     The \c main() function initialises the \e{textfinder.qrc} resource file
     and instantiates as well as displays \c TextFinder.
 
-    \sa{Calculator Builder Example}, {World Time Clock Builder Example}
+    \sa {Calculator Builder Example}, {World Time Clock Builder Example}
     */
diff --git a/src/concurrent/qfuture.cpp b/src/concurrent/qfuture.cpp
index f8151f3..79226c5 100644
--- a/src/concurrent/qfuture.cpp
+++ b/src/concurrent/qfuture.cpp
@@ -412,7 +412,7 @@
     uninitialized iterartor. Use operator=() to assign a value to it before
     using it.
 
-    \sa QFuture::constBegin() QFuture::constEnd()
+    \sa QFuture::constBegin(), QFuture::constEnd()
 */
 
 /*! \fn QFuture::const_iterator::const_iterator(QFuture const * const future, int index)
diff --git a/src/concurrent/qfuturesynchronizer.cpp b/src/concurrent/qfuturesynchronizer.cpp
index 3bb81e0..439e8b7 100644
--- a/src/concurrent/qfuturesynchronizer.cpp
+++ b/src/concurrent/qfuturesynchronizer.cpp
@@ -124,7 +124,7 @@
 
     Removes all managed futures from this QFutureSynchronizer.
     
-    \sa addFuture(), setFuture()   
+    \sa addFuture(), setFuture()
 */
 
 /*!
diff --git a/src/corelib/global/qlogging.cpp b/src/corelib/global/qlogging.cpp
index ed84574..cc6ff4d 100644
--- a/src/corelib/global/qlogging.cpp
+++ b/src/corelib/global/qlogging.cpp
@@ -832,7 +832,7 @@ void qWinMessageHandler2(QtMsgType t, const QMessageLogContext &context,
 
     qSetMessagePattern() has no effect if a custom message handler is installed.
 
-    \sa qInstallMessageHandler, Debugging Techniques
+    \sa qInstallMessageHandler, {Debugging Techniques}
  */
 
 QtMessageHandler qInstallMessageHandler(QtMessageHandler h)
diff --git a/src/corelib/kernel/qcoreapplication.cpp b/src/corelib/kernel/qcoreapplication.cpp
index dad6c62..c453071 100644
--- a/src/corelib/kernel/qcoreapplication.cpp
+++ b/src/corelib/kernel/qcoreapplication.cpp
@@ -1559,7 +1559,7 @@ bool QCoreApplication::installTranslator(QTranslator *translationFile)
 
     The function returns true on success and false on failure.
 
-    \sa installTranslator() translate(), QObject::tr()
+    \sa installTranslator(), translate(), QObject::tr()
 */
 
 bool QCoreApplication::removeTranslator(QTranslator *translationFile)
diff --git a/src/corelib/kernel/qmetaobject.cpp b/src/corelib/kernel/qmetaobject.cpp
index 4e05b63..c91cf60 100644
--- a/src/corelib/kernel/qmetaobject.cpp
+++ b/src/corelib/kernel/qmetaobject.cpp
@@ -3205,7 +3205,7 @@ const char* QMetaClassInfo::value() const
     This class should never be used directly. Please use the \l Q_ARG()
     macro instead.
 
-    \sa Q_ARG(), QMetaObject::invokeMethod(),  QGenericReturnArgument
+    \sa Q_ARG(), QMetaObject::invokeMethod(), QGenericReturnArgument
 */
 
 /*!
diff --git a/src/corelib/tools/qpoint.cpp b/src/corelib/tools/qpoint.cpp
index edc103f..07f46c3 100644
--- a/src/corelib/tools/qpoint.cpp
+++ b/src/corelib/tools/qpoint.cpp
@@ -542,7 +542,7 @@ QDebug operator<<(QDebug d, const QPointF &p)
 
     Sets the y coordinate of this point to the given \a y coordinate.
 
-    \sa  y(), setX()
+    \sa y(), setX()
 */
 
 /*!
diff --git a/src/corelib/tools/qrect.cpp b/src/corelib/tools/qrect.cpp
index 8c1eea8..c14a4c9 100644
--- a/src/corelib/tools/qrect.cpp
+++ b/src/corelib/tools/qrect.cpp
@@ -322,7 +322,7 @@ QRect QRect::normalized() const
     Returns the x-coordinate of the rectangle's left edge. Equivalent
     to x().
 
-    \sa setLeft(),  topLeft(), bottomLeft()
+    \sa setLeft(), topLeft(), bottomLeft()
 */
 
 /*!
@@ -752,7 +752,7 @@ QRect QRect::normalized() const
 
     Returns the width of the rectangle.
 
-    \sa setWidth(), height(),  size()
+    \sa setWidth(), height(), size()
 */
 
 /*!
@@ -1093,7 +1093,7 @@ QRect QRect::operator&(const QRect &r) const
     The intersection rectangle can be retrieved using the intersected()
     function.
 
-    \sa  contains()
+    \sa contains()
 */
 
 bool QRect::intersects(const QRect &r) const
@@ -1423,7 +1423,7 @@ QDebug operator<<(QDebug dbg, const QRect &r) {
     Use the normalized() function to retrieve a rectangle where the
     corners are swapped.
 
-    \sa isNull(),  isValid(),  normalized()
+    \sa isNull(), isValid(), normalized()
 */
 
 /*!
@@ -1480,7 +1480,7 @@ QRectF QRectF::normalized() const
     Returns the y-coordinate of the rectangle's top edge. Equivalent
     to top().
 
-    \sa setY(), x(),  topLeft()
+    \sa setY(), x(), topLeft()
 */
 
 
@@ -1727,7 +1727,7 @@ QRectF QRectF::normalized() const
     relative to the current position. Positive values move the rectangle to the
     right and downwards.
 
-    \sa moveTopLeft(),  moveTo(),  translated()
+    \sa moveTopLeft(), moveTo(), translated()
 */
 
 
@@ -2019,7 +2019,7 @@ bool QRectF::contains(const QRectF &r) const
 
     Returns the position of the rectangle's  bottom-left corner.
 
-    \sa setBottomLeft(),  bottom(), left()
+    \sa setBottomLeft(), bottom(), left()
 */
 
 /*!
diff --git a/src/corelib/tools/qstring.cpp b/src/corelib/tools/qstring.cpp
index c495c18..a4a1563 100644
--- a/src/corelib/tools/qstring.cpp
+++ b/src/corelib/tools/qstring.cpp
@@ -965,7 +965,7 @@ const QString::Null QString::null = { };
     This constructor is only available if Qt is configured with STL
     compatibility enabled.
 
-    \sa  fromLatin1(), fromLocal8Bit(), fromUtf8()
+    \sa fromLatin1(), fromLocal8Bit(), fromUtf8()
 */
 
 /*! \fn QString QString::fromStdWString(const std::wstring &str)
diff --git a/src/gui/image/qbitmap.cpp b/src/gui/image/qbitmap.cpp
index 499f9f4..837e5d0 100644
--- a/src/gui/image/qbitmap.cpp
+++ b/src/gui/image/qbitmap.cpp
@@ -90,7 +90,7 @@ QT_BEGIN_NAMESPACE
     implicit data sharing. For more information, see the \l {Implicit
     Data Sharing} documentation.
 
-    \sa  QPixmap, QImage, QImageReader, QImageWriter
+    \sa QPixmap, QImage, QImageReader, QImageWriter
 */
 
 /*! \typedef QBitmap::DataPtr
diff --git a/src/gui/image/qpicture.cpp b/src/gui/image/qpicture.cpp
index 34ca077..dde039f 100644
--- a/src/gui/image/qpicture.cpp
+++ b/src/gui/image/qpicture.cpp
@@ -1189,7 +1189,7 @@ QT_END_INCLUDE_NAMESPACE
     fileName, or 0 if the file cannot be read or if the format is not
     recognized.
 
-    \sa load() save()
+    \sa load(), save()
 */
 
 const char* QPicture::pictureFormat(const QString &fileName)
@@ -1203,7 +1203,7 @@ const char* QPicture::pictureFormat(const QString &fileName)
     Returns a list of picture formats that are supported for picture
     input.
 
-    \sa outputFormats() inputFormatList() QPictureIO
+    \sa outputFormats(), inputFormatList(), QPictureIO
 */
 QList<QByteArray> QPicture::inputFormats()
 {
@@ -1228,7 +1228,7 @@ static QStringList qToStringList(const QList<QByteArray> arr)
     over a copy, e.g.
     \snippet picture/picture.cpp 2
 
-    \sa outputFormatList() inputFormats() QPictureIO
+    \sa outputFormatList(), inputFormats(), QPictureIO
 */
 QStringList QPicture::inputFormatList()
 {
@@ -1246,7 +1246,7 @@ QStringList QPicture::inputFormatList()
     over a copy, e.g.
     \snippet picture/picture.cpp 3
 
-    \sa inputFormatList() outputFormats() QPictureIO
+    \sa inputFormatList(), outputFormats(), QPictureIO
 */
 QStringList QPicture::outputFormatList()
 {
@@ -1259,7 +1259,7 @@ QStringList QPicture::outputFormatList()
     Returns a list of picture formats that are supported for picture
     output.
 
-    \sa inputFormats() outputFormatList() QPictureIO
+    \sa inputFormats(), outputFormatList(), QPictureIO
 */
 QList<QByteArray> QPicture::outputFormats()
 {
@@ -1288,7 +1288,7 @@ QList<QByteArray> QPicture::outputFormats()
     You don't normally need to use this class; QPicture::load(),
     QPicture::save().
 
-    \sa QPicture QPixmap QFile
+    \sa QPicture, QPixmap, QFile
 */
 
 struct QPictureIOData
@@ -1581,7 +1581,7 @@ void QPictureIO::setStatus(int status)
     reading it. If a format is set the picture will only be read if it
     has that format.
 
-    \sa read() write() format()
+    \sa read(), write(), format()
 */
 void QPictureIO::setFormat(const char *format)
 {
@@ -1619,7 +1619,7 @@ void QPictureIO::setFileName(const QString &fileName)
     Returns the quality of the written picture, related to the
     compression ratio.
 
-    \sa setQuality() QPicture::save()
+    \sa setQuality(), QPicture::save()
 */
 int QPictureIO::quality() const
 {
@@ -1634,7 +1634,7 @@ int QPictureIO::quality() const
     compressed files, 100 for large uncompressed files. (-1 signifies
     the default compression.)
 
-    \sa quality() QPicture::save()
+    \sa quality(), QPicture::save()
 */
 
 void QPictureIO::setQuality(int q)
@@ -1841,7 +1841,7 @@ QList<QByteArray> QPictureIO::outputFormats()
 
     \snippet picture/picture.cpp 4
 
-    \sa setIODevice() setFileName() setFormat() write() QPixmap::load()
+    \sa setIODevice(), setFileName(), setFormat(), write(), QPixmap::load()
 */
 bool QPictureIO::read()
 {
@@ -1910,7 +1910,7 @@ bool QPictureIO::read()
     Example:
     \snippet picture/picture.cpp 5
 
-    \sa setIODevice() setFileName() setFormat() read() QPixmap::save()
+    \sa setIODevice(), setFileName(), setFormat(), read(), QPixmap::save()
 */
 bool QPictureIO::write()
 {
diff --git a/src/gui/kernel/qclipboard.cpp b/src/gui/kernel/qclipboard.cpp
index 90fd63e..3ac7fbb 100644
--- a/src/gui/kernel/qclipboard.cpp
+++ b/src/gui/kernel/qclipboard.cpp
@@ -345,7 +345,7 @@ void QClipboard::setText(const QString &text, Mode mode)
     QClipboard::Selection, the image is retrieved from the global
     mouse selection. 
 
-    \sa setImage() pixmap() mimeData(), QImage::isNull()
+    \sa setImage(), pixmap(), mimeData(), QImage::isNull()
 */
 QImage QClipboard::image(Mode mode) const
 {
@@ -368,7 +368,7 @@ QImage QClipboard::image(Mode mode) const
 
     \snippet code/src_gui_kernel_qclipboard.cpp 1
 
-    \sa image(), setPixmap() setMimeData()
+    \sa image(), setPixmap(), setMimeData()
 */
 void QClipboard::setImage(const QImage &image, Mode mode)
 {
@@ -390,7 +390,7 @@ void QClipboard::setImage(const QImage &image, Mode mode)
     QClipboard::Selection, the pixmap is retrieved from the global
     mouse selection.
 
-    \sa setPixmap() image() mimeData() QPixmap::convertFromImage()
+    \sa setPixmap(), image(), mimeData(), QPixmap::convertFromImage()
 */
 QPixmap QClipboard::pixmap(Mode mode) const
 {
@@ -409,7 +409,7 @@ QPixmap QClipboard::pixmap(Mode mode) const
     QClipboard::Selection, the pixmap is stored in the global
     mouse selection.
 
-    \sa pixmap() setImage() setMimeData()
+    \sa pixmap(), setImage(), setMimeData()
 */
 void QClipboard::setPixmap(const QPixmap &pixmap, Mode mode)
 {
diff --git a/src/gui/kernel/qevent.cpp b/src/gui/kernel/qevent.cpp
index eeedd32..beb7530 100644
--- a/src/gui/kernel/qevent.cpp
+++ b/src/gui/kernel/qevent.cpp
@@ -135,7 +135,7 @@ QInputEvent::~QInputEvent()
     and QWidget::mouseMoveEvent() to receive mouse events in your own
     widgets.
 
-    \sa QWidget::setMouseTracking() QWidget::grabMouse()
+    \sa QWidget::setMouseTracking(), QWidget::grabMouse(),
     QCursor::pos()
 */
 
@@ -234,7 +234,7 @@ QMouseEvent::~QMouseEvent()
     screen position returned by screenPos() to avoid a shaking
     motion.
 
-    \sa x() y() windowPos() screenPos()
+    \sa x(), y(), windowPos(), screenPos()
 */
 
 /*!
@@ -249,7 +249,7 @@ QMouseEvent::~QMouseEvent()
     global position returned by globalPos() to avoid a shaking
     motion.
 
-    \sa x() y() pos() localPos() screenPos()
+    \sa x(), y(), pos(), localPos(), screenPos()
 */
 
 /*!
@@ -260,7 +260,7 @@ QMouseEvent::~QMouseEvent()
     Returns the position of the mouse cursor as a QPointF, relative to the
     screen that received the event.
 
-    \sa x() y() pos() localPos() screenPos()
+    \sa x(), y(), pos(), localPos(), screenPos()
 */
 
 /*!
@@ -273,7 +273,7 @@ QMouseEvent::~QMouseEvent()
     global position returned by globalPos() to avoid a shaking
     motion.
 
-    \sa x() y() globalPos()
+    \sa x(), y(), globalPos()
 */
 
 /*!
@@ -286,7 +286,7 @@ QMouseEvent::~QMouseEvent()
     pointer position QCursor::pos(), and from
     QWidget::mapToGlobal(pos()).
 
-    \sa globalX() globalY()
+    \sa globalX(), globalY()
 */
 
 /*!
@@ -295,7 +295,7 @@ QMouseEvent::~QMouseEvent()
     Returns the x position of the mouse cursor, relative to the
     widget that received the event.
 
-    \sa y() pos()
+    \sa y(), pos()
 */
 
 /*!
@@ -304,7 +304,7 @@ QMouseEvent::~QMouseEvent()
     Returns the y position of the mouse cursor, relative to the
     widget that received the event.
 
-    \sa x() pos()
+    \sa x(), pos()
 */
 
 /*!
@@ -313,7 +313,7 @@ QMouseEvent::~QMouseEvent()
     Returns the global x position of the mouse cursor at the time of
     the event.
 
-    \sa globalY() globalPos()
+    \sa globalY(), globalPos()
 */
 
 /*!
@@ -322,7 +322,7 @@ QMouseEvent::~QMouseEvent()
     Returns the global y position of the mouse cursor at the time of
     the event.
 
-    \sa globalX() globalPos()
+    \sa globalX(), globalPos()
 */
 
 /*!
@@ -333,7 +333,7 @@ QMouseEvent::~QMouseEvent()
     Note that the returned value is always Qt::NoButton for mouse
     move events.
 
-    \sa buttons() Qt::MouseButton
+    \sa buttons(), Qt::MouseButton
 */
 
 /*!
@@ -347,7 +347,7 @@ QMouseEvent::~QMouseEvent()
     event. For mouse release events this excludes the button that
     caused the event.
 
-    \sa button() Qt::MouseButton
+    \sa button(), Qt::MouseButton
 */
 
 /*!
@@ -473,7 +473,7 @@ QHoverEvent::~QHoverEvent()
 
     The event handler QWidget::wheelEvent() receives wheel events.
 
-    \sa QMouseEvent QWidget::grabMouse()
+    \sa QMouseEvent, QWidget::grabMouse()
 */
 
 /*!
@@ -505,7 +505,7 @@ QHoverEvent::~QHoverEvent()
     \a modifiers holds the keyboard modifier flags at the time of the
     event, and \a orient holds the wheel's orientation.
 
-    \sa pos() pixelDelta() angleDelta() state()
+    \sa pos(), pixelDelta(), angleDelta(), state()
 */
 #ifndef QT_NO_WHEELEVENT
 QWheelEvent::QWheelEvent(const QPointF &pos, int delta,
@@ -536,7 +536,7 @@ QWheelEvent::~QWheelEvent()
     \a orient holds the wheel's orientation.
 
 
-    \sa pos() pixelDelta() angleDelta() state()
+    \sa pos(), pixelDelta(), angleDelta(), state()
 */
 QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos, int delta,
                          Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers,
@@ -559,7 +559,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos, int delta
     \a angleDelta contains the rotation distance, and
     \a orient holds the wheel's orientation.
 
-    \sa pos() globalPos() delta() state()
+    \sa pos(), globalPos(), delta(), state()
 */
 
 QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
@@ -622,7 +622,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
     If you move your widgets around in response to mouse events,
     use globalPos() instead of this function.
 
-    \sa x() y() globalPos()
+    \sa x(), y(), globalPos()
 */
 
 /*!
@@ -631,7 +631,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
     Returns the x position of the mouse cursor, relative to the
     widget that received the event.
 
-    \sa y() pos()
+    \sa y(), pos()
 */
 
 /*!
@@ -640,7 +640,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
     Returns the y position of the mouse cursor, relative to the
     widget that received the event.
 
-    \sa x() pos()
+    \sa x(), pos()
 */
 
 
@@ -653,7 +653,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
     mouse events, globalPos() can differ a lot from the current
     cursor position returned by QCursor::pos().
 
-    \sa globalX() globalY()
+    \sa globalX(), globalY()
 */
 
 /*!
@@ -662,7 +662,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
     Returns the global x position of the mouse cursor at the time of
     the event.
 
-    \sa globalY() globalPos()
+    \sa globalY(), globalPos()
 */
 
 /*!
@@ -671,7 +671,7 @@ QWheelEvent::QWheelEvent(const QPointF &pos, const QPointF& globalPos,
     Returns the global y position of the mouse cursor at the time of
     the event.
 
-    \sa globalX() globalPos()
+    \sa globalX(), globalPos()
 */
 
 /*!
@@ -1059,7 +1059,7 @@ QPaintEvent::~QPaintEvent()
 
     Returns the rectangle that needs to be updated.
 
-    \sa region() QPainter::setClipRect()
+    \sa region(), QPainter::setClipRect()
 */
 
 /*!
@@ -1067,7 +1067,7 @@ QPaintEvent::~QPaintEvent()
 
     Returns the region that needs to be updated.
 
-    \sa rect() QPainter::setClipRegion()
+    \sa rect(), QPainter::setClipRegion()
 */
 
 
@@ -1157,7 +1157,7 @@ QExposeEvent::~QExposeEvent()
 
     The event handler QWidget::resizeEvent() receives resize events.
 
-    \sa QWidget::resize() QWidget::setGeometry()
+    \sa QWidget::resize(), QWidget::setGeometry()
 */
 
 /*!
@@ -1907,7 +1907,8 @@ QVariant QInputMethodQueryEvent::value(Qt::InputMethodQuery query) const
   \a rotation contains the device's rotation in degrees. 4D mice support
   rotation. If the device does not support rotation, pass 0 here.
 
-  \sa pos() globalPos() device() pressure() xTilt() yTilt() uniqueId(), rotation(), tangentialPressure(), z()
+  \sa pos(), globalPos(), device(), pressure(), xTilt(), yTilt(), uniqueId(), rotation(),
+      tangentialPressure(), z()
 */
 
 QTabletEvent::QTabletEvent(Type type, const QPointF &pos, const QPointF &globalPos,
@@ -2014,7 +2015,7 @@ QTabletEvent::~QTabletEvent()
     If you move widgets around in response to mouse events, use
     globalPos() instead of this function.
 
-    \sa x() y() globalPos()
+    \sa x(), y(), globalPos()
 */
 
 /*!
@@ -2023,7 +2024,7 @@ QTabletEvent::~QTabletEvent()
     Returns the x position of the device, relative to the widget that
     received the event.
 
-    \sa y() pos()
+    \sa y(), pos()
 */
 
 /*!
@@ -2032,7 +2033,7 @@ QTabletEvent::~QTabletEvent()
     Returns the y position of the device, relative to the widget that
     received the event.
 
-    \sa x() pos()
+    \sa x(), pos()
 */
 
 /*!
@@ -2054,7 +2055,7 @@ QTabletEvent::~QTabletEvent()
     globalPos() can differ significantly from the current position
     QCursor::pos().
 
-    \sa globalX() globalY() hiResGlobalPos()
+    \sa globalX(), globalY(), hiResGlobalPos()
 */
 
 /*!
@@ -2063,7 +2064,7 @@ QTabletEvent::~QTabletEvent()
     Returns the global x position of the mouse pointer at the time of
     the event.
 
-    \sa globalY() globalPos() hiResGlobalX()
+    \sa globalY(), globalPos(), hiResGlobalX()
 */
 
 /*!
@@ -2072,7 +2073,7 @@ QTabletEvent::~QTabletEvent()
     Returns the global y position of the tablet device at the time of
     the event.
 
-    \sa globalX() globalPos() hiResGlobalY()
+    \sa globalX(), globalPos(), hiResGlobalY()
 */
 
 /*!
@@ -2104,7 +2105,7 @@ QTabletEvent::~QTabletEvent()
     The high precision coordinates delivered from the tablet expressed.
     Sub pixeling information is in the fractional part of the QPointF.
 
-    \sa globalPos() hiResGlobalX() hiResGlobalY()
+    \sa globalPos(), hiResGlobalX(), hiResGlobalY()
 */
 
 /*!
diff --git a/src/gui/kernel/qkeysequence.cpp b/src/gui/kernel/qkeysequence.cpp
index f94c6d5..4eeac1a 100644
--- a/src/gui/kernel/qkeysequence.cpp
+++ b/src/gui/kernel/qkeysequence.cpp
@@ -1593,7 +1593,7 @@ bool QKeySequence::operator==(const QKeySequence &other) const
     This function is useful in some circumstances, for example
     if you want to use QKeySequence objects as keys in a QMap.
 
-    \sa operator==() operator!=() operator>() operator<=() operator>=()
+    \sa operator==(), operator!=(), operator>(), operator<=(), operator>=()
 */
 bool QKeySequence::operator< (const QKeySequence &other) const
 {
@@ -1609,7 +1609,7 @@ bool QKeySequence::operator< (const QKeySequence &other) const
     Returns true if this key sequence is larger than the \a other key
     sequence; otherwise returns false.
 
-    \sa operator==() operator!=() operator<() operator<=() operator>=()
+    \sa operator==(), operator!=(), operator<(), operator<=(), operator>=()
 */
 
 /*!
@@ -1618,7 +1618,7 @@ bool QKeySequence::operator< (const QKeySequence &other) const
     Returns true if this key sequence is smaller or equal to the
     \a other key sequence; otherwise returns false.
 
-    \sa operator==() operator!=() operator<() operator>() operator>=()
+    \sa operator==(), operator!=(), operator<(), operator>(), operator>=()
 */
 
 /*!
@@ -1627,7 +1627,7 @@ bool QKeySequence::operator< (const QKeySequence &other) const
     Returns true if this key sequence is larger or equal to the
     \a other key sequence; otherwise returns false.
 
-    \sa operator==() operator!=() operator<() operator>() operator<=()
+    \sa operator==(), operator!=(), operator<(), operator>(), operator<=()
 */
 
 /*!
diff --git a/src/gui/kernel/qpalette.cpp b/src/gui/kernel/qpalette.cpp
index cb18b0d..71d5427 100644
--- a/src/gui/kernel/qpalette.cpp
+++ b/src/gui/kernel/qpalette.cpp
@@ -97,7 +97,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     Returns the color that has been set for the given color \a role in
     the current ColorGroup.
 
-    \sa brush() ColorRole
+    \sa brush(), ColorRole
  */
 
 /*!
@@ -108,7 +108,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     Returns the brush that has been set for the given color \a role in
     the current ColorGroup.
 
-    \sa color() setBrush() ColorRole
+    \sa color(), setBrush(), ColorRole
 */
 
 /*!
@@ -119,7 +119,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     Sets the color used for the given color \a role, in all color
     groups, to the specified solid \a color.
 
-    \sa brush() setColor() ColorRole
+    \sa brush(), setColor(), ColorRole
 */
 
 /*!
@@ -128,7 +128,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     Sets the brush for the given color \a role to the specified \a
     brush for all groups in the palette.
 
-    \sa brush() setColor() ColorRole
+    \sa brush(), setColor(), ColorRole
 */
 
 /*!
@@ -144,7 +144,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     Returns the window text (general foreground) brush of the
     current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -152,7 +152,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the button brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -160,7 +160,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the light brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -168,7 +168,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the midlight brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -176,7 +176,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the dark brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -184,7 +184,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the mid brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -192,7 +192,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the text foreground brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -200,7 +200,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the bright text foreground brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -208,7 +208,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the button text foreground brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -216,7 +216,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the base brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -224,7 +224,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the alternate base brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -237,7 +237,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     \note Tool tips use the Inactive color group of QPalette, because tool
     tips are not active windows.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -250,7 +250,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     \note Tool tips use the Inactive color group of QPalette, because tool
     tips are not active windows.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -266,7 +266,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
     Returns the window (general background) brush of the current
     color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -274,7 +274,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the shadow brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -282,7 +282,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the highlight brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -290,7 +290,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the highlighted text brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -298,7 +298,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the unvisited link text brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -306,7 +306,7 @@ static void qt_palette_from_color(QPalette &pal, const QColor &button)
 
     Returns the visited link text brush of the current color group.
 
-    \sa ColorRole brush()
+    \sa ColorRole, brush()
 */
 
 /*!
@@ -682,7 +682,7 @@ QPalette::operator QVariant() const
     Returns the color in the specified color \a group, used for the
     given color \a role.
 
-    \sa brush() setColor() ColorRole
+    \sa brush(), setColor(), ColorRole
 */
 
 /*!
@@ -691,7 +691,7 @@ QPalette::operator QVariant() const
     Returns the brush in the specified color \a group, used for the
     given color \a role.
 
-    \sa color() setBrush() ColorRole
+    \sa color(), setBrush(), ColorRole
 */
 const QBrush &QPalette::brush(ColorGroup gr, ColorRole cr) const
 {
@@ -713,7 +713,7 @@ const QBrush &QPalette::brush(ColorGroup gr, ColorRole cr) const
     Sets the color in the specified color \a group, used for the given
     color \a role, to the specified solid \a color.
 
-    \sa setBrush() color() ColorRole
+    \sa setBrush(), color(), ColorRole
 */
 
 /*!
@@ -723,7 +723,7 @@ const QBrush &QPalette::brush(ColorGroup gr, ColorRole cr) const
     Sets the brush in the specified color \a group, used for the given
     color \a role, to \a brush.
 
-    \sa brush() setColor() ColorRole
+    \sa brush(), setColor(), ColorRole
 */
 void QPalette::setBrush(ColorGroup cg, ColorRole cr, const QBrush &b)
 {
@@ -1001,7 +1001,7 @@ QDataStream &operator>>(QDataStream &s, QPalette &p)
     was subsequently modified; otherwise returns false. This is much
     stricter than equality.
 
-    \sa operator=() operator==()
+    \sa operator=(), operator==()
 */
 
 bool QPalette::isCopyOf(const QPalette &p) const
diff --git a/src/gui/kernel/qplatformintegration_qpa.cpp b/src/gui/kernel/qplatformintegration_qpa.cpp
index 8e4ed05..819f31e 100644
--- a/src/gui/kernel/qplatformintegration_qpa.cpp
+++ b/src/gui/kernel/qplatformintegration_qpa.cpp
@@ -163,7 +163,7 @@ QPlatformServices *QPlatformIntegration::services() const
     or QWindow::setWindowState(), respectively.
 
     \sa QPlatformWindow, QPlatformWindowFormat
-    \sa createPlatformBackingStore(QWindow *window) const
+    \sa createPlatformBackingStore()
 */
 
 /*!
@@ -174,7 +174,7 @@ QPlatformServices *QPlatformIntegration::services() const
     before the QPlatformBackingStore for tlw where the widget also requires a backing store.
 
     \sa QBackingStore
-    \sa createPlatformWindow(QWindow *window, WId winId = 0) const
+    \sa createPlatformWindow()
 */
 
 /*!
diff --git a/src/gui/kernel/qshortcutmap.cpp b/src/gui/kernel/qshortcutmap.cpp
index 267f528..474fb07 100644
--- a/src/gui/kernel/qshortcutmap.cpp
+++ b/src/gui/kernel/qshortcutmap.cpp
@@ -316,7 +316,7 @@ QKeySequence::SequenceMatch QShortcutMap::state()
     Uses ShortcutOverride event to see if any widgets want to override
     the event. If not, uses nextState(QKeyEvent) to check for a grabbed
     Shortcut, and dispatchEvent() is found an identical.
-    \sa nextState dispatchEvent
+    \sa nextState, dispatchEvent
 */
 bool QShortcutMap::tryShortcutEvent(QObject *o, QKeyEvent *e)
 {
diff --git a/src/gui/painting/qcolor.cpp b/src/gui/painting/qcolor.cpp
index 81f5a74..c45136e 100644
--- a/src/gui/painting/qcolor.cpp
+++ b/src/gui/painting/qcolor.cpp
@@ -589,7 +589,7 @@ QStringList QColor::colorNames()
     These components can be retrieved individually using the hueF(),
     saturationF(), valueF() and alphaF() functions.
 
-    \sa setHsv() {QColor#The HSV Color Model}{The HSV Color Model}
+    \sa setHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 void QColor::getHsvF(qreal *h, qreal *s, qreal *v, qreal *a) const
 {
@@ -643,8 +643,7 @@ void QColor::getHsv(int *h, int *s, int *v, int *a) const
 
     All the values must be in the range 0.0-1.0.
 
-    \sa getHsvF(), setHsv(), {QColor#The HSV Color Model}{The HSV
-    Color Model}
+    \sa getHsvF(), setHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 void QColor::setHsvF(qreal h, qreal s, qreal v, qreal a)
 {
@@ -671,8 +670,7 @@ void QColor::setHsvF(qreal h, qreal s, qreal v, qreal a)
     The saturation, value and alpha-channel values must be in the range 0-255,
     and the hue value must be greater than -1.
 
-    \sa getHsv(), setHsvF(), {QColor#The HSV Color Model}{The HSV
-    Color Model}
+    \sa getHsv(), setHsvF(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 void QColor::setHsv(int h, int s, int v, int a)
 {
@@ -978,8 +976,7 @@ void QColor::setRgb(QRgb rgb)
 /*!
     Returns the alpha color component of this color.
 
-    \sa setAlpha(), alphaF(), {QColor#Alpha-Blended
-    Drawing}{Alpha-Blended Drawing}
+    \sa setAlpha(), alphaF(), {QColor#Alpha-Blended Drawing}{Alpha-Blended Drawing}
 */
 int QColor::alpha() const
 { return ct.argb.alpha >> 8; }
@@ -989,8 +986,7 @@ int QColor::alpha() const
     Sets the alpha of this color to \a alpha. Integer alpha is specified in the
     range 0-255.
 
-    \sa alpha(), alphaF(), {QColor#Alpha-Blended
-    Drawing}{Alpha-Blended Drawing}
+    \sa alpha(), alphaF(), {QColor#Alpha-Blended Drawing}{Alpha-Blended Drawing}
 */
 
 void QColor::setAlpha(int alpha)
@@ -1002,8 +998,7 @@ void QColor::setAlpha(int alpha)
 /*!
     Returns the alpha color component of this color.
 
-    \sa setAlphaF(), alpha(),  {QColor#Alpha-Blended
-    Drawing}{Alpha-Blended Drawing}
+    \sa setAlphaF(), alpha(), {QColor#Alpha-Blended Drawing}{Alpha-Blended Drawing}
 */
 qreal QColor::alphaF() const
 { return ct.argb.alpha / qreal(USHRT_MAX); }
@@ -1012,8 +1007,7 @@ qreal QColor::alphaF() const
     Sets the alpha of this color to \a alpha. qreal alpha is specified in the
     range 0.0-1.0.
 
-    \sa alphaF(), alpha(), {QColor#Alpha-Blended
-    Drawing}{Alpha-Blended Drawing}
+    \sa alphaF(), alpha(), {QColor#Alpha-Blended Drawing}{Alpha-Blended Drawing}
 
 */
 void QColor::setAlphaF(qreal alpha)
@@ -1067,7 +1061,7 @@ int QColor::green() const
     Sets the green color component of this color to \a green. Integer
     components are specified in the range 0-255.
 
-    \sa green(), greenF(),  setRgb()
+    \sa green(), greenF(), setRgb()
 */
 void QColor::setGreen(int green)
 {
@@ -1195,8 +1189,7 @@ void QColor::setBlueF(qreal blue)
 
     The color is implicitly converted to HSV.
 
-    \sa hsvHue(), hueF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa hsvHue(), hueF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 
 int QColor::hue() const
@@ -1207,8 +1200,7 @@ int QColor::hue() const
 /*!
     Returns the hue color component of this color.
 
-    \sa hueF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa hueF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 int QColor::hsvHue() const
 {
@@ -1234,8 +1226,7 @@ int QColor::saturation() const
 /*!
     Returns the saturation color component of this color.
 
-    \sa saturationF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa saturationF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 int QColor::hsvSaturation() const
 {
@@ -1247,8 +1238,7 @@ int QColor::hsvSaturation() const
 /*!
     Returns the value color component of this color.
 
-    \sa valueF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa valueF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 int QColor::value() const
 {
@@ -1262,8 +1252,7 @@ int QColor::value() const
 
     The color is implicitly converted to HSV.
 
-    \sa hsvHueF(), hue(), getHsvF(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa hsvHueF(), hue(), getHsvF(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 qreal QColor::hueF() const
 {
@@ -1288,7 +1277,7 @@ qreal QColor::hsvHueF() const
 
      The color is implicitly converted to HSV.
 
-    \sa hsvSaturationF(), saturation() getHsvF(), {QColor#The HSV Color Model}{The HSV Color
+    \sa hsvSaturationF(), saturation(), getHsvF(), {QColor#The HSV Color Model}{The HSV Color
     Model}
 */
 qreal QColor::saturationF() const
@@ -1299,8 +1288,7 @@ qreal QColor::saturationF() const
 /*!
     Returns the saturation color component of this color.
 
-    \sa saturation() getHsvF(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa saturation(), getHsvF(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 qreal QColor::hsvSaturationF() const
 {
@@ -1312,8 +1300,7 @@ qreal QColor::hsvSaturationF() const
 /*!
     Returns the value color component of this color.
 
-    \sa value() getHsvF(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa value(), getHsvF(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 qreal QColor::valueF() const
 {
@@ -1341,8 +1328,7 @@ int QColor::hslHue() const
 
     Returns the saturation color component of this color.
 
-    \sa saturationF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color
-    Model}
+    \sa saturationF(), getHsv(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 int QColor::hslSaturation() const
 {
@@ -1384,7 +1370,7 @@ qreal QColor::hslHueF() const
 
     Returns the saturation color component of this color.
 
-    \sa saturationF() getHslF()
+    \sa saturationF(), getHslF()
 */
 qreal QColor::hslSaturationF() const
 {
@@ -1398,7 +1384,7 @@ qreal QColor::hslSaturationF() const
 
     Returns the lightness color component of this color.
 
-    \sa value() getHslF()
+    \sa value(), getHslF()
 */
 qreal QColor::lightnessF() const
 {
@@ -1410,8 +1396,7 @@ qreal QColor::lightnessF() const
 /*!
     Returns the cyan color component of this color.
 
-    \sa cyanF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa cyanF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 int QColor::cyan() const
 {
@@ -1423,8 +1408,7 @@ int QColor::cyan() const
 /*!
     Returns the magenta color component of this color.
 
-    \sa magentaF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa magentaF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 int QColor::magenta() const
 {
@@ -1436,8 +1420,7 @@ int QColor::magenta() const
 /*!
     Returns the yellow color component of this color.
 
-    \sa yellowF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa yellowF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 int QColor::yellow() const
 {
@@ -1449,8 +1432,7 @@ int QColor::yellow() const
 /*!
     Returns the black color component of this color.
 
-    \sa blackF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa blackF(), getCmyk(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 
 */
 int QColor::black() const
@@ -1463,8 +1445,7 @@ int QColor::black() const
 /*!
     Returns the cyan color component of this color.
 
-    \sa cyan(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa cyan(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 qreal QColor::cyanF() const
 {
@@ -1476,8 +1457,7 @@ qreal QColor::cyanF() const
 /*!
     Returns the magenta color component of this color.
 
-    \sa magenta(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa magenta(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 qreal QColor::magentaF() const
 {
@@ -1489,8 +1469,7 @@ qreal QColor::magentaF() const
 /*!
     Returns the yellow color component of this color.
 
-     \sa yellow(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+     \sa yellow(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 qreal QColor::yellowF() const
 {
@@ -1502,8 +1481,7 @@ qreal QColor::yellowF() const
 /*!
     Returns the black color component of this color.
 
-    \sa black(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa black(), getCmykF(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 qreal QColor::blackF() const
 {
@@ -1661,8 +1639,7 @@ QColor QColor::toRgb() const
 /*!
     Creates and returns an HSV QColor based on this color.
 
-    \sa fromHsv(), convertTo(), isValid(), {QColor#The HSV Color
-    Model}{The HSV Color Model}
+    \sa fromHsv(), convertTo(), isValid(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 QColor QColor::toHsv() const
 {
@@ -1769,8 +1746,7 @@ QColor QColor::toHsl() const
 /*!
     Creates and returns a CMYK QColor based on this color.
 
-    \sa fromCmyk(), convertTo(), isValid(), {QColor#The CMYK Color
-    Model}{The CMYK Color Model}
+    \sa fromCmyk(), convertTo(), isValid(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 QColor QColor::toCmyk() const
 {
@@ -1926,8 +1902,7 @@ QColor QColor::fromRgbF(qreal r, qreal g, qreal b, qreal a)
     The value of \a s, \a v, and \a a must all be in the range 0-255; the value
     of \a h must be in the range 0-359.
 
-    \sa toHsv(), fromHsvF(), isValid(), {QColor#The HSV Color
-    Model}{The HSV Color Model}
+    \sa toHsv(), fromHsvF(), isValid(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 QColor QColor::fromHsv(int h, int s, int v, int a)
 {
@@ -1958,8 +1933,7 @@ QColor QColor::fromHsv(int h, int s, int v, int a)
 
     All the values must be in the range 0.0-1.0.
 
-    \sa toHsv(), fromHsv(), isValid(), {QColor#The HSV Color
-    Model}{The HSV Color Model}
+    \sa toHsv(), fromHsv(), isValid(), {QColor#The HSV Color Model}{The HSV Color Model}
 */
 QColor QColor::fromHsvF(qreal h, qreal s, qreal v, qreal a)
 {
@@ -2112,8 +2086,7 @@ void QColor::getCmykF(qreal *c, qreal *m, qreal *y, qreal *k, qreal *a)
 
     All the values must be in the range 0-255.
 
-    \sa getCmyk(), setCmykF(), {QColor#The CMYK Color Model}{The
-    CMYK Color Model}
+    \sa getCmyk(), setCmykF(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 void QColor::setCmyk(int c, int m, int y, int k, int a)
 {
@@ -2142,8 +2115,7 @@ void QColor::setCmyk(int c, int m, int y, int k, int a)
 
     All the values must be in the range 0.0-1.0.
 
-    \sa getCmykF() setCmyk(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa getCmykF(), setCmyk(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 void QColor::setCmykF(qreal c, qreal m, qreal y, qreal k, qreal a)
 {
@@ -2171,8 +2143,7 @@ void QColor::setCmykF(qreal c, qreal m, qreal y, qreal k, qreal a)
 
     All the values must be in the range 0-255.
 
-    \sa toCmyk(), fromCmykF(), isValid(), {QColor#The CMYK Color Model}{The CMYK
-    Color Model}
+    \sa toCmyk(), fromCmykF(), isValid(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 QColor QColor::fromCmyk(int c, int m, int y, int k, int a)
 {
@@ -2204,8 +2175,7 @@ QColor QColor::fromCmyk(int c, int m, int y, int k, int a)
 
     All the values must be in the range 0.0-1.0.
 
-    \sa toCmyk(), fromCmyk(), isValid(), {QColor#The CMYK Color
-    Model}{The CMYK Color Model}
+    \sa toCmyk(), fromCmyk(), isValid(), {QColor#The CMYK Color Model}{The CMYK Color Model}
 */
 QColor QColor::fromCmykF(qreal c, qreal m, qreal y, qreal k, qreal a)
 {
diff --git a/src/gui/painting/qmatrix.cpp b/src/gui/painting/qmatrix.cpp
index afefb17..5b2ccbd 100644
--- a/src/gui/painting/qmatrix.cpp
+++ b/src/gui/painting/qmatrix.cpp
@@ -177,8 +177,8 @@ QT_BEGIN_NAMESPACE
     \snippet matrix/matrix.cpp 2
     \endtable
 
-    \sa QPainter, QTransform, {Coordinate System}, 
-    {painting/affine}{Affine Transformations Example}, {Transformations Example}
+    \sa QPainter, QTransform, {Coordinate System},
+        {painting/affine}{Affine Transformations Example}, {Transformations Example}
 */
 
 
@@ -1157,7 +1157,7 @@ QDebug operator<<(QDebug dbg, const QMatrix &m)
 
     \brief The qFuzzyCompare function is for comparing two matrices
     using a fuzziness factor.
-    
+
     Returns true if \a m1 and \a m2 are equal, allowing for a small
     fuzziness factor for floating-point comparisons; false otherwise.
 */
diff --git a/src/gui/painting/qpaintdevice.qdoc b/src/gui/painting/qpaintdevice.qdoc
index 47c518c..eb7bdcd 100644
--- a/src/gui/painting/qpaintdevice.qdoc
+++ b/src/gui/painting/qpaintdevice.qdoc
@@ -242,7 +242,7 @@
     Note that if the logicalDpiY() doesn't equal the physicalDpiY(),
     the corresponding QPaintEngine must handle the resolution mapping.
 
-    \sa  logicalDpiX(), physicalDpiY()
+    \sa logicalDpiX(), physicalDpiY()
 */
 
 /*!
@@ -256,7 +256,7 @@
     Note that if the physicalDpiX() doesn't equal the logicalDpiX(),
     the corresponding QPaintEngine must handle the resolution mapping.
 
-    \sa  physicalDpiY(),  logicalDpiX()
+    \sa physicalDpiY(), logicalDpiX()
 */
 
 /*!
@@ -270,5 +270,5 @@
     Note that if the physicalDpiY() doesn't equal the logicalDpiY(),
     the corresponding QPaintEngine must handle the resolution mapping.
 
-    \sa  physicalDpiX(),  logicalDpiY()
+    \sa physicalDpiX(), logicalDpiY()
 */
diff --git a/src/gui/painting/qpaintengine.cpp b/src/gui/painting/qpaintengine.cpp
index eb6d186..4af2651 100644
--- a/src/gui/painting/qpaintengine.cpp
+++ b/src/gui/painting/qpaintengine.cpp
@@ -414,7 +414,7 @@ void QPaintEngine::drawPolygon(const QPoint *points, int pointCount, PolygonDraw
     painting is to start on the paint device \a pdev. Return true if
     the initialization was successful; otherwise return false.
 
-    \sa end() isActive()
+    \sa end(), isActive()
 */
 
 /*!
@@ -424,7 +424,7 @@ void QPaintEngine::drawPolygon(const QPoint *points, int pointCount, PolygonDraw
     device. Return true if painting was finished successfully;
     otherwise return false.
 
-    \sa begin() isActive()
+    \sa begin(), isActive()
 */
 
 
diff --git a/src/gui/painting/qpainter.cpp b/src/gui/painting/qpainter.cpp
index e622fe4..d6becf0 100644
--- a/src/gui/painting/qpainter.cpp
+++ b/src/gui/painting/qpainter.cpp
@@ -3085,8 +3085,7 @@ bool QPainter::matrixEnabled() const
 /*!
     Scales the coordinate system by (\a{sx}, \a{sy}).
 
-    \sa setWorldTransform() {QPainter#Coordinate Transformations}{Coordinate
-    Transformations}
+    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate Transformations}
 */
 
 void QPainter::scale(qreal sx, qreal sy)
@@ -3109,8 +3108,7 @@ void QPainter::scale(qreal sx, qreal sy)
 /*!
     Shears the coordinate system by (\a{sh}, \a{sv}).
 
-    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate
-    Transformations}
+    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate Transformations}
 */
 
 void QPainter::shear(qreal sh, qreal sv)
@@ -3135,8 +3133,7 @@ void QPainter::shear(qreal sh, qreal sv)
 
     Rotates the coordinate system the given \a angle clockwise.
 
-    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate
-    Transformations}
+    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate Transformations}
 */
 
 void QPainter::rotate(qreal a)
@@ -3160,8 +3157,7 @@ void QPainter::rotate(qreal a)
     Translates the coordinate system by the given \a offset; i.e. the
     given \a offset is added to points.
 
-    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate
-    Transformations}
+    \sa setWorldTransform(), {QPainter#Coordinate Transformations}{Coordinate Transformations}
 */
 void QPainter::translate(const QPointF &offset)
 {
@@ -4794,7 +4790,7 @@ void QPainter::drawPolyline(const QPoint *points, int pointCount)
     \l{Qt::FillRule} for a more detailed description of these fill
     rules.
 
-    \sa  drawConvexPolygon(), drawPolyline(), {Coordinate System}
+    \sa drawConvexPolygon(), drawPolyline(), {Coordinate System}
 */
 void QPainter::drawPolygon(const QPointF *points, int pointCount, Qt::FillRule fillRule)
 {
@@ -7140,7 +7136,7 @@ QRect QPainter::window() const
     The default viewport rectangle is the same as the device's
     rectangle.
 
-    \sa viewport(), viewTransformEnabled() {Coordinate
+    \sa viewport(), viewTransformEnabled(), {Coordinate
     System#Window-Viewport Conversion}{Window-Viewport Conversion}
 */
 
@@ -8102,7 +8098,7 @@ qreal QPaintEngineState::opacity() const
     If \a combine is true, the specified \a transform is combined with
     the current matrix; otherwise it replaces the current matrix.
 
-    \sa transform() setWorldTransform()
+    \sa transform(), setWorldTransform()
 */
 
 void QPainter::setTransform(const QTransform &transform, bool combine )
diff --git a/src/gui/painting/qpainterpath.cpp b/src/gui/painting/qpainterpath.cpp
index dc31052..f249fe1 100644
--- a/src/gui/painting/qpainterpath.cpp
+++ b/src/gui/painting/qpainterpath.cpp
@@ -344,7 +344,7 @@ static void qt_debug_path(const QPainterPath &path)
     \value CurveToDataElement  The extra data required to describe a curve in
                                                a CurveToElement element.
 
-    \sa elementAt(),  elementCount()
+    \sa elementAt(), elementCount()
 */
 
 /*!
diff --git a/src/gui/painting/qpen.cpp b/src/gui/painting/qpen.cpp
index 2c95a9f..9d03f75 100644
--- a/src/gui/painting/qpen.cpp
+++ b/src/gui/painting/qpen.cpp
@@ -309,7 +309,7 @@ QPen::QPen(const QColor &color)
     Constructs a pen with the specified \a brush, \a width, pen \a style,
     \a cap style and \a join style.
 
-    \sa setBrush(), setWidth(), setStyle(),  setCapStyle(), setJoinStyle()
+    \sa setBrush(), setWidth(), setStyle(), setCapStyle(), setJoinStyle()
 */
 
 QPen::QPen(const QBrush &brush, qreal width, Qt::PenStyle s, Qt::PenCapStyle c, Qt::PenJoinStyle j)
@@ -556,7 +556,7 @@ void QPen::setDashOffset(qreal offset)
     Returns the miter limit of the pen. The miter limit is only
     relevant when the join style is set to Qt::MiterJoin.
 
-    \sa setMiterLimit(),  {QPen#Join Style}{Join Style}
+    \sa setMiterLimit(), {QPen#Join Style}{Join Style}
 */
 qreal QPen::miterLimit() const
 {
@@ -606,7 +606,7 @@ int QPen::width() const
 
     Returns the pen width with floating point precision.
 
-    \sa setWidthF() width()
+    \sa setWidthF(), width()
 */
 qreal QPen::widthF() const
 {
@@ -649,7 +649,7 @@ void QPen::setWidth(int width)
 
     Setting a pen width with a negative value is not supported.
 
-    \sa setWidth() widthF()
+    \sa setWidth(), widthF()
 */
 
 void QPen::setWidthF(qreal width)
@@ -693,7 +693,7 @@ void QPen::setCapStyle(Qt::PenCapStyle c)
 /*!
     Returns the pen's join style.
 
-    \sa setJoinStyle(),  {QPen#Join Style}{Join Style}
+    \sa setJoinStyle(), {QPen#Join Style}{Join Style}
 */
 Qt::PenJoinStyle QPen::joinStyle() const
 {
diff --git a/src/gui/painting/qpolygon.cpp b/src/gui/painting/qpolygon.cpp
index b7dee7f..38f70d9 100644
--- a/src/gui/painting/qpolygon.cpp
+++ b/src/gui/painting/qpolygon.cpp
@@ -306,7 +306,7 @@ void QPolygon::point(int index, int *x, int *y) const
 
     \snippet polygon/polygon.cpp 2
 
-    \sa setPoint() putPoints()
+    \sa setPoint(), putPoints()
 */
 
 void QPolygon::setPoints(int nPoints, const int *points)
diff --git a/src/gui/text/qfont.cpp b/src/gui/text/qfont.cpp
index f64b3e8..753fe56 100644
--- a/src/gui/text/qfont.cpp
+++ b/src/gui/text/qfont.cpp
@@ -607,7 +607,7 @@ QFontEngineData::~QFontEngineData()
     Returns the family name that corresponds to the current style
     hint.
 
-    \sa StyleHint styleHint() setStyleHint()
+    \sa StyleHint, styleHint(), setStyleHint()
 */
 
 /*!
@@ -629,7 +629,7 @@ QFontEngineData::~QFontEngineData()
     happens. Please \link bughowto.html report it as a bug\endlink if
     it does, preferably with a list of the fonts you have installed.
 
-    \sa lastResortFamily() rawName()
+    \sa lastResortFamily(), rawName()
 */
 
 /*!
@@ -702,7 +702,7 @@ QFont::QFont()
     algorithm.
 
     \sa Weight, setFamily(), setPointSize(), setWeight(), setItalic(),
-    setStyleHint() QGuiApplication::font()
+    setStyleHint(), QGuiApplication::font()
 */
 QFont::QFont(const QString &family, int pointSize, int weight, bool italic)
     : d(new QFontPrivate()), resolve_mask(QFont::FamilyResolved)
@@ -758,7 +758,7 @@ QFont &QFont::operator=(const QFont &font)
     Returns the requested font family name, i.e. the name set in the
     constructor or the last setFont() call.
 
-    \sa setFamily() substitutes() substitute()
+    \sa setFamily(), substitutes(), substitute()
 */
 QString QFont::family() const
 {
@@ -796,7 +796,7 @@ void QFont::setFamily(const QString &family)
     Mac OS X and X11 so far. On Windows irregular styles will be added
     as separate font families so there is no need for this.
 
-    \sa setFamily() setStyle()
+    \sa setFamily(), setStyle()
 */
 QString QFont::styleName() const
 {
@@ -823,7 +823,7 @@ void QFont::setStyleName(const QString &styleName)
     Returns the point size of the font. Returns -1 if the font size
     was specified in pixels.
 
-    \sa setPointSize() pointSizeF()
+    \sa setPointSize(), pointSizeF()
 */
 int QFont::pointSize() const
 {
@@ -933,7 +933,7 @@ QFont::HintingPreference QFont::hintingPreference() const
     Sets the point size to \a pointSize. The point size must be
     greater than zero.
 
-    \sa pointSize() setPointSizeF()
+    \sa pointSize(), setPointSizeF()
 */
 void QFont::setPointSize(int pointSize)
 {
@@ -955,7 +955,7 @@ void QFont::setPointSize(int pointSize)
     greater than zero. The requested precision may not be achieved on
     all platforms.
 
-    \sa pointSizeF() setPointSize() setPixelSize()
+    \sa pointSizeF(), setPointSize(), setPixelSize()
 */
 void QFont::setPointSizeF(qreal pointSize)
 {
@@ -976,7 +976,7 @@ void QFont::setPointSizeF(qreal pointSize)
     Returns the point size of the font. Returns -1 if the font size was
     specified in pixels.
 
-    \sa pointSize() setPointSizeF() pixelSize() QFontInfo::pointSize() QFontInfo::pixelSize()
+    \sa pointSize(), setPointSizeF(), pixelSize(), QFontInfo::pointSize(), QFontInfo::pixelSize()
 */
 qreal QFont::pointSizeF() const
 {
@@ -1012,7 +1012,7 @@ void QFont::setPixelSize(int pixelSize)
     setPixelSize(). Returns -1 if the size was set with setPointSize()
     or setPointSizeF().
 
-    \sa setPixelSize() pointSize() QFontInfo::pointSize() QFontInfo::pixelSize()
+    \sa setPixelSize(), pointSize(), QFontInfo::pointSize(), QFontInfo::pixelSize()
 */
 int QFont::pixelSize() const
 {
@@ -1024,7 +1024,7 @@ int QFont::pixelSize() const
 
     Returns true if the style() of the font is not QFont::StyleNormal
 
-    \sa setItalic() style()
+    \sa setItalic(), style()
 */
 
 /*!
@@ -1033,7 +1033,7 @@ int QFont::pixelSize() const
   Sets the style() of the font to QFont::StyleItalic if \a enable is true;
   otherwise the style is set to QFont::StyleNormal.
 
-  \sa italic() QFontInfo
+  \sa italic(), QFontInfo
 */
 
 /*!
@@ -1254,7 +1254,7 @@ void QFont::setKerning(bool enable)
     The style strategy affects the \l{QFont}{font matching} algorithm.
     See \l QFont::StyleStrategy for the list of available strategies.
 
-    \sa setStyleHint() QFont::StyleHint
+    \sa setStyleHint(), QFont::StyleHint
 */
 QFont::StyleStrategy QFont::styleStrategy() const
 {
@@ -1267,7 +1267,7 @@ QFont::StyleStrategy QFont::styleStrategy() const
     The style hint affects the \l{QFont}{font matching} algorithm.
     See \l QFont::StyleHint for the list of available hints.
 
-    \sa setStyleHint(), QFont::StyleStrategy QFontInfo::styleHint()
+    \sa setStyleHint(), QFont::StyleStrategy, QFontInfo::styleHint()
 */
 QFont::StyleHint QFont::styleHint() const
 {
@@ -1407,7 +1407,7 @@ void QFont::setStyleStrategy(StyleStrategy s)
     \value ExtraExpanded 150
     \value UltraExpanded 200
 
-    \sa setStretch() stretch()
+    \sa setStretch(), stretch()
 */
 
 /*!
@@ -1436,7 +1436,7 @@ int QFont::stretch() const
     X11, the stretch factor is matched against a predefined set of
     values for the SETWIDTH_NAME field of the XLFD.
 
-    \sa stretch() QFont::Stretch
+    \sa stretch(), QFont::Stretch
 */
 void QFont::setStretch(int factor)
 {
@@ -1647,7 +1647,7 @@ bool QFont::exactMatch() const
     equal. If rawMode() is enabled for both fonts, only the family
     fields are compared.
 
-    \sa operator!=() isCopyOf()
+    \sa operator!=(), isCopyOf()
 */
 bool QFont::operator==(const QFont &f) const
 {
@@ -1675,7 +1675,7 @@ bool QFont::operator==(const QFont &f) const
     This function is useful in some circumstances, for example if you
     want to use QFont objects as keys in a QMap.
 
-    \sa operator==() operator!=() isCopyOf()
+    \sa operator==(), operator!=(), isCopyOf()
 */
 bool QFont::operator<(const QFont &f) const
 {
@@ -1731,7 +1731,7 @@ QFont::operator QVariant() const
     one of them was created as a copy of the other and neither has
     been modified since. This is much stricter than equality.
 
-    \sa operator=() operator==()
+    \sa operator=(), operator==()
 */
 bool QFont::isCopyOf(const QFont & f) const
 {
@@ -1742,7 +1742,7 @@ bool QFont::isCopyOf(const QFont & f) const
     Returns true if raw mode is used for font name matching; otherwise
     returns false.
 
-    \sa setRawMode() rawName()
+    \sa setRawMode(), rawName()
 */
 bool QFont::rawMode() const
 {
@@ -1797,7 +1797,7 @@ Q_GLOBAL_STATIC(QFontSubst, globalFontSubst)
 
     To obtain a list of substitutions use substitutes().
 
-    \sa setFamily() insertSubstitutions() insertSubstitution() removeSubstitutions()
+    \sa setFamily(), insertSubstitutions(), insertSubstitution(), removeSubstitutions()
 */
 QString QFont::substitute(const QString &familyName)
 {
@@ -1818,7 +1818,7 @@ QString QFont::substitute(const QString &familyName)
     If there is no substitution for \a familyName, an empty list is
     returned.
 
-    \sa substitute() insertSubstitutions() insertSubstitution() removeSubstitutions()
+    \sa substitute(), insertSubstitutions(), insertSubstitution(), removeSubstitutions()
  */
 QStringList QFont::substitutes(const QString &familyName)
 {
@@ -1832,7 +1832,7 @@ QStringList QFont::substitutes(const QString &familyName)
     Inserts \a substituteName into the substitution
     table for the family \a familyName.
 
-    \sa insertSubstitutions() removeSubstitutions() substitutions() substitute() substitutes()
+    \sa insertSubstitutions(), removeSubstitutions(), substitutions(), substitute(), substitutes()
 */
 void QFont::insertSubstitution(const QString &familyName,
                                const QString &substituteName)
@@ -2266,7 +2266,7 @@ QDataStream &operator>>(QDataStream &s, QFont &font)
     info object is \e not updated.
     \endlist
 
-    \sa QFont QFontMetrics QFontDatabase
+    \sa QFont, QFontMetrics, QFontDatabase
 */
 
 /*!
@@ -2343,7 +2343,7 @@ QString QFontInfo::styleName() const
 /*!
     Returns the point size of the matched window system font.
 
-    \sa pointSizeF() QFont::pointSize()
+    \sa pointSizeF(), QFont::pointSize()
 */
 int QFontInfo::pointSize() const
 {
@@ -2492,7 +2492,7 @@ bool QFontInfo::fixedPitch() const
 
     Currently only returns the style hint set in QFont.
 
-    \sa QFont::styleHint() QFont::StyleHint
+    \sa QFont::styleHint(), QFont::StyleHint
 */
 QFont::StyleHint QFontInfo::styleHint() const
 {
diff --git a/src/gui/text/qfontmetrics.cpp b/src/gui/text/qfontmetrics.cpp
index cc6fa4b..141ef64 100644
--- a/src/gui/text/qfontmetrics.cpp
+++ b/src/gui/text/qfontmetrics.cpp
@@ -978,7 +978,7 @@ int QFontMetrics::lineWidth() const
     Example:
     \snippet code/src_gui_text_qfontmetrics.cpp 1
 
-    \sa QFont QFontInfo QFontDatabase
+    \sa QFont, QFontInfo, QFontDatabase
 */
 
 /*!
diff --git a/src/gui/text/qtextcursor.cpp b/src/gui/text/qtextcursor.cpp
index ce46ec2..048f1a5 100644
--- a/src/gui/text/qtextcursor.cpp
+++ b/src/gui/text/qtextcursor.cpp
@@ -1138,7 +1138,7 @@ bool QTextCursor::isNull() const
     \a pos using a \c MoveMode specified by \a m. The cursor is positioned
     between characters.
 
-    \sa position() movePosition() anchor()
+    \sa position(), movePosition(), anchor()
 */
 void QTextCursor::setPosition(int pos, MoveMode m)
 {
@@ -1169,7 +1169,7 @@ void QTextCursor::setPosition(int pos, MoveMode m)
     Returns the absolute position of the cursor within the document.
     The cursor is positioned between characters.
 
-    \sa setPosition() movePosition() anchor() positionInBlock()
+    \sa setPosition(), movePosition(), anchor(), positionInBlock()
 */
 int QTextCursor::position() const
 {
@@ -1200,7 +1200,7 @@ int QTextCursor::positionInBlock() const
     selection and anchor() marks the other end. Just like the cursor
     position, the anchor position is between characters.
 
-    \sa position() setPosition() movePosition() selectionStart() selectionEnd()
+    \sa position(), setPosition(), movePosition(), selectionStart(), selectionEnd()
 */
 int QTextCursor::anchor() const
 {
@@ -1388,7 +1388,7 @@ void QTextCursor::setKeepPositionOnInsert(bool b)
     Any ASCII linefeed characters (\\n) in the inserted text are transformed
     into unicode block separators, corresponding to insertBlock() calls.
 
-    \sa charFormat() hasSelection()
+    \sa charFormat(), hasSelection()
 */
 void QTextCursor::insertText(const QString &text)
 {
@@ -1476,7 +1476,7 @@ void QTextCursor::insertText(const QString &text, const QTextCharFormat &_format
     If there is no selected text, deletes the character \e at the
     current cursor position; otherwise deletes the selected text.
 
-    \sa deletePreviousChar() hasSelection() clearSelection()
+    \sa deletePreviousChar(), hasSelection(), clearSelection()
 */
 void QTextCursor::deleteChar()
 {
@@ -1500,7 +1500,7 @@ void QTextCursor::deleteChar()
     If there is no selected text, deletes the character \e before the
     current cursor position; otherwise deletes the selected text.
 
-    \sa deleteChar() hasSelection() clearSelection()
+    \sa deleteChar(), hasSelection(), clearSelection()
 */
 void QTextCursor::deletePreviousChar()
 {
@@ -1623,7 +1623,7 @@ void QTextCursor::selectedTableCells(int *firstRow, int *numRows, int *firstColu
 
     Note that it does \b{not} delete the text of the selection.
 
-    \sa removeSelectedText() hasSelection()
+    \sa removeSelectedText(), hasSelection()
 */
 void QTextCursor::clearSelection()
 {
@@ -1654,7 +1654,7 @@ void QTextCursor::removeSelectedText()
     Returns the start of the selection or position() if the
     cursor doesn't have a selection.
 
-    \sa selectionEnd() position() anchor()
+    \sa selectionEnd(), position(), anchor()
 */
 int QTextCursor::selectionStart() const
 {
@@ -1667,7 +1667,7 @@ int QTextCursor::selectionStart() const
     Returns the end of the selection or position() if the cursor
     doesn't have a selection.
 
-    \sa selectionStart() position() anchor()
+    \sa selectionStart(), position(), anchor()
 */
 int QTextCursor::selectionEnd() const
 {
@@ -1770,7 +1770,7 @@ QTextBlock QTextCursor::block() const
 /*!
     Returns the block format of the block the cursor is in.
 
-    \sa setBlockFormat() charFormat()
+    \sa setBlockFormat(), charFormat()
  */
 QTextBlockFormat QTextCursor::blockFormat() const
 {
@@ -2049,7 +2049,7 @@ void QTextCursor::insertBlock(const QTextBlockFormat &format, const QTextCharFor
     list item of a newly created list with the given \a format. Returns
     the created list.
 
-    \sa currentList() createList() insertBlock()
+    \sa currentList(), createList(), insertBlock()
  */
 QTextList *QTextCursor::insertList(const QTextListFormat &format)
 {
@@ -2076,7 +2076,7 @@ QTextList *QTextCursor::insertList(QTextListFormat::Style style)
     Creates and returns a new list with the given \a format, and makes the
     current paragraph the cursor is in the first list item.
 
-    \sa insertList() currentList()
+    \sa insertList(), currentList()
  */
 QTextList *QTextCursor::createList(const QTextListFormat &format)
 {
@@ -2098,7 +2098,7 @@ QTextList *QTextCursor::createList(const QTextListFormat &format)
 
     The style to be used is defined by the QTextListFormat::Style enum.
 
-    \sa insertList() currentList()
+    \sa insertList(), currentList()
  */
 QTextList *QTextCursor::createList(QTextListFormat::Style style)
 {
@@ -2111,7 +2111,7 @@ QTextList *QTextCursor::createList(QTextListFormat::Style style)
     Returns the current list if the cursor position() is inside a
     block that is part of a list; otherwise returns 0.
 
-    \sa insertList() createList()
+    \sa insertList(), createList()
  */
 QTextList *QTextCursor::currentList() const
 {
@@ -2509,7 +2509,7 @@ void QTextCursor::endEditBlock()
     one of them was created as a copy of the other and neither has moved since.
     This is much stricter than equality.
 
-    \sa operator=() operator==()
+    \sa operator=(), operator==()
 */
 bool QTextCursor::isCopyOf(const QTextCursor &other) const
 {
diff --git a/src/gui/text/qtextdocument.cpp b/src/gui/text/qtextdocument.cpp
index f054656..d0a1585 100644
--- a/src/gui/text/qtextdocument.cpp
+++ b/src/gui/text/qtextdocument.cpp
@@ -272,7 +272,7 @@ QTextCodec *Qt::codecForHtml(const QByteArray &ba)
         \li Text block group format changes.
     \endlist
 
-    \sa QTextCursor, QTextEdit, \link richtext.html Rich Text Processing\endlink , {Text Object Example}
+    \sa QTextCursor, QTextEdit, {Rich Text Processing}, {Text Object Example}
 */
 
 /*!
@@ -432,7 +432,7 @@ void QTextDocument::redo(QTextCursor *cursor)
     signals are emitted, QTextDocument::undoAvailable() or
     QTextDocument::redoAvailable().
 
-    \sa QTextDocument::undoAvailable() QTextDocument::redoAvailable()
+    \sa QTextDocument::undoAvailable(), QTextDocument::redoAvailable()
 */
 void QTextDocument::clearUndoRedoStacks(Stacks stacksToClear)
 {
diff --git a/src/gui/text/qtextdocumentfragment.cpp b/src/gui/text/qtextdocumentfragment.cpp
index 72113bc..d114733 100644
--- a/src/gui/text/qtextdocumentfragment.cpp
+++ b/src/gui/text/qtextdocumentfragment.cpp
@@ -303,7 +303,7 @@ QTextDocumentFragment::QTextDocumentFragment(const QTextDocument *document)
     Creates a QTextDocumentFragment from the \a{cursor}'s selection.
     If the cursor doesn't have a selection, the created fragment is empty.
 
-    \sa isEmpty() QTextCursor::selection()
+    \sa isEmpty(), QTextCursor::selection()
 */
 QTextDocumentFragment::QTextDocumentFragment(const QTextCursor &cursor)
     : d(0)
diff --git a/src/gui/text/qtextformat.cpp b/src/gui/text/qtextformat.cpp
index bb3d897..6d9eeab 100644
--- a/src/gui/text/qtextformat.cpp
+++ b/src/gui/text/qtextformat.cpp
@@ -908,7 +908,8 @@ QTextTableCellFormat QTextFormat::toTableCellFormat() const
     Returns the value of the property specified by \a propertyId. If the
     property isn't of QTextFormat::Bool type, false is returned instead.
 
-    \sa setProperty() intProperty() doubleProperty() stringProperty() colorProperty() lengthProperty() lengthVectorProperty() Property
+    \sa setProperty(), intProperty(), doubleProperty(), stringProperty(), colorProperty(),
+        lengthProperty(), lengthVectorProperty(), Property
 */
 bool QTextFormat::boolProperty(int propertyId) const
 {
@@ -924,7 +925,8 @@ bool QTextFormat::boolProperty(int propertyId) const
     Returns the value of the property specified by \a propertyId. If the
     property is not of QTextFormat::Integer type, 0 is returned instead.
 
-    \sa setProperty() boolProperty() doubleProperty() stringProperty() colorProperty() lengthProperty() lengthVectorProperty() Property
+    \sa setProperty(), boolProperty(), doubleProperty(), stringProperty(), colorProperty(),
+        lengthProperty(), lengthVectorProperty(), Property
 */
 int QTextFormat::intProperty(int propertyId) const
 {
@@ -944,7 +946,8 @@ int QTextFormat::intProperty(int propertyId) const
     property isn't of QVariant::Double or QMetaType::Float type, 0 is
     returned instead.
 
-    \sa setProperty() boolProperty() intProperty() stringProperty() colorProperty() lengthProperty() lengthVectorProperty() Property
+    \sa setProperty(), boolProperty(), intProperty(), stringProperty(), colorProperty(),
+        lengthProperty(), lengthVectorProperty(), Property
 */
 qreal QTextFormat::doubleProperty(int propertyId) const
 {
@@ -961,7 +964,8 @@ qreal QTextFormat::doubleProperty(int propertyId) const
     property isn't of QVariant::String type, an empty string is
     returned instead.
 
-    \sa setProperty() boolProperty() intProperty() doubleProperty() colorProperty() lengthProperty() lengthVectorProperty() Property
+    \sa setProperty(), boolProperty(), intProperty(), doubleProperty(), colorProperty(),
+        lengthProperty(), lengthVectorProperty(), Property
 */
 QString QTextFormat::stringProperty(int propertyId) const
 {
@@ -996,7 +1000,8 @@ QColor QTextFormat::colorProperty(int propertyId) const
     property isn't of QVariant::Pen type, Qt::NoPen is
     returned instead.
 
-    \sa setProperty() boolProperty() intProperty() doubleProperty() stringProperty() lengthProperty() lengthVectorProperty() Property
+    \sa setProperty(), boolProperty(), intProperty(), doubleProperty(), stringProperty(),
+        lengthProperty(), lengthVectorProperty(), Property
 */
 QPen QTextFormat::penProperty(int propertyId) const
 {
@@ -1013,7 +1018,8 @@ QPen QTextFormat::penProperty(int propertyId) const
     property isn't of QVariant::Brush type, Qt::NoBrush is
     returned instead.
 
-    \sa setProperty() boolProperty() intProperty() doubleProperty() stringProperty() lengthProperty() lengthVectorProperty() Property
+    \sa setProperty(), boolProperty(), intProperty(), doubleProperty(), stringProperty(),
+        lengthProperty(), lengthVectorProperty(), Property
 */
 QBrush QTextFormat::brushProperty(int propertyId) const
 {
@@ -1028,7 +1034,8 @@ QBrush QTextFormat::brushProperty(int propertyId) const
 /*!
     Returns the value of the property given by \a propertyId.
 
-    \sa setProperty() boolProperty() intProperty() doubleProperty() stringProperty() colorProperty() lengthVectorProperty() Property
+    \sa setProperty(), boolProperty(), intProperty(), doubleProperty(), stringProperty(),
+        colorProperty(), lengthVectorProperty(), Property
 */
 QTextLength QTextFormat::lengthProperty(int propertyId) const
 {
@@ -1042,7 +1049,8 @@ QTextLength QTextFormat::lengthProperty(int propertyId) const
     property isn't of QTextFormat::LengthVector type, an empty length
     vector is returned instead.
 
-    \sa setProperty() boolProperty() intProperty() doubleProperty() stringProperty() colorProperty() lengthProperty() Property
+    \sa setProperty(), boolProperty(), intProperty(), doubleProperty(), stringProperty(),
+        colorProperty(), lengthProperty(), Property
 */
 QVector<QTextLength> QTextFormat::lengthVectorProperty(int propertyId) const
 {
@@ -1091,7 +1099,7 @@ void QTextFormat::setProperty(int propertyId, const QVariant &value)
 /*!
     Sets the value of the property given by \a propertyId to \a value.
 
-    \sa lengthVectorProperty() Property
+    \sa lengthVectorProperty(), Property
 */
 void QTextFormat::setProperty(int propertyId, const QVector<QTextLength> &value)
 {
@@ -1173,7 +1181,7 @@ void QTextFormat::setObjectIndex(int o)
     Returns true if the text format has a property with the given \a
     propertyId; otherwise returns false.
 
-    \sa properties() Property
+    \sa properties(), Property
 */
 bool QTextFormat::hasProperty(int propertyId) const
 {
@@ -1183,7 +1191,7 @@ bool QTextFormat::hasProperty(int propertyId) const
 /*
     Returns the property type for the given \a propertyId.
 
-    \sa hasProperty() allPropertyIds() Property
+    \sa hasProperty(), allPropertyIds(), Property
 */
 
 /*!
@@ -1267,7 +1275,7 @@ bool QTextFormat::operator==(const QTextFormat &rhs) const
     setAnchorHref() and setAnchorNames() functions are used to specify the
     information about the hyperlink's destination and the anchor's name.
 
-    \sa QTextFormat QTextBlockFormat QTextTableFormat QTextListFormat
+    \sa QTextFormat, QTextBlockFormat, QTextTableFormat, QTextListFormat
 */
 
 /*!
@@ -1638,7 +1646,7 @@ void QTextCharFormat::setUnderlineStyle(UnderlineStyle style)
     Sets the foreground brush to the specified \a brush. The foreground
     brush is mostly used to render text.
 
-    \sa foreground() clearForeground() setBackground()
+    \sa foreground(), clearForeground(), setBackground()
 */
 
 
@@ -1648,7 +1656,7 @@ void QTextCharFormat::setUnderlineStyle(UnderlineStyle style)
     Returns the brush used to render foreground details, such as text,
     frame outlines, and table borders.
 
-    \sa setForeground() clearForeground() background()
+    \sa setForeground(), clearForeground(), background()
 */
 
 /*!
@@ -1657,7 +1665,7 @@ void QTextCharFormat::setUnderlineStyle(UnderlineStyle style)
     Clears the brush used to paint the document's foreground. The default
     brush will be used.
 
-    \sa foreground() setForeground() clearBackground()
+    \sa foreground(), setForeground(), clearBackground()
 */
 
 
@@ -1683,7 +1691,7 @@ void QTextCharFormat::setUnderlineStyle(UnderlineStyle style)
     Returns true if the text is formatted as an anchor; otherwise
     returns false.
 
-    \sa setAnchor() setAnchorHref() setAnchorNames()
+    \sa setAnchor(), setAnchorHref(), setAnchorNames()
 */
 
 
@@ -2044,7 +2052,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Sets the paragraph's top \a margin.
 
-    \sa topMargin() setBottomMargin() setLeftMargin() setRightMargin()
+    \sa topMargin(), setBottomMargin(), setLeftMargin(), setRightMargin()
 */
 
 
@@ -2053,7 +2061,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Returns the paragraph's top margin.
 
-    \sa setTopMargin() bottomMargin()
+    \sa setTopMargin(), bottomMargin()
 */
 
 
@@ -2062,7 +2070,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Sets the paragraph's bottom \a margin.
 
-    \sa bottomMargin() setTopMargin() setLeftMargin() setRightMargin()
+    \sa bottomMargin(), setTopMargin(), setLeftMargin(), setRightMargin()
 */
 
 
@@ -2071,7 +2079,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Returns the paragraph's bottom margin.
 
-    \sa setBottomMargin() topMargin()
+    \sa setBottomMargin(), topMargin()
 */
 
 
@@ -2081,7 +2089,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
     Sets the paragraph's left \a margin. Indentation can be applied separately
     with setIndent().
 
-    \sa leftMargin() setRightMargin() setTopMargin() setBottomMargin()
+    \sa leftMargin(), setRightMargin(), setTopMargin(), setBottomMargin()
 */
 
 
@@ -2090,7 +2098,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Returns the paragraph's left margin.
 
-    \sa setLeftMargin() rightMargin() indent()
+    \sa setLeftMargin(), rightMargin(), indent()
 */
 
 
@@ -2099,7 +2107,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Sets the paragraph's right \a margin.
 
-    \sa rightMargin() setLeftMargin() setTopMargin() setBottomMargin()
+    \sa rightMargin(), setLeftMargin(), setTopMargin(), setBottomMargin()
 */
 
 
@@ -2108,7 +2116,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
 
     Returns the paragraph's right margin.
 
-    \sa setRightMargin() leftMargin()
+    \sa setRightMargin(), leftMargin()
 */
 
 
@@ -2119,7 +2127,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
     line of a paragraph to be indented differently to the other lines,
     enhancing the readability of the text.
 
-    \sa textIndent() setLeftMargin() setRightMargin() setTopMargin() setBottomMargin()
+    \sa textIndent(), setLeftMargin(), setRightMargin(), setTopMargin(), setBottomMargin()
 */
 
 
@@ -2140,7 +2148,7 @@ QList<QTextOption::Tab> QTextBlockFormat::tabPositions() const
     The \a indentation is an integer that is multiplied with the document-wide
     standard indent, resulting in the actual indent of the paragraph.
 
-    \sa indent() QTextDocument::indentWidth()
+    \sa indent(), QTextDocument::indentWidth()
 */
 
 
@@ -2325,7 +2333,7 @@ QTextListFormat::QTextListFormat(const QTextFormat &fmt)
 
     Sets the list format's \a style.
 
-    \sa style() Style
+    \sa style(), Style
 */
 
 /*!
@@ -2333,7 +2341,7 @@ QTextListFormat::QTextListFormat(const QTextFormat &fmt)
 
     Returns the list format's style.
 
-    \sa setStyle() Style
+    \sa setStyle(), Style
 */
 
 
@@ -2432,7 +2440,7 @@ QTextListFormat::QTextListFormat(const QTextFormat &fmt)
     The validity of a QTextFrameFormat object can be determined with the
     isValid() function.
 
-    \sa QTextFrame QTextBlockFormat
+    \sa QTextFrame, QTextBlockFormat
 */
 
 /*!
@@ -2444,7 +2452,7 @@ QTextListFormat::QTextListFormat(const QTextFormat &fmt)
     \value FloatLeft
     \value FloatRight
 
-    \sa position() CssFloat
+    \sa position(), CssFloat
 */
 
 /*!
@@ -2465,7 +2473,7 @@ QTextListFormat::QTextListFormat(const QTextFormat &fmt)
     \value BorderStyle_Inset
     \value BorderStyle_Outset
 
-    \sa borderStyle() FrameBorderStyle
+    \sa borderStyle(), FrameBorderStyle
 */
 
 /*!
@@ -2768,7 +2776,7 @@ qreal QTextFrameFormat::rightMargin() const
     with a vector containing new constraints. If no constraints are
     required, clearColumnWidthConstraints() can be used to remove them.
 
-    \sa QTextTable QTextTableCell QTextLength
+    \sa QTextTable, QTextTableCell, QTextLength
 */
 
 /*!
@@ -2825,7 +2833,7 @@ QTextTableFormat::QTextTableFormat(const QTextFormat &fmt)
 
     Clears the column width constraints for the table.
 
-    \sa columnWidthConstraints() setColumnWidthConstraints()
+    \sa columnWidthConstraints(), setColumnWidthConstraints()
 */
 
 /*!
@@ -2833,7 +2841,7 @@ QTextTableFormat::QTextTableFormat(const QTextFormat &fmt)
 
     Sets the column width \a constraints for the table.
 
-    \sa columnWidthConstraints() clearColumnWidthConstraints()
+    \sa columnWidthConstraints(), clearColumnWidthConstraints()
 */
 
 /*!
@@ -2913,7 +2921,7 @@ QTextTableFormat::QTextTableFormat(const QTextFormat &fmt)
     Sets the brush use to paint the document's background to the
     \a brush specified.
 
-    \sa background() clearBackground() setForeground()
+    \sa background(), clearBackground(), setForeground()
 */
 
 /*!
@@ -2921,7 +2929,7 @@ QTextTableFormat::QTextTableFormat(const QTextFormat &fmt)
 
     Returns the brush used to paint the document's background.
 
-    \sa setBackground() clearBackground() foreground()
+    \sa setBackground(), clearBackground(), foreground()
 */
 
 /*!
@@ -2930,7 +2938,7 @@ QTextTableFormat::QTextTableFormat(const QTextFormat &fmt)
     Clears the brush used to paint the document's background. The default
     brush will be used.
 
-    \sa background() setBackground() clearForeground()
+    \sa background(), setBackground(), clearForeground()
 */
 
 
@@ -3006,7 +3014,7 @@ QTextImageFormat::QTextImageFormat(const QTextFormat &fmt)
 
     Sets the \a width of the rectangle occupied by the image.
 
-    \sa width() setHeight()
+    \sa width(), setHeight()
 */
 
 
@@ -3015,7 +3023,7 @@ QTextImageFormat::QTextImageFormat(const QTextFormat &fmt)
 
     Returns the width of the rectangle occupied by the image.
 
-    \sa height() setWidth()
+    \sa height(), setWidth()
 */
 
 
@@ -3024,7 +3032,7 @@ QTextImageFormat::QTextImageFormat(const QTextFormat &fmt)
 
     Sets the \a height of the rectangle occupied by the image.
 
-    \sa height() setWidth()
+    \sa height(), setWidth()
 */
 
 
@@ -3033,7 +3041,7 @@ QTextImageFormat::QTextImageFormat(const QTextFormat &fmt)
 
     Returns the height of the rectangle occupied by the image.
 
-    \sa width() setHeight()
+    \sa width(), setHeight()
 */
 
 /*!
@@ -3262,7 +3270,7 @@ QTextTableCellFormat::QTextTableCellFormat(const QTextFormat &fmt)
     setRightPadding(), setTopPadding(), and setBottomPadding(). All the paddings
     can be set at once using setPadding().
 
-    \sa QTextFormat QTextBlockFormat QTextTableFormat QTextCharFormat
+    \sa QTextFormat, QTextBlockFormat, QTextTableFormat, QTextCharFormat
 */
 
 // ------------------------------------------------------
diff --git a/src/gui/text/qtextlist.cpp b/src/gui/text/qtextlist.cpp
index 82d744d..cce442c 100644
--- a/src/gui/text/qtextlist.cpp
+++ b/src/gui/text/qtextlist.cpp
@@ -139,7 +139,7 @@ int QTextList::count() const
 /*!
     Returns the \a{i}-th text block in the list.
 
-    \sa count() itemText()
+    \sa count(), itemText()
 */
 QTextBlock QTextList::item(int i) const
 {
diff --git a/src/gui/text/qtextobject.cpp b/src/gui/text/qtextobject.cpp
index d4e9c7d..af98642 100644
--- a/src/gui/text/qtextobject.cpp
+++ b/src/gui/text/qtextobject.cpp
@@ -115,7 +115,7 @@ QTextObject::~QTextObject()
 /*!
     Returns the text object's format.
 
-    \sa setFormat() document()
+    \sa setFormat(), document()
 */
 QTextFormat QTextObject::format() const
 {
@@ -201,7 +201,7 @@ QTextDocumentPrivate *QTextObject::docHandle() const
     for example, the top-level items in a multi-level list will be separated
     by the items in lower levels of the list.
 
-    \sa QTextBlock QTextDocument
+    \sa QTextBlock, QTextDocument
 */
 
 void QTextBlockGroupPrivate::markBlocksDirty()
@@ -343,7 +343,7 @@ QTextFrameLayoutData::~QTextFrameLayoutData()
     QTextFrame::iterator class: this provides read-only access to its
     internal list of text blocks and child frames.
 
-    \sa QTextCursor QTextDocument
+    \sa QTextCursor, QTextDocument
 */
 
 /*!
@@ -357,7 +357,7 @@ QTextFrameLayoutData::~QTextFrameLayoutData()
 
     Returns the parent frame of the current frame.
 
-    \sa currentFrame() QTextFrame::parentFrame()
+    \sa currentFrame(), QTextFrame::parentFrame()
 */
 
 /*!
@@ -447,7 +447,7 @@ QList<QTextFrame *> QTextFrame::childFrames() const
     Returns the frame's parent frame. If the frame is the root frame of a
     document, this will return 0.
 
-    \sa childFrames() QTextDocument::rootFrame()
+    \sa childFrames(), QTextDocument::rootFrame()
 */
 QTextFrame *QTextFrame::parentFrame() const
 {
@@ -459,7 +459,7 @@ QTextFrame *QTextFrame::parentFrame() const
 /*!
     Returns the first cursor position inside the frame.
 
-    \sa lastCursorPosition() firstPosition() lastPosition()
+    \sa lastCursorPosition(), firstPosition(), lastPosition()
 */
 QTextCursor QTextFrame::firstCursorPosition() const
 {
@@ -470,7 +470,7 @@ QTextCursor QTextFrame::firstCursorPosition() const
 /*!
     Returns the last cursor position inside the frame.
 
-    \sa firstCursorPosition() firstPosition() lastPosition()
+    \sa firstCursorPosition(), firstPosition(), lastPosition()
 */
 QTextCursor QTextFrame::lastCursorPosition() const
 {
@@ -481,7 +481,7 @@ QTextCursor QTextFrame::lastCursorPosition() const
 /*!
     Returns the first document position inside the frame.
 
-    \sa lastPosition() firstCursorPosition() lastCursorPosition()
+    \sa lastPosition(), firstCursorPosition(), lastCursorPosition()
 */
 int QTextFrame::firstPosition() const
 {
@@ -494,7 +494,7 @@ int QTextFrame::firstPosition() const
 /*!
     Returns the last document position inside the frame.
 
-    \sa firstPosition() firstCursorPosition() lastCursorPosition()
+    \sa firstPosition(), firstCursorPosition(), lastCursorPosition()
 */
 int QTextFrame::lastPosition() const
 {
@@ -718,7 +718,7 @@ QTextBlock QTextFrame::iterator::currentBlock() const
 /*!
     Moves the iterator to the next frame or block.
 
-    \sa currentBlock() currentFrame()
+    \sa currentBlock(), currentFrame()
 */
 QTextFrame::iterator &QTextFrame::iterator::operator++()
 {
@@ -756,7 +756,7 @@ QTextFrame::iterator &QTextFrame::iterator::operator++()
 /*!
     Moves the iterator to the previous frame or block.
 
-    \sa currentBlock() currentFrame()
+    \sa currentBlock(), currentFrame()
 */
 QTextFrame::iterator &QTextFrame::iterator::operator--()
 {
@@ -864,7 +864,7 @@ QTextBlockUserData::~QTextBlockUserData()
 
     \img qtextblock-sequence.png
 
-    \sa QTextBlockFormat QTextCharFormat QTextFragment
+    \sa QTextBlockFormat, QTextCharFormat, QTextFragment
  */
 
 /*!
@@ -1027,7 +1027,7 @@ int QTextBlock::position() const
     \note The length returned includes all formatting characters,
     for example, newline.
 
-    \sa text() charFormat() blockFormat()
+    \sa text(), charFormat(), blockFormat()
  */
 int QTextBlock::length() const
 {
@@ -1195,7 +1195,7 @@ Qt::LayoutDirection QTextBlock::textDirection() const
 /*!
     Returns the block's contents as plain text.
 
-    \sa length() charFormat() blockFormat()
+    \sa length(), charFormat(), blockFormat()
  */
 QString QTextBlock::text() const
 {
@@ -1468,7 +1468,7 @@ QTextBlock::iterator QTextBlock::begin() const
     Returns a text block iterator pointing to the end of the text
     block.
 
-    \sa begin() next() previous()
+    \sa begin(), next(), previous()
 */
 QTextBlock::iterator QTextBlock::end() const
 {
@@ -1489,7 +1489,7 @@ QTextBlock::iterator QTextBlock::end() const
 
     Note that the next block may be in a different frame or table to this block.
 
-    \sa previous() begin() end()
+    \sa previous(), begin(), end()
 */
 QTextBlock QTextBlock::next() const
 {
@@ -1505,7 +1505,7 @@ QTextBlock QTextBlock::next() const
 
     Note that the next block may be in a different frame or table to this block.
 
-    \sa next() begin() end()
+    \sa next(), begin(), end()
 */
 QTextBlock QTextBlock::previous() const
 {
diff --git a/src/gui/text/qtexttable.cpp b/src/gui/text/qtexttable.cpp
index a986618..5589ffe 100644
--- a/src/gui/text/qtexttable.cpp
+++ b/src/gui/text/qtexttable.cpp
@@ -76,7 +76,7 @@ QT_BEGIN_NAMESPACE
     contents. The firstCursorPosition() and lastCursorPosition() functions
     are used to obtain the extent of the cell in the document.
 
-    \sa QTextTable QTextTableFormat
+    \sa QTextTable, QTextTableFormat
 */
 
 /*!
@@ -583,7 +583,7 @@ QTextTable::~QTextTable()
 
     Returns the table cell at the given \a row and \a column in the table.
 
-    \sa columns() rows()
+    \sa columns(), rows()
 */
 QTextTableCell QTextTable::cellAt(int row, int col) const
 {
@@ -639,7 +639,7 @@ QTextTableCell QTextTable::cellAt(const QTextCursor &c) const
 
     Resizes the table to contain the required number of \a rows and \a columns.
 
-    \sa insertRows() insertColumns() removeRows() removeColumns()
+    \sa insertRows(), insertColumns(), removeRows(), removeColumns()
 */
 void QTextTable::resize(int rows, int cols)
 {
@@ -673,7 +673,7 @@ void QTextTable::resize(int rows, int cols)
 
     Inserts a number of \a rows before the row with the specified \a index.
 
-    \sa resize() insertColumns() removeRows() removeColumns() appendRows() appendColumns()
+    \sa resize(), insertColumns(), removeRows(), removeColumns(), appendRows(), appendColumns()
 */
 void QTextTable::insertRows(int pos, int num)
 {
@@ -735,7 +735,7 @@ void QTextTable::insertRows(int pos, int num)
 
     Inserts a number of \a columns before the column with the specified \a index.
 
-    \sa insertRows() resize() removeRows() removeColumns() appendRows() appendColumns()
+    \sa insertRows(), resize(), removeRows(), removeColumns(), appendRows(), appendColumns()
 */
 void QTextTable::insertColumns(int pos, int num)
 {
@@ -816,7 +816,7 @@ void QTextTable::insertColumns(int pos, int num)
     \since 4.5
     Appends \a count rows at the bottom of the table.
 
-    \sa insertColumns() insertRows() resize() removeRows() removeColumns() appendColumns()
+    \sa insertColumns(), insertRows(), resize(), removeRows(), removeColumns(), appendColumns()
 */
 void QTextTable::appendRows(int count)
 {
@@ -827,7 +827,7 @@ void QTextTable::appendRows(int count)
     \since 4.5
     Appends \a count columns at the right side of the table.
 
-    \sa insertColumns() insertRows() resize() removeRows() removeColumns() appendRows()
+    \sa insertColumns(), insertRows(), resize(), removeRows(), removeColumns(), appendRows()
 */
 void QTextTable::appendColumns(int count)
 {
@@ -839,7 +839,7 @@ void QTextTable::appendColumns(int count)
 
     Removes a number of \a rows starting with the row at the specified \a index.
 
-    \sa insertRows(), insertColumns(), resize(), removeColumns() appendRows() appendColumns()
+    \sa insertRows(), insertColumns(), resize(), removeColumns(), appendRows(), appendColumns()
 */
 void QTextTable::removeRows(int pos, int num)
 {
@@ -901,7 +901,7 @@ void QTextTable::removeRows(int pos, int num)
     Removes a number of \a columns starting with the column at the specified
     \a index.
 
-    \sa insertRows() insertColumns() removeRows() resize() appendRows() appendColumns()
+    \sa insertRows(), insertColumns(), removeRows(), resize(), appendRows(), appendColumns()
 */
 void QTextTable::removeColumns(int pos, int num)
 {
diff --git a/src/gui/util/qdesktopservices.cpp b/src/gui/util/qdesktopservices.cpp
index 5e83e7c..35494d2 100644
--- a/src/gui/util/qdesktopservices.cpp
+++ b/src/gui/util/qdesktopservices.cpp
@@ -269,7 +269,7 @@ void QDesktopServices::unsetUrlHandler(const QString &scheme)
     \value CacheLocation Returns a directory location where user-specific
            non-essential (cached) data should be written.
 
-    \sa storageLocation() displayName()
+    \sa storageLocation(), displayName()
 */
 
 /*!
diff --git a/src/gui/util/qvalidator.cpp b/src/gui/util/qvalidator.cpp
index 84a5b4c..f0d795b 100644
--- a/src/gui/util/qvalidator.cpp
+++ b/src/gui/util/qvalidator.cpp
@@ -248,7 +248,7 @@ QLocale QValidator::locale() const
     locale set with QLocale::setDefault(). If a default locale has not
     been set, it is the operating system's locale.
 
-    \sa locale() QLocale::setDefault()
+    \sa locale(), QLocale::setDefault()
 */
 void QValidator::setLocale(const QLocale &locale)
 {
diff --git a/src/network/socket/qabstractsocket.cpp b/src/network/socket/qabstractsocket.cpp
index 9a974c1..7abcb24 100644
--- a/src/network/socket/qabstractsocket.cpp
+++ b/src/network/socket/qabstractsocket.cpp
@@ -2046,7 +2046,7 @@ bool QAbstractSocket::waitForConnected(int msecs)
     there is new data available for reading; otherwise it returns false
     (if an error occurred or the operation timed out).
 
-    \sa waitForBytesWritten() 
+    \sa waitForBytesWritten()
 */
 bool QAbstractSocket::waitForReadyRead(int msecs)
 {
diff --git a/src/network/ssl/qsslconfiguration.cpp b/src/network/ssl/qsslconfiguration.cpp
index bdd10e7..9a8a782 100644
--- a/src/network/ssl/qsslconfiguration.cpp
+++ b/src/network/ssl/qsslconfiguration.cpp
@@ -104,7 +104,7 @@ const QSsl::SslOptions QSslConfigurationPrivate::defaultSslOptions = QSsl::SslOp
 
     \snippet code/src_network_ssl_qsslconfiguration.cpp 0
 
-    \sa QSsl::SslProtocol, QSslCertificate, QSslCipher, QSslKey
+    \sa QSsl::SslProtocol, QSslCertificate, QSslCipher, QSslKey,
         QSslSocket, QNetworkAccessManager,
         QSslSocket::sslConfiguration(), QSslSocket::setSslConfiguration()
 */
diff --git a/src/plugins/accessible/widgets/complexwidgets.cpp b/src/plugins/accessible/widgets/complexwidgets.cpp
index 8da6579..2a738fc 100644
--- a/src/plugins/accessible/widgets/complexwidgets.cpp
+++ b/src/plugins/accessible/widgets/complexwidgets.cpp
@@ -211,7 +211,7 @@ QString QAccessibleTabBar::text(QAccessible::Text t) const
     to and including the item with index \a child. Returns true if a
     selection was made or extended; otherwise returns false.
 
-    \sa selection() clearSelection()
+    \sa selection(), clearSelection()
 */
 bool QAccessibleTabBar::setSelected(int child, bool on, bool extend)
 {
@@ -228,7 +228,7 @@ bool QAccessibleTabBar::setSelected(int child, bool on, bool extend)
     Returns a (possibly empty) list of indexes of the items selected
     in the list box.
 
-    \sa setSelected() clearSelection()
+    \sa setSelected(), clearSelection()
 */
 QVector<int> QAccessibleTabBar::selection() const
 {
diff --git a/src/printsupport/kernel/qprinter.cpp b/src/printsupport/kernel/qprinter.cpp
index d7a2a30..2fd6f60 100644
--- a/src/printsupport/kernel/qprinter.cpp
+++ b/src/printsupport/kernel/qprinter.cpp
@@ -573,7 +573,7 @@ void QPrinterPrivate::init(QPrinter::PrinterMode mode)
     Note that changing the engines will reset the printer state and
     all its properties.
 
-    \sa printEngine() paintEngine() setOutputFormat()
+    \sa printEngine(), paintEngine(), setOutputFormat()
 
     \since 4.1
 */
@@ -812,7 +812,7 @@ QString QPrinter::outputFileName() const
     Mac OS X can generate PDF's from its print engine, set the output format
     back to NativeFormat.
 
-    \sa outputFileName() setOutputToFile() setOutputFormat()
+    \sa outputFileName(), setOutputToFile(), setOutputFormat()
 */
 
 void QPrinter::setOutputFileName(const QString &fileName)
@@ -971,7 +971,7 @@ void QPrinter::setOrientation(Orientation orientation)
     \since 4.4
     Returns the printer paper size. The default value is driver-dependent.
 
-    \sa setPaperSize() pageRect() paperRect()
+    \sa setPaperSize(), pageRect(), paperRect()
 */
 
 QPrinter::PaperSize QPrinter::paperSize() const
@@ -992,7 +992,7 @@ QPrinter::PaperSize QPrinter::paperSize() const
     This function is useful mostly for setting a default value that
     the user can override in the print dialog.
 
-    \sa paperSize() PaperSize setFullPage() setResolution() pageRect() paperRect()
+    \sa paperSize(), PaperSize, setFullPage(), setResolution(), pageRect(), paperRect()
 */
 void QPrinter::setPaperSize(PaperSize newPaperSize)
 {
@@ -1351,7 +1351,7 @@ void QPrinter::setFullPage(bool fp)
 
   See setFullPage() for details and caveats.
 
-  \sa setFullPage() PaperSize
+  \sa setFullPage(), PaperSize
 */
 
 bool QPrinter::fullPage() const
@@ -1371,7 +1371,7 @@ bool QPrinter::fullPage() const
   This function must be called before QPainter::begin() to have an effect on
   all platforms.
 
-  \sa resolution() setPaperSize()
+  \sa resolution(), setPaperSize()
 */
 
 void QPrinter::setResolution(int dpi)
diff --git a/src/sql/kernel/qsqldatabase.cpp b/src/sql/kernel/qsqldatabase.cpp
index 635ba8b..7e820d9 100644
--- a/src/sql/kernel/qsqldatabase.cpp
+++ b/src/sql/kernel/qsqldatabase.cpp
@@ -1480,7 +1480,7 @@ QString QSqlDatabase::connectionName() const
     doesn't affect any currently active queries.
 
     \sa QSql::NumericalPrecisionPolicy, numericalPrecisionPolicy(),
-    QSqlQuery::setNumericalPrecisionPolicy(), QSqlQuery::numericalPrecisionPolicy()
+        QSqlQuery::setNumericalPrecisionPolicy(), QSqlQuery::numericalPrecisionPolicy()
 */
 void QSqlDatabase::setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy)
 {
@@ -1494,8 +1494,8 @@ void QSqlDatabase::setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy pr
 
     Returns the current default precision policy for the database connection.
 
-    \sa QSql::NumericalPrecisionPolicy, setNumericalPrecisionPolicy(), 
-    QSqlQuery::numericalPrecisionPolicy(), QSqlQuery::setNumericalPrecisionPolicy()
+    \sa QSql::NumericalPrecisionPolicy, setNumericalPrecisionPolicy(),
+        QSqlQuery::numericalPrecisionPolicy(), QSqlQuery::setNumericalPrecisionPolicy()
 */
 QSql::NumericalPrecisionPolicy QSqlDatabase::numericalPrecisionPolicy() const
 {
diff --git a/src/sql/kernel/qsqldriver.cpp b/src/sql/kernel/qsqldriver.cpp
index 284ef84..43ac406 100644
--- a/src/sql/kernel/qsqldriver.cpp
+++ b/src/sql/kernel/qsqldriver.cpp
@@ -768,7 +768,7 @@ QStringList QSqlDriver::subscribedToNotifications() const
     Note: Setting the default precision policy to \a precisionPolicy
     doesn't affect any currently active queries.
 
-    \sa QSql::NumericalPrecisionPolicy, numericalPrecisionPolicy(), 
+    \sa QSql::NumericalPrecisionPolicy, numericalPrecisionPolicy(),
     QSqlQuery::setNumericalPrecisionPolicy(), QSqlQuery::numericalPrecisionPolicy()
 */
 void QSqlDriver::setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy precisionPolicy)
@@ -781,7 +781,7 @@ void QSqlDriver::setNumericalPrecisionPolicy(QSql::NumericalPrecisionPolicy prec
 
     Returns the current default precision policy for the database connection.
 
-    \sa QSql::NumericalPrecisionPolicy, setNumericalPrecisionPolicy(), 
+    \sa QSql::NumericalPrecisionPolicy, setNumericalPrecisionPolicy(),
     QSqlQuery::numericalPrecisionPolicy(), QSqlQuery::setNumericalPrecisionPolicy()
 */
 QSql::NumericalPrecisionPolicy QSqlDriver::numericalPrecisionPolicy() const
diff --git a/src/tools/qdoc/doc/qdoc-manual.qdoc b/src/tools/qdoc/doc/qdoc-manual.qdoc
index 6983f63..4ead203 100644
--- a/src/tools/qdoc/doc/qdoc-manual.qdoc
+++ b/src/tools/qdoc/doc/qdoc-manual.qdoc
@@ -6378,7 +6378,7 @@
         should be set at application startup, before any non-GUI
         threads are created.
 
-        \sa system() c()
+        \sa system(), c()
     * /
     void QLocale::setDefault(const QLocale &locale)
     {
diff --git a/src/widgets/dialogs/qdialog.cpp b/src/widgets/dialogs/qdialog.cpp
index fb03d3b..2e60be7 100644
--- a/src/widgets/dialogs/qdialog.cpp
+++ b/src/widgets/dialogs/qdialog.cpp
@@ -579,7 +579,7 @@ void QDialog::done(int r)
 /*!
   Hides the modal dialog and sets the result code to \c Accepted.
 
-  \sa reject() done()
+  \sa reject(), done()
 */
 
 void QDialog::accept()
@@ -590,7 +590,7 @@ void QDialog::accept()
 /*!
   Hides the modal dialog and sets the result code to \c Rejected.
 
-  \sa accept() done()
+  \sa accept(), done()
 */
 
 void QDialog::reject()
diff --git a/src/widgets/dialogs/qsidebar.cpp b/src/widgets/dialogs/qsidebar.cpp
index 00f60f7..84a62a8 100644
--- a/src/widgets/dialogs/qsidebar.cpp
+++ b/src/widgets/dialogs/qsidebar.cpp
@@ -355,7 +355,7 @@ void QUrlModel::layoutChanged()
 /*!
     The following path changed data update our copy of that data
 
-    \sa layoutChanged() dataChanged()
+    \sa layoutChanged(), dataChanged()
 */
 void QUrlModel::changed(const QString &path)
 {
diff --git a/src/widgets/graphicsview/qgraphicsitem.cpp b/src/widgets/graphicsview/qgraphicsitem.cpp
index 1ce914b..56ea4f9 100644
--- a/src/widgets/graphicsview/qgraphicsitem.cpp
+++ b/src/widgets/graphicsview/qgraphicsitem.cpp
@@ -2057,7 +2057,7 @@ void QGraphicsItem::setPanelModality(PanelModality panelModality)
 
     This function always returns false for items not in a scene.
 
-    \sa panelModality() setPanelModality() PanelModality
+    \sa panelModality(), setPanelModality(), PanelModality
 */
 bool QGraphicsItem::isBlockedByModalPanel(QGraphicsItem **blockingPanel) const
 {
diff --git a/src/widgets/graphicsview/qgraphicswidget.cpp b/src/widgets/graphicsview/qgraphicswidget.cpp
index 267d701..cf55827 100644
--- a/src/widgets/graphicsview/qgraphicswidget.cpp
+++ b/src/widgets/graphicsview/qgraphicswidget.cpp
@@ -1890,7 +1890,7 @@ QGraphicsWidget *QGraphicsWidget::focusWidget() const
     key sequence, so are much easier to use than this low-level
     function.
 
-    \sa releaseShortcut() setShortcutEnabled() QWidget::grabShortcut()
+    \sa releaseShortcut(), setShortcutEnabled(), QWidget::grabShortcut()
 */
 int QGraphicsWidget::grabShortcut(const QKeySequence &sequence, Qt::ShortcutContext context)
 {
@@ -1916,7 +1916,7 @@ int QGraphicsWidget::grabShortcut(const QKeySequence &sequence, Qt::ShortcutCont
     this low-level function. Note also that this is an expensive
     operation.
 
-    \sa grabShortcut() setShortcutEnabled() , QWidget::releaseShortcut()
+    \sa grabShortcut(), setShortcutEnabled(), QWidget::releaseShortcut()
 */
 void QGraphicsWidget::releaseShortcut(int id)
 {
@@ -1937,7 +1937,7 @@ void QGraphicsWidget::releaseShortcut(int id)
     to use QAction or QShortcut to handle shortcuts, since they are
     easier to use than this low-level function.
 
-    \sa grabShortcut() releaseShortcut(), QWidget::setShortcutEnabled()
+    \sa grabShortcut(), releaseShortcut(), QWidget::setShortcutEnabled()
 */
 void QGraphicsWidget::setShortcutEnabled(int id, bool enabled)
 {
@@ -1952,7 +1952,7 @@ void QGraphicsWidget::setShortcutEnabled(int id, bool enabled)
     If \a enabled is true, auto repeat of the shortcut with the
     given \a id is enabled; otherwise it is disabled.
 
-    \sa grabShortcut() releaseShortcut() QWidget::setShortcutAutoRepeat()
+    \sa grabShortcut(), releaseShortcut(), QWidget::setShortcutAutoRepeat()
 */
 void QGraphicsWidget::setShortcutAutoRepeat(int id, bool enabled)
 {
diff --git a/src/widgets/itemviews/qabstractitemdelegate.cpp b/src/widgets/itemviews/qabstractitemdelegate.cpp
index 890eba3..21c67cb 100644
--- a/src/widgets/itemviews/qabstractitemdelegate.cpp
+++ b/src/widgets/itemviews/qabstractitemdelegate.cpp
@@ -232,7 +232,7 @@ QAbstractItemDelegate::~QAbstractItemDelegate()
     editor paints its own background (e.g., with
     \l{QWidget::}{setAutoFillBackground()}).
 
-    \sa destroyEditor() setModelData() setEditorData()
+    \sa destroyEditor(), setModelData(), setEditorData()
 */
 QWidget *QAbstractItemDelegate::createEditor(QWidget *,
                                              const QStyleOptionViewItem &,
diff --git a/src/widgets/itemviews/qabstractitemview.cpp b/src/widgets/itemviews/qabstractitemview.cpp
index 777767e..a53f3f1 100644
--- a/src/widgets/itemviews/qabstractitemview.cpp
+++ b/src/widgets/itemviews/qabstractitemview.cpp
@@ -1009,7 +1009,7 @@ QAbstractItemDelegate *QAbstractItemView::itemDelegate(const QModelIndex &index)
     and, in many-item selections, whether the selection must be a
     continuous range of items.
 
-    \sa SelectionMode SelectionBehavior
+    \sa SelectionMode, SelectionBehavior
 */
 void QAbstractItemView::setSelectionMode(SelectionMode mode)
 {
@@ -1030,7 +1030,7 @@ QAbstractItemView::SelectionMode QAbstractItemView::selectionMode() const
     This property holds whether selections are done
     in terms of single items, rows or columns.
 
-    \sa SelectionMode SelectionBehavior
+    \sa SelectionMode, SelectionBehavior
 */
 
 void QAbstractItemView::setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior)
@@ -1383,7 +1383,7 @@ bool QAbstractItemView::tabKeyNavigation() const
     \property QAbstractItemView::showDropIndicator
     \brief whether the drop indicator is shown when dragging items and dropping.
 
-    \sa dragEnabled DragDropMode dragDropOverwriteMode acceptDrops
+    \sa dragEnabled, DragDropMode, dragDropOverwriteMode, acceptDrops
 */
 
 void QAbstractItemView::setDropIndicatorShown(bool enable)
@@ -1402,7 +1402,7 @@ bool QAbstractItemView::showDropIndicator() const
     \property QAbstractItemView::dragEnabled
     \brief whether the view supports dragging of its own items
 
-    \sa showDropIndicator DragDropMode dragDropOverwriteMode acceptDrops
+    \sa showDropIndicator, DragDropMode, dragDropOverwriteMode, acceptDrops
 */
 
 void QAbstractItemView::setDragEnabled(bool enable)
@@ -1434,7 +1434,7 @@ bool QAbstractItemView::dragEnabled() const
 
     Note that the model used needs to provide support for drag and drop operations.
 
-    \sa setDragDropMode() {Using drag and drop with item views}
+    \sa setDragDropMode(), {Using drag and drop with item views}
 */
 
 /*!
@@ -1442,7 +1442,7 @@ bool QAbstractItemView::dragEnabled() const
     \brief the drag and drop event the view will act upon
 
     \since 4.2
-    \sa showDropIndicator dragDropOverwriteMode
+    \sa showDropIndicator, dragDropOverwriteMode
 */
 void QAbstractItemView::setDragDropMode(DragDropMode behavior)
 {
@@ -1483,7 +1483,7 @@ QAbstractItemView::DragDropMode QAbstractItemView::dragDropMode() const
     actions support CopyAction.
 
     \since 4.6
-    \sa showDropIndicator dragDropOverwriteMode
+    \sa showDropIndicator, dragDropOverwriteMode
 */
 void QAbstractItemView::setDefaultDropAction(Qt::DropAction dropAction)
 {
@@ -1905,7 +1905,7 @@ void QAbstractItemView::mouseDoubleClickEvent(QMouseEvent *event)
     the widget. If the drag is over a valid dropping place (e.g. over an item that
     accepts drops), the event is accepted; otherwise it is ignored.
 
-    \sa dropEvent() startDrag()
+    \sa dropEvent(), startDrag()
 */
 void QAbstractItemView::dragEnterEvent(QDragEnterEvent *event)
 {
@@ -1927,7 +1927,7 @@ void QAbstractItemView::dragEnterEvent(QDragEnterEvent *event)
     the user drags a selection to view's right or bottom edge. In this case, the
     event will be accepted; otherwise it will be ignored.
 
-    \sa dropEvent() startDrag()
+    \sa dropEvent(), startDrag()
 */
 void QAbstractItemView::dragMoveEvent(QDragMoveEvent *event)
 {
@@ -2863,7 +2863,7 @@ void QAbstractItemView::editorDestroyed(QObject *editor)
     Note that if the view has a horizontal header, the item steps
     will be ignored and the header section size will be used instead.
 
-    \sa horizontalStepsPerItem() setVerticalStepsPerItem()
+    \sa horizontalStepsPerItem(), setVerticalStepsPerItem()
 */
 void QAbstractItemView::setHorizontalStepsPerItem(int steps)
 {
@@ -2875,7 +2875,7 @@ void QAbstractItemView::setHorizontalStepsPerItem(int steps)
     \obsolete
     Returns the horizontal scroll bar's steps per item.
 
-    \sa setHorizontalStepsPerItem() verticalStepsPerItem()
+    \sa setHorizontalStepsPerItem(), verticalStepsPerItem()
 */
 int QAbstractItemView::horizontalStepsPerItem() const
 {
@@ -2892,7 +2892,7 @@ int QAbstractItemView::horizontalStepsPerItem() const
     Note that if the view has a vertical header, the item steps
     will be ignored and the header section size will be used instead.
 
-    \sa verticalStepsPerItem() setHorizontalStepsPerItem()
+    \sa verticalStepsPerItem(), setHorizontalStepsPerItem()
 */
 void QAbstractItemView::setVerticalStepsPerItem(int steps)
 {
@@ -2904,7 +2904,7 @@ void QAbstractItemView::setVerticalStepsPerItem(int steps)
     \obsolete
     Returns the vertical scroll bar's steps per item.
 
-    \sa setVerticalStepsPerItem() horizontalStepsPerItem()
+    \sa setVerticalStepsPerItem(), horizontalStepsPerItem()
 */
 int QAbstractItemView::verticalStepsPerItem() const
 {
diff --git a/src/widgets/itemviews/qcolumnview.cpp b/src/widgets/itemviews/qcolumnview.cpp
index 6758aeb..83cea4f 100644
--- a/src/widgets/itemviews/qcolumnview.cpp
+++ b/src/widgets/itemviews/qcolumnview.cpp
@@ -663,7 +663,7 @@ void QColumnViewPrivate::_q_clicked(const QModelIndex &index)
 
     Return the new view
 
-    \sa createColumn() setPreviewWidget()
+    \sa createColumn(), setPreviewWidget()
     \sa doLayout()
 */
 QAbstractItemView *QColumnViewPrivate::createColumn(const QModelIndex &index, bool show)
diff --git a/src/widgets/itemviews/qdirmodel.cpp b/src/widgets/itemviews/qdirmodel.cpp
index 6ecf3c7..db2f437 100644
--- a/src/widgets/itemviews/qdirmodel.cpp
+++ b/src/widgets/itemviews/qdirmodel.cpp
@@ -734,7 +734,8 @@ void QDirModel::setSorting(QDir::SortFlags sort)
 /*!
   Returns the sorting method used for the directory model.
 
-  \sa QDir::SortFlags */
+  \sa QDir::SortFlags
+*/
 
 QDir::SortFlags QDirModel::sorting() const
 {
diff --git a/src/widgets/itemviews/qheaderview.cpp b/src/widgets/itemviews/qheaderview.cpp
index 4ab984b..0a7f9de 100644
--- a/src/widgets/itemviews/qheaderview.cpp
+++ b/src/widgets/itemviews/qheaderview.cpp
@@ -185,7 +185,7 @@ QDataStream &operator>>(QDataStream &in, QHeaderViewPrivate::SectionItem &sectio
     The following values are obsolete:
     \value Custom Use Fixed instead.
 
-    \sa setResizeMode() setSectionResizeMode() stretchLastSection minimumSectionSize
+    \sa setResizeMode(), setSectionResizeMode(), stretchLastSection, minimumSectionSize
 */
 
 /*!
@@ -1019,7 +1019,7 @@ void QHeaderView::setSectionHidden(int logicalIndex, bool hide)
 /*!
     Returns the number of sections in the header.
 
-    \sa  sectionCountChanged(), length()
+    \sa sectionCountChanged(), length()
 */
 
 int QHeaderView::count() const
@@ -1334,7 +1334,7 @@ bool QHeaderView::isSortIndicatorShown() const
     and the model will return to its natural, unsorted order. Note that not
     all models support this and may even crash in this case.
 
-    \sa sortIndicatorSection() sortIndicatorOrder()
+    \sa sortIndicatorSection(), sortIndicatorOrder()
 */
 
 void QHeaderView::setSortIndicator(int logicalIndex, Qt::SortOrder order)
@@ -1370,7 +1370,7 @@ void QHeaderView::setSortIndicator(int logicalIndex, Qt::SortOrder order)
     Returns the logical index of the section that has a sort indicator.
     By default this is section 0.
 
-    \sa setSortIndicator() sortIndicatorOrder() setSortIndicatorShown()
+    \sa setSortIndicator(), sortIndicatorOrder(), setSortIndicatorShown()
 */
 
 int QHeaderView::sortIndicatorSection() const
@@ -1383,7 +1383,7 @@ int QHeaderView::sortIndicatorSection() const
     Returns the order for the sort indicator. If no section has a sort
     indicator the return value of this function is undefined.
 
-    \sa setSortIndicator() sortIndicatorSection()
+    \sa setSortIndicator(), sortIndicatorSection()
 */
 
 Qt::SortOrder QHeaderView::sortIndicatorOrder() const
@@ -1458,7 +1458,7 @@ void QHeaderView::setCascadingSectionResizes(bool enable)
     This property only affects sections that have \l Interactive or \l Fixed
     as their resize mode.
 
-    \sa setSectionResizeMode() minimumSectionSize
+    \sa setSectionResizeMode(), minimumSectionSize
 */
 int QHeaderView::defaultSectionSize() const
 {
@@ -1484,7 +1484,7 @@ void QHeaderView::setDefaultSectionSize(int size)
 
     This property is honored by all \l{ResizeMode}{resize modes}.
 
-    \sa setSectionResizeMode() defaultSectionSize
+    \sa setSectionResizeMode(), defaultSectionSize
 */
 int QHeaderView::minimumSectionSize() const
 {
diff --git a/src/widgets/itemviews/qlistwidget.cpp b/src/widgets/itemviews/qlistwidget.cpp
index 4a17b65..23b7989 100644
--- a/src/widgets/itemviews/qlistwidget.cpp
+++ b/src/widgets/itemviews/qlistwidget.cpp
@@ -853,7 +853,7 @@ QDataStream &operator>>(QDataStream &in, QListWidgetItem &item)
 
     Returns the list item's tooltip.
 
-    \sa setToolTip() statusTip() whatsThis()
+    \sa setToolTip(), statusTip(), whatsThis()
 */
 
 /*!
@@ -861,7 +861,7 @@ QDataStream &operator>>(QDataStream &in, QListWidgetItem &item)
 
     Returns the list item's "What's This?" help text.
 
-    \sa setWhatsThis() statusTip() toolTip()
+    \sa setWhatsThis(), statusTip(), toolTip()
 */
 
 /*!
@@ -891,7 +891,7 @@ QDataStream &operator>>(QDataStream &in, QListWidgetItem &item)
 
     Returns the brush used to display the list item's background.
 
-    \sa setBackground() foreground()
+    \sa setBackground(), foreground()
 */
 
 /*!
@@ -909,7 +909,7 @@ QDataStream &operator>>(QDataStream &in, QListWidgetItem &item)
 
     Returns the brush used to display the list item's foreground (e.g. text).
 
-    \sa setForeground() background()
+    \sa setForeground(), background()
 */
 
 /*!
@@ -1019,7 +1019,7 @@ void QListWidgetItem::setFlags(Qt::ItemFlags aflags) {
 
     Sets the background brush of the list item to the given \a brush.
 
-    \sa background() setForeground()
+    \sa background(), setForeground()
 */
 
 /*!
@@ -1035,7 +1035,7 @@ void QListWidgetItem::setFlags(Qt::ItemFlags aflags) {
 
     Sets the foreground brush of the list item to the given \a brush.
 
-    \sa foreground() setBackground()
+    \sa foreground(), setBackground()
 */
 
 /*!
diff --git a/src/widgets/itemviews/qproxymodel.cpp b/src/widgets/itemviews/qproxymodel.cpp
index c004ccb..4792124 100644
--- a/src/widgets/itemviews/qproxymodel.cpp
+++ b/src/widgets/itemviews/qproxymodel.cpp
@@ -74,7 +74,7 @@ QT_BEGIN_NAMESPACE
     representation, proxy models must create their own model indexes instead of
     supplying model indexes from their underlying models.
 
-    \sa \link model-view-programming.html Model/View Programming\endlink QAbstractItemModel
+    \sa {Model/View Programming}, QAbstractItemModel
 
 */
 
@@ -204,7 +204,7 @@ QVariant QProxyModel::data(const QModelIndex &index, int role) const
     The base class implementation returns false. This function and
     data() must be reimplemented for editable models.
 
-    \sa data() itemData() QAbstractItemModel::setData()
+    \sa data(), itemData(), QAbstractItemModel::setData()
 */
 bool QProxyModel::setData(const QModelIndex &index, const QVariant &value, int role)
 {
@@ -295,7 +295,8 @@ Qt::DropActions QProxyModel::supportedDropActions() const
     Returns true if the rows were successfully inserted; otherwise
     returns false.
 
-    \sa QAbstractItemModel::insertRows()*/
+    \sa QAbstractItemModel::insertRows()
+*/
 bool QProxyModel::insertRows(int row, int count, const QModelIndex &parent)
 {
     Q_D(const QProxyModel);
diff --git a/src/widgets/itemviews/qstandarditemmodel.cpp b/src/widgets/itemviews/qstandarditemmodel.cpp
index 4f48899..17a7341 100644
--- a/src/widgets/itemviews/qstandarditemmodel.cpp
+++ b/src/widgets/itemviews/qstandarditemmodel.cpp
@@ -992,7 +992,7 @@ Qt::ItemFlags QStandardItem::flags() const
 
     Sets the font used to display the item's text to the given \a font.
 
-    \sa font() setText() setForeground()
+    \sa font(), setText(), setForeground()
 */
 
 /*!
@@ -1000,7 +1000,7 @@ Qt::ItemFlags QStandardItem::flags() const
 
     Returns the brush used to render the item's background.
 
-    \sa  foreground() setBackground()
+    \sa foreground(), setBackground()
 */
 
 /*!
@@ -1008,7 +1008,7 @@ Qt::ItemFlags QStandardItem::flags() const
 
     Sets the item's background brush to the specified \a brush.
 
-    \sa background() setForeground()
+    \sa background(), setForeground()
 */
 
 /*!
@@ -1016,7 +1016,7 @@ Qt::ItemFlags QStandardItem::flags() const
 
     Returns the brush used to render the item's foreground (e.g. text).
 
-    \sa setForeground() background()
+    \sa setForeground(), background()
 */
 
 /*!
@@ -1025,7 +1025,7 @@ Qt::ItemFlags QStandardItem::flags() const
     Sets the brush used to display the item's foreground (e.g. text) to the
     given \a brush.
 
-    \sa foreground() setBackground() setFont()
+    \sa foreground(), setBackground(), setFont()
 */
 
 /*!
diff --git a/src/widgets/itemviews/qtableview.cpp b/src/widgets/itemviews/qtableview.cpp
index e997f7e..b851907 100644
--- a/src/widgets/itemviews/qtableview.cpp
+++ b/src/widgets/itemviews/qtableview.cpp
@@ -1169,7 +1169,7 @@ QHeaderView *QTableView::verticalHeader() const
 /*!
     Sets the widget to use for the horizontal header to \a header.
 
-    \sa horizontalHeader() setVerticalHeader()
+    \sa horizontalHeader(), setVerticalHeader()
 */
 void QTableView::setHorizontalHeader(QHeaderView *header)
 {
@@ -1206,7 +1206,7 @@ void QTableView::setHorizontalHeader(QHeaderView *header)
 /*!
     Sets the widget to use for the vertical header to \a header.
 
-    \sa verticalHeader() setHorizontalHeader()
+    \sa verticalHeader(), setHorizontalHeader()
 */
 void QTableView::setVerticalHeader(QHeaderView *header)
 {
@@ -2876,7 +2876,7 @@ void QTableView::selectColumn(int column)
 /*!
     Hide the given \a row.
 
-    \sa showRow() hideColumn()
+    \sa showRow(), hideColumn()
 */
 void QTableView::hideRow(int row)
 {
@@ -2887,7 +2887,7 @@ void QTableView::hideRow(int row)
 /*!
     Hide the given \a column.
 
-    \sa showColumn() hideRow()
+    \sa showColumn(), hideRow()
 */
 void QTableView::hideColumn(int column)
 {
@@ -2898,7 +2898,7 @@ void QTableView::hideColumn(int column)
 /*!
     Show the given \a row.
 
-    \sa hideRow() showColumn()
+    \sa hideRow(), showColumn()
 */
 void QTableView::showRow(int row)
 {
@@ -2909,7 +2909,7 @@ void QTableView::showRow(int row)
 /*!
     Show the given \a column.
 
-    \sa hideColumn() showRow()
+    \sa hideColumn(), showRow()
 */
 void QTableView::showColumn(int column)
 {
diff --git a/src/widgets/itemviews/qtablewidget.cpp b/src/widgets/itemviews/qtablewidget.cpp
index a50b6f3..d9d377a 100644
--- a/src/widgets/itemviews/qtablewidget.cpp
+++ b/src/widgets/itemviews/qtablewidget.cpp
@@ -1118,7 +1118,7 @@ void QTableWidgetItem::setFlags(Qt::ItemFlags aflags)
 
     Sets the item's text to the \a text specified.
 
-    \sa text() setFont() setForeground()
+    \sa text(), setFont(), setForeground()
 */
 
 /*!
@@ -1152,7 +1152,7 @@ void QTableWidgetItem::setFlags(Qt::ItemFlags aflags)
     \a statusTip. QTableWidget mouse tracking needs to be enabled for this
     feature to work.
 
-    \sa statusTip() setToolTip() setWhatsThis()
+    \sa statusTip(), setToolTip(), setWhatsThis()
 */
 
 /*!
@@ -1168,7 +1168,7 @@ void QTableWidgetItem::setFlags(Qt::ItemFlags aflags)
 
     Sets the item's tooltip to the string specified by \a toolTip.
 
-    \sa toolTip() setStatusTip() setWhatsThis()
+    \sa toolTip(), setStatusTip(), setWhatsThis()
 */
 
 /*!
@@ -1184,7 +1184,7 @@ void QTableWidgetItem::setFlags(Qt::ItemFlags aflags)
 
     Sets the item's "What's This?" help to the string specified by \a whatsThis.
 
-    \sa whatsThis() setStatusTip() setToolTip()
+    \sa whatsThis(), setStatusTip(), setToolTip()
 */
 
 /*!
@@ -1200,7 +1200,7 @@ void QTableWidgetItem::setFlags(Qt::ItemFlags aflags)
 
     Sets the font used to display the item's text to the given \a font.
 
-    \sa font() setText() setForeground()
+    \sa font(), setText(), setForeground()
 */
 
 /*!
@@ -1724,7 +1724,7 @@ void QTableWidgetPrivate::_q_dataChanged(const QModelIndex &topLeft,
 
     This signal is emitted whenever the selection changes.
 
-    \sa selectedItems() QTableWidgetItem::isSelected()
+    \sa selectedItems(), QTableWidgetItem::isSelected()
 */
 
 
@@ -1950,7 +1950,7 @@ QTableWidgetItem *QTableWidget::item(int row, int column) const
     you to use the same \a row argument for all items in the same row
     (i.e. setItem() will not move the row).
 
-    \sa item() takeItem()
+    \sa item(), takeItem()
 */
 void QTableWidget::setItem(int row, int column, QTableWidgetItem *item)
 {
diff --git a/src/widgets/itemviews/qtreeview.cpp b/src/widgets/itemviews/qtreeview.cpp
index 44dd4b0..510ae41 100644
--- a/src/widgets/itemviews/qtreeview.cpp
+++ b/src/widgets/itemviews/qtreeview.cpp
@@ -2614,7 +2614,7 @@ void QTreeView::selectAll()
   Warning: if the model contains a large number of items,
   this function will take some time to execute.
 
-  \sa collapseAll() expand()  collapse() setExpanded()
+  \sa collapseAll(), expand(), collapse(), setExpanded()
 */
 void QTreeView::expandAll()
 {
@@ -2631,7 +2631,7 @@ void QTreeView::expandAll()
 
   Collapses all expanded items.
 
-  \sa expandAll() expand()  collapse() setExpanded()
+  \sa expandAll(), expand(), collapse(), setExpanded()
 */
 void QTreeView::collapseAll()
 {
@@ -2644,7 +2644,7 @@ void QTreeView::collapseAll()
   \since 4.3
   Expands all expandable items to the given \a depth.
 
-  \sa expandAll() collapseAll() expand()  collapse() setExpanded()
+  \sa expandAll(), collapseAll(), expand(), collapse(), setExpanded()
 */
 void QTreeView::expandToDepth(int depth)
 {
diff --git a/src/widgets/itemviews/qtreewidget.cpp b/src/widgets/itemviews/qtreewidget.cpp
index d9d6c14..d27eaf6 100644
--- a/src/widgets/itemviews/qtreewidget.cpp
+++ b/src/widgets/itemviews/qtreewidget.cpp
@@ -1067,7 +1067,7 @@ void QTreeModel::timerEvent(QTimerEvent *ev)
 
     Sets the text to be displayed in the given \a column to the given \a text.
 
-    \sa text() setFont() setForeground()
+    \sa text(), setFont(), setForeground()
 */
 
 /*!
@@ -1100,7 +1100,7 @@ void QTreeModel::timerEvent(QTimerEvent *ev)
     Sets the status tip for the given \a column to the given \a statusTip.
     QTreeWidget mouse tracking needs to be enabled for this feature to work.
 
-    \sa statusTip() setToolTip() setWhatsThis()
+    \sa statusTip(), setToolTip(), setWhatsThis()
 */
 
 /*!
@@ -1116,7 +1116,7 @@ void QTreeModel::timerEvent(QTimerEvent *ev)
 
     Sets the tooltip for the given \a column to \a toolTip.
 
-    \sa toolTip() setStatusTip() setWhatsThis()
+    \sa toolTip(), setStatusTip(), setWhatsThis()
 */
 
 /*!
@@ -1132,7 +1132,7 @@ void QTreeModel::timerEvent(QTimerEvent *ev)
 
     Sets the "What's This?" help for the given \a column to \a whatsThis.
 
-    \sa whatsThis() setStatusTip() setToolTip()
+    \sa whatsThis(), setStatusTip(), setToolTip()
 */
 
 /*!
@@ -1149,7 +1149,7 @@ void QTreeModel::timerEvent(QTimerEvent *ev)
     Sets the font used to display the text in the given \a column to the given
     \a font.
 
-    \sa font() setText() setForeground()
+    \sa font(), setText(), setForeground()
 */
 
 /*!
@@ -1881,7 +1881,7 @@ QTreeWidgetItem &QTreeWidgetItem::operator=(const QTreeWidgetItem &other)
 /*!
   Appends the \a child item to the list of children.
 
-  \sa insertChild() takeChild()
+  \sa insertChild(), takeChild()
 */
 void QTreeWidgetItem::addChild(QTreeWidgetItem *child)
 {
@@ -1984,7 +1984,7 @@ QTreeWidgetItem *QTreeWidgetItem::takeChild(int index)
 
   Appends the given list of \a children to the item.
 
-  \sa insertChildren() takeChildren()
+  \sa insertChildren(), takeChildren()
 */
 void QTreeWidgetItem::addChildren(const QList<QTreeWidgetItem*> &children)
 {
diff --git a/src/widgets/kernel/qaction.cpp b/src/widgets/kernel/qaction.cpp
index f3455d3..0d500c8 100644
--- a/src/widgets/kernel/qaction.cpp
+++ b/src/widgets/kernel/qaction.cpp
@@ -571,7 +571,7 @@ bool QAction::autoRepeat() const
 
     By default, this property contains the application's default font.
 
-    \sa QAction::setText() QStyle
+    \sa QAction::setText(), QStyle
 */
 void QAction::setFont(const QFont &font)
 {
@@ -821,7 +821,7 @@ QString QAction::iconText() const
 
     By default, this property contains the action's text.
 
-    \sa setStatusTip() setShortcut()
+    \sa setStatusTip(), setShortcut()
 */
 void QAction::setToolTip(const QString &tooltip)
 {
@@ -853,7 +853,7 @@ QString QAction::toolTip() const
 
     By default, this property contains an empty string.
 
-    \sa setToolTip() showStatusText()
+    \sa setToolTip(), showStatusText()
 */
 void QAction::setStatusTip(const QString &statustip)
 {
@@ -1330,7 +1330,7 @@ QAction::SoftKeyRole QAction::softKeyRole() const
     For example:
     \snippet code/src_gui_kernel_qaction.cpp 0
 
-    \sa QAction::icon QApplication::setAttribute()
+    \sa QAction::icon, QApplication::setAttribute()
 */
 void QAction::setIconVisibleInMenu(bool visible)
 {
diff --git a/src/widgets/kernel/qapplication.cpp b/src/widgets/kernel/qapplication.cpp
index 60328c4..fc6768e 100644
--- a/src/widgets/kernel/qapplication.cpp
+++ b/src/widgets/kernel/qapplication.cpp
@@ -2872,7 +2872,7 @@ void QApplication::setStartDragDistance(int l)
 
     The default value is 4 pixels.
 
-    \sa startDragTime() QPoint::manhattanLength() {Drag and Drop}
+    \sa startDragTime(), QPoint::manhattanLength(), {Drag and Drop}
 */
 
 int QApplication::startDragDistance()
diff --git a/src/widgets/kernel/qboxlayout.cpp b/src/widgets/kernel/qboxlayout.cpp
index 46c51d1..66e887a 100644
--- a/src/widgets/kernel/qboxlayout.cpp
+++ b/src/widgets/kernel/qboxlayout.cpp
@@ -1218,7 +1218,7 @@ void QBoxLayout::setDirection(Direction direction)
     Returns the direction of the box. addWidget() and addSpacing()
     work in this direction; the stretch stretches in this direction.
 
-    \sa QBoxLayout::Direction addWidget() addSpacing()
+    \sa QBoxLayout::Direction, addWidget(), addSpacing()
 */
 
 QBoxLayout::Direction QBoxLayout::direction() const
diff --git a/src/widgets/kernel/qwhatsthis.cpp b/src/widgets/kernel/qwhatsthis.cpp
index c1a6ead..39469ce 100644
--- a/src/widgets/kernel/qwhatsthis.cpp
+++ b/src/widgets/kernel/qwhatsthis.cpp
@@ -541,7 +541,7 @@ QWhatsThis::QWhatsThis()
     When entering "What's This?" mode, a QEvent of type
     Qt::EnterWhatsThisMode is sent to all toplevel widgets.
 
-    \sa inWhatsThisMode() leaveWhatsThisMode()
+    \sa inWhatsThisMode(), leaveWhatsThisMode()
 */
 void QWhatsThis::enterWhatsThisMode()
 {
@@ -570,7 +570,7 @@ bool QWhatsThis::inWhatsThisMode()
     When leaving "What's This?" mode, a QEvent of type
     Qt::LeaveWhatsThisMode is sent to all toplevel widgets.
 
-    \sa enterWhatsThisMode() inWhatsThisMode()
+    \sa enterWhatsThisMode(), inWhatsThisMode()
 */
 void QWhatsThis::leaveWhatsThisMode()
 {
diff --git a/src/widgets/kernel/qwidget.cpp b/src/widgets/kernel/qwidget.cpp
index 1b5b9cc..1f1e35a 100644
--- a/src/widgets/kernel/qwidget.cpp
+++ b/src/widgets/kernel/qwidget.cpp
@@ -2704,7 +2704,7 @@ bool QWidget::isMaximized() const
     combination of Qt::WindowState: Qt::WindowMinimized,
     Qt::WindowMaximized, Qt::WindowFullScreen, and Qt::WindowActive.
 
-  \sa Qt::WindowState setWindowState()
+  \sa Qt::WindowState, setWindowState()
  */
 Qt::WindowStates QWidget::windowState() const
 {
@@ -2753,7 +2753,7 @@ void QWidget::overrideWindowState(Qt::WindowStates newstate)
     When the window state changes, the widget receives a changeEvent()
     of type QEvent::WindowStateChange.
 
-    \sa Qt::WindowState windowState()
+    \sa Qt::WindowState, windowState()
 */
 
 /*!
@@ -2889,7 +2889,7 @@ void QWidget::showNormal()
 
     isEnabledTo(0) is equivalent to isEnabled().
 
-    \sa setEnabled() enabled
+    \sa setEnabled(), enabled
 */
 
 bool QWidget::isEnabledTo(const QWidget *ancestor) const
@@ -3160,7 +3160,7 @@ void QWidget::setDisabled(bool disable)
     By default, this property contains a value that depends on the user's
     platform and screen geometry.
 
-    \sa geometry() x() y() pos()
+    \sa geometry(), x(), y(), pos()
 */
 QRect QWidget::frameGeometry() const
 {
@@ -3237,7 +3237,7 @@ int QWidget::y() const
     See the \l{Window Geometry} documentation for an overview of geometry
     issues with windows.
 
-    \sa frameGeometry, size x(), y()
+    \sa frameGeometry, size, x(), y()
 */
 QPoint QWidget::pos() const
 {
@@ -3384,7 +3384,7 @@ QRect QWidget::normalGeometry() const
     By default, for a widget with no children, this property contains a
     rectangle with zero width and height located at the origin.
 
-    \sa childrenRegion() geometry()
+    \sa childrenRegion(), geometry()
 */
 
 QRect QWidget::childrenRect() const
@@ -3408,7 +3408,7 @@ QRect QWidget::childrenRect() const
     By default, for a widget with no children, this property contains an
     empty region.
 
-    \sa childrenRect() geometry() mask()
+    \sa childrenRect(), geometry(), mask()
 */
 
 QRegion QWidget::childrenRegion() const
@@ -3824,7 +3824,7 @@ void QWidget::setMaximumHeight(int h)
     Sets both the minimum and maximum width of the widget to \a w
     without changing the heights. Provided for convenience.
 
-    \sa sizeHint() minimumSize() maximumSize() setFixedSize()
+    \sa sizeHint(), minimumSize(), maximumSize(), setFixedSize()
 */
 
 void QWidget::setFixedWidth(int w)
@@ -3844,7 +3844,7 @@ void QWidget::setFixedWidth(int w)
     Sets both the minimum and maximum heights of the widget to \a h
     without changing the widths. Provided for convenience.
 
-    \sa sizeHint() minimumSize() maximumSize() setFixedSize()
+    \sa sizeHint(), minimumSize(), maximumSize(), setFixedSize()
 */
 
 void QWidget::setFixedHeight(int h)
@@ -3865,7 +3865,7 @@ void QWidget::setFixedHeight(int h)
     of \a parent. The \a parent must not be 0 and must be a parent
     of the calling widget.
 
-    \sa mapFrom() mapToParent() mapToGlobal() underMouse()
+    \sa mapFrom(), mapToParent(), mapToGlobal(), underMouse()
 */
 
 QPoint QWidget::mapTo(const QWidget * parent, const QPoint & pos) const
@@ -3889,7 +3889,7 @@ QPoint QWidget::mapTo(const QWidget * parent, const QPoint & pos) const
     of \a parent to this widget's coordinate system. The \a parent
     must not be 0 and must be a parent of the calling widget.
 
-    \sa mapTo() mapFromParent() mapFromGlobal() underMouse()
+    \sa mapTo(), mapFromParent(), mapFromGlobal(), underMouse()
 */
 
 QPoint QWidget::mapFrom(const QWidget * parent, const QPoint & pos) const
@@ -3915,7 +3915,7 @@ QPoint QWidget::mapFrom(const QWidget * parent, const QPoint & pos) const
 
     Same as mapToGlobal() if the widget has no parent.
 
-    \sa mapFromParent() mapTo() mapToGlobal() underMouse()
+    \sa mapFromParent(), mapTo(), mapToGlobal(), underMouse()
 */
 
 QPoint QWidget::mapToParent(const QPoint &pos) const
@@ -3929,7 +3929,7 @@ QPoint QWidget::mapToParent(const QPoint &pos) const
 
     Same as mapFromGlobal() if the widget has no parent.
 
-    \sa mapToParent() mapFrom() mapFromGlobal() underMouse()
+    \sa mapToParent(), mapFrom(), mapFromGlobal(), underMouse()
 */
 
 QPoint QWidget::mapFromParent(const QPoint &pos) const
@@ -5420,7 +5420,7 @@ QGraphicsProxyWidget * QWidgetPrivate::nearestGraphicsProxyWidget(const QWidget
     If the widget displays dates or numbers, these should be formatted
     using the widget's locale.
 
-    \sa QLocale QLocale::setDefault()
+    \sa QLocale, QLocale::setDefault()
 */
 
 void QWidgetPrivate::setLocale_helper(const QLocale &loc, bool forceUpdate)
@@ -6839,7 +6839,7 @@ QRect QWidget::contentsRect() const
   \link QAbstractScrollArea::viewport() viewport() \endlink .
 
 
-  \sa mapToGlobal() QMenu contextMenuPolicy
+  \sa mapToGlobal(), QMenu, contextMenuPolicy
 */
 
 
@@ -7572,7 +7572,7 @@ bool QWidget::close()
 
     isVisibleTo(0) is identical to isVisible().
 
-    \sa show() hide() isVisible()
+    \sa show(), hide(), isVisible()
 */
 
 bool QWidget::isVisibleTo(const QWidget *ancestor) const
@@ -8436,7 +8436,7 @@ void QWidget::mouseReleaseEvent(QMouseEvent *event)
     developer to ensure that the application interprets these events
     correctly.
 
-    \sa mousePressEvent(), mouseReleaseEvent() mouseMoveEvent(),
+    \sa mousePressEvent(), mouseReleaseEvent(), mouseMoveEvent(),
     event(), QMouseEvent
 */
 
@@ -8776,7 +8776,7 @@ void QWidget::closeEvent(QCloseEvent *event)
     The default implementation ignores the context event.
     See the \l QContextMenuEvent documentation for more details.
 
-    \sa event(), QContextMenuEvent customContextMenuRequested()
+    \sa event(), QContextMenuEvent, customContextMenuRequested()
 */
 
 void QWidget::contextMenuEvent(QContextMenuEvent *event)
@@ -9211,7 +9211,7 @@ QLayout *QWidget::takeLayout()
     use additional space, and that they can make do with less than
     sizeHint().
 
-    \sa sizeHint() QLayout QSizePolicy updateGeometry()
+    \sa sizeHint(), QLayout, QSizePolicy, updateGeometry()
 */
 QSizePolicy QWidget::sizePolicy() const
 {
@@ -9844,7 +9844,7 @@ void QWidget::repaint(const QRegion &rgn)
     If the Qt::WA_OpaquePaintEvent widget attribute is set, the widget is
     responsible for painting all its pixels with an opaque color.
 
-    \sa repaint() paintEvent(), setUpdatesEnabled(), {Analog Clock Example}
+    \sa repaint(), paintEvent(), setUpdatesEnabled(), {Analog Clock Example}
 */
 void QWidget::update()
 {
@@ -10357,7 +10357,7 @@ void QWidgetPrivate::setWindowModified_helper()
 
   By default, this property contains an empty string.
 
-  \sa QToolTip statusTip whatsThis
+  \sa QToolTip, statusTip, whatsThis
 */
 void QWidget::setToolTip(const QString &s)
 {
@@ -10383,7 +10383,7 @@ QString QWidget::toolTip() const
 
   By default, this property contains an empty string.
 
-  \sa toolTip whatsThis
+  \sa toolTip, whatsThis
 */
 void QWidget::setStatusTip(const QString &s)
 {
@@ -10406,7 +10406,7 @@ QString QWidget::statusTip() const
 
   By default, this property contains an empty string.
 
-  \sa QWhatsThis QWidget::toolTip QWidget::statusTip
+  \sa QWhatsThis, QWidget::toolTip, QWidget::statusTip
 */
 void QWidget::setWhatsThis(const QString &s)
 {
@@ -10494,7 +10494,7 @@ QString QWidget::accessibleDescription() const
     key sequence, so are much easier to use than this low-level
     function.
 
-    \sa releaseShortcut() setShortcutEnabled()
+    \sa releaseShortcut(), setShortcutEnabled()
 */
 int QWidget::grabShortcut(const QKeySequence &key, Qt::ShortcutContext context)
 {
@@ -10518,7 +10518,7 @@ int QWidget::grabShortcut(const QKeySequence &key, Qt::ShortcutContext context)
     this low-level function. Note also that this is an expensive
     operation.
 
-    \sa grabShortcut() setShortcutEnabled()
+    \sa grabShortcut(), setShortcutEnabled()
 */
 void QWidget::releaseShortcut(int id)
 {
@@ -10537,7 +10537,7 @@ void QWidget::releaseShortcut(int id)
     to use QAction or QShortcut to handle shortcuts, since they are
     easier to use than this low-level function.
 
-    \sa grabShortcut() releaseShortcut()
+    \sa grabShortcut(), releaseShortcut()
 */
 void QWidget::setShortcutEnabled(int id, bool enable)
 {
@@ -10552,7 +10552,7 @@ void QWidget::setShortcutEnabled(int id, bool enable)
     If \a enable is true, auto repeat of the shortcut with the
     given \a id is enabled; otherwise it is disabled.
 
-    \sa grabShortcut() releaseShortcut()
+    \sa grabShortcut(), releaseShortcut()
 */
 void QWidget::setShortcutAutoRepeat(int id, bool enable)
 {
@@ -11093,7 +11093,7 @@ void QWidget::ungrabGesture(Qt::GestureType gesture)
     coordinates. For example, \c{mapToGlobal(QPoint(0,0))} would give
     the global coordinates of the top-left pixel of the widget.
 
-    \sa mapFromGlobal() mapTo() mapToParent()
+    \sa mapFromGlobal(), mapTo(), mapToParent()
 */
 
 /*!
@@ -11102,7 +11102,7 @@ void QWidget::ungrabGesture(Qt::GestureType gesture)
     Translates the global screen coordinate \a pos to widget
     coordinates.
 
-    \sa mapToGlobal() mapFrom() mapFromParent()
+    \sa mapToGlobal(), mapFrom(), mapFromParent()
 */
 
 /*!
@@ -11132,7 +11132,7 @@ void QWidget::ungrabGesture(Qt::GestureType gesture)
     frame of that widget.  For \e Carbon, it works outside the widget's
     frame as well, like for Windows and X11.
 
-    \sa releaseMouse() grabKeyboard() releaseKeyboard()
+    \sa releaseMouse(), grabKeyboard(), releaseKeyboard()
 */
 
 /*!
@@ -11177,7 +11177,7 @@ void QWidget::ungrabGesture(Qt::GestureType gesture)
     If a different widget is currently grabbing keyboard input, that
     widget's grab is released first.
 
-    \sa releaseKeyboard() grabMouse() releaseMouse() focusWidget()
+    \sa releaseKeyboard(), grabMouse(), releaseMouse(), focusWidget()
 */
 
 /*!
diff --git a/src/widgets/styles/qmacstyle.qdoc b/src/widgets/styles/qmacstyle.qdoc
index dc8da49..96b3a78 100644
--- a/src/widgets/styles/qmacstyle.qdoc
+++ b/src/widgets/styles/qmacstyle.qdoc
@@ -167,7 +167,7 @@
     to its default value, you must save the old value of the attribute before
     you change it.
 
-    \sa focusRectPolicy() QWidget::setAttribute()
+    \sa focusRectPolicy(), QWidget::setAttribute()
 */
 
 /*! \fn QMacStyle::FocusRectPolicy QMacStyle::focusRectPolicy(const QWidget *w)
diff --git a/src/widgets/styles/qstyle.cpp b/src/widgets/styles/qstyle.cpp
index b4f24ac..2118353 100644
--- a/src/widgets/styles/qstyle.cpp
+++ b/src/widgets/styles/qstyle.cpp
@@ -1088,7 +1088,7 @@ void QStyle::drawItemPixmap(QPainter *painter, const QRect &rect, int alignment,
     \value CC_CustomBase Base value for custom complex controls. Custom
     values must be greater than this value.
 
-    \sa SubControl drawComplexControl()
+    \sa SubControl, drawComplexControl()
 */
 
 /*!
@@ -1536,7 +1536,7 @@ void QStyle::drawItemPixmap(QPainter *painter, const QRect &rect, int alignment,
     \row \li \l CT_MenuItem     \li \l QStyleOptionMenuItem
     \endtable
 
-    \sa ContentsType QStyleOption
+    \sa ContentsType, QStyleOption
 */
 
 /*!
diff --git a/src/widgets/styles/qstyleoption.cpp b/src/widgets/styles/qstyleoption.cpp
index 1da5d78..8486a06 100644
--- a/src/widgets/styles/qstyleoption.cpp
+++ b/src/widgets/styles/qstyleoption.cpp
@@ -2098,7 +2098,7 @@ QStyleOptionSlider::QStyleOptionSlider(int version)
 
     The default value is 0.
 
-    \sa QAbstractSlider::tracking sliderPosition
+    \sa QAbstractSlider::tracking, sliderPosition
 */
 
 /*!
diff --git a/src/widgets/util/qsystemtrayicon.cpp b/src/widgets/util/qsystemtrayicon.cpp
index fc2d046..b3af279 100644
--- a/src/widgets/util/qsystemtrayicon.cpp
+++ b/src/widgets/util/qsystemtrayicon.cpp
@@ -381,7 +381,7 @@ bool QSystemTrayIcon::supportsMessages()
     On Mac OS X, the Growl notification system must be installed for this function to
     display messages.
  
-    \sa show() supportsMessages()
+    \sa show(), supportsMessages()
   */
 void QSystemTrayIcon::showMessage(const QString& title, const QString& msg,
                             QSystemTrayIcon::MessageIcon icon, int msecs)
diff --git a/src/widgets/util/qundogroup.cpp b/src/widgets/util/qundogroup.cpp
index c08c824..cf7d826 100644
--- a/src/widgets/util/qundogroup.cpp
+++ b/src/widgets/util/qundogroup.cpp
@@ -128,7 +128,7 @@ QUndoGroup::~QUndoGroup()
     QObject in QUndoStack::QUndoStack(). In this case, the stack is deleted when the
     group is deleted, in the usual manner of QObjects.
 
-    \sa removeStack() stacks() QUndoStack::QUndoStack()
+    \sa removeStack(), stacks(), QUndoStack::QUndoStack()
 */
 
 void QUndoGroup::addStack(QUndoStack *stack)
@@ -148,7 +148,7 @@ void QUndoGroup::addStack(QUndoStack *stack)
     Removes \a stack from this group. If the stack was the active stack in the group,
     the active stack becomes 0.
 
-    \sa addStack() stacks() QUndoStack::~QUndoStack()
+    \sa addStack(), stacks(), QUndoStack::~QUndoStack()
 */
 
 void QUndoGroup::removeStack(QUndoStack *stack)
@@ -165,7 +165,7 @@ void QUndoGroup::removeStack(QUndoStack *stack)
 /*!
     Returns a list of stacks in this group.
 
-    \sa addStack() removeStack()
+    \sa addStack(), removeStack()
 */
 
 QList<QUndoStack*> QUndoGroup::stacks() const
@@ -185,7 +185,7 @@ QList<QUndoStack*> QUndoGroup::stacks() const
     in the same way as those returned by \a stack's QUndoStack::createUndoAction()
     and QUndoStack::createRedoAction().
 
-    \sa QUndoStack::setActive() activeStack()
+    \sa QUndoStack::setActive(), activeStack()
 */
 
 void QUndoGroup::setActiveStack(QUndoStack *stack)
@@ -248,7 +248,7 @@ void QUndoGroup::setActiveStack(QUndoStack *stack)
     If none of the stacks are active, or if the group is empty, this function
     returns 0.
 
-    \sa setActiveStack() QUndoStack::setActive()
+    \sa setActiveStack(), QUndoStack::setActive()
 */
 
 QUndoStack *QUndoGroup::activeStack() const
@@ -263,7 +263,7 @@ QUndoStack *QUndoGroup::activeStack() const
     If none of the stacks are active, or if the group is empty, this function
     does nothing.
 
-    \sa redo() canUndo() setActiveStack()
+    \sa redo(), canUndo(), setActiveStack()
 */
 
 void QUndoGroup::undo()
@@ -279,7 +279,7 @@ void QUndoGroup::undo()
     If none of the stacks are active, or if the group is empty, this function
     does nothing.
 
-    \sa undo() canRedo() setActiveStack()
+    \sa undo(), canRedo(), setActiveStack()
 */
 
 
@@ -296,7 +296,7 @@ void QUndoGroup::redo()
     If none of the stacks are active, or if the group is empty, this function
     returns false.
 
-    \sa canRedo() setActiveStack()
+    \sa canRedo(), setActiveStack()
 */
 
 bool QUndoGroup::canUndo() const
@@ -311,7 +311,7 @@ bool QUndoGroup::canUndo() const
     If none of the stacks are active, or if the group is empty, this function
     returns false.
 
-    \sa canUndo() setActiveStack()
+    \sa canUndo(), setActiveStack()
 */
 
 bool QUndoGroup::canRedo() const
@@ -326,7 +326,7 @@ bool QUndoGroup::canRedo() const
     If none of the stacks are active, or if the group is empty, this function
     returns an empty string.
 
-    \sa redoText() setActiveStack()
+    \sa redoText(), setActiveStack()
 */
 
 QString QUndoGroup::undoText() const
@@ -341,7 +341,7 @@ QString QUndoGroup::undoText() const
     If none of the stacks are active, or if the group is empty, this function
     returns an empty string.
 
-    \sa undoText() setActiveStack()
+    \sa undoText(), setActiveStack()
 */
 
 QString QUndoGroup::redoText() const
@@ -379,7 +379,7 @@ bool QUndoGroup::isClean() const
     If \a prefix is empty, the default template "Undo %1" is used instead of prefix.
     Before Qt 4.8, the prefix "Undo" was used by default.
 
-    \sa createRedoAction() canUndo() QUndoCommand::text()
+    \sa createRedoAction(), canUndo(), QUndoCommand::text()
 */
 
 QAction *QUndoGroup::createUndoAction(QObject *parent, const QString &prefix) const
@@ -410,7 +410,7 @@ QAction *QUndoGroup::createUndoAction(QObject *parent, const QString &prefix) co
     If \a prefix is empty, the default template "Redo %1" is used instead of prefix.
     Before Qt 4.8, the prefix "Redo" was used by default.
 
-    \sa createUndoAction() canRedo() QUndoCommand::text()
+    \sa createUndoAction(), canRedo(), QUndoCommand::text()
 */
 
 QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) const
@@ -438,7 +438,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
     is removed form the group. \a stack is the new active stack. If no stack is active,
     \a stack is 0.
 
-    \sa setActiveStack() QUndoStack::setActive()
+    \sa setActiveStack(), QUndoStack::setActive()
 */
 
 /*! \fn void QUndoGroup::indexChanged(int idx)
@@ -448,7 +448,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
 
     \a idx is the new current index, or 0 if the active stack is 0.
 
-    \sa QUndoStack::indexChanged() setActiveStack()
+    \sa QUndoStack::indexChanged(), setActiveStack()
 */
 
 /*! \fn void QUndoGroup::cleanChanged(bool clean)
@@ -458,7 +458,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
 
     \a clean is the new state, or true if the active stack is 0.
 
-    \sa QUndoStack::cleanChanged() setActiveStack()
+    \sa QUndoStack::cleanChanged(), setActiveStack()
 */
 
 /*! \fn void QUndoGroup::canUndoChanged(bool canUndo)
@@ -468,7 +468,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
 
     \a canUndo is the new state, or false if the active stack is 0.
 
-    \sa QUndoStack::canUndoChanged() setActiveStack()
+    \sa QUndoStack::canUndoChanged(), setActiveStack()
 */
 
 /*! \fn void QUndoGroup::canRedoChanged(bool canRedo)
@@ -478,7 +478,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
 
     \a canRedo is the new state, or false if the active stack is 0.
 
-    \sa QUndoStack::canRedoChanged() setActiveStack()
+    \sa QUndoStack::canRedoChanged(), setActiveStack()
 */
 
 /*! \fn void QUndoGroup::undoTextChanged(const QString &undoText)
@@ -488,7 +488,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
 
     \a undoText is the new state, or an empty string if the active stack is 0.
 
-    \sa QUndoStack::undoTextChanged() setActiveStack()
+    \sa QUndoStack::undoTextChanged(), setActiveStack()
 */
 
 /*! \fn void QUndoGroup::redoTextChanged(const QString &redoText)
@@ -498,7 +498,7 @@ QAction *QUndoGroup::createRedoAction(QObject *parent, const QString &prefix) co
 
     \a redoText is the new state, or an empty string if the active stack is 0.
 
-    \sa QUndoStack::redoTextChanged() setActiveStack()
+    \sa QUndoStack::redoTextChanged(), setActiveStack()
 */
 
 QT_END_NAMESPACE
diff --git a/src/widgets/util/qundostack.cpp b/src/widgets/util/qundostack.cpp
index 3951017..47e161f 100644
--- a/src/widgets/util/qundostack.cpp
+++ b/src/widgets/util/qundostack.cpp
@@ -184,7 +184,7 @@ int QUndoCommand::id() const
 
     \snippet code/src_gui_util_qundostack.cpp 3
 
-    \sa id() QUndoStack::push()
+    \sa id(), QUndoStack::push()
 */
 
 bool QUndoCommand::mergeWith(const QUndoCommand *command)
@@ -271,7 +271,7 @@ QString QUndoCommand::actionText() const
     different strings in order to match specific languages' needs.
     The described feature and the function actionText() are available since Qt 4.8.
 
-    \sa text() actionText() QUndoStack::createUndoAction() QUndoStack::createRedoAction()
+    \sa text(), actionText(), QUndoStack::createUndoAction(), QUndoStack::createRedoAction()
 */
 
 void QUndoCommand::setText(const QString &text)
@@ -578,7 +578,7 @@ void QUndoStack::clear()
     been executed will almost always lead to corruption of the document's
     state.
 
-    \sa QUndoCommand::id() QUndoCommand::mergeWith()
+    \sa QUndoCommand::id(), QUndoCommand::mergeWith()
 */
 
 void QUndoStack::push(QUndoCommand *cmd)
@@ -652,7 +652,7 @@ void QUndoStack::setClean()
 /*!
     If the stack is in the clean state, returns true; otherwise returns false.
 
-    \sa setClean() cleanIndex()
+    \sa setClean(), cleanIndex()
 */
 
 bool QUndoStack::isClean() const
@@ -671,7 +671,7 @@ bool QUndoStack::isClean() const
     push() deletes all the undone commands before pushing the new command, the stack
     can't return to the clean state again. In this case, this function returns -1.
 
-    \sa isClean() setClean()
+    \sa isClean(), setClean()
 */
 
 int QUndoStack::cleanIndex() const
@@ -687,7 +687,7 @@ int QUndoStack::cleanIndex() const
     If the stack is empty, or if the bottom command on the stack has already been
     undone, this function does nothing.
 
-    \sa redo() index()
+    \sa redo(), index()
 */
 
 void QUndoStack::undo()
@@ -713,7 +713,7 @@ void QUndoStack::undo()
     If the stack is empty, or if the top command on the stack has already been
     redone, this function does nothing.
 
-    \sa undo() index()
+    \sa undo(), index()
 */
 
 void QUndoStack::redo()
@@ -735,7 +735,7 @@ void QUndoStack::redo()
     Returns the number of commands on the stack. Macro commands are counted as
     one command.
 
-    \sa index() setIndex() command()
+    \sa index(), setIndex(), command()
 */
 
 int QUndoStack::count() const
@@ -749,7 +749,7 @@ int QUndoStack::count() const
     executed on the next call to redo(). It is not always the top-most command
     on the stack, since a number of commands may have been undone.
 
-    \sa undo() redo() count()
+    \sa undo(), redo(), count()
 */
 
 int QUndoStack::index() const
@@ -763,7 +763,7 @@ int QUndoStack::index() const
     \a idx. This function can be used to roll the state of the document forwards
     of backwards. indexChanged() is emitted only once.
 
-    \sa index() count() undo() redo()
+    \sa index(), count(), undo(), redo()
 */
 
 void QUndoStack::setIndex(int idx)
@@ -796,7 +796,7 @@ void QUndoStack::setIndex(int idx)
 
     Synonymous with index() == 0.
 
-    \sa index() canRedo()
+    \sa index(), canRedo()
 */
 
 bool QUndoStack::canUndo() const
@@ -815,7 +815,7 @@ bool QUndoStack::canUndo() const
 
     Synonymous with index() == count().
 
-    \sa index() canUndo()
+    \sa index(), canUndo()
 */
 
 bool QUndoStack::canRedo() const
@@ -829,7 +829,7 @@ bool QUndoStack::canRedo() const
 /*!
     Returns the text of the command which will be undone in the next call to undo().
 
-    \sa QUndoCommand::actionText() redoText()
+    \sa QUndoCommand::actionText(), redoText()
 */
 
 QString QUndoStack::undoText() const
@@ -845,7 +845,7 @@ QString QUndoStack::undoText() const
 /*!
     Returns the text of the command which will be redone in the next call to redo().
 
-    \sa QUndoCommand::actionText() undoText()
+    \sa QUndoCommand::actionText(), undoText()
 */
 
 QString QUndoStack::redoText() const
@@ -1129,7 +1129,7 @@ bool QUndoStack::isActive() const
     \a idx specifies the index of the current command, ie. the command which will be
     executed on the next call to redo().
 
-    \sa index() setIndex()
+    \sa index(), setIndex()
 */
 
 /*!
@@ -1139,7 +1139,7 @@ bool QUndoStack::isActive() const
     If \a clean is true, the stack is in a clean state; otherwise this signal
     indicates that it has left the clean state.
 
-    \sa isClean() setClean()
+    \sa isClean(), setClean()
 */
 
 /*!
diff --git a/src/widgets/util/qundoview.cpp b/src/widgets/util/qundoview.cpp
index a87e9e0..2a88b50 100644
--- a/src/widgets/util/qundoview.cpp
+++ b/src/widgets/util/qundoview.cpp
@@ -350,7 +350,7 @@ QUndoView::~QUndoView()
     Returns the stack currently displayed by this view. If the view is looking at a
     QUndoGroup, this the group's active stack.
 
-    \sa setStack() setGroup()
+    \sa setStack(), setGroup()
 */
 
 QUndoStack *QUndoView::stack() const
@@ -365,7 +365,7 @@ QUndoStack *QUndoView::stack() const
 
     If the view was previously looking at a QUndoGroup, the group is set to 0.
 
-    \sa stack() setGroup()
+    \sa stack(), setGroup()
 */
 
 void QUndoView::setStack(QUndoStack *stack)
@@ -385,7 +385,7 @@ void QUndoView::setStack(QUndoStack *stack)
 
     The view will update itself autmiatically whenever the active stack of the group changes.
 
-    \sa group() setStack()
+    \sa group(), setStack()
 */
 
 void QUndoView::setGroup(QUndoGroup *group)
@@ -416,7 +416,7 @@ void QUndoView::setGroup(QUndoGroup *group)
 
     If the view is not looking at group, this function returns 0.
 
-    \sa setGroup() setStack()
+    \sa setGroup(), setStack()
 */
 
 QUndoGroup *QUndoView::group() const
diff --git a/src/widgets/widgets/qabstractslider.cpp b/src/widgets/widgets/qabstractslider.cpp
index c73da4e..bab17c4 100644
--- a/src/widgets/widgets/qabstractslider.cpp
+++ b/src/widgets/widgets/qabstractslider.cpp
@@ -171,7 +171,7 @@ QT_BEGIN_NAMESPACE
     This signal is emitted when the user releases the slider with the
     mouse, or programmatically when setSliderDown(false) is called.
 
-    \sa sliderPressed() sliderMoved() sliderDown
+    \sa sliderPressed(), sliderMoved(), sliderDown
 */
 
 /*!
@@ -238,7 +238,7 @@ QAbstractSliderPrivate::~QAbstractSliderPrivate()
     If \a max is smaller than \a min, \a min becomes the only legal
     value.
 
-    \sa minimum maximum
+    \sa minimum, maximum
 */
 void QAbstractSlider::setRange(int min, int max)
 {
diff --git a/src/widgets/widgets/qbuttongroup.cpp b/src/widgets/widgets/qbuttongroup.cpp
index a5e9637..56dbad1 100644
--- a/src/widgets/widgets/qbuttongroup.cpp
+++ b/src/widgets/widgets/qbuttongroup.cpp
@@ -82,7 +82,7 @@
     of the mapping mechanism is to simplify the representation of enum
     values in a user interface.
 
-    \sa QGroupBox QPushButton, QCheckBox, QRadioButton
+    \sa QGroupBox, QPushButton, QCheckBox, QRadioButton
 */
 
 /*!
@@ -90,7 +90,7 @@
 
     Constructs a new, empty button group with the given \a parent.
 
-    \sa addButton() setExclusive()
+    \sa addButton(), setExclusive()
 */
 
 /*!
@@ -183,7 +183,7 @@
     starting with -2. If you are assigning your own ids, use
     positive values to avoid conflicts.
 
-    \sa removeButton() buttons()
+    \sa removeButton(), buttons()
 */
 
 /*!
@@ -191,7 +191,7 @@
 
     Removes the given \a button from the button group.
 
-    \sa addButton() buttons()
+    \sa addButton(), buttons()
 */
 
 /*!
diff --git a/src/widgets/widgets/qcheckbox.cpp b/src/widgets/widgets/qcheckbox.cpp
index a009380..8c90494 100644
--- a/src/widgets/widgets/qcheckbox.cpp
+++ b/src/widgets/widgets/qcheckbox.cpp
@@ -233,7 +233,7 @@ bool QCheckBox::isTristate() const
     Returns the check box's check state. If you do not need tristate support,
     you can also  use \l QAbstractButton::isChecked() which returns a boolean.
 
-    \sa setCheckState() Qt::CheckState
+    \sa setCheckState(), Qt::CheckState
 */
 Qt::CheckState QCheckBox::checkState() const
 {
@@ -248,7 +248,7 @@ Qt::CheckState QCheckBox::checkState() const
     support, you can also use \l QAbstractButton::setChecked() which takes a
     boolean.
 
-    \sa checkState() Qt::CheckState
+    \sa checkState(), Qt::CheckState
 */
 void QCheckBox::setCheckState(Qt::CheckState state)
 {
diff --git a/src/widgets/widgets/qcommandlinkbutton.cpp b/src/widgets/widgets/qcommandlinkbutton.cpp
index e392aaa..d2af2dd 100644
--- a/src/widgets/widgets/qcommandlinkbutton.cpp
+++ b/src/widgets/widgets/qcommandlinkbutton.cpp
@@ -70,7 +70,7 @@ QT_BEGIN_NAMESPACE
     By default it will also carry an arrow icon, indicating that pressing the
     control will open another window or page.
 
-    \sa QPushButton QRadioButton
+    \sa QPushButton, QRadioButton
 */
 
 /*!
diff --git a/src/widgets/widgets/qdialogbuttonbox.cpp b/src/widgets/widgets/qdialogbuttonbox.cpp
index bcf0753..602a004 100644
--- a/src/widgets/widgets/qdialogbuttonbox.cpp
+++ b/src/widgets/widgets/qdialogbuttonbox.cpp
@@ -874,7 +874,7 @@ QDialogButtonBox::~QDialogButtonBox()
     This signal is emitted when a button inside the button box is clicked, as long
     as it was defined with the \l AcceptRole or \l YesRole.
 
-    \sa rejected(), clicked() helpRequested()
+    \sa rejected(), clicked(), helpRequested()
 */
 
 /*!
@@ -883,7 +883,7 @@ QDialogButtonBox::~QDialogButtonBox()
     This signal is emitted when a button inside the button box is clicked, as long
     as it was defined with the \l RejectRole or \l NoRole.
 
-    \sa accepted() helpRequested() clicked()
+    \sa accepted(), helpRequested(), clicked()
 */
 
 /*!
@@ -892,7 +892,7 @@ QDialogButtonBox::~QDialogButtonBox()
     This signal is emitted when a button inside the button box is clicked, as long
     as it was defined with the \l HelpRole.
 
-    \sa accepted() rejected() clicked()
+    \sa accepted(), rejected(), clicked()
 */
 
 /*!
diff --git a/src/widgets/widgets/qdockwidget.cpp b/src/widgets/widgets/qdockwidget.cpp
index db45bf4..7f354a8 100644
--- a/src/widgets/widgets/qdockwidget.cpp
+++ b/src/widgets/widgets/qdockwidget.cpp
@@ -1471,7 +1471,7 @@ bool QDockWidget::event(QEvent *event)
 
   The action's text is set to the dock widget's window title.
 
-  \sa QAction::text QWidget::windowTitle
+  \sa QAction::text, QWidget::windowTitle
  */
 QAction * QDockWidget::toggleViewAction() const
 {
@@ -1562,7 +1562,7 @@ QAction * QDockWidget::toggleViewAction() const
     to its parent QDockWidget. Hence it can perform such operations as docking
     and hiding in response to user actions.
 
-    \sa titleBarWidget() DockWidgetVerticalTitleBar
+    \sa titleBarWidget(), DockWidgetVerticalTitleBar
 */
 
 void QDockWidget::setTitleBarWidget(QWidget *widget)
diff --git a/src/widgets/widgets/qframe.cpp b/src/widgets/widgets/qframe.cpp
index d11ff09..6c37ad8 100644
--- a/src/widgets/widgets/qframe.cpp
+++ b/src/widgets/widgets/qframe.cpp
@@ -150,7 +150,7 @@ inline void QFramePrivate::init()
     the lineWidth() and the midLineWidth() to create the total result.
     See the picture of the frames in the main class documentation.
 
-    \sa QFrame::Shadow QFrame::style() QStyle::drawPrimitive()
+    \sa QFrame::Shadow, QFrame::style(), QStyle::drawPrimitive()
 */
 
 
@@ -175,7 +175,7 @@ inline void QFramePrivate::init()
     midLineWidth(). See the picture of the frames in the main class
     documentation.
 
-    \sa QFrame::Shape lineWidth() midLineWidth()
+    \sa QFrame::Shape, lineWidth(), midLineWidth()
 */
 
 /*!
diff --git a/src/widgets/widgets/qlineedit.cpp b/src/widgets/widgets/qlineedit.cpp
index bbf34b9..cd3019b 100644
--- a/src/widgets/widgets/qlineedit.cpp
+++ b/src/widgets/widgets/qlineedit.cpp
@@ -366,7 +366,7 @@ void QLineEdit::setPlaceholderText(const QString& placeholderText)
 
     By default, this property contains an empty string.
 
-    \sa setEchoMode() text() EchoMode
+    \sa setEchoMode(), text(), EchoMode
 */
 
 QString QLineEdit::displayText() const
@@ -445,7 +445,7 @@ void QLineEdit::setFrame(bool enable)
     \value PasswordEchoOnEdit Display characters as they are entered
                     while editing otherwise display asterisks.
 
-    \sa setEchoMode() echoMode()
+    \sa setEchoMode(), echoMode()
 */
 
 
@@ -466,7 +466,7 @@ void QLineEdit::setFrame(bool enable)
 
     By default, this property is set to \l Normal.
 
-    \sa EchoMode displayText()
+    \sa EchoMode, displayText()
 */
 
 QLineEdit::EchoMode QLineEdit::echoMode() const
@@ -524,7 +524,7 @@ const QValidator * QLineEdit::validator() const
     The initial setting is to have no input validator (i.e. any input
     is accepted up to maxLength()).
 
-    \sa validator() QIntValidator QDoubleValidator QRegExpValidator
+    \sa validator(), QIntValidator, QDoubleValidator, QRegExpValidator
 */
 
 void QLineEdit::setValidator(const QValidator *v)
@@ -901,7 +901,7 @@ int QLineEdit::selectionStart() const
     Selects text from position \a start and for \a length characters.
     Negative lengths are allowed.
 
-    \sa deselect() selectAll() selectedText()
+    \sa deselect(), selectAll(), selectedText()
 */
 
 void QLineEdit::setSelection(int start, int length)
@@ -1159,7 +1159,7 @@ void QLineEdit::setInputMask(const QString &inputMask)
     because if the user types before clicking on the widget, the
     selected text will be deleted.
 
-    \sa setSelection() deselect()
+    \sa setSelection(), deselect()
 */
 
 void QLineEdit::selectAll()
@@ -1171,7 +1171,7 @@ void QLineEdit::selectAll()
 /*!
     Deselects any selected text.
 
-    \sa setSelection() selectAll()
+    \sa setSelection(), selectAll()
 */
 
 void QLineEdit::deselect()
@@ -1276,7 +1276,7 @@ void QLineEdit::setReadOnly(bool enable)
     If the current validator disallows deleting the selected text,
     cut() will copy without deleting.
 
-    \sa copy() paste() setValidator()
+    \sa copy(), paste(), setValidator()
 */
 
 void QLineEdit::cut()
@@ -1292,7 +1292,7 @@ void QLineEdit::cut()
     Copies the selected text to the clipboard, if there is any, and if
     echoMode() is \l Normal.
 
-    \sa cut() paste()
+    \sa cut(), paste()
 */
 
 void QLineEdit::copy() const
@@ -1309,7 +1309,7 @@ void QLineEdit::copy() const
     If the end result would not be acceptable to the current
     \link setValidator() validator\endlink, nothing happens.
 
-    \sa copy() cut()
+    \sa copy(), cut()
 */
 
 void QLineEdit::paste()
diff --git a/src/widgets/widgets/qmainwindow.cpp b/src/widgets/widgets/qmainwindow.cpp
index efd5db0..22be289 100644
--- a/src/widgets/widgets/qmainwindow.cpp
+++ b/src/widgets/widgets/qmainwindow.cpp
@@ -718,7 +718,7 @@ void QMainWindow::removeToolBarBreak(QToolBar *before)
     bar block (i.e. line). If the main window already manages \a toolbar
     then it will only move the toolbar to \a area.
 
-    \sa insertToolBar() addToolBarBreak() insertToolBarBreak()
+    \sa insertToolBar(), addToolBarBreak(), insertToolBarBreak()
 */
 void QMainWindow::addToolBar(Qt::ToolBarArea area, QToolBar *toolbar)
 {
@@ -788,7 +788,7 @@ QToolBar *QMainWindow::addToolBar(const QString &title)
     layout operation, this means that \a toolbar will appear to the left
     of the toolbar specified by \a before in a horizontal toolbar area.
 
-    \sa insertToolBarBreak() addToolBar() addToolBarBreak()
+    \sa insertToolBarBreak(), addToolBar(), addToolBarBreak()
 */
 void QMainWindow::insertToolBar(QToolBar *before, QToolBar *toolbar)
 {
@@ -823,7 +823,7 @@ void QMainWindow::removeToolBar(QToolBar *toolbar)
     been added to the main window, this function returns \c
     Qt::NoToolBarArea.
 
-    \sa addToolBar() addToolBarBreak() Qt::ToolBarArea
+    \sa addToolBar(), addToolBarBreak(), Qt::ToolBarArea
 */
 Qt::ToolBarArea QMainWindow::toolBarArea(QToolBar *toolbar) const
 { return d_func()->layout->toolBarArea(toolbar); }
@@ -833,7 +833,7 @@ Qt::ToolBarArea QMainWindow::toolBarArea(QToolBar *toolbar) const
     Returns whether there is a toolbar
     break before the \a toolbar.
 
-    \sa  addToolBarBreak(), insertToolBarBreak()
+    \sa addToolBarBreak(), insertToolBarBreak()
 */
 bool QMainWindow::toolBarBreak(QToolBar *toolbar) const
 {
@@ -1191,7 +1191,7 @@ void QMainWindow::removeDockWidget(QDockWidget *dockwidget)
     has not been added to the main window, this function returns \c
     Qt::NoDockWidgetArea.
 
-    \sa addDockWidget() splitDockWidget() Qt::DockWidgetArea
+    \sa addDockWidget(), splitDockWidget(), Qt::DockWidgetArea
 */
 Qt::DockWidgetArea QMainWindow::dockWidgetArea(QDockWidget *dockwidget) const
 { return d_func()->layout->dockWidgetArea(dockwidget); }
diff --git a/src/widgets/widgets/qmenu.cpp b/src/widgets/widgets/qmenu.cpp
index 955e2e5..995edcb 100644
--- a/src/widgets/widgets/qmenu.cpp
+++ b/src/widgets/widgets/qmenu.cpp
@@ -1140,7 +1140,7 @@ bool QMenuPrivate::hasMouseMoved(const QPoint &globalPos)
     is useful for subclasses when they need a QStyleOptionMenuItem, but don't want
     to fill in all the information themselves.
 
-    \sa QStyleOption::initFrom() QMenuBar::initStyleOption()
+    \sa QStyleOption::initFrom(), QMenuBar::initStyleOption()
 */
 void QMenu::initStyleOption(QStyleOptionMenuItem *option, const QAction *action) const
 {
@@ -1444,7 +1444,7 @@ QAction *QMenu::addAction(const QIcon &icon, const QString &text, const QObject
     It returns \a menu's menuAction(). This menu does not take
     ownership of \a menu.
 
-    \sa QWidget::addAction() QMenu::menuAction()
+    \sa QWidget::addAction(), QMenu::menuAction()
 */
 QAction *QMenu::addMenu(QMenu *menu)
 {
@@ -1457,7 +1457,7 @@ QAction *QMenu::addMenu(QMenu *menu)
   Appends a new QMenu with \a title to the menu. The menu
   takes ownership of the menu. Returns the new menu.
 
-  \sa QWidget::addAction() QMenu::menuAction()
+  \sa QWidget::addAction(), QMenu::menuAction()
 */
 QMenu *QMenu::addMenu(const QString &title)
 {
@@ -1470,7 +1470,7 @@ QMenu *QMenu::addMenu(const QString &title)
   Appends a new QMenu with \a icon and \a title to the menu. The menu
   takes ownership of the menu. Returns the new menu.
 
-  \sa QWidget::addAction() QMenu::menuAction()
+  \sa QWidget::addAction(), QMenu::menuAction()
 */
 QMenu *QMenu::addMenu(const QIcon &icon, const QString &title)
 {
@@ -1584,7 +1584,7 @@ bool QMenu::isTearOffEnabled() const
   contents in a new window. When the menu is in this mode and the menu
   is visible returns true; otherwise false.
 
-  \sa hideTearOffMenu() isTearOffEnabled()
+  \sa hideTearOffMenu(), isTearOffEnabled()
 */
 bool QMenu::isTearOffMenuVisible() const
 {
@@ -1597,7 +1597,7 @@ bool QMenu::isTearOffMenuVisible() const
    This function will forcibly hide the torn off menu making it
    disappear from the users desktop.
 
-   \sa isTearOffMenuVisible() isTearOffEnabled()
+   \sa isTearOffMenuVisible(), isTearOffEnabled()
 */
 void QMenu::hideTearOffMenu()
 {
diff --git a/src/widgets/widgets/qmenubar.cpp b/src/widgets/widgets/qmenubar.cpp
index 80b6faa..7c1e6b9 100644
--- a/src/widgets/widgets/qmenubar.cpp
+++ b/src/widgets/widgets/qmenubar.cpp
@@ -547,7 +547,7 @@ void QMenuBarPrivate::_q_actionHovered()
     is useful for subclasses when they need a QStyleOptionMenuItem, but don't want
     to fill in all the information themselves.
 
-    \sa QStyleOption::initFrom() QMenu::initStyleOption()
+    \sa QStyleOption::initFrom(), QMenu::initStyleOption()
 */
 void QMenuBar::initStyleOption(QStyleOptionMenuItem *option, const QAction *action) const
 {
@@ -831,7 +831,7 @@ QAction *QMenuBar::addAction(const QString &text, const QObject *receiver, const
   Appends a new QMenu with \a title to the menu bar. The menu bar
   takes ownership of the menu. Returns the new menu.
 
-  \sa QWidget::addAction() QMenu::menuAction()
+  \sa QWidget::addAction(), QMenu::menuAction()
 */
 QMenu *QMenuBar::addMenu(const QString &title)
 {
@@ -844,7 +844,7 @@ QMenu *QMenuBar::addMenu(const QString &title)
   Appends a new QMenu with \a icon and \a title to the menu bar. The menu bar
   takes ownership of the menu. Returns the new menu.
 
-  \sa QWidget::addAction() QMenu::menuAction()
+  \sa QWidget::addAction(), QMenu::menuAction()
 */
 QMenu *QMenuBar::addMenu(const QIcon &icon, const QString &title)
 {
@@ -860,7 +860,7 @@ QMenu *QMenuBar::addMenu(const QIcon &icon, const QString &title)
     \note The returned QAction object can be used to hide the corresponding
     menu.
 
-    \sa QWidget::addAction() QMenu::menuAction()
+    \sa QWidget::addAction(), QMenu::menuAction()
 */
 QAction *QMenuBar::addMenu(QMenu *menu)
 {
@@ -900,7 +900,7 @@ QAction *QMenuBar::insertSeparator(QAction *before)
   This convenience function inserts \a menu before action \a before
   and returns the menus menuAction().
 
-  \sa QWidget::insertAction() addMenu()
+  \sa QWidget::insertAction(), addMenu()
 */
 QAction *QMenuBar::insertMenu(QAction *before, QMenu *menu)
 {
diff --git a/src/widgets/widgets/qplaintextedit.cpp b/src/widgets/widgets/qplaintextedit.cpp
index dad0a6b..baa207a 100644
--- a/src/widgets/widgets/qplaintextedit.cpp
+++ b/src/widgets/widgets/qplaintextedit.cpp
@@ -1383,7 +1383,7 @@ void QPlainTextEdit::redo()
 
     If there is no selected text nothing happens.
 
-    \sa copy() paste()
+    \sa copy(), paste()
 */
 
 void QPlainTextEdit::cut()
@@ -1415,7 +1415,7 @@ void QPlainTextEdit::copy()
     virtual canInsertFromMimeData() and insertFromMimeData()
     functions.
 
-    \sa cut() copy()
+    \sa cut(), copy()
 */
 
 void QPlainTextEdit::paste()
@@ -1430,7 +1430,7 @@ void QPlainTextEdit::paste()
 
     Note that the undo/redo history is cleared by this function.
 
-    \sa cut() setPlainText()
+    \sa cut(), setPlainText()
 */
 void QPlainTextEdit::clear()
 {
@@ -1444,7 +1444,7 @@ void QPlainTextEdit::clear()
 /*!
     Selects all text.
 
-    \sa copy() cut() textCursor()
+    \sa copy(), cut(), textCursor()
  */
 void QPlainTextEdit::selectAll()
 {
diff --git a/src/widgets/widgets/qprogressbar.cpp b/src/widgets/widgets/qprogressbar.cpp
index 33c6179..b10f288 100644
--- a/src/widgets/widgets/qprogressbar.cpp
+++ b/src/widgets/widgets/qprogressbar.cpp
@@ -338,7 +338,7 @@ int QProgressBar::value() const
     If the current value falls outside the new range, the progress bar is reset
     with reset().
 
-    \sa minimum maximum
+    \sa minimum, maximum
 */
 void QProgressBar::setRange(int minimum, int maximum)
 {
diff --git a/src/widgets/widgets/qsizegrip.cpp b/src/widgets/widgets/qsizegrip.cpp
index 4a5269c..c9860f2 100644
--- a/src/widgets/widgets/qsizegrip.cpp
+++ b/src/widgets/widgets/qsizegrip.cpp
@@ -207,7 +207,7 @@ Qt::Corner QSizeGripPrivate::corner() const
     {QWidget::paintEvent()}{paintEvent()} function to render the
     size grip widget.
 
-    \sa QStatusBar QWidget::windowState()
+    \sa QStatusBar, QWidget::windowState()
 */
 
 
diff --git a/src/widgets/widgets/qspinbox.cpp b/src/widgets/widgets/qspinbox.cpp
index cb88ca1..2911ef3 100644
--- a/src/widgets/widgets/qspinbox.cpp
+++ b/src/widgets/widgets/qspinbox.cpp
@@ -356,7 +356,7 @@ void QSpinBox::setSingleStep(int value)
 
     The default minimum value is 0.
 
-    \sa setRange()  specialValueText
+    \sa setRange(), specialValueText
 */
 
 int QSpinBox::minimum() const
@@ -383,7 +383,7 @@ void QSpinBox::setMinimum(int minimum)
 
     The default maximum value is 99.
 
-    \sa setRange() specialValueText
+    \sa setRange(), specialValueText
 
 */
 
@@ -409,7 +409,7 @@ void QSpinBox::setMaximum(int maximum)
     is equivalent to:
     \snippet code/src_gui_widgets_qspinbox.cpp 3
 
-    \sa minimum maximum
+    \sa minimum, maximum
 */
 
 void QSpinBox::setRange(int minimum, int maximum)
@@ -728,7 +728,7 @@ void QDoubleSpinBox::setSingleStep(double value)
     Note: The minimum value will be rounded to match the decimals
     property.
 
-    \sa decimals, setRange() specialValueText
+    \sa decimals, setRange(), specialValueText
 */
 
 double QDoubleSpinBox::minimum() const
@@ -788,7 +788,7 @@ void QDoubleSpinBox::setMaximum(double maximum)
     is equivalent to:
     \snippet code/src_gui_widgets_qspinbox.cpp 7
 
-    \sa minimum maximum
+    \sa minimum, maximum
 */
 
 void QDoubleSpinBox::setRange(double minimum, double maximum)
diff --git a/src/widgets/widgets/qsplitter.cpp b/src/widgets/widgets/qsplitter.cpp
index 126f819..8f1d52e 100644
--- a/src/widgets/widgets/qsplitter.cpp
+++ b/src/widgets/widgets/qsplitter.cpp
@@ -182,7 +182,7 @@ QSplitter *QSplitterHandle::splitter() const
     right-to-left languages. This function will map \a pos to the
     appropriate position before calling QSplitter::moveSplitter().
 
-    \sa QSplitter::moveSplitter() closestLegalPosition()
+    \sa QSplitter::moveSplitter(), closestLegalPosition()
 */
 void QSplitterHandle::moveSplitter(int pos)
 {
@@ -1086,7 +1086,7 @@ void QSplitter::resizeEvent(QResizeEvent *)
 
     If \a widget is already in the splitter, it will be moved to the new position.
 
-    \sa insertWidget() widget() indexOf()
+    \sa insertWidget(), widget(), indexOf()
 */
 void QSplitter::addWidget(QWidget *widget)
 {
@@ -1102,7 +1102,7 @@ void QSplitter::addWidget(QWidget *widget)
 
     if \a index is an invalid index, then the widget will be inserted at the end.
 
-    \sa addWidget() indexOf() widget()
+    \sa addWidget(), indexOf(), widget()
 */
 void QSplitter::insertWidget(int index, QWidget *widget)
 {
@@ -1201,7 +1201,7 @@ int QSplitter::count() const
     putting widgets into a splitter in new code. Please use insertWidget() or
     addWidget() in new code.
 
-    \sa addWidget() insertWidget()
+    \sa addWidget(), insertWidget()
 */
 
 void QSplitter::childEvent(QChildEvent *c)
diff --git a/src/widgets/widgets/qtabbar.cpp b/src/widgets/widgets/qtabbar.cpp
index 7b5b3b6..2e46ec6 100644
--- a/src/widgets/widgets/qtabbar.cpp
+++ b/src/widgets/widgets/qtabbar.cpp
@@ -119,7 +119,7 @@ void QTabBarPrivate::updateMacBorderMetrics()
     This function will check the version of the QStyleOptionTab and fill in the
     additional values for a QStyleOptionTabV2 and QStyleOptionTabV3.
 
-    \sa QStyleOption::initFrom() QTabWidget::initStyleOption()
+    \sa QStyleOption::initFrom(), QTabWidget::initStyleOption()
 */
 void QTabBar::initStyleOption(QStyleOptionTab *option, int tabIndex) const
 {
@@ -739,7 +739,7 @@ void QTabBar::setShape(Shape shape)
     If true then QTabBar draws a base in relation to the styles overlab.
     Otherwise only the tabs are drawn.
 
-    \sa QStyle::pixelMetric() QStyle::PM_TabBarBaseOverlap QStyleOptionTabBarBaseV2
+    \sa QStyle::pixelMetric(), QStyle::PM_TabBarBaseOverlap, QStyleOptionTabBarBaseV2
 */
 
 void QTabBar::setDrawBase(bool drawBase)
@@ -1992,7 +1992,7 @@ void QTabBar::changeEvent(QEvent *event)
 
     By default the value is style dependent.
 
-    \sa QTabWidget::elideMode usesScrollButtons QStyle::SH_TabBar_ElideMode
+    \sa QTabWidget::elideMode, usesScrollButtons, QStyle::SH_TabBar_ElideMode
 */
 
 Qt::TextElideMode QTabBar::elideMode() const
@@ -2020,7 +2020,7 @@ void QTabBar::setElideMode(Qt::TextElideMode mode)
 
     By default the value is style dependant.
 
-    \sa elideMode QTabWidget::usesScrollButtons QStyle::SH_TabBar_PreferNoArrows
+    \sa elideMode, QTabWidget::usesScrollButtons, QStyle::SH_TabBar_PreferNoArrows
 */
 bool QTabBar::usesScrollButtons() const
 {
diff --git a/src/widgets/widgets/qtabwidget.cpp b/src/widgets/widgets/qtabwidget.cpp
index 5052875..317b8e1 100644
--- a/src/widgets/widgets/qtabwidget.cpp
+++ b/src/widgets/widgets/qtabwidget.cpp
@@ -161,7 +161,7 @@ QT_BEGIN_NAMESPACE
     if there isn't a new one (for example, if there are no widgets
     in the QTabWidget)
 
-    \sa currentWidget() currentIndex
+    \sa currentWidget(), currentIndex
 */
 
 /*!
@@ -256,7 +256,7 @@ bool QTabWidget::hasHeightForWidth() const
     for subclasses when they need a QStyleOptionTabWidgetFrame, but don't want to fill
     in all the information themselves.
 
-    \sa QStyleOption::initFrom() QTabBar::initStyleOption()
+    \sa QStyleOption::initFrom(), QTabBar::initStyleOption()
 */
 void QTabWidget::initStyleOption(QStyleOptionTabWidgetFrame *option) const
 {
@@ -1133,7 +1133,7 @@ int QTabWidget::count() const
 /*!
     Sets the tab tool tip for the page at position \a index to \a tip.
 
-    \sa  tabToolTip()
+    \sa tabToolTip()
 */
 void QTabWidget::setTabToolTip(int index, const QString & tip)
 {
@@ -1267,7 +1267,7 @@ void QTabWidget::setIconSize(const QSize &size)
 
     By default the value is style dependant.
 
-    \sa QTabBar::elideMode usesScrollButtons QStyle::SH_TabBar_ElideMode
+    \sa QTabBar::elideMode, usesScrollButtons, QStyle::SH_TabBar_ElideMode
 */
 Qt::TextElideMode QTabWidget::elideMode() const
 {
@@ -1290,7 +1290,7 @@ void QTabWidget::setElideMode(Qt::TextElideMode mode)
 
     By default the value is style dependant.
 
-    \sa elideMode QTabBar::usesScrollButtons QStyle::SH_TabBar_PreferNoArrows
+    \sa elideMode, QTabBar::usesScrollButtons, QStyle::SH_TabBar_PreferNoArrows
 */
 bool QTabWidget::usesScrollButtons() const
 {
diff --git a/src/widgets/widgets/qtextedit.cpp b/src/widgets/widgets/qtextedit.cpp
index 7a7b977..3dbd247 100644
--- a/src/widgets/widgets/qtextedit.cpp
+++ b/src/widgets/widgets/qtextedit.cpp
@@ -613,7 +613,7 @@ QTextEdit::~QTextEdit()
 /*!
     Returns the point size of the font of the current format.
 
-    \sa setFontFamily() setCurrentFont() setFontPointSize()
+    \sa setFontFamily(), setCurrentFont(), setFontPointSize()
 */
 qreal QTextEdit::fontPointSize() const
 {
@@ -624,7 +624,7 @@ qreal QTextEdit::fontPointSize() const
 /*!
     Returns the font family of the current format.
 
-    \sa setFontFamily() setCurrentFont() setFontPointSize()
+    \sa setFontFamily(), setCurrentFont(), setFontPointSize()
 */
 QString QTextEdit::fontFamily() const
 {
@@ -635,7 +635,7 @@ QString QTextEdit::fontFamily() const
 /*!
     Returns the font weight of the current format.
 
-    \sa setFontWeight() setCurrentFont() setFontPointSize() QFont::Weight
+    \sa setFontWeight(), setCurrentFont(), setFontPointSize(), QFont::Weight
 */
 int QTextEdit::fontWeight() const
 {
@@ -694,7 +694,7 @@ QColor QTextEdit::textBackgroundColor() const
 /*!
     Returns the font of the current format.
 
-    \sa setCurrentFont() setFontFamily() setFontPointSize()
+    \sa setCurrentFont(), setFontFamily(), setFontPointSize()
 */
 QFont QTextEdit::currentFont() const
 {
@@ -782,7 +782,7 @@ QTextCursor QTextEdit::textCursor() const
 /*!
     Sets the font family of the current format to \a fontFamily.
 
-    \sa fontFamily() setCurrentFont()
+    \sa fontFamily(), setCurrentFont()
 */
 void QTextEdit::setFontFamily(const QString &fontFamily)
 {
@@ -797,7 +797,7 @@ void QTextEdit::setFontFamily(const QString &fontFamily)
     Note that if \a s is zero or negative, the behavior of this
     function is not defined.
 
-    \sa fontPointSize() setCurrentFont() setFontFamily()
+    \sa fontPointSize(), setCurrentFont(), setFontFamily()
 */
 void QTextEdit::setFontPointSize(qreal s)
 {
@@ -877,7 +877,7 @@ void QTextEdit::setTextBackgroundColor(const QColor &c)
 /*!
     Sets the font of the current format to \a f.
 
-    \sa currentFont() setFontPointSize() setFontFamily()
+    \sa currentFont(), setFontPointSize(), setFontFamily()
 */
 void QTextEdit::setCurrentFont(const QFont &f)
 {
@@ -935,7 +935,7 @@ void QTextEdit::redo()
 
     If there is no selected text nothing happens.
 
-    \sa copy() paste()
+    \sa copy(), paste()
 */
 
 void QTextEdit::cut()
@@ -967,7 +967,7 @@ void QTextEdit::copy()
     virtual canInsertFromMimeData() and insertFromMimeData()
     functions.
 
-    \sa cut() copy()
+    \sa cut(), copy()
 */
 
 void QTextEdit::paste()
@@ -982,7 +982,7 @@ void QTextEdit::paste()
 
     Note that the undo/redo history is cleared by this function.
 
-    \sa cut() setPlainText() setHtml()
+    \sa cut(), setPlainText(), setHtml()
 */
 void QTextEdit::clear()
 {
@@ -995,7 +995,7 @@ void QTextEdit::clear()
 /*!
     Selects all text.
 
-    \sa copy() cut() textCursor()
+    \sa copy(), cut(), textCursor()
  */
 void QTextEdit::selectAll()
 {
diff --git a/src/widgets/widgets/qtoolbar.cpp b/src/widgets/widgets/qtoolbar.cpp
index 6ba29c1..ddc6686 100644
--- a/src/widgets/widgets/qtoolbar.cpp
+++ b/src/widgets/widgets/qtoolbar.cpp
@@ -484,7 +484,7 @@ void QToolBarPrivate::plug(const QRect &r)
     This signal is emitted when the icon size is changed.  The \a
     iconSize parameter holds the toolbar's new icon size.
 
-    \sa iconSize QMainWindow::iconSize
+    \sa iconSize, QMainWindow::iconSize
 */
 
 /*!
@@ -513,7 +513,7 @@ void QToolBarPrivate::plug(const QRect &r)
     \a toolButtonStyle parameter holds the toolbar's new tool button
     style.
 
-    \sa toolButtonStyle QMainWindow::toolButtonStyle
+    \sa toolButtonStyle, QMainWindow::toolButtonStyle
 */
 
 /*!
@@ -1209,7 +1209,7 @@ bool QToolBar::event(QEvent *event)
 
     The action's text is set to the toolbar's window title.
 
-    \sa QAction::text QWidget::windowTitle
+    \sa QAction::text, QWidget::windowTitle
 */
 QAction *QToolBar::toggleViewAction() const
 { Q_D(const QToolBar); return d->toggleViewAction; }