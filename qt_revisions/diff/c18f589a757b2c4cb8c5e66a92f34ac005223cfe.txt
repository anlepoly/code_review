diff --git a/tests/auto/xmlpatternsschemats/TESTSUITE/updateSuite.sh b/tests/auto/xmlpatternsschemats/TESTSUITE/updateSuite.sh
index f305950..1a81259 100755
--- a/tests/auto/xmlpatternsschemats/TESTSUITE/updateSuite.sh
+++ b/tests/auto/xmlpatternsschemats/TESTSUITE/updateSuite.sh
@@ -44,6 +44,9 @@
 #
 # NOTE: the files checked out CANNOT be added to Qt's
 # repository at the moment, due to legal complications.
+#
+# To run the script, Saxon package version 9 and above shall be installed
+#
 
 DIRECTORY_NAME="xmlschema2006-11-06"
 ARCHIVE_NAME="xsts-2007-06-20.tar.gz"
@@ -54,7 +57,9 @@ wget http://www.w3.org/XML/2004/xml-schema-test-suite/xmlschema2006-11-06/$ARCHI
 tar -xzf $ARCHIVE_NAME
 rm $ARCHIVE_NAME
 
-CVSROOT=:pserver:anonymous@dev.w3.org:/sources/public cvs login
-CVSROOT=:pserver:anonymous@dev.w3.org:/sources/public cvs checkout -d xmlschema2006-11-06-new XML/xml-schema-test-suite/2004-01-14/xmlschema2006-11-06 
+# cvs script is used to retrieve newer version of test suite.
+#CVSROOT=:pserver:anonymous@dev.w3.org:/sources/public cvs login
+#CVSROOT=:pserver:anonymous@dev.w3.org:/sources/public cvs checkout -d xmlschema2006-11-06-new XML/xml-schema-test-suite/2004-01-14/xmlschema2006-11-06
 
-java net.sf.saxon.Transform -xsl:unifyCatalog.xsl $DIRECTORY_NAME/suite.xml > testSuites.xml
+#Saxon need to be installed before the following command works.
+java -jar /usr/share/java/saxon.jar -xsl:unifyCatalog.xsl -s:$DIRECTORY_NAME/suite.xml > testSuites.xml
diff --git a/tests/auto/xmlpatternsxqts/TESTSUITE/updateSuite.sh b/tests/auto/xmlpatternsxqts/TESTSUITE/updateSuite.sh
new file mode 100755
index 0000000..3a4dca5
--- /dev/null
+++ b/tests/auto/xmlpatternsxqts/TESTSUITE/updateSuite.sh
@@ -0,0 +1,72 @@
+#!/bin/sh
+#############################################################################
+##
+## Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+## Contact: http://www.qt-project.org/
+##
+## This file is the build configuration utility of the Qt Toolkit.
+##
+## $QT_BEGIN_LICENSE:LGPL$
+## GNU Lesser General Public License Usage
+## This file may be used under the terms of the GNU Lesser General Public
+## License version 2.1 as published by the Free Software Foundation and
+## appearing in the file LICENSE.LGPL included in the packaging of this
+## file. Please review the following information to ensure the GNU Lesser
+## General Public License version 2.1 requirements will be met:
+## http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+##
+## In addition, as a special exception, Nokia gives you certain additional
+## rights. These rights are described in the Nokia Qt LGPL Exception
+## version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+##
+## GNU General Public License Usage
+## Alternatively, this file may be used under the terms of the GNU General
+## Public License version 3.0 as published by the Free Software Foundation
+## and appearing in the file LICENSE.GPL included in the packaging of this
+## file. Please review the following information to ensure the GNU General
+## Public License version 3.0 requirements will be met:
+## http://www.gnu.org/copyleft/gpl.html.
+##
+## Other Usage
+## Alternatively, this file may be used in accordance with the terms and
+## conditions contained in a signed written agreement between you and Nokia.
+##
+##
+##
+##
+##
+##
+## $QT_END_LICENSE$
+##
+#############################################################################
+
+# This script updates the suite from W3C's CVS server.
+#
+# NOTE: the files checked out CANNOT be added to Qt's
+# repository at the moment, due to legal complications. However,
+# when the test suite is publically released, it is possible as
+# according to W3C's usual license agreements.
+
+echo "*** This script typically doesn't need to be run."
+
+# There are two ways to retrieve test suites, via  cvs or direct downloading.
+# CVS always receive the latest release.
+
+# download test suite from http://dev.w3.org/2006/xquery-test-suite/
+
+TMPFILE='tmpfile'
+wget http://dev.w3.org/2006/xquery-test-suite/PublicPagesStagingArea/XQTS_1_0_3.zip -O $TMPFILE
+unzip $TMPFILE
+rm $TMPFILE
+
+# This is W3C's internal CVS server, not the public dev.w3.org.
+# export CVSROOT=":pserver:anonymous@dev.w3.org:/sources/public"
+
+# echo "*** Enter 'anonymous' as password. ***"
+# cvs login
+# cvs get 2006/xquery-test-suite
+
+# Substitute entity values for entity references
+mv XQTSCatalog.xml XQTSCatalogUnsolved.xml
+xmllint -noent -output XQTSCatalog.xml XQTSCatalogUnsolved.xml
+
diff --git a/tests/auto/xmlpatternsxqts/tst_suitetest.cpp b/tests/auto/xmlpatternsxqts/tst_suitetest.cpp
index 369acf4..9756389 100644
--- a/tests/auto/xmlpatternsxqts/tst_suitetest.cpp
+++ b/tests/auto/xmlpatternsxqts/tst_suitetest.cpp
@@ -64,9 +64,6 @@ tst_SuiteTest::tst_SuiteTest(const SuiteType suiteType,
 /*!
  Returns an absolute path to the XQTS catalog, or flags a failure using
  QTestLib's mechanisms.
-
- Finding the location of the catalog is done with `p4 where` such that we don't have
- to care about where it is checked out.
  */
 void tst_SuiteTest::initTestCase()
 {
@@ -85,7 +82,7 @@ void tst_SuiteTest::runTestSuite() const
     const QFileInfo fi(m_catalogPath);
     const QUrl catalogPath(QUrl::fromLocalFile(fi.absoluteFilePath()));
 
-    TestSuite::SuiteType suiteType;
+    TestSuite::SuiteType suiteType(TestSuite::XQuerySuite);
     switch (m_suiteType) {
     case XQuerySuite:
         suiteType = TestSuite::XQuerySuite;
diff --git a/tests/auto/xmlpatternsxqts/tst_xmlpatternsxqts.cpp b/tests/auto/xmlpatternsxqts/tst_xmlpatternsxqts.cpp
index 1704144..b758a5e 100644
--- a/tests/auto/xmlpatternsxqts/tst_xmlpatternsxqts.cpp
+++ b/tests/auto/xmlpatternsxqts/tst_xmlpatternsxqts.cpp
@@ -41,7 +41,6 @@
 
 
 #include <QtTest/QtTest>
-
 #include "tst_suitetest.h"
 
 /*!
@@ -68,30 +67,9 @@ void tst_XmlPatternsXQTS::catalogPath(QString &write) const
     if(dontRun())
         QSKIP("This test takes too long time to run on the majority of platforms.");
 
-    QProcess p4;
-
-    QStringList arguments;
-    arguments << QLatin1String("where")
-              << QLatin1String("//depot/autotests/4.4/tests/auto/xmlpatternsxqts/XQTS/XQTSCatalog.xml");
-    p4.start(QLatin1String("p4"), arguments);
-    QVERIFY(p4.waitForFinished());
-    QCOMPARE(p4.exitCode(), 0);
-    QCOMPARE(p4.exitStatus(), QProcess::NormalExit);
-
-    /* `p4 where' prints for instance:
-     *
-     *    //depot/qt/4.4/tests/auto/xmlpatternsxqts/... //fenglich-englich/qt-4.4/tests/auto/xmlpatternsxqts/... /home/fenglich/dev/autotests/4.4/tests/auto/xmlpatternsxqts/XQTS/XQTSCatalog.xml
-     *
-     * so we want the last string.
-     */
-    write = QString::fromLocal8Bit(p4.readAllStandardOutput()).split(QLatin1Char(' ')).last().trimmed();
+    write = QLatin1String("TESTSUITE/XQTSCatalog.xml");
+    return;
 
-    if(write.isEmpty() || !QFile::exists(write))
-    {
-        QEXPECT_FAIL("", "//depot/autotests/4.4/tests/auto/xmlpatternsxqts/XQTS/ must be part of the perforce client spec, "
-                         "checked out at an arbitrary location, for this test to run. The test suite will now be skipped.", Abort);
-        QVERIFY(false);
-    }
 }
 
 QTEST_MAIN(tst_XmlPatternsXQTS)