diff --git a/examples/TopLevel.qml b/examples/TopLevel.qml
index dd0495c..b22a216 100644
--- a/examples/TopLevel.qml
+++ b/examples/TopLevel.qml
@@ -1,4 +1,4 @@
-import QtQuick 1.0
+import QtQuick 2.0
 import QtDesktop 0.2
 import "content"
 
diff --git a/qmldesktopviewer/main.cpp b/qmldesktopviewer/main.cpp
index 6b521c0..a1e0bdb 100644
--- a/qmldesktopviewer/main.cpp
+++ b/qmldesktopviewer/main.cpp
@@ -37,9 +37,8 @@
 **
 ****************************************************************************/
 
-#include "qdeclarative.h"
+#include <QtQml>
 #include "qmldesktopviewer.h"
-#include "qdeclarativeengine.h"
 #include "loggerwidget.h"
 #include <QWidget>
 #include <QDir>
@@ -212,7 +211,7 @@ static void parseCommandLineOptions(const QStringList &arguments)
             if (arg == "-L")
                 qWarning("-L option provided for compatibility only, use -I instead");
             if (lastArg) {
-                QDeclarativeEngine tmpEngine;
+                QQmlEngine tmpEngine;
                 QString paths = tmpEngine.importPathList().join(QLatin1String(":"));
                 qWarning("Current search path: %s", paths.toLocal8Bit().constData());
                 exitApp(0);
diff --git a/qmldesktopviewer/qmldesktopviewer.cpp b/qmldesktopviewer/qmldesktopviewer.cpp
index e21ebf6..5b22050 100644
--- a/qmldesktopviewer/qmldesktopviewer.cpp
+++ b/qmldesktopviewer/qmldesktopviewer.cpp
@@ -40,9 +40,6 @@
 #include "qmldesktopviewer.h"
 #include "loggerwidget.h"
 #include <qquickview.h>
-#include <qdeclarativecontext.h>
-#include <qdeclarativeengine.h>
-#include <qdeclarative.h>
 
 #include <QWidget>
 #include <QApplication>
@@ -65,7 +62,7 @@
 QT_BEGIN_NAMESPACE
 
 QmlDesktopViewer::QmlDesktopViewer() :
-    _engine(new QDeclarativeEngine(this))//, _rootObject(new QQuickItem)
+    _engine(new QQmlEngine(this))//, _rootObject(new QQuickItem)
 {
     _engine->setParent(this);
     QmlDesktopViewer::registerTypes();
@@ -104,7 +101,7 @@ bool QmlDesktopViewer::open(const QString& file_or_url)
 
     //delete rootObject();
     engine()->clearComponentCache();
-    QDeclarativeContext *ctxt = rootContext();
+    QQmlContext *ctxt = rootContext();
     ctxt->setContextProperty("qmlDesktopViewer", this);
     ctxt->setContextProperty("qmlDesktopViewerFolder", QDir::currentPath());
 
@@ -141,21 +138,21 @@ void QmlDesktopViewer::registerTypes()
 
 void QmlDesktopViewer::execute(QUrl url)
 {
-    _component = new QDeclarativeComponent(_engine, url, this);
+    _component = new QQmlComponent(_engine, url, this);
     if (!_component->isLoading()) {
         continueExecute();
     } else {
-        QObject::connect(_component, SIGNAL(statusChanged(QDeclarativeComponent::Status)), this, SLOT(continueExecute()));
+        QObject::connect(_component, SIGNAL(statusChanged(QQmlComponent::Status)), this, SLOT(continueExecute()));
     }
 }
 
 void QmlDesktopViewer::continueExecute()
 {
-    disconnect(_component, SIGNAL(statusChanged(QDeclarativeComponent::Status)), this, SLOT(continueExecute()));
+    disconnect(_component, SIGNAL(statusChanged(QQmlComponent::Status)), this, SLOT(continueExecute()));
 
     if (_component->isError()) {
-        QList<QDeclarativeError> errorList = _component->errors();
-        foreach (const QDeclarativeError &error, errorList) {
+        QList<QQmlError> errorList = _component->errors();
+        foreach (const QQmlError &error, errorList) {
             qWarning() << error;
         }
         emit statusChanged(_component->status());
@@ -166,8 +163,8 @@ void QmlDesktopViewer::continueExecute()
     obj->setParent(_engine);
 
     if(_component->isError()) {
-        QList<QDeclarativeError> errorList = _component->errors();
-        foreach (const QDeclarativeError &error, errorList) {
+        QList<QQmlError> errorList = _component->errors();
+        foreach (const QQmlError &error, errorList) {
             qWarning() << error;
         }
         emit statusChanged(_component->status());
diff --git a/qmldesktopviewer/qmldesktopviewer.h b/qmldesktopviewer/qmldesktopviewer.h
index aaa0d43..3ac57b5 100644
--- a/qmldesktopviewer/qmldesktopviewer.h
+++ b/qmldesktopviewer/qmldesktopviewer.h
@@ -40,11 +40,12 @@
 #ifndef QMLDESKTOPVIEWER_H
 #define QMLDESKTOPVIEWER_H
 
-#include <QtWidgets/qmainwindow.h>
+#include <QMainWindow>
 #include <QTimer>
 #include <QTime>
 #include <QList>
-#include <QtDeclarative>
+#include <QtQml>
+#include <QtQml/QQmlEngine>
 #include <QDebug>
 
 QT_BEGIN_NAMESPACE
@@ -70,9 +71,9 @@ public:
     void addPluginPath(const QString& plugin);
 
     QString currentFile() const { return currentFileOrUrl; }
-    QDeclarativeEngine *engine() { return _engine; }
+    QQmlEngine *engine() { return _engine; }
     //QGraphicsObject *rootObject() { return _rootObject; }
-    QDeclarativeContext *rootContext() { return _engine->rootContext(); }
+    QQmlContext *rootContext() { return _engine->rootContext(); }
 
 public slots:
     bool open(const QString&);
@@ -83,12 +84,12 @@ public slots:
 
 private:
     QString currentFileOrUrl;
-    QDeclarativeEngine *_engine;
+    QQmlEngine *_engine;
     //QGraphicsObject *_rootObject;
-    QDeclarativeComponent *_component;
+    QQmlComponent *_component;
 
 signals:
-    void statusChanged(QDeclarativeComponent::Status);
+    void statusChanged(QQmlComponent::Status);
 };
 
 QT_END_NAMESPACE
diff --git a/src/qstyleplugin.cpp b/src/qstyleplugin.cpp
index bdd1a29..d60ec24 100644
--- a/src/qstyleplugin.cpp
+++ b/src/qstyleplugin.cpp
@@ -76,7 +76,6 @@ public:
 
 void StylePlugin::registerTypes(const char *uri)
 {
-    qDebug(uri);
     qmlRegisterType<QStyleItem>(uri, 0, 2, "StyleItem");
     qmlRegisterType<QCursorArea>(uri, 0, 2, "CursorArea");
     qmlRegisterType<QTooltipArea>(uri, 0, 2, "TooltipArea");
diff --git a/src/qtooltiparea.cpp b/src/qtooltiparea.cpp
index e207d55..e60a23e 100644
--- a/src/qtooltiparea.cpp
+++ b/src/qtooltiparea.cpp
@@ -21,11 +21,14 @@ void QTooltipArea::setText(const QString &t)
 
 void QTooltipArea::showToolTip(const QString &str) const
 {
+    Q_UNUSED(str);
     //QToolTip::showText(cursor().pos(), str);
 }
 
 void QTooltipArea::hoverEnterEvent(QGraphicsSceneHoverEvent *event)
+
 {
+    Q_UNUSED(event);
     m_tiptimer.start(1000);
 
     m_containsMouse = true;
@@ -35,6 +38,7 @@ void QTooltipArea::hoverEnterEvent(QGraphicsSceneHoverEvent *event)
 
 void QTooltipArea::hoverLeaveEvent(QGraphicsSceneHoverEvent *event)
 {
+    Q_UNUSED(event);
     m_tiptimer.stop();
     m_containsMouse = false;
     emit containsMouseChanged();