diff --git a/src/designer/src/components/propertyeditor/brushpropertymanager.cpp b/src/designer/src/components/propertyeditor/brushpropertymanager.cpp
index 176e663..94cc739 100644
--- a/src/designer/src/components/propertyeditor/brushpropertymanager.cpp
+++ b/src/designer/src/components/propertyeditor/brushpropertymanager.cpp
@@ -119,11 +119,20 @@ Qt::BrushStyle BrushPropertyManager::brushStyleIndexToStyle(int brushStyleIndex)
     return Qt::NoBrush;
 }
 
+static void clearBrushIcons();
 
-typedef QMap<int, QIcon> EnumIndexIconMap;
+namespace {
+class EnumIndexIconMap : public QMap<int, QIcon>
+{
+public:
+    EnumIndexIconMap()
+    {
+        qAddPostRoutine(clearBrushIcons);
+    }
+};
+}
 
-static void clearBrushIcons();
-Q_GLOBAL_STATIC_WITH_INITIALIZER(EnumIndexIconMap, brushIcons, qAddPostRoutine(clearBrushIcons))
+Q_GLOBAL_STATIC(EnumIndexIconMap, brushIcons)
 
 static void clearBrushIcons()
 {
diff --git a/src/shared/qtpropertybrowser/qtpropertymanager.cpp b/src/shared/qtpropertybrowser/qtpropertymanager.cpp
index 29abb66..222c5ab 100644
--- a/src/shared/qtpropertybrowser/qtpropertymanager.cpp
+++ b/src/shared/qtpropertybrowser/qtpropertymanager.cpp
@@ -6304,7 +6304,16 @@ void QtColorPropertyManager::uninitializeProperty(QtProperty *property)
 // Make sure icons are removed as soon as QApplication is destroyed, otherwise,
 // handles are leaked on X11.
 static void clearCursorDatabase();
-Q_GLOBAL_STATIC_WITH_INITIALIZER(QtCursorDatabase, cursorDatabase, qAddPostRoutine(clearCursorDatabase))
+namespace {
+struct CursorDatabase : public QtCursorDatabase
+{
+    CursorDatabase()
+    {
+        qAddPostRoutine(clearCursorDatabase);
+    }
+};
+}
+Q_GLOBAL_STATIC(QtCursorDatabase, cursorDatabase)
 
 static void clearCursorDatabase()
 {