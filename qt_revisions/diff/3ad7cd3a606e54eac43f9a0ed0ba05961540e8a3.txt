diff --git a/tests/auto/other/qaccessibility/tst_qaccessibility.cpp b/tests/auto/other/qaccessibility/tst_qaccessibility.cpp
index 62bc043..a0faafc 100644
--- a/tests/auto/other/qaccessibility/tst_qaccessibility.cpp
+++ b/tests/auto/other/qaccessibility/tst_qaccessibility.cpp
@@ -1259,7 +1259,7 @@ void tst_QAccessibility::menuTest()
     QCOMPARE(iSeparator->role(), QAccessible::Separator);
     QCOMPARE(iHelp->role(), QAccessible::MenuItem);
     QCOMPARE(iAction->role(), QAccessible::MenuItem);
-#ifndef Q_WS_MAC
+#ifndef Q_OS_MAC
 #ifdef Q_OS_WINCE
     if (!IsValidCEPlatform())
         QSKIP("Tests do not work on Mobile platforms due to native menus");
@@ -2687,7 +2687,7 @@ void tst_QAccessibility::accelerators()
     label->setText(tr("Q &&A"));
     QCOMPARE(accLineEdit->text(QAccessible::Accelerator), QString());
 
-#if !defined(QT_NO_DEBUG) && !defined(Q_WS_MAC)
+#if !defined(QT_NO_DEBUG) && !defined(Q_OS_MAC)
     QTest::ignoreMessage(QtWarningMsg, "QKeySequence::mnemonic: \"Q &A&B\" contains multiple occurrences of '&'");
 #endif
     label->setText(tr("Q &A&B"));
diff --git a/tests/auto/other/qcomplextext/tst_qcomplextext.cpp b/tests/auto/other/qcomplextext/tst_qcomplextext.cpp
index c741a76..5e6831f 100644
--- a/tests/auto/other/qcomplextext/tst_qcomplextext.cpp
+++ b/tests/auto/other/qcomplextext/tst_qcomplextext.cpp
@@ -42,7 +42,7 @@
 
 // Horrible hack, but this get this out of the way for now
 // Carlos Duclos, 2007-12-11
-#if !defined(Q_WS_MAC)
+#if !defined(Q_OS_MAC)
 
 #include <QtTest/QtTest>
 #include <QtGui/QtGui>
@@ -286,5 +286,5 @@ void tst_QComplexText::bidiCursor_PDF()
 QTEST_MAIN(tst_QComplexText)
 #include "tst_qcomplextext.moc"
 
-#endif // Q_WS_MAC
+#endif // Q_OS_MAC
 
diff --git a/tests/auto/other/qfocusevent/tst_qfocusevent.cpp b/tests/auto/other/qfocusevent/tst_qfocusevent.cpp
index 9f82a72..4b01d32 100644
--- a/tests/auto/other/qfocusevent/tst_qfocusevent.cpp
+++ b/tests/auto/other/qfocusevent/tst_qfocusevent.cpp
@@ -136,7 +136,7 @@ void tst_QFocusEvent::initTestCase()
     testFocusWidget->resize( 200,100 );
     testFocusWidget->show();
 // Applications don't get focus when launched from the command line on Mac.
-#ifdef Q_WS_MAC
+#ifdef Q_OS_MAC
     testFocusWidget->raise();
 #endif
 }
@@ -279,7 +279,7 @@ void tst_QFocusEvent::checkReason_Popup()
     QVERIFY( !childFocusWidgetTwo->focusOutEventRecieved );
 }
 
-#ifdef Q_WS_MAC
+#ifdef Q_OS_MAC
 QT_BEGIN_NAMESPACE
     extern void qt_set_sequence_auto_mnemonic(bool);
 QT_END_NAMESPACE
@@ -288,7 +288,7 @@ QT_END_NAMESPACE
 void tst_QFocusEvent::checkReason_Shortcut()
 {
     initWidget();
-#ifdef Q_WS_MAC
+#ifdef Q_OS_MAC
     qt_set_sequence_auto_mnemonic(true);
 #endif
     QLabel* label = new QLabel( "&Test", testFocusWidget );
@@ -318,7 +318,7 @@ void tst_QFocusEvent::checkReason_Shortcut()
     label->hide();
     QVERIFY( childFocusWidgetTwo->hasFocus() );
     QVERIFY( !childFocusWidgetOne->hasFocus() );
-#ifdef Q_WS_MAC
+#ifdef Q_OS_MAC
     qt_set_sequence_auto_mnemonic(false);
 #endif
 }