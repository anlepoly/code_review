diff --git a/src/corelib/mimetypes/qmimedatabase.cpp b/src/corelib/mimetypes/qmimedatabase.cpp
index 75d6cb9..dd32e45 100644
--- a/src/corelib/mimetypes/qmimedatabase.cpp
+++ b/src/corelib/mimetypes/qmimedatabase.cpp
@@ -61,14 +61,6 @@
 
 QT_BEGIN_NAMESPACE
 
-bool qt_isQMimeDatabaseDebuggingActivated (false);
-
-#ifndef QT_NO_DEBUG_OUTPUT
-#define DBG() if (qt_isQMimeDatabaseDebuggingActivated) qDebug() << static_cast<const void *>(this) << Q_FUNC_INFO
-#else
-#define DBG() if (0) qDebug() << static_cast<const void *>(this) << Q_FUNC_INFO
-#endif
-
 Q_GLOBAL_STATIC(QMimeDatabasePrivate, staticQMimeDatabase)
 
 QMimeDatabasePrivate *QMimeDatabasePrivate::instance()
@@ -301,7 +293,6 @@ bool QMimeDatabasePrivate::inherits(const QString &mime, const QString &parent)
 QMimeDatabase::QMimeDatabase() :
         d(staticQMimeDatabase())
 {
-    DBG();
 }
 
 /*!
@@ -310,8 +301,6 @@ QMimeDatabase::QMimeDatabase() :
  */
 QMimeDatabase::~QMimeDatabase()
 {
-    DBG();
-
     d = 0;
 }
 
@@ -356,8 +345,6 @@ QMimeType QMimeDatabase::mimeTypeForName(const QString &nameOrAlias) const
 */
 QMimeType QMimeDatabase::mimeTypeForFile(const QFileInfo &fileInfo, MatchMode mode) const
 {
-    DBG() << "fileInfo" << fileInfo.absoluteFilePath();
-
     QMutexLocker locker(&d->mutex);
 
     if (fileInfo.isDir())
@@ -553,8 +540,6 @@ QMimeType QMimeDatabase::mimeTypeForUrl(const QUrl &url) const
 */
 QMimeType QMimeDatabase::mimeTypeForFileNameAndData(const QString &fileName, QIODevice *device) const
 {
-    DBG() << "fileName" << fileName;
-
     int accuracy = 0;
     const bool openedByUs = !device->isOpen() && device->open(QIODevice::ReadOnly);
     const QMimeType result = d->mimeTypeForFileNameAndData(fileName, device, &accuracy);
@@ -581,8 +566,6 @@ QMimeType QMimeDatabase::mimeTypeForFileNameAndData(const QString &fileName, QIO
 */
 QMimeType QMimeDatabase::mimeTypeForFileNameAndData(const QString &fileName, const QByteArray &data) const
 {
-    DBG() << "fileName" << fileName;
-
     QBuffer buffer(const_cast<QByteArray *>(&data));
     buffer.open(QIODevice::ReadOnly);
     int accuracy = 0;
@@ -603,6 +586,4 @@ QList<QMimeType> QMimeDatabase::allMimeTypes() const
     return d->allMimeTypes();
 }
 
-#undef DBG
-
 QT_END_NAMESPACE
diff --git a/src/corelib/mimetypes/qmimetype.cpp b/src/corelib/mimetypes/qmimetype.cpp
index 3a3112f..1b13a9f 100644
--- a/src/corelib/mimetypes/qmimetype.cpp
+++ b/src/corelib/mimetypes/qmimetype.cpp
@@ -54,14 +54,6 @@
 
 QT_BEGIN_NAMESPACE
 
-bool qt_isQMimeTypeDebuggingActivated (false);
-
-#ifndef QT_NO_DEBUG_OUTPUT
-#define DBG() if (qt_isQMimeTypeDebuggingActivated) qDebug() << static_cast<const void *>(this) << Q_FUNC_INFO
-#else
-#define DBG() if (0) qDebug() << static_cast<const void *>(this) << Q_FUNC_INFO
-#endif
-
 QMimeTypePrivate::QMimeTypePrivate()
     : loaded(false)
 {}
@@ -91,7 +83,6 @@ void QMimeTypePrivate::clear()
  */
 bool QMimeTypePrivate::operator==(const QMimeTypePrivate &other) const
 {
-    DBG();
     if (name == other.name &&
             localeComments == other.localeComments &&
             genericIconName == other.genericIconName &&
@@ -100,12 +91,6 @@ bool QMimeTypePrivate::operator==(const QMimeTypePrivate &other) const
         return true;
     }
 
-    DBG() << name << other.name << (name == other.name);
-    //DBG() << comment << other.comment << (comment == other.comment);
-    DBG() << localeComments << other.localeComments << (localeComments == other.localeComments);
-    DBG() << genericIconName << other.genericIconName << (genericIconName == other.genericIconName);
-    DBG() << iconName << other.iconName << (iconName == other.iconName);
-    DBG() << globPatterns << other.globPatterns << (globPatterns == other.globPatterns);
     return false;
 }
 
@@ -145,14 +130,6 @@ void QMimeTypePrivate::addGlobPattern(const QString &pattern)
 QMimeType::QMimeType() :
         d(new QMimeTypePrivate())
 {
-    DBG() << "name():" << name();
-    //DBG() << "aliases():" << aliases();
-    //DBG() << "comment():" << comment();
-    DBG() << "genericIconName():" << genericIconName();
-    DBG() << "iconName():" << iconName();
-    DBG() << "globPatterns():" << globPatterns();
-    DBG() << "suffixes():" << suffixes();
-    DBG() << "preferredSuffix():" << preferredSuffix();
 }
 
 /*!
@@ -162,14 +139,6 @@ QMimeType::QMimeType() :
 QMimeType::QMimeType(const QMimeType &other) :
         d(other.d)
 {
-    DBG() << "name():" << name();
-    //DBG() << "aliases():" << aliases();
-    //DBG() << "comment():" << comment();
-    DBG() << "genericIconName():" << genericIconName();
-    DBG() << "iconName():" << iconName();
-    DBG() << "globPatterns():" << globPatterns();
-    DBG() << "suffixes():" << suffixes();
-    DBG() << "preferredSuffix():" << preferredSuffix();
 }
 
 /*!
@@ -190,14 +159,6 @@ QMimeType &QMimeType::operator=(const QMimeType &other)
 QMimeType::QMimeType(const QMimeTypePrivate &dd) :
         d(new QMimeTypePrivate(dd))
 {
-    DBG() << "name():" << name();
-    //DBG() << "aliases():" << aliases();
-    //DBG() << "comment():" << comment();
-    DBG() << "genericIconName():" << genericIconName();
-    DBG() << "iconName():" << iconName();
-    DBG() << "globPatterns():" << globPatterns();
-    DBG() << "suffixes():" << suffixes();
-    DBG() << "preferredSuffix():" << preferredSuffix();
 }
 
 /*!
@@ -218,14 +179,6 @@ QMimeType::QMimeType(const QMimeTypePrivate &dd) :
  */
 QMimeType::~QMimeType()
 {
-    DBG() << "name():" << name();
-    //DBG() << "aliases():" << aliases();
-    //DBG() << "comment():" << comment();
-    DBG() << "genericIconName():" << genericIconName();
-    DBG() << "iconName():" << iconName();
-    DBG() << "globPatterns():" << globPatterns();
-    DBG() << "suffixes():" << suffixes();
-    DBG() << "preferredSuffix():" << preferredSuffix();
 }
 
 /*!
@@ -477,6 +430,4 @@ bool QMimeType::inherits(const QString &mimeTypeName) const
     return QMimeDatabasePrivate::instance()->inherits(d->name, mimeTypeName);
 }
 
-#undef DBG
-
 QT_END_NAMESPACE