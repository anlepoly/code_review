diff --git a/src/quick/util/qdeclarativesmoothedanimation.cpp b/src/quick/util/qdeclarativesmoothedanimation.cpp
index 9b61561..4f2ed7d 100644
--- a/src/quick/util/qdeclarativesmoothedanimation.cpp
+++ b/src/quick/util/qdeclarativesmoothedanimation.cpp
@@ -391,12 +391,13 @@ void QDeclarativeSmoothedAnimationPrivate::updateRunningAnimations()
 
 QAbstractAnimationJob* QDeclarativeSmoothedAnimation::transition(QDeclarativeStateActions &actions,
                                                QDeclarativeProperties &modified,
-                                               TransitionDirection direction)
+                                               TransitionDirection direction,
+                                               QObject *defaultTarget)
 {
     Q_UNUSED(direction);
     Q_D(QDeclarativeSmoothedAnimation);
 
-    QDeclarativeStateActions dataActions = QDeclarativePropertyAnimation::createTransitionActions(actions, modified);
+    QDeclarativeStateActions dataActions = QDeclarativePropertyAnimation::createTransitionActions(actions, modified, defaultTarget);
 
     QParallelAnimationGroupJob *wrapperGroup = new QParallelAnimationGroupJob();
 
diff --git a/src/quick/util/qdeclarativesmoothedanimation_p.h b/src/quick/util/qdeclarativesmoothedanimation_p.h
index d065a20..9a0bc22 100644
--- a/src/quick/util/qdeclarativesmoothedanimation_p.h
+++ b/src/quick/util/qdeclarativesmoothedanimation_p.h
@@ -83,7 +83,8 @@ public:
 
     virtual QAbstractAnimationJob* transition(QDeclarativeStateActions &actions,
                             QDeclarativeProperties &modified,
-                            TransitionDirection direction);
+                            TransitionDirection direction,
+                            QObject *defaultTarget = 0);
 Q_SIGNALS:
     void velocityChanged();
     void reversingModeChanged();
diff --git a/src/quick/util/qdeclarativespringanimation.cpp b/src/quick/util/qdeclarativespringanimation.cpp
index 40408bb..3cc5f4d 100644
--- a/src/quick/util/qdeclarativespringanimation.cpp
+++ b/src/quick/util/qdeclarativespringanimation.cpp
@@ -526,14 +526,15 @@ void QDeclarativeSpringAnimation::setMass(qreal mass)
 
 QAbstractAnimationJob* QDeclarativeSpringAnimation::transition(QDeclarativeStateActions &actions,
                                                                    QDeclarativeProperties &modified,
-                                                                   TransitionDirection direction)
+                                                                   TransitionDirection direction,
+                                                                   QObject *defaultTarget)
 {
     Q_D(QDeclarativeSpringAnimation);
     Q_UNUSED(direction);
 
     QParallelAnimationGroupJob *wrapperGroup = new QParallelAnimationGroupJob();
 
-    QDeclarativeStateActions dataActions = QDeclarativeNumberAnimation::createTransitionActions(actions, modified);
+    QDeclarativeStateActions dataActions = QDeclarativeNumberAnimation::createTransitionActions(actions, modified, defaultTarget);
     if (!dataActions.isEmpty()) {
         QSet<QAbstractAnimationJob*> anims;
         for (int i = 0; i < dataActions.size(); ++i) {
diff --git a/src/quick/util/qdeclarativespringanimation_p.h b/src/quick/util/qdeclarativespringanimation_p.h
index 21515d0..2f28700 100644
--- a/src/quick/util/qdeclarativespringanimation_p.h
+++ b/src/quick/util/qdeclarativespringanimation_p.h
@@ -89,7 +89,8 @@ public:
 
     virtual QAbstractAnimationJob* transition(QDeclarativeStateActions &actions,
                             QDeclarativeProperties &modified,
-                            TransitionDirection direction);
+                            TransitionDirection direction,
+                            QObject *defaultTarget = 0);
 
 Q_SIGNALS:
     void modulusChanged();