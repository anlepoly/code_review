diff --git a/src/tools/qdoc/config.h b/src/tools/qdoc/config.h
index 461e0b9..6a89684 100644
--- a/src/tools/qdoc/config.h
+++ b/src/tools/qdoc/config.h
@@ -171,7 +171,6 @@ private:
 #define CONFIG_SHOWINTERNAL             "showinternal"
 #define CONFIG_SOURCEDIRS               "sourcedirs"
 #define CONFIG_SOURCEENCODING           "sourceencoding"
-#define CONFIG_SOURCEMODULES            "sourcemodules"
 #define CONFIG_SOURCES                  "sources"
 #define CONFIG_SPURIOUS                 "spurious"
 #define CONFIG_STYLEDIRS                "styledirs"
diff --git a/src/tools/qdoc/main.cpp b/src/tools/qdoc/main.cpp
index 11a54b4..85e97cd 100644
--- a/src/tools/qdoc/main.cpp
+++ b/src/tools/qdoc/main.cpp
@@ -76,6 +76,7 @@ QT_BEGIN_NAMESPACE
 /*
   The default indent for code is 4.
   The default value for false is 0.
+  The default supported file extensions are cpp, h, qdoc and qml.
   The default language is c++.
   The default output format is html.
   The default tab size is 8.
@@ -87,6 +88,7 @@ static const struct {
 } defaults[] = {
     { CONFIG_CODEINDENT, "4" },
     { CONFIG_FALSEHOODS, "0" },
+    { CONFIG_FILEEXTENSIONS, "*.cpp *.h *.qdoc *.qml"},
     { CONFIG_LANGUAGE, "Cpp" },
     { CONFIG_OUTPUTFORMATS, "HTML" },
     { CONFIG_TABSIZE, "8" },
@@ -173,27 +175,6 @@ static void processQdocconfFile(const QString &fileName)
     Location::initialize(config);
     config.load(fileName);
 
-    QStringList sourceModules;
-    sourceModules = config.getStringList(CONFIG_SOURCEMODULES);
-    Location sourceModulesLocation = config.lastLocation();
-
-    if (!sourceModules.isEmpty()) {
-        Location::information(tr("qdoc will generate documentation for the modules found in the sourcemodules variable."));
-        foreach (const QString& sourceModule, sourceModules) {
-            QString qdocconf = sourceModule;
-            if (!qdocconf.endsWith(".qdocconf"))
-                qdocconf += "/doc/config/module.qdocconf";
-            QFile f(qdocconf);
-            if (!f.exists()) {
-                sourceModulesLocation.warning(tr("Can't find module's qdoc config file '%1'").arg(qdocconf));
-            }
-            else {
-                Location::information(tr("  Including: %1").arg(qdocconf));
-                config.load(qdocconf);
-            }
-        }
-    }
-
     /*
       Add the defines to the configuration variables.
      */