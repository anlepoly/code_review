diff --git a/src/declarative/animations/qparallelanimationgroupjob.cpp b/src/declarative/animations/qparallelanimationgroupjob.cpp
index 9411ad8..5a417dc 100644
--- a/src/declarative/animations/qparallelanimationgroupjob.cpp
+++ b/src/declarative/animations/qparallelanimationgroupjob.cpp
@@ -200,7 +200,7 @@ void QParallelAnimationGroupJob::updateDirection(QAbstractAnimationJob::Directio
 
 void QParallelAnimationGroupJob::uncontrolledAnimationFinished(QAbstractAnimationJob *animation)
 {
-    Q_ASSERT(animation && animation->duration() == -1 || animation->loopCount() < 0);
+    Q_ASSERT(animation && (animation->duration() == -1 || animation->loopCount() < 0));
     int uncontrolledRunningCount = 0;
 
     for (QAbstractAnimationJob *child = firstChild(); child; child = child->nextSibling()) {
diff --git a/src/declarative/qml/qdeclarativevmemetaobject.cpp b/src/declarative/qml/qdeclarativevmemetaobject.cpp
index 18b29f3..36a8838 100644
--- a/src/declarative/qml/qdeclarativevmemetaobject.cpp
+++ b/src/declarative/qml/qdeclarativevmemetaobject.cpp
@@ -736,7 +736,8 @@ int QDeclarativeVMEMetaObject::metaCall(QMetaObject::Call c, int _id, void **a)
                     // are not rewritten correctly but this bug is deemed out-of-scope to fix for
                     // performance reasons; see QTBUG-24064) and thus compilation will have failed.
                     QDeclarativeError e;
-                    e.setDescription(QString(QLatin1String("Exception occurred during compilation of function: %1")).arg(QMetaObject::method(_id).signature()));
+                    e.setDescription(QString(QLatin1String("Exception occurred during compilation of function: %1")).
+                                     arg(QLatin1String(QMetaObject::method(_id).signature())));
                     ep->warning(e);
                     return -1; // The dynamic method with that id is not available.
                 }
diff --git a/src/imports/qtquick2/plugin.cpp b/src/imports/qtquick2/plugin.cpp
index 1f110d7..808d519 100644
--- a/src/imports/qtquick2/plugin.cpp
+++ b/src/imports/qtquick2/plugin.cpp
@@ -54,6 +54,7 @@ public:
     virtual void registerTypes(const char *uri)
     {
         Q_ASSERT(QLatin1String(uri) == QLatin1String("QtQuick"));
+        Q_UNUSED(uri);
         QDeclarativeQtQuick2Module::defineModule();
     }
 };
diff --git a/src/plugins/accessible/quick/qaccessiblequickview.cpp b/src/plugins/accessible/quick/qaccessiblequickview.cpp
index 00748b4..802a947 100644
--- a/src/plugins/accessible/quick/qaccessiblequickview.cpp
+++ b/src/plugins/accessible/quick/qaccessiblequickview.cpp
@@ -105,6 +105,8 @@ QString QAccessibleQuickView::text(QAccessible::Text text) const
     if (text == QAccessible::DebugDescription) {
         return QString::fromAscii(object()->metaObject()->className()) ;
     }
+#else
+    Q_UNUSED(text)
 #endif
     return view()->windowTitle();
 }
diff --git a/src/qmltest/quicktest.cpp b/src/qmltest/quicktest.cpp
index 7130f98..875e992 100644
--- a/src/qmltest/quicktest.cpp
+++ b/src/qmltest/quicktest.cpp
@@ -181,6 +181,7 @@ template <class View> void handleCompileErrors(const QFileInfo &fi, const View &
 
 int quick_test_main(int argc, char **argv, const char *name, quick_test_viewport_create createViewport, const char *sourceDir)
 {
+    Q_UNUSED(createViewport);
     QGuiApplication* app = 0;
     if (!QCoreApplication::instance()) {
         app = new QGuiApplication(argc, argv);
diff --git a/src/quick/items/context2d/qquickcanvasitem.cpp b/src/quick/items/context2d/qquickcanvasitem.cpp
index 53550b0..783fedf 100644
--- a/src/quick/items/context2d/qquickcanvasitem.cpp
+++ b/src/quick/items/context2d/qquickcanvasitem.cpp
@@ -910,7 +910,7 @@ bool QQuickCanvasItem::createContext(const QString &contextType)
     Q_D(QQuickCanvasItem);
 
     if (contextType == QLatin1String("2d")) {
-        if (d->contextType.compare("2d", Qt::CaseInsensitive) != 0)  {
+        if (d->contextType.compare(QLatin1String("2d"), Qt::CaseInsensitive) != 0)  {
             d->contextType = QLatin1String("2d");
             emit contextTypeChanged(); // XXX: can't be in setContextType()
         }
diff --git a/src/quick/util/qdeclarativestyledtext.cpp b/src/quick/util/qdeclarativestyledtext.cpp
index 8c26194..164e33c 100644
--- a/src/quick/util/qdeclarativestyledtext.cpp
+++ b/src/quick/util/qdeclarativestyledtext.cpp
@@ -690,9 +690,9 @@ void QDeclarativeStyledTextPrivate::parseImageAttributes(const QChar *&ch, const
 
     QFontMetricsF fm(layout.font());
     QString padding(qFloor(imgWidth / fm.width(QChar::Nbsp)), QChar::Nbsp);
-    textOut += QChar(' ');
+    textOut += QLatin1Char(' ');
     textOut += padding;
-    textOut += QChar(' ');
+    textOut += QLatin1Char(' ');
 }
 
 QPair<QStringRef,QStringRef> QDeclarativeStyledTextPrivate::parseAttribute(const QChar *&ch, const QString &textIn)
diff --git a/src/quick/util/qdeclarativetransition.cpp b/src/quick/util/qdeclarativetransition.cpp
index c52ce92..96e870d 100644
--- a/src/quick/util/qdeclarativetransition.cpp
+++ b/src/quick/util/qdeclarativetransition.cpp
@@ -206,7 +206,6 @@ QDeclarativeTransition::QDeclarativeTransition(QObject *parent)
 
 QDeclarativeTransition::~QDeclarativeTransition()
 {
-    Q_D(QDeclarativeTransition);
 }
 
 void QDeclarativeTransition::setReversed(bool r)
diff --git a/tests/auto/qtquick2/examples/examples.pro b/tests/auto/qtquick2/examples/examples.pro
index ca16924..577c145 100644
--- a/tests/auto/qtquick2/examples/examples.pro
+++ b/tests/auto/qtquick2/examples/examples.pro
@@ -7,4 +7,4 @@ DEFINES += SRCDIR=\\\"$$PWD\\\"
 
 CONFIG += parallel_test
 #temporary
-QT += core-private gui-private declarative-private quick-private qtquick1-private widgets-private v8-private testlib
+QT += core-private gui-private declarative-private quick-private widgets-private v8-private testlib