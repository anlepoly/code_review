diff --git a/src/gui/kernel/qcursor.cpp b/src/gui/kernel/qcursor.cpp
index 4798dc5..26a36a6 100644
--- a/src/gui/kernel/qcursor.cpp
+++ b/src/gui/kernel/qcursor.cpp
@@ -153,37 +153,6 @@ QT_BEGIN_NAMESPACE
 */
 
 /*!
-    \fn HCURSOR_or_HANDLE QCursor::handle() const
-
-    Returns a platform-specific cursor handle. The \c
-    HCURSOR_or_HANDLE type is \c HCURSOR on Windows and Qt::HANDLE on X11
-    and Mac OS X. On \l{Qt for Embedded Linux} it is an integer.
-
-    \warning Using the value returned by this function is not
-    portable.
-*/
-
-/*!
-    \fn QCursor::QCursor(HCURSOR cursor)
-
-    Constructs a Qt cursor from the given Windows \a cursor.
-
-    \warning This function is only available on Windows.
-
-    \sa handle()
-*/
-
-/*!
-    \fn QCursor::QCursor(Qt::HANDLE handle)
-
-    Constructs a Qt cursor from the given \a handle.
-
-    \warning This function is only available on X11.
-
-    \sa handle()
-*/
-
-/*!
     \fn QPoint QCursor::pos(const QScreen *screen)
 
     Returns the position of the cursor (hot spot) of the \a screen
diff --git a/src/gui/kernel/qcursor.h b/src/gui/kernel/qcursor.h
index 4820bce..41dfd78 100644
--- a/src/gui/kernel/qcursor.h
+++ b/src/gui/kernel/qcursor.h
@@ -108,12 +108,6 @@ public:
     inline static void setPos(const QPoint &p) { setPos(p.x(), p.y()); }
     inline static void setPos(QScreen *screen, const QPoint &p) { setPos(screen, p.x(), p.y()); }
     
-#ifdef qdoc
-    HCURSOR_or_HANDLE handle() const;
-    QCursor(HCURSOR cursor);
-    QCursor(Qt::HANDLE cursor);
-#endif
-
 #ifndef qdoc
     int handle() const;
 #endif