diff --git a/src/gui/opengl/qtriangulator.cpp b/src/gui/opengl/qtriangulator.cpp
index c82b2a4..74d33cd 100644
--- a/src/gui/opengl/qtriangulator.cpp
+++ b/src/gui/opengl/qtriangulator.cpp
@@ -1133,7 +1133,7 @@ void QTriangulator<T>::ComplexToSimple::initEdges()
         } else {
             Q_ASSERT(i + 1 < m_parent->m_indices.size());
             // {node, from, to, next, previous, winding, mayIntersect, pointingUp, originallyPointingUp}
-            Edge edge = {0, m_parent->m_indices.at(i), m_parent->m_indices.at(i + 1), -1, -1, 0, true, false, false};
+            Edge edge = {0, int(m_parent->m_indices.at(i)), int(m_parent->m_indices.at(i + 1)), -1, -1, 0, true, false, false};
             m_edges.add(edge);
         }
     }
diff --git a/src/widgets/widgets/qdialogbuttonbox.cpp b/src/widgets/widgets/qdialogbuttonbox.cpp
index 14643e7..b787522 100644
--- a/src/widgets/widgets/qdialogbuttonbox.cpp
+++ b/src/widgets/widgets/qdialogbuttonbox.cpp
@@ -211,7 +211,7 @@ static QDialogButtonBox::ButtonRole roleFor(QDialogButtonBox::StandardButton but
     return QDialogButtonBox::InvalidRole;
 }
 
-static const int layouts[2][5][14] =
+static const uint layouts[2][5][14] =
 {
     // Qt::Horizontal
     {
@@ -406,7 +406,7 @@ void QDialogButtonBoxPrivate::layoutButtons()
             tmpPolicy = 4;  // Mac modeless
     }
 
-    const int *currentLayout = layouts[orientation == Qt::Vertical][tmpPolicy];
+    const uint *currentLayout = layouts[orientation == Qt::Vertical][tmpPolicy];
 
     if (center)
         buttonLayout->addStretch();