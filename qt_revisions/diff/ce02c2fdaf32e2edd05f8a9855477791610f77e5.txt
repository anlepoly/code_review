diff --git a/src/qml/qml/qqmlengine.cpp b/src/qml/qml/qqmlengine.cpp
index 0517359..e48b9c4 100644
--- a/src/qml/qml/qqmlengine.cpp
+++ b/src/qml/qml/qqmlengine.cpp
@@ -371,7 +371,7 @@ the same object as is returned from the Qt.include() call.
 QQmlEnginePrivate::QQmlEnginePrivate(QQmlEngine *e)
 : propertyCapture(0), rootContext(0), isDebugging(false),
   outputWarningsToStdErr(true), sharedContext(0), sharedScope(0),
-  cleanup(0), erroredBindings(0), inProgressCreations(0), 
+  cleanup(0), erroredBindings(0), inProgressCreations(0),
   workerScriptEngine(0), activeVME(0),
   networkAccessManager(0), networkAccessManagerFactory(0),
   scarceResourcesRefCount(0), typeLoader(e), importDatabase(e), uniqueId(1),
@@ -670,7 +670,7 @@ QQmlNetworkAccessManagerFactory *QQmlEngine::networkAccessManagerFactory() const
     return d->networkAccessManagerFactory;
 }
 
-void QQmlEnginePrivate::registerFinalizeCallback(QObject *obj, int index) 
+void QQmlEnginePrivate::registerFinalizeCallback(QObject *obj, int index)
 {
     if (activeVME) {
         activeVME->finalizeCallbacks.append(qMakePair(QQmlGuard<QObject>(obj), index));
@@ -955,7 +955,7 @@ QQmlEngine::ObjectOwnership QQmlEngine::objectOwnership(QObject *object)
 bool QQmlEngine::event(QEvent *e)
 {
     Q_D(QQmlEngine);
-    if (e->type() == QEvent::User) 
+    if (e->type() == QEvent::User)
         d->doDeleteInEngineThread();
 
     return QJSEngine::event(e);
@@ -1095,13 +1095,13 @@ void QQmlData::NotifyList::layout()
         QQmlNotifierEndpoint **old = notifies;
         const int reallocSize = (maximumTodoIndex + 1) * sizeof(QQmlNotifierEndpoint*);
         notifies = (QQmlNotifierEndpoint**)realloc(notifies, reallocSize);
-        const int memsetSize = (maximumTodoIndex - notifiesSize + 1) * 
+        const int memsetSize = (maximumTodoIndex - notifiesSize + 1) *
                                sizeof(QQmlNotifierEndpoint*);
         memset(notifies + notifiesSize, 0, memsetSize);
 
         if (notifies != old) {
             for (int ii = 0; ii < notifiesSize; ++ii)
-                if (notifies[ii]) 
+                if (notifies[ii])
                     notifies[ii]->prev = &notifies[ii];
         }
 
diff --git a/src/qml/qml/qqmlexpression.cpp b/src/qml/qml/qqmlexpression.cpp
index c8d7392..67a1195 100644
--- a/src/qml/qml/qqmlexpression.cpp
+++ b/src/qml/qml/qqmlexpression.cpp
@@ -176,7 +176,7 @@ QQmlExpression::QQmlExpression()
 }
 
 /*!  \internal */
-QQmlExpression::QQmlExpression(QQmlContextData *ctxt, 
+QQmlExpression::QQmlExpression(QQmlContextData *ctxt,
                                                QObject *object, const QString &expr, bool isRewritten,
                                                const QString &url, int lineNumber, int columnNumber,
                                                QQmlExpressionPrivate &dd)
@@ -265,7 +265,7 @@ QQmlExpression::QQmlExpression(QQmlContext *ctxt,
     d->init(QQmlContextData::get(ctxt), expression, scope);
 }
 
-/*! 
+/*!
     \internal
 */
 QQmlExpression::QQmlExpression(QQmlContextData *ctxt, QObject *scope,
@@ -448,7 +448,7 @@ QString QQmlExpression::sourceFile() const
 }
 
 /*!
-    Returns the source file line number for this expression.  The source location 
+    Returns the source file line number for this expression.  The source location
     must have been previously set by calling setSourceLocation().
 */
 int QQmlExpression::lineNumber() const
@@ -494,7 +494,7 @@ QObject *QQmlExpression::scopeObject() const
 /*!
     Returns true if the last call to evaluate() resulted in an error,
     otherwise false.
-    
+
     \sa error(), clearError()
 */
 bool QQmlExpression::hasError() const