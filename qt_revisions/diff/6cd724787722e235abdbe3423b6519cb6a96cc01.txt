diff --git a/src/declarative/debugger/qdebugmessageservice.cpp b/src/declarative/debugger/qdebugmessageservice.cpp
index 9b764d5..e7e8c28 100644
--- a/src/declarative/debugger/qdebugmessageservice.cpp
+++ b/src/declarative/debugger/qdebugmessageservice.cpp
@@ -66,7 +66,7 @@ public:
 
 QDebugMessageService::QDebugMessageService(QObject *parent) :
     QDeclarativeDebugService(*(new QDebugMessageServicePrivate()),
-                                   QLatin1String("DebugMessages"), 1, parent)
+                                   QLatin1String("DebugMessages"), 2, parent)
 {
     Q_D(QDebugMessageService);
 
@@ -89,13 +89,9 @@ void QDebugMessageService::sendDebugMessage(QtMsgType type, const char *buf)
     //We do not want to alter the message handling mechanism
     //We just eavesdrop and forward the messages to a port
     //only if a client is connected to it.
-    QByteArray debugMessage;
-    QDataStream rs(&debugMessage, QIODevice::WriteOnly);
-    rs << type << QString::fromLocal8Bit(buf).toUtf8();
-
     QByteArray message;
     QDataStream ws(&message, QIODevice::WriteOnly);
-    ws << QByteArray("MESSAGE") << debugMessage;
+    ws << QByteArray("MESSAGE") << type << QString::fromLocal8Bit(buf).toUtf8();
 
     sendMessage(message);
     if (d->oldMsgHandler)
diff --git a/tests/auto/declarative/debugger/qdebugmessageservice/tst_qdebugmessageservice.cpp b/tests/auto/declarative/debugger/qdebugmessageservice/tst_qdebugmessageservice.cpp
index 2ce3ffa..bfc018f 100644
--- a/tests/auto/declarative/debugger/qdebugmessageservice/tst_qdebugmessageservice.cpp
+++ b/tests/auto/declarative/debugger/qdebugmessageservice/tst_qdebugmessageservice.cpp
@@ -119,16 +119,10 @@ void QDeclarativeDebugMsgClient::messageReceived(const QByteArray &data)
     ds >> command;
 
     if (command == "MESSAGE") {
-        QByteArray container;
-        ds >> container;
-
-        QVERIFY(ds.atEnd());
-
-        QDataStream containerDs(container);
         int type;
         QByteArray message;
-        containerDs >> type >> message;
-        QVERIFY(containerDs.atEnd());
+        ds >> type >> message;
+        QVERIFY(ds.atEnd());
 
         QVERIFY(type >= QtDebugMsg);
         QVERIFY(type <= QtFatalMsg);