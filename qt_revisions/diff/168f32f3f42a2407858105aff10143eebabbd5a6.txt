diff --git a/src/gui/kernel/qwindow.h b/src/gui/kernel/qwindow.h
index 229275d..179db99 100644
--- a/src/gui/kernel/qwindow.h
+++ b/src/gui/kernel/qwindow.h
@@ -113,35 +113,6 @@ class Q_GUI_EXPORT QWindow : public QObject, public QSurface
     Q_PROPERTY(bool visible READ isVisible WRITE setVisible NOTIFY visibleChanged)
     Q_PROPERTY(Qt::ScreenOrientation contentOrientation READ contentOrientation WRITE reportContentOrientationChange NOTIFY contentOrientationChanged)
 
-    // ------------------------------------------------------------------------
-    // Temporary backwards-compatibility properties to be removed ASAP
-    Q_PROPERTY(QString windowTitle READ windowTitle WRITE setWindowTitle)
-    Q_PROPERTY(QString windowFilePath READ windowFilePath WRITE setWindowFilePath)
-    Q_PROPERTY(QIcon windowIcon READ windowIcon WRITE setWindowIcon)
-    Q_PROPERTY(Qt::WindowModality windowModality READ windowModality WRITE setWindowModality NOTIFY windowModalityChanged)
-
-public:
-
-    Qt::WindowModality windowModality() const { return modality(); }
-    void setWindowModality(Qt::WindowModality wm) { setModality(wm); }
-    void setWindowFlags(Qt::WindowFlags f) { setFlags(f); }
-    Qt::WindowFlags windowFlags() const { return flags(); }
-    Qt::WindowType windowType() const { return type(); }
-    QString windowTitle() const { return title(); }
-    void requestActivateWindow() { requestActivate(); }
-    bool requestWindowOrientation(Qt::ScreenOrientation o) { return requestOrientation(o); }
-    Qt::ScreenOrientation windowOrientation() const { return orientation(); }
-    void setWindowFilePath(const QString &fp) { setFilePath(fp); }
-    QString windowFilePath() const { return filePath(); }
-    void setWindowIcon(const QIcon &i) { setIcon(i); }
-    QIcon windowIcon() const { return icon(); }
-    void setWindowTitle(const QString &t) { setTitle(t); }
-
-Q_SIGNALS:
-    void windowModalityChanged(Qt::WindowModality windowModality);
-    // End of temporary backwards-compatibility properties
-    // ------------------------------------------------------------------------
-
 public:
 
     explicit QWindow(QScreen *screen = 0);
@@ -240,13 +211,6 @@ public:
     inline void setPosition(const QPoint &pt) { setGeometry(QRect(pt, size())); }
     inline void setPosition(int posx, int posy) { setPosition(QPoint(posx, posy)); }
 
-// Temporary backwards-compatible accessors for the benefit of Declarative
-// to be removed ASAP
-    inline void setFramePos(const QPoint &pt) { setFramePosition(pt); }
-    inline void setPos(const QPoint &pt) { setPosition(pt); }
-    inline void setPos(int posx, int posy) { setPosition(posx, posy); }
-// end of temporary accessors
-
     void resize(const QSize &newSize);
     inline void resize(int w, int h) { resize(QSize(w, h)); }
 
diff --git a/src/plugins/platforms/eglfs/qeglfswindow.cpp b/src/plugins/platforms/eglfs/qeglfswindow.cpp
index 32d20e6..df665ce 100644
--- a/src/plugins/platforms/eglfs/qeglfswindow.cpp
+++ b/src/plugins/platforms/eglfs/qeglfswindow.cpp
@@ -75,7 +75,7 @@ void QEglFSWindow::create()
     if (m_window)
         return;
 
-    if (window()->windowType() == Qt::Desktop) {
+    if (window()->type() == Qt::Desktop) {
         QRect rect(QPoint(), hooks->screenSize());
         QPlatformWindow::setGeometry(rect);
         QWindowSystemInterface::handleGeometryChange(window(), rect);
diff --git a/src/plugins/platforms/qnx/qqnxscreen.cpp b/src/plugins/platforms/qnx/qqnxscreen.cpp
index 593bec8..8b413de 100644
--- a/src/plugins/platforms/qnx/qqnxscreen.cpp
+++ b/src/plugins/platforms/qnx/qqnxscreen.cpp
@@ -425,7 +425,7 @@ void QQnxScreen::addWindow(QQnxWindow *window)
     // Such a situation would strangely break focus handling due to the
     // invisible desktop widget window being layered on top of normal
     // windows
-    if (window->window()->windowType() == Qt::Desktop)
+    if (window->window()->type() == Qt::Desktop)
         m_childWindows.push_front(window);
     else
         m_childWindows.push_back(window);
diff --git a/src/plugins/platforms/qnx/qqnxwindow.cpp b/src/plugins/platforms/qnx/qqnxwindow.cpp
index e4505c6..787f371 100644
--- a/src/plugins/platforms/qnx/qqnxwindow.cpp
+++ b/src/plugins/platforms/qnx/qqnxwindow.cpp
@@ -511,8 +511,8 @@ void QQnxWindow::setScreen(QQnxScreen *platformScreen)
 
     Q_FOREACH (QQnxWindow *childWindow, m_childWindows) {
         // Only subwindows and tooltips need necessarily be moved to another display with the window.
-        if ((window()->windowType() & Qt::WindowType_Mask) == Qt::SubWindow ||
-            (window()->windowType() & Qt::WindowType_Mask) == Qt::ToolTip)
+        if ((window()->type() & Qt::WindowType_Mask) == Qt::SubWindow ||
+            (window()->type() & Qt::WindowType_Mask) == Qt::ToolTip)
             childWindow->setScreen(platformScreen);
     }