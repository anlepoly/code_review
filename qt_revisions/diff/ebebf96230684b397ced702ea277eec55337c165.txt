diff --git a/src/declarative/qml/qdeclarativecontextscriptclass.cpp b/src/declarative/qml/qdeclarativecontextscriptclass.cpp
index da9c05d..ee8afb2 100644
--- a/src/declarative/qml/qdeclarativecontextscriptclass.cpp
+++ b/src/declarative/qml/qdeclarativecontextscriptclass.cpp
@@ -300,7 +300,7 @@ QDeclarativeContextScriptClass::property(Object *object, const Identifier &name)
             QDeclarativeContextPrivate *cp = bindContext->asQDeclarativeContextPrivate();
             const QVariant &value = cp->propertyValues.at(lastPropertyIndex);
             if (value.userType() == qMetaTypeId<QList<QObject*> >()) {
-                rv = ep->listClass->newList(QDeclarativeListProperty<QObject>(bindContext->asQDeclarativeContext(), (void*)lastPropertyIndex, 0, QDeclarativeContextPrivate::context_count, QDeclarativeContextPrivate::context_at), qMetaTypeId<QDeclarativeListProperty<QObject> >());
+                rv = ep->listClass->newList(QDeclarativeListProperty<QObject>(bindContext->asQDeclarativeContext(), (void*)qintptr(lastPropertyIndex), 0, QDeclarativeContextPrivate::context_count, QDeclarativeContextPrivate::context_at), qMetaTypeId<QDeclarativeListProperty<QObject> >());
             } else {
                 rv = ep->scriptValueFromVariant(value);
             }
diff --git a/src/imports/particles/particles.json b/src/imports/particles/particles.json
new file mode 100644
index 0000000..0967ef4
--- /dev/null
+++ b/src/imports/particles/particles.json
@@ -0,0 +1 @@
+{}
diff --git a/tests/auto/declarative/qdeclarativedebug/tst_qdeclarativedebug.cpp b/tests/auto/declarative/qdeclarativedebug/tst_qdeclarativedebug.cpp
index 696e76c..c77d6bb 100644
--- a/tests/auto/declarative/qdeclarativedebug/tst_qdeclarativedebug.cpp
+++ b/tests/auto/declarative/qdeclarativedebug/tst_qdeclarativedebug.cpp
@@ -1208,7 +1208,7 @@ int main(int argc, char *argv[])
     char **_argv = new char*[_argc];
     for (int i = 0; i < argc; ++i)
         _argv[i] = argv[i];
-    _argv[_argc - 1] = "-qmljsdebugger=port:3768";
+    _argv[_argc - 1] = const_cast<char *>("-qmljsdebugger=port:3768");
 
     QApplication app(_argc, _argv);
     tst_QDeclarativeDebug tc;
diff --git a/tests/auto/declarative/qdeclarativedebugclient/tst_qdeclarativedebugclient.cpp b/tests/auto/declarative/qdeclarativedebugclient/tst_qdeclarativedebugclient.cpp
index b1b64aa..8b1b2ca 100644
--- a/tests/auto/declarative/qdeclarativedebugclient/tst_qdeclarativedebugclient.cpp
+++ b/tests/auto/declarative/qdeclarativedebugclient/tst_qdeclarativedebugclient.cpp
@@ -141,7 +141,7 @@ int main(int argc, char *argv[])
     char **_argv = new char*[_argc];
     for (int i = 0; i < argc; ++i)
         _argv[i] = argv[i];
-    _argv[_argc - 1] = "-qmljsdebugger=port:13770";
+    _argv[_argc - 1] = const_cast<char *>("-qmljsdebugger=port:13770");
 
     QApplication app(_argc, _argv);
     tst_QDeclarativeDebugClient tc;
diff --git a/tests/auto/declarative/qdeclarativedebugservice/tst_qdeclarativedebugservice.cpp b/tests/auto/declarative/qdeclarativedebugservice/tst_qdeclarativedebugservice.cpp
index 0d50067..378bbeb 100644
--- a/tests/auto/declarative/qdeclarativedebugservice/tst_qdeclarativedebugservice.cpp
+++ b/tests/auto/declarative/qdeclarativedebugservice/tst_qdeclarativedebugservice.cpp
@@ -186,7 +186,7 @@ int main(int argc, char *argv[])
     char **_argv = new char*[_argc];
     for (int i = 0; i < argc; ++i)
         _argv[i] = argv[i];
-    _argv[_argc - 1] = "-qmljsdebugger=port:13769";
+    _argv[_argc - 1] = const_cast<char *>("-qmljsdebugger=port:13769");
 
     QApplication app(_argc, _argv);
     tst_QDeclarativeDebugService tc;
diff --git a/tests/auto/declarative/qdeclarativemoduleplugin/pureQml/plugin.cpp b/tests/auto/declarative/qdeclarativemoduleplugin/pureQml/plugin.cpp
index bd57844..f3217c0 100644
--- a/tests/auto/declarative/qdeclarativemoduleplugin/pureQml/plugin.cpp
+++ b/tests/auto/declarative/qdeclarativemoduleplugin/pureQml/plugin.cpp
@@ -67,7 +67,7 @@ public:
         qWarning("plugin created");
     }
 
-    void registerTypes(const char *uri)
+    void registerTypes(const char * /* uri */)
     {
     }
 };