diff --git a/src/multimedia/audio/qaudiodeviceinfo.cpp b/src/multimedia/audio/qaudiodeviceinfo.cpp
index a2a9f5d..aee4c7d 100644
--- a/src/multimedia/audio/qaudiodeviceinfo.cpp
+++ b/src/multimedia/audio/qaudiodeviceinfo.cpp
@@ -62,7 +62,12 @@ namespace
 class QAudioDeviceInfoPrivate : public QSharedData
 {
 public:
-    QAudioDeviceInfoPrivate():info(0) {}
+    QAudioDeviceInfoPrivate()
+        : info(0),
+          mode(QAudio::AudioOutput)
+    {
+    }
+
     QAudioDeviceInfoPrivate(const QString &r, const QByteArray &h, QAudio::Mode m):
         realm(r), handle(h), mode(m)
     {
diff --git a/src/multimedia/playback/qmediaplayer.cpp b/src/multimedia/playback/qmediaplayer.cpp
index e54cd7c..928b58b 100644
--- a/src/multimedia/playback/qmediaplayer.cpp
+++ b/src/multimedia/playback/qmediaplayer.cpp
@@ -110,6 +110,7 @@ public:
         , error(QMediaPlayer::NoError)
         , filterStates(false)
         , playlist(0)
+        , networkAccessControl(0)
     {}
 
     QMediaServiceProvider *provider;
diff --git a/src/plugins/gstreamer/mediacapture/qgstreamercapturesession.cpp b/src/plugins/gstreamer/mediacapture/qgstreamercapturesession.cpp
index 04a7e95..998c78a 100644
--- a/src/plugins/gstreamer/mediacapture/qgstreamercapturesession.cpp
+++ b/src/plugins/gstreamer/mediacapture/qgstreamercapturesession.cpp
@@ -204,7 +204,6 @@ GstElement *QGstreamerCaptureSession::buildAudioSrc()
     if (m_audioInputFactory)
         audioSrc = m_audioInputFactory->buildElement();
     else {
-        audioSrc = gst_element_factory_make("pulsesrc", "audio_src");
         QString elementName = "alsasrc";
         QString device;
 
diff --git a/src/plugins/gstreamer/mediaplayer/qgstappsrc.cpp b/src/plugins/gstreamer/mediaplayer/qgstappsrc.cpp
index 22d570a..7127d4e 100644
--- a/src/plugins/gstreamer/mediaplayer/qgstappsrc.cpp
+++ b/src/plugins/gstreamer/mediaplayer/qgstappsrc.cpp
@@ -56,6 +56,9 @@ QGstAppSrc::QGstAppSrc(QObject *parent)
     ,m_enoughData(false)
     ,m_forceData(false)
 {
+    m_callbacks.need_data   = &QGstAppSrc::on_need_data;
+    m_callbacks.enough_data = &QGstAppSrc::on_enough_data;
+    m_callbacks.seek_data   = &QGstAppSrc::on_seek_data;
 }
 
 QGstAppSrc::~QGstAppSrc()
@@ -70,9 +73,6 @@ bool QGstAppSrc::setup(GstElement* appsrc)
         return false;
 
     m_appSrc = GST_APP_SRC(appsrc);
-    m_callbacks.need_data   = &QGstAppSrc::on_need_data;
-    m_callbacks.enough_data = &QGstAppSrc::on_enough_data;
-    m_callbacks.seek_data   = &QGstAppSrc::on_seek_data;
     gst_app_src_set_callbacks(m_appSrc, (GstAppSrcCallbacks*)&m_callbacks, this, (GDestroyNotify)&QGstAppSrc::destroy_notify);
 
     g_object_get(G_OBJECT(m_appSrc), "max-bytes", &m_maxBytes, NULL);
diff --git a/src/plugins/gstreamer/mediaplayer/qgstreamerplayersession.cpp b/src/plugins/gstreamer/mediaplayer/qgstreamerplayersession.cpp
index 7a55181..62ade3d 100644
--- a/src/plugins/gstreamer/mediaplayer/qgstreamerplayersession.cpp
+++ b/src/plugins/gstreamer/mediaplayer/qgstreamerplayersession.cpp
@@ -349,13 +349,13 @@ int QGstreamerPlayerSession::activeStream(QMediaStreamsControl::StreamType strea
     if (m_playbin) {
         switch (streamType) {
         case QMediaStreamsControl::AudioStream:
-            g_object_get(G_OBJECT(m_playbin), "current-audio", streamNumber, NULL);
+            g_object_get(G_OBJECT(m_playbin), "current-audio", &streamNumber, NULL);
             break;
         case QMediaStreamsControl::VideoStream:
-            g_object_get(G_OBJECT(m_playbin), "current-video", streamNumber, NULL);
+            g_object_get(G_OBJECT(m_playbin), "current-video", &streamNumber, NULL);
             break;
         case QMediaStreamsControl::SubPictureStream:
-            g_object_get(G_OBJECT(m_playbin), "current-text", streamNumber, NULL);
+            g_object_get(G_OBJECT(m_playbin), "current-text", &streamNumber, NULL);
             break;
         default:
             break;
@@ -380,13 +380,13 @@ void QGstreamerPlayerSession::setActiveStream(QMediaStreamsControl::StreamType s
     if (m_playbin) {
         switch (streamType) {
         case QMediaStreamsControl::AudioStream:
-            g_object_set(G_OBJECT(m_playbin), "current-audio", &streamNumber, NULL);
+            g_object_set(G_OBJECT(m_playbin), "current-audio", streamNumber, NULL);
             break;
         case QMediaStreamsControl::VideoStream:
-            g_object_set(G_OBJECT(m_playbin), "current-video", &streamNumber, NULL);
+            g_object_set(G_OBJECT(m_playbin), "current-video", streamNumber, NULL);
             break;
         case QMediaStreamsControl::SubPictureStream:
-            g_object_set(G_OBJECT(m_playbin), "current-text", &streamNumber, NULL);
+            g_object_set(G_OBJECT(m_playbin), "current-text", streamNumber, NULL);
             break;
         default:
             break;
@@ -1297,6 +1297,8 @@ void QGstreamerPlayerSession::getStreamsInfo()
                 qDebug() << "Encountered unknown stream type";
 #endif
                 gst_caps_unref(caps);
+                streamType = QMediaStreamsControl::UnknownStream;
+                break;
             }
             default:
                 streamType = QMediaStreamsControl::UnknownStream;
diff --git a/src/plugins/pulseaudio/qpulseaudioengine.cpp b/src/plugins/pulseaudio/qpulseaudioengine.cpp
index b0d5c78..743bdd8 100644
--- a/src/plugins/pulseaudio/qpulseaudioengine.cpp
+++ b/src/plugins/pulseaudio/qpulseaudioengine.cpp
@@ -183,6 +183,9 @@ Q_GLOBAL_STATIC(QPulseAudioEngine, pulseEngine);
 
 QPulseAudioEngine::QPulseAudioEngine(QObject *parent)
     : QObject(parent)
+    , m_mainLoopApi(0)
+    , m_context(0)
+
 {
     bool keepGoing = true;
     bool ok = true;