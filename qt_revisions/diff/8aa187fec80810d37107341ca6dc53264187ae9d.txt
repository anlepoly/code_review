diff --git a/src/quick/items/context2d/qquickcontext2dnode.cpp b/src/quick/items/context2d/qquickcontext2dnode.cpp
index d2508bd..94a944c 100644
--- a/src/quick/items/context2d/qquickcontext2dnode.cpp
+++ b/src/quick/items/context2d/qquickcontext2dnode.cpp
@@ -115,7 +115,7 @@ void QQuickContext2DNode::updateTexture()
 
 void QQuickContext2DNode::updateGeometry()
 {
-    QRectF source = m_texture->textureSubRect();
+    QRectF source = m_texture->normalizedTextureSubRect();
     QSGGeometry::updateTexturedRectGeometry(&m_geometry,
                                             QRectF(0, 0, m_size.width(), m_size.height()),
                                             source);
diff --git a/src/quick/items/context2d/qquickcontext2dtexture.cpp b/src/quick/items/context2d/qquickcontext2dtexture.cpp
index 1b3b13d..24cb343 100644
--- a/src/quick/items/context2d/qquickcontext2dtexture.cpp
+++ b/src/quick/items/context2d/qquickcontext2dtexture.cpp
@@ -468,7 +468,7 @@ void QQuickContext2DFBOTexture::bind()
     updateBindOptions();
 }
 
-QRectF QQuickContext2DFBOTexture::textureSubRect() const
+QRectF QQuickContext2DFBOTexture::normalizedTextureSubRect() const
 {
     return QRectF(0
                 , 0
diff --git a/src/quick/items/context2d/qquickcontext2dtexture_p.h b/src/quick/items/context2d/qquickcontext2dtexture_p.h
index fdcac0f..0a81dec 100644
--- a/src/quick/items/context2d/qquickcontext2dtexture_p.h
+++ b/src/quick/items/context2d/qquickcontext2dtexture_p.h
@@ -138,7 +138,7 @@ public:
     virtual QImage toImage(const QRectF& region = QRectF());
     virtual QPaintDevice* beginPainting();
     virtual void endPainting();
-    QRectF textureSubRect() const;
+    QRectF normalizedTextureSubRect() const;
     virtual bool supportThreadRendering() const {return false;}
     virtual bool supportDirectRendering() const {return false;}
     virtual QQuickCanvasItem::RenderTarget renderTarget() const;
diff --git a/src/quick/items/qquickninepatchnode.cpp b/src/quick/items/qquickninepatchnode.cpp
index 577fcb8..88f7da5 100644
--- a/src/quick/items/qquickninepatchnode.cpp
+++ b/src/quick/items/qquickninepatchnode.cpp
@@ -145,7 +145,7 @@ void QQuickNinePatchNode::update()
     float tw = m_material.texture()->textureSize().width();
     float th = m_material.texture()->textureSize().height();
 
-    QRectF textureSubRect = m_material.texture()->textureSubRect();
+    QRectF textureSubRect = m_material.texture()->normalizedTextureSubRect();
     QSize textureSize = m_material.texture()->textureSize();
 
     float rightBorder = tw - m_innerRect.right();
diff --git a/src/quick/scenegraph/qsgdefaultimagenode.cpp b/src/quick/scenegraph/qsgdefaultimagenode.cpp
index e7c8502..5d5f1ce 100644
--- a/src/quick/scenegraph/qsgdefaultimagenode.cpp
+++ b/src/quick/scenegraph/qsgdefaultimagenode.cpp
@@ -182,7 +182,7 @@ void QSGDefaultImageNode::updateGeometry()
         m_geometry.setDrawingMode(GL_TRIANGLE_STRIP);
         QSGGeometry::updateTexturedRectGeometry(&m_geometry, QRectF(), QRectF());
     } else {
-        QRectF textureRect = t->textureSubRect();
+        QRectF textureRect = t->normalizedTextureSubRect();
 
         bool isSubRect = textureRect != QRectF(0, 0, 1, 1);
         const int ceilRight = qCeil(m_sourceRect.right());
diff --git a/src/quick/scenegraph/util/qsgtexture.cpp b/src/quick/scenegraph/util/qsgtexture.cpp
index 32042b0..f06c201 100644
--- a/src/quick/scenegraph/util/qsgtexture.cpp
+++ b/src/quick/scenegraph/util/qsgtexture.cpp
@@ -249,7 +249,7 @@ bool QSGTexture::isAtlasTexture() const
     The default implementation returns a rect at position (0, 0) with
     width and height of 1.
  */
-QRectF QSGTexture::textureSubRect() const
+QRectF QSGTexture::normalizedTextureSubRect() const
 {
     return QRectF(0, 0, 1, 1);
 }
diff --git a/src/quick/scenegraph/util/qsgtexture.h b/src/quick/scenegraph/util/qsgtexture.h
index df07382..a31d09e 100644
--- a/src/quick/scenegraph/util/qsgtexture.h
+++ b/src/quick/scenegraph/util/qsgtexture.h
@@ -76,7 +76,7 @@ public:
     virtual bool hasAlphaChannel() const = 0;
     virtual bool hasMipmaps() const = 0;
 
-    virtual QRectF textureSubRect() const;
+    virtual QRectF normalizedTextureSubRect() const;
 
     virtual bool isAtlasTexture() const;
 
@@ -106,7 +106,7 @@ protected:
 QRectF QSGTexture::convertToNormalizedSourceRect(const QRectF &rect) const
 {
     QSize s = textureSize();
-    QRectF r = textureSubRect();
+    QRectF r = normalizedTextureSubRect();
 
     qreal sx = r.width() / s.width();
     qreal sy = r.height() / s.height();