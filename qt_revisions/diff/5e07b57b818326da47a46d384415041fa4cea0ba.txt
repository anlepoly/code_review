diff --git a/src/declarative/qml/qdeclarativebinding.cpp b/src/declarative/qml/qdeclarativebinding.cpp
index 9c31774..4c29fce 100644
--- a/src/declarative/qml/qdeclarativebinding.cpp
+++ b/src/declarative/qml/qdeclarativebinding.cpp
@@ -282,7 +282,7 @@ QDeclarativeBinding::QDeclarativeBinding(const QString &str, bool isRewritten, Q
     To avoid exposing v8 in the public API, functionPtr must be a pointer to a v8::Handle<v8::Function>.  
     For example:
         v8::Handle<v8::Function> function;
-        new QDeclarativeBInding(&function, scope, ctxt);
+        new QDeclarativeBinding(&function, scope, ctxt);
  */
 QDeclarativeBinding::QDeclarativeBinding(void *functionPtr, QObject *obj, QDeclarativeContextData *ctxt, 
                                          QObject *parent)
diff --git a/src/declarative/qml/qdeclarativeengine.cpp b/src/declarative/qml/qdeclarativeengine.cpp
index 335eb75..e02cdee 100644
--- a/src/declarative/qml/qdeclarativeengine.cpp
+++ b/src/declarative/qml/qdeclarativeengine.cpp
@@ -891,7 +891,7 @@ void QDeclarativeEngine::setContextForObject(QObject *object, QDeclarativeContex
   explicitly.  QML uses a heuristic to set the default object
   ownership.  By default, an object that is created by QML has
   JavaScriptOwnership.  The exception to this are the root objects
-  created by calling QDeclarativeCompnent::create() or
+  created by calling QDeclarativeComponent::create() or
   QDeclarativeComponent::beginCreate() which have CppOwnership by
   default.  The ownership of these root-level objects is considered to
   have been transferred to the C++ caller.