diff --git a/src/widgets/kernel/qwidget.cpp b/src/widgets/kernel/qwidget.cpp
index d7a7efd..a682a24 100644
--- a/src/widgets/kernel/qwidget.cpp
+++ b/src/widgets/kernel/qwidget.cpp
@@ -10804,274 +10804,6 @@ void QWidget::stackUnder(QWidget* w)
 */
 
 /*!
-    \fn bool QWidget::isVisibleToTLW() const
-
-    Use isVisible() instead.
-*/
-
-/*!
-    \fn void QWidget::iconify()
-
-    Use showMinimized() instead.
-*/
-
-/*!
-    \fn void QWidget::constPolish() const
-
-    Use ensurePolished() instead.
-*/
-
-/*!
-    \fn void QWidget::reparent(QWidget *parent, Qt::WindowFlags f, const QPoint &p, bool showIt)
-
-    Use setParent() to change the parent or the widget's widget flags;
-    use move() to move the widget, and use show() to show the widget.
-*/
-
-/*!
-    \fn void QWidget::reparent(QWidget *parent, const QPoint &p, bool showIt)
-
-    Use setParent() to change the parent; use move() to move the
-    widget, and use show() to show the widget.
-*/
-
-/*!
-    \fn void QWidget::recreate(QWidget *parent, Qt::WindowFlags f, const QPoint & p, bool showIt)
-
-    Use setParent() to change the parent or the widget's widget flags;
-    use move() to move the widget, and use show() to show the widget.
-*/
-
-/*!
-    \fn bool QWidget::hasMouse() const
-
-    Use testAttribute(Qt::WA_UnderMouse) instead.
-*/
-
-/*!
-    \fn bool QWidget::ownCursor() const
-
-    Use testAttribute(Qt::WA_SetCursor) instead.
-*/
-
-/*!
-    \fn bool QWidget::ownFont() const
-
-    Use testAttribute(Qt::WA_SetFont) instead.
-*/
-
-/*!
-    \fn void QWidget::unsetFont()
-
-    Use setFont(QFont()) instead.
-*/
-
-/*!
-    \fn bool QWidget::ownPalette() const
-
-    Use testAttribute(Qt::WA_SetPalette) instead.
-*/
-
-/*!
-    \fn void QWidget::unsetPalette()
-
-    Use setPalette(QPalette()) instead.
-*/
-
-/*!
-    \fn void QWidget::setEraseColor(const QColor &color)
-
-    Use the palette instead.
-
-    \oldcode
-    widget->setEraseColor(color);
-    \newcode
-    QPalette palette;
-    palette.setColor(widget->backgroundRole(), color);
-    widget->setPalette(palette);
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setErasePixmap(const QPixmap &pixmap)
-
-    Use the palette instead.
-
-    \oldcode
-    widget->setErasePixmap(pixmap);
-    \newcode
-    QPalette palette;
-    palette.setBrush(widget->backgroundRole(), QBrush(pixmap));
-    widget->setPalette(palette);
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setPaletteForegroundColor(const QColor &color)
-
-    Use the palette directly.
-
-    \oldcode
-    widget->setPaletteForegroundColor(color);
-    \newcode
-    QPalette palette;
-    palette.setColor(widget->foregroundRole(), color);
-    widget->setPalette(palette);
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setPaletteBackgroundColor(const QColor &color)
-
-    Use the palette directly.
-
-    \oldcode
-    widget->setPaletteBackgroundColor(color);
-    \newcode
-    QPalette palette;
-    palette.setColor(widget->backgroundRole(), color);
-    widget->setPalette(palette);
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setPaletteBackgroundPixmap(const QPixmap &pixmap)
-
-    Use the palette directly.
-
-    \oldcode
-    widget->setPaletteBackgroundPixmap(pixmap);
-    \newcode
-    QPalette palette;
-    palette.setBrush(widget->backgroundRole(), QBrush(pixmap));
-    widget->setPalette(palette);
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setBackgroundPixmap(const QPixmap &pixmap)
-
-    Use the palette instead.
-
-    \oldcode
-    widget->setBackgroundPixmap(pixmap);
-    \newcode
-    QPalette palette;
-    palette.setBrush(widget->backgroundRole(), QBrush(pixmap));
-    widget->setPalette(palette);
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setBackgroundColor(const QColor &color)
-
-    Use the palette instead.
-
-    \oldcode
-    widget->setBackgroundColor(color);
-    \newcode
-    QPalette palette;
-    palette.setColor(widget->backgroundRole(), color);
-    widget->setPalette(palette);
-    \endcode
-*/
-
-
-/*!
-    \fn QWidget *QWidget::parentWidget(bool sameWindow) const
-
-    Use the no-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::setKeyCompression(bool b)
-
-    Use setAttribute(Qt::WA_KeyCompression, b) instead.
-*/
-
-/*!
-    \fn void QWidget::setFont(const QFont &f, bool b)
-
-    Use the single-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::setPalette(const QPalette &p, bool b)
-
-    Use the single-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::setBackgroundOrigin(BackgroundOrigin background)
-
-    \obsolete
-*/
-
-/*!
-    \fn BackgroundOrigin QWidget::backgroundOrigin() const
-
-    \obsolete
-
-    Always returns \c WindowOrigin.
-*/
-
-/*!
-    \fn QPoint QWidget::backgroundOffset() const
-
-    \obsolete
-
-    Always returns QPoint().
-*/
-
-/*!
-    \fn void QWidget::repaint(bool b)
-
-    The boolean parameter \a b is ignored. Use the no-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::repaint(int x, int y, int w, int h, bool b)
-
-    The boolean parameter \a b is ignored. Use the four-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::repaint(const QRect &r, bool b)
-
-    The boolean parameter \a b is ignored. Use the single rect-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::repaint(const QRegion &rgn, bool b)
-
-    The boolean parameter \a b is ignored. Use the single region-argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::erase()
-
-    Drawing may only take place in a QPaintEvent. Overload
-    paintEvent() to do your erasing and call update() to schedule a
-    replaint whenever necessary. See also QPainter.
-*/
-
-/*!
-    \fn void QWidget::erase(int x, int y, int w, int h)
-
-    Drawing may only take place in a QPaintEvent. Overload
-    paintEvent() to do your erasing and call update() to schedule a
-    replaint whenever necessary. See also QPainter.
-*/
-
-/*!
-    \fn void QWidget::erase(const QRect &rect)
-
-    Drawing may only take place in a QPaintEvent. Overload
-    paintEvent() to do your erasing and call update() to schedule a
-    replaint whenever necessary. See also QPainter.
-*/
-
-/*!
     \fn void QWidget::drawText(const QPoint &p, const QString &s)
 
     Drawing may only take place in a QPaintEvent. Overload
@@ -11088,42 +10820,6 @@ void QWidget::stackUnder(QWidget* w)
 */
 
 /*!
-    \fn QWidget *QWidget::childAt(const QPoint &p, bool includeThis) const
-
-    Use the single point argument overload instead.
-*/
-
-/*!
-    \fn void QWidget::setCaption(const QString &c)
-
-    Use setWindowTitle() instead.
-*/
-
-/*!
-    \fn void QWidget::setIcon(const QPixmap &i)
-
-    Use setWindowIcon() instead.
-*/
-
-/*!
-    \fn void QWidget::setIconText(const QString &it)
-
-    Use setWindowIconText() instead.
-*/
-
-/*!
-    \fn QString QWidget::caption() const
-
-    Use windowTitle() instead.
-*/
-
-/*!
-    \fn QString QWidget::iconText() const
-
-    Use windowIconText() instead.
-*/
-
-/*!
     \fn bool QWidget::isTopLevel() const
     \obsolete
 
@@ -11141,84 +10837,6 @@ void QWidget::stackUnder(QWidget* w)
 */
 
 /*!
-    \fn void QWidget::setInputMethodEnabled(bool enabled)
-
-    Use setAttribute(Qt::WA_InputMethodEnabled, \a enabled) instead.
-*/
-
-/*!
-    \fn bool QWidget::isInputMethodEnabled() const
-
-    Use testAttribute(Qt::WA_InputMethodEnabled) instead.
-*/
-
-/*!
-    \fn void QWidget::setActiveWindow()
-
-    Use activateWindow() instead.
-*/
-
-/*!
-    \fn bool QWidget::isShown() const
-
-    Use !isHidden() instead (notice the exclamation mark), or use isVisible() to check whether the widget is visible.
-*/
-
-/*!
-    \fn bool QWidget::isDialog() const
-
-    Use windowType() == Qt::Dialog instead.
-*/
-
-/*!
-    \fn bool QWidget::isPopup() const
-
-    Use windowType() == Qt::Popup instead.
-*/
-
-/*!
-    \fn bool QWidget::isDesktop() const
-
-    Use windowType() == Qt::Desktop instead.
-*/
-
-/*!
-    \fn void QWidget::polish()
-
-    Use ensurePolished() instead.
-*/
-
-/*!
-    \fn QWidget *QWidget::childAt(int x, int y, bool includeThis) const
-
-    Use the childAt() overload that doesn't have an \a includeThis parameter.
-
-    \oldcode
-        return widget->childAt(x, y, true);
-    \newcode
-        QWidget *child = widget->childAt(x, y, true);
-        if (child)
-            return child;
-        if (widget->rect().contains(x, y))
-            return widget;
-    \endcode
-*/
-
-/*!
-    \fn void QWidget::setSizePolicy(QSizePolicy::Policy hor, QSizePolicy::Policy ver, bool hfw)
-    \compat
-
-    Use the \l sizePolicy property and heightForWidth() function instead.
-*/
-
-/*!
-    \fn bool QWidget::isUpdatesEnabled() const
-    \compat
-
-    Use the \l updatesEnabled property instead.
-*/
-
-/*!
      \macro QWIDGETSIZE_MAX
      \relates QWidget