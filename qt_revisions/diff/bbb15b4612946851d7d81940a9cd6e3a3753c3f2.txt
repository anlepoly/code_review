diff --git a/src/plugins/platforms/windows/qwindowswindow.cpp b/src/plugins/platforms/windows/qwindowswindow.cpp
index a7140a3..2b86113 100644
--- a/src/plugins/platforms/windows/qwindowswindow.cpp
+++ b/src/plugins/platforms/windows/qwindowswindow.cpp
@@ -1392,6 +1392,13 @@ void QWindowsWindow::setMask(const QRegion &region)
          return;
     }
     const HRGN winRegion = qRegionToWinRegion(region);
+
+    // Mask is in client area coordinates, so offset it in case we have a frame
+    if (window()->isTopLevel()) {
+        const QMargins margins = frameMargins();
+        OffsetRgn(winRegion, margins.left(), margins.top());
+    }
+
     // SetWindowRgn takes ownership.
     if (!SetWindowRgn(m_data.hwnd, winRegion, true))
         DeleteObject(winRegion);
diff --git a/src/widgets/kernel/qwidget_qpa.cpp b/src/widgets/kernel/qwidget_qpa.cpp
index 25d79fa..c524491 100644
--- a/src/widgets/kernel/qwidget_qpa.cpp
+++ b/src/widgets/kernel/qwidget_qpa.cpp
@@ -151,6 +151,9 @@ void QWidgetPrivate::create_sys(WId window, bool initializeWindow, bool destroyO
     // Check children and create windows for them if necessary
     q_createNativeChildrenAndSetParent(q);
 
+    if (extra && !extra->mask.isEmpty())
+        setMask_sys(extra->mask);
+
     // If widget is already shown, set window visible, too
     if (q->isVisible())
         win->setVisible(true);