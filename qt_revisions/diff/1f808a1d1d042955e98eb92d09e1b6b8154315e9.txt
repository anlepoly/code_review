diff --git a/configure b/configure
index cb146b4..364e4da 100755
--- a/configure
+++ b/configure
@@ -738,6 +738,7 @@ MIN_DBUS_1_VERSION=0.93
 # initalize internal variables
 CFG_CONFIGURE_EXIT_ON_ERROR=yes
 CFG_PROFILE=no
+CFG_STRIP=yes
 CFG_GUI=auto # (yes|no|auto)
 CFG_WIDGETS=yes
 CFG_QCONFIG=full
@@ -1297,6 +1298,13 @@ while [ "$#" -gt 0 ]; do
             UNKNOWN_OPT=yes
         fi
         ;;
+    strip)
+        if [ "$VAL" = "yes" ] || [ "$VAL" = "no" ]; then
+            CFG_STRIP=$VAL
+        else
+            UNKNOWN_OPT=yes
+        fi
+        ;;
     testcocoon)
         if [ "$VAL" = "yes" ]; then
             QTCONFIG_CONFIG="$QTCONFIG_CONFIG testcocoon"
@@ -3202,6 +3210,9 @@ Additional options:
     -no-icu ............ Do not compile support for ICU libraries.
  +  -icu ............... Compile support for ICU libraries.
 
+    -no-strip .......... Do not strip binaries and libraries of unneeded symbols.
+ *  -strip ............. Strip binaries and libraries of unneeded symbols when installing.
+
  $PHN  -no-pch ............ Do not use precompiled header support.
  $PHY  -pch ............... Use precompiled header support.
 
@@ -5282,6 +5293,7 @@ if [ "$CFG_USE_GNUMAKE" = "yes" ]; then
 fi
 [ "$CFG_REDUCE_EXPORTS" = "yes" ] && QT_CONFIG="$QT_CONFIG reduce_exports"
 [ "$CFG_REDUCE_RELOCATIONS" = "yes" ] && QT_CONFIG="$QT_CONFIG reduce_relocations"
+[ "$CFG_STRIP" = "no" ] && QMAKE_CONFIG="$QMAKE_CONFIG nostrip"
 [ "$CFG_PRECOMPILE" = "yes" ] && QMAKE_CONFIG="$QMAKE_CONFIG precompile_header"
 if [ "$CFG_SEPARATE_DEBUG_INFO" = "yes" ]; then
     QMakeVar add QMAKE_CFLAGS -g
diff --git a/tools/configure/configureapp.cpp b/tools/configure/configureapp.cpp
index 2fb9f27..251fdfe 100644
--- a/tools/configure/configureapp.cpp
+++ b/tools/configure/configureapp.cpp
@@ -200,6 +200,7 @@ Configure::Configure(int& argc, char** argv)
     dictionary[ "PROCESS" ]         = "partial";
     dictionary[ "WIDGETS" ]         = "yes";
     dictionary[ "RTTI" ]            = "yes";
+    dictionary[ "STRIP" ]           = "yes";
     dictionary[ "SSE2" ]            = "auto";
     dictionary[ "SSE3" ]            = "auto";
     dictionary[ "SSSE3" ]           = "auto";
@@ -809,6 +810,11 @@ void Configure::parseCmdLine()
         else if (configCmdLine.at(i) == "-no-rtti")
             dictionary[ "RTTI" ] = "no";
 
+        else if (configCmdLine.at(i) == "-strip")
+            dictionary[ "STRIP" ] = "yes";
+        else if (configCmdLine.at(i) == "-no-strip")
+            dictionary[ "STRIP" ] = "no";
+
         else if (configCmdLine.at(i) == "-accessibility")
             dictionary[ "ACCESSIBILITY" ] = "yes";
         else if (configCmdLine.at(i) == "-no-accessibility") {
@@ -1741,7 +1747,10 @@ bool Configure::displayHelp()
         desc("PROCESS", "no", "-dont-process",          "Do not generate Makefiles/Project files. This will override -no-fast if specified.\n");
 
         desc("RTTI", "no",      "-no-rtti",             "Do not compile runtime type information.");
-        desc("RTTI", "yes",     "-rtti",                "Compile runtime type information.\n");
+        desc("RTTI", "yes",     "-rtti",                "Compile runtime type information.");
+        desc("STRIP", "no",     "-no-strip",            "Do not strip libraries and executables of debug info when installing.");
+        desc("STRIP", "yes",    "-strip",               "Strip libraries and executables of debug info when installing.\n");
+
         desc("SSE2", "no",      "-no-sse2",             "Do not compile with use of SSE2 instructions.");
         desc("SSE2", "yes",     "-sse2",                "Compile with use of SSE2 instructions.");
         desc("SSE3", "no",      "-no-sse3",             "Do not compile with use of SSE3 instructions.");
@@ -2711,6 +2720,8 @@ void Configure::generateCachefile()
             moduleStream << " neon";
         if (dictionary[ "LARGE_FILE" ] == "yes")
             moduleStream << " largefile";
+        if (dictionary[ "STRIP" ] == "no")
+            moduleStream << " nostrip";
         moduleStream << endl;
 
         moduleStream.flush();