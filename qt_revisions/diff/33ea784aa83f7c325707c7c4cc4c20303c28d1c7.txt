diff --git a/src/tools/qdoc/cppcodeparser.cpp b/src/tools/qdoc/cppcodeparser.cpp
index a7cdeea..86e57a0 100644
--- a/src/tools/qdoc/cppcodeparser.cpp
+++ b/src/tools/qdoc/cppcodeparser.cpp
@@ -207,7 +207,7 @@ void CppCodeParser::initializeParser(const Config &config)
     if (!exampleFilePatterns.isEmpty())
         exampleNameFilter = exampleFilePatterns.join(" ");
     else
-        exampleNameFilter = "*.cpp *.h *.js *.xq *.svg *.xml *.ui";
+        exampleNameFilter = "*.cpp *.h *.js *.xq *.svg *.xml *.dita *.ui";
 
     QStringList exampleImagePatterns = config.getStringList(
                 CONFIG_EXAMPLES + Config::dot + CONFIG_IMAGEEXTENSIONS);
diff --git a/src/tools/qdoc/ditaxmlgenerator.cpp b/src/tools/qdoc/ditaxmlgenerator.cpp
index aaf5db1..b716863 100644
--- a/src/tools/qdoc/ditaxmlgenerator.cpp
+++ b/src/tools/qdoc/ditaxmlgenerator.cpp
@@ -2390,11 +2390,11 @@ void DitaXmlGenerator::writeRelatedLinks(const FakeNode* node, CodeMarker* marke
 }
 
 /*!
-  Returns "xml" for this subclass of class Generator.
+  Returns "dita" for this subclass of class Generator.
  */
 QString DitaXmlGenerator::fileExtension(const Node * /* node */) const
 {
-    return "xml";
+    return "dita";
 }
 
 /*!
@@ -3238,8 +3238,6 @@ void DitaXmlGenerator::generateQmlItem(const Node* node,
         marked.remove("<@type>");
         marked.remove("</@type>");
     }
-    if (marked.contains("setAudioAlertEnabled"))
-        qDebug() << "MARKED:" << marked;
     writeText(marked, marker, relative);
 }
 
@@ -4267,7 +4265,8 @@ QString DitaXmlGenerator::getLink(const Atom* atom,
                 QString guid = lookupGuid(link,refForAtom(targetAtom,*node));
                 link += QLatin1Char('#') + guid;
             }
-            else if (!link.isEmpty() && *node && link.endsWith(".xml")) {
+            else if (!link.isEmpty() && *node &&
+                     (link.endsWith(".xml") || link.endsWith(".dita"))) {
                 link += QLatin1Char('#') + (*node)->guid();
             }
         }
@@ -5669,7 +5668,8 @@ DitaXmlGenerator::generateInnerNode(const InnerNode* node)
     CodeMarker *marker = CodeMarker::markerForFileName(node->location().filePath());
 
     if (node->parent() != 0) {
-        beginSubPage(node, fileName(node));
+        if (!node->name().endsWith(".ditamap"))
+            beginSubPage(node, fileName(node));
         if (node->type() == Node::Namespace || node->type() == Node::Class) {
             generateClassLikeNode(node, marker);
         }
@@ -5681,7 +5681,8 @@ DitaXmlGenerator::generateInnerNode(const InnerNode* node)
             else
                 generateFakeNode(static_cast<const FakeNode*>(node), marker);
         }
-        endSubPage();
+        if (!node->name().endsWith(".ditamap"))
+            endSubPage();
     }
 
     NodeList::ConstIterator c = node->childNodes().begin();
diff --git a/src/tools/qdoc/node.cpp b/src/tools/qdoc/node.cpp
index 0575bfb..e4350f1 100644
--- a/src/tools/qdoc/node.cpp
+++ b/src/tools/qdoc/node.cpp
@@ -514,8 +514,8 @@ QString Node::ditaXmlHref()
     else {
         href = fileBase();
     }
-    if (!href.endsWith(".xml"))
-        href += ".xml";
+    if (!href.endsWith(".xml") && !href.endsWith(".dita"))
+        href += ".dita";
     return href + QLatin1Char('#') + guid();
 }
 
diff --git a/src/tools/qdoc/quoter.cpp b/src/tools/qdoc/quoter.cpp
index 0c16acb..9ae2a31 100644
--- a/src/tools/qdoc/quoter.cpp
+++ b/src/tools/qdoc/quoter.cpp
@@ -125,7 +125,7 @@ Quoter::Quoter()
           //! [<id>]
         * .pro, .py files:
           #! [<id>]
-        * .html, .qrc, .ui, .xq, .xml files:
+        * .html, .qrc, .ui, .xq, .xml .dita files:
           <!-- [<id>] -->
     */
     commentHash["pro"] = "#!";
@@ -134,6 +134,7 @@ Quoter::Quoter()
     commentHash["qrc"] = "<!--";
     commentHash["ui"] = "<!--";
     commentHash["xml"] = "<!--";
+    commentHash["dita"] = "<!--";
     commentHash["xq"] = "<!--";
 }