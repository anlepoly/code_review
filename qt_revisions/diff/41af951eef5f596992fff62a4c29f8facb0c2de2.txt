diff --git a/src/gui/accessible/qaccessible.h b/src/gui/accessible/qaccessible.h
index 7ccd379..37071bc 100644
--- a/src/gui/accessible/qaccessible.h
+++ b/src/gui/accessible/qaccessible.h
@@ -298,9 +298,7 @@ public:
     Q_DECLARE_FLAGS(Relation, RelationFlag)
 
     enum Method {
-        ListSupportedMethods      = 0,
-        SetCursorPosition         = 1,
-        GetCursorPosition         = 2
+        ListSupportedMethods      = 0
     };
 
     enum InterfaceType
diff --git a/src/plugins/accessible/widgets/qaccessiblewidgets.cpp b/src/plugins/accessible/widgets/qaccessiblewidgets.cpp
index 98b88b5..f1c8540 100644
--- a/src/plugins/accessible/widgets/qaccessiblewidgets.cpp
+++ b/src/plugins/accessible/widgets/qaccessiblewidgets.cpp
@@ -282,26 +282,6 @@ void QAccessibleTextEdit::setText(QAccessible::Text t, const QString &text)
     textEdit()->setText(text);
 }
 
-QVariant QAccessibleTextEdit::invokeMethod(QAccessible::Method method,
-                                                     const QVariantList &params)
-{
-    switch (method) {
-    case QAccessible::ListSupportedMethods: {
-        QSet<QAccessible::Method> set;
-        set << QAccessible::ListSupportedMethods << QAccessible::SetCursorPosition << QAccessible::GetCursorPosition;
-        return QVariant::fromValue(set | qvariant_cast<QSet<QAccessible::Method> >(
-                    QAccessibleWidget::invokeMethod(method, params)));
-    }
-    case QAccessible::SetCursorPosition:
-        setCursorPosition(params.value(0).toInt());
-        return true;
-    case QAccessible::GetCursorPosition:
-        return textEdit()->textCursor().position();
-    default:
-        return QAccessibleWidget::invokeMethod(method, params);
-    }
-}
-
 void *QAccessibleTextEdit::interface_cast(QAccessible::InterfaceType t)
 {
     if (t == QAccessible::TextInterface)
diff --git a/src/plugins/accessible/widgets/qaccessiblewidgets.h b/src/plugins/accessible/widgets/qaccessiblewidgets.h
index 1beeae8..5fce746 100644
--- a/src/plugins/accessible/widgets/qaccessiblewidgets.h
+++ b/src/plugins/accessible/widgets/qaccessiblewidgets.h
@@ -75,7 +75,6 @@ public:
     QString text(QAccessible::Text t) const;
     void setText(QAccessible::Text t, const QString &text);
 
-    QVariant invokeMethod(QAccessible::Method method, const QVariantList &params);
     void *interface_cast(QAccessible::InterfaceType t);
 
     // QAccessibleTextInterface
diff --git a/src/plugins/accessible/widgets/simplewidgets.cpp b/src/plugins/accessible/widgets/simplewidgets.cpp
index a914525..86257f7 100644
--- a/src/plugins/accessible/widgets/simplewidgets.cpp
+++ b/src/plugins/accessible/widgets/simplewidgets.cpp
@@ -601,26 +601,6 @@ QAccessible::State QAccessibleLineEdit::state() const
     return state;
 }
 
-QVariant QAccessibleLineEdit::invokeMethod(QAccessible::Method method,
-                                                     const QVariantList &params)
-{
-    switch (method) {
-    case QAccessible::ListSupportedMethods: {
-        QSet<QAccessible::Method> set;
-        set << QAccessible::ListSupportedMethods << QAccessible::SetCursorPosition << QAccessible::GetCursorPosition;
-        return QVariant::fromValue(set | qvariant_cast<QSet<QAccessible::Method> >(
-                QAccessibleWidget::invokeMethod(method, params)));
-    }
-    case QAccessible::SetCursorPosition:
-        setCursorPosition(params.value(0).toInt());
-        return true;
-    case QAccessible::GetCursorPosition:
-        return cursorPosition();
-    default:
-        return QAccessibleWidget::invokeMethod(method, params);
-    }
-}
-
 void *QAccessibleLineEdit::interface_cast(QAccessible::InterfaceType t)
 {
     if (t == QAccessible::TextInterface)
diff --git a/src/plugins/accessible/widgets/simplewidgets.h b/src/plugins/accessible/widgets/simplewidgets.h
index 05feca2..2ab1890 100644
--- a/src/plugins/accessible/widgets/simplewidgets.h
+++ b/src/plugins/accessible/widgets/simplewidgets.h
@@ -124,7 +124,6 @@ public:
     QString text(QAccessible::Text t) const;
     void setText(QAccessible::Text t, const QString &text);
     QAccessible::State state() const;
-    QVariant invokeMethod(QAccessible::Method method, const QVariantList &params);
     void *interface_cast(QAccessible::InterfaceType t);
 
     // QAccessibleTextInterface