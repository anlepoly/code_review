diff --git a/release-tools/bld_ifw_tools_impl.py b/release-tools/bld_ifw_tools_impl.py
index c5914ef..692ce67 100644
--- a/release-tools/bld_ifw_tools_impl.py
+++ b/release-tools/bld_ifw_tools_impl.py
@@ -291,13 +291,13 @@ def archive_installerbase():
 
     bin_temp = ''
     if bldinstallercommon.is_linux_platform() or bldinstallercommon.is_mac_platform():
-        bin_path = INSTALLER_FRAMEWORK_BUILD_DIR + os.sep + 'installerbuilder' + os.sep + 'bin' + os.sep + 'installerbase'
+        bin_path = bldinstallercommon.locate_executable(INSTALLER_FRAMEWORK_BUILD_DIR, 'installerbase')
         bin_temp = SCRIPT_ROOT_DIR + os.sep + '.tempSDKMaintenanceTool'
         shutil.copy(bin_path, bin_temp)
         cmd_args_archive = ['7z', 'a', INSTALLERBASE_ARCHIVE_NAME, bin_temp]
         cmd_args_clean = ['rm', bin_temp]
     if bldinstallercommon.is_win_platform():
-        bin_path = INSTALLER_FRAMEWORK_BUILD_DIR + os.sep + 'installerbuilder' + os.sep + 'bin' + os.sep + 'installerbase.exe'
+        bin_path = bldinstallercommon.locate_executable(INSTALLER_FRAMEWORK_BUILD_DIR, 'installerbase.exe')
         bin_temp = SCRIPT_ROOT_DIR + os.sep + 'temp'
         bldinstallercommon.create_dirs(bin_temp)
         shutil.copy(bin_path, bin_temp + os.sep + 'SDKMaintenanceToolBase.exe')
diff --git a/release-tools/bldinstallercommon.py b/release-tools/bldinstallercommon.py
index e81cc0c..f63b266 100644
--- a/release-tools/bldinstallercommon.py
+++ b/release-tools/bldinstallercommon.py
@@ -90,11 +90,17 @@ def is_content_url_valid(url):
 ###############################
 # function
 ###############################
+CURRENT_DOWNLOAD_PERCENT = 0
 def dlProgress(count, blockSize, totalSize):
+    global CURRENT_DOWNLOAD_PERCENT
     percent = int(count*blockSize*100/totalSize)
-    sys.stdout.write("\r" + "     Downloading: %d%%" % percent)
-    sys.stdout.flush()
+    # produce only reasonable amount of prints into stdout
+    if percent > CURRENT_DOWNLOAD_PERCENT:
+        CURRENT_DOWNLOAD_PERCENT = percent
+        sys.stdout.write("\r" + "     Downloading: %d%%" % percent)
+        sys.stdout.flush()
     if count*blockSize >= totalSize:
+        CURRENT_DOWNLOAD_PERCENT = 0
         print '\n'
 
 
@@ -188,6 +194,20 @@ def make_files_list(directory, rgxp):
 ###############################
 # function
 ###############################
+def findInSubdirectory(filename, subdirectory=''):
+    if subdirectory:
+        path = subdirectory
+    else:
+        path = os.getcwd()
+    for root, dirs, names in os.walk(path):
+        if filename in names:
+            return os.path.join(root, filename)
+    raise '*** Error! File not found!'
+
+
+###############################
+# function
+###############################
 def move_tree(srcdir, dstdir, pattern=None):
     # windows has length limit for path names so try to truncate them as much as possible
     global IS_WIN_PLATFORM
@@ -248,8 +268,10 @@ def handle_remove_readonly(func, path, exc):
 
 def remove_tree(source_dir):
     if IS_WIN_PLATFORM:
-        source_dir = win32api.GetShortPathName(source_dir)
-        shutil.rmtree(source_dir, ignore_errors=False, onerror=handle_remove_readonly)
+        if os.path.exists(source_dir):
+            source_dir = win32api.GetShortPathName(source_dir)
+            cmd_args = ['rmdir', source_dir, '/S', '/Q']
+            do_execute_sub_process(cmd_args, SCRIPT_ROOT_DIR, True)
     else:
         shutil.rmtree(source_dir)
 
@@ -612,13 +634,13 @@ def extract_file(path, to_directory='.'):
         cmd_args = ['7z', 'x', path]
         # 7z does not have silent operation so we do it the hard way....
         do_execute_sub_process_get_std_out(cmd_args, to_directory, False)
-        return
+        return True
     else:
-        print '*** Could not extract `%s` as no appropriate extractor is found' + path
-        sys.exit(-1)
+        print 'Did not extract the file! Not archived or no appropriate extractor was found: ' + path
+        return False
 
     do_execute_sub_process(cmd_args, to_directory, True)
-
+    return True
 
 ###############################
 # function
diff --git a/release-tools/create_installer.py b/release-tools/create_installer.py
index c428baf..9a39251 100644
--- a/release-tools/create_installer.py
+++ b/release-tools/create_installer.py
@@ -443,9 +443,10 @@ def repackage_content_for_installation(install_dir, package_raw_name, target_ins
         return
 
     # extract contents
-    bldinstallercommon.extract_file(install_dir + os.sep + package_raw_name, install_dir)
+    extracted = bldinstallercommon.extract_file(install_dir + os.sep + package_raw_name, install_dir)
     # remove old package
-    os.remove(install_dir + os.sep + package_raw_name)
+    if extracted:
+        os.remove(install_dir + os.sep + package_raw_name)
     # strip out unnecessary folder structure based on the configuration
     count = 0
     iterations = int(package_strip_dirs)
@@ -461,7 +462,7 @@ def repackage_content_for_installation(install_dir, package_raw_name, target_ins
             temp_path_name = 'a'
             os.rename(dir_name, temp_path_name)
             bldinstallercommon.move_tree(temp_path_name, '.')
-            bldinstallercommon.remove_tree(temp_path_name)
+            bldinstallercommon.remove_tree(install_dir + os.sep + temp_path_name)
             os.chdir(SCRIPT_ROOT_DIR)
         else:
             print '*** Error: unsupported folder structure encountered, abort!'
@@ -747,7 +748,7 @@ def install_ifw_tools():
             dir_name = dir_items[0]
             os.chdir(IFW_TOOLS_DIR)
             bldinstallercommon.move_tree(dir_name, '.')
-            bldinstallercommon.remove_tree(dir_name)
+            bldinstallercommon.remove_tree(IFW_TOOLS_DIR + os.sep + dir_name)
             os.chdir(SCRIPT_ROOT_DIR)
         else:
             print '*** Unsupported dir structure for installer-framework-tools package?!'