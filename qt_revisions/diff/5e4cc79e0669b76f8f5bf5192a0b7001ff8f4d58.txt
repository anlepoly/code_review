diff --git a/tests/auto/qml/qqmllanguage/data/literals.qml b/tests/auto/qml/qqmllanguage/data/literals.qml
index 3a3e846..ffef050 100644
--- a/tests/auto/qml/qqmllanguage/data/literals.qml
+++ b/tests/auto/qml/qqmllanguage/data/literals.qml
@@ -18,7 +18,6 @@ QtObject {
     property variant c7:  "\'"
     property variant c8:  "\""
     property variant c9:  "\\"
-    property variant c10:  "\251"
-    property variant c11:  "\xA9"
-    property variant c12:  "\u00A9" // unicode
+    property variant c10:  "\xA9"
+    property variant c11:  "\u00A9" // unicode
 }
diff --git a/tests/auto/qml/qqmllanguage/tst_qqmllanguage.cpp b/tests/auto/qml/qqmllanguage/tst_qqmllanguage.cpp
index 6b4830f..3f5f5f2 100644
--- a/tests/auto/qml/qqmllanguage/tst_qqmllanguage.cpp
+++ b/tests/auto/qml/qqmllanguage/tst_qqmllanguage.cpp
@@ -3065,9 +3065,8 @@ void tst_qqmllanguage::literals_data()
     QTest::newRow("special8") << "c8" << QVariant(QString("\""));
     QTest::newRow("special9") << "c9" << QVariant(QString("\\"));
     // We don't handle octal escape sequences
-//    QTest::newRow("special10") << "c10" << QVariant(QString("\251"));
-    QTest::newRow("special11") << "c11" << QVariant(QString::fromLatin1("\xa9"));
-    QTest::newRow("special12") << "c12" << QVariant(QString::fromUtf8("\u00A9"));
+    QTest::newRow("special11") << "c10" << QVariant(QString(1, QChar(0xa9)));
+    QTest::newRow("special12") << "c11" << QVariant(QString(1, QChar(0x00A9)));
 }
 
 void tst_qqmllanguage::literals()