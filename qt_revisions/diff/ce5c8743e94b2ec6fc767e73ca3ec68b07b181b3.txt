diff --git a/src/gui/accessible/qaccessible2.cpp b/src/gui/accessible/qaccessible2.cpp
index 71d00d3..d4c55c6 100644
--- a/src/gui/accessible/qaccessible2.cpp
+++ b/src/gui/accessible/qaccessible2.cpp
@@ -405,7 +405,7 @@ static QString textForRange(QAccessibleInterface *iface, int startOffset, int en
 }
 #endif
 
-void QAccessibleSimpleEditableTextInterface::copyText(int startOffset, int endOffset)
+void QAccessibleSimpleEditableTextInterface::copyText(int startOffset, int endOffset) const
 {
 #ifdef QT_NO_CLIPBOARD
     Q_UNUSED(startOffset);
diff --git a/src/gui/accessible/qaccessible2.h b/src/gui/accessible/qaccessible2.h
index 0ec2cc4..0b1ddc9 100644
--- a/src/gui/accessible/qaccessible2.h
+++ b/src/gui/accessible/qaccessible2.h
@@ -97,23 +97,23 @@ public:
     virtual ~QAccessibleTextInterface() {}
 
     virtual void addSelection(int startOffset, int endOffset) = 0;
-    virtual QString attributes(int offset, int *startOffset, int *endOffset) = 0;
-    virtual int cursorPosition() = 0;
-    virtual QRect characterRect(int offset, QAccessible2::CoordinateType coordType) = 0;
-    virtual int selectionCount() = 0;
-    virtual int offsetAtPoint(const QPoint &point, QAccessible2::CoordinateType coordType) = 0;
-    virtual void selection(int selectionIndex, int *startOffset, int *endOffset) = 0;
-    virtual QString text(int startOffset, int endOffset) = 0;
+    virtual QString attributes(int offset, int *startOffset, int *endOffset) const = 0;
+    virtual int cursorPosition() const = 0;
+    virtual QRect characterRect(int offset, QAccessible2::CoordinateType coordType) const = 0;
+    virtual int selectionCount() const = 0;
+    virtual int offsetAtPoint(const QPoint &point, QAccessible2::CoordinateType coordType) const = 0;
+    virtual void selection(int selectionIndex, int *startOffset, int *endOffset) const = 0;
+    virtual QString text(int startOffset, int endOffset) const = 0;
     virtual QString textBeforeOffset (int offset, QAccessible2::BoundaryType boundaryType,
-                              int *startOffset, int *endOffset) = 0;
+                              int *startOffset, int *endOffset) const = 0;
     virtual QString textAfterOffset(int offset, QAccessible2::BoundaryType boundaryType,
-                            int *startOffset, int *endOffset) = 0;
+                            int *startOffset, int *endOffset) const = 0;
     virtual QString textAtOffset(int offset, QAccessible2::BoundaryType boundaryType,
-                         int *startOffset, int *endOffset) = 0;
+                         int *startOffset, int *endOffset) const = 0;
     virtual void removeSelection(int selectionIndex) = 0;
     virtual void setCursorPosition(int position) = 0;
     virtual void setSelection(int selectionIndex, int startOffset, int endOffset) = 0;
-    virtual int characterCount() = 0;
+    virtual int characterCount() const = 0;
     virtual void scrollToSubstring(int startIndex, int endIndex) = 0;
 };
 
@@ -122,7 +122,7 @@ class Q_GUI_EXPORT QAccessibleEditableTextInterface
 public:
     virtual ~QAccessibleEditableTextInterface() {}
 
-    virtual void copyText(int startOffset, int endOffset) = 0;
+    virtual void copyText(int startOffset, int endOffset) const = 0;
     virtual void deleteText(int startOffset, int endOffset) = 0;
     virtual void insertText(int offset, const QString &text) = 0;
     virtual void cutText(int startOffset, int endOffset) = 0;
@@ -136,7 +136,7 @@ class Q_GUI_EXPORT QAccessibleSimpleEditableTextInterface: public QAccessibleEdi
 public:
     QAccessibleSimpleEditableTextInterface(QAccessibleInterface *accessibleInterface);  //###
 
-    void copyText(int startOffset, int endOffset);
+    void copyText(int startOffset, int endOffset) const;
     void deleteText(int startOffset, int endOffset);
     void insertText(int offset, const QString &text);
     void cutText(int startOffset, int endOffset);
@@ -154,10 +154,10 @@ public:
 
     virtual ~QAccessibleValueInterface() {}
 
-    virtual QVariant currentValue() = 0;
+    virtual QVariant currentValue() const = 0;
     virtual void setCurrentValue(const QVariant &value) = 0;
-    virtual QVariant maximumValue() = 0;
-    virtual QVariant minimumValue() = 0;
+    virtual QVariant maximumValue() const = 0;
+    virtual QVariant minimumValue() const = 0;
 };
 
 class Q_GUI_EXPORT QAccessibleTableCellInterface
diff --git a/src/plugins/accessible/widgets/qaccessiblewidgets.cpp b/src/plugins/accessible/widgets/qaccessiblewidgets.cpp
index f1c8540..17031fe 100644
--- a/src/plugins/accessible/widgets/qaccessiblewidgets.cpp
+++ b/src/plugins/accessible/widgets/qaccessiblewidgets.cpp
@@ -296,7 +296,7 @@ void QAccessibleTextEdit::addSelection(int startOffset, int endOffset)
     setSelection(0, startOffset, endOffset);
 }
 
-QString QAccessibleTextEdit::attributes(int offset, int *startOffset, int *endOffset)
+QString QAccessibleTextEdit::attributes(int offset, int *startOffset, int *endOffset) const
 {
     /* The list of attributes can be found at:
      http://linuxfoundation.org/collaborate/workgroups/accessibility/iaccessible2/textattributes
@@ -406,12 +406,12 @@ QString QAccessibleTextEdit::attributes(int offset, int *startOffset, int *endOf
     return result;
 }
 
-int QAccessibleTextEdit::cursorPosition()
+int QAccessibleTextEdit::cursorPosition() const
 {
     return textEdit()->textCursor().position();
 }
 
-QRect QAccessibleTextEdit::characterRect(int offset, CoordinateType coordType)
+QRect QAccessibleTextEdit::characterRect(int offset, CoordinateType coordType) const
 {
     QTextEdit *edit = textEdit();
     QTextCursor cursor(edit->document());
@@ -443,12 +443,12 @@ QRect QAccessibleTextEdit::characterRect(int offset, CoordinateType coordType)
     return r;
 }
 
-int QAccessibleTextEdit::selectionCount()
+int QAccessibleTextEdit::selectionCount() const
 {
     return textEdit()->textCursor().hasSelection() ? 1 : 0;
 }
 
-int QAccessibleTextEdit::offsetAtPoint(const QPoint &point, CoordinateType coordType)
+int QAccessibleTextEdit::offsetAtPoint(const QPoint &point, CoordinateType coordType) const
 {
     QTextEdit *edit = textEdit();
 
@@ -461,7 +461,7 @@ int QAccessibleTextEdit::offsetAtPoint(const QPoint &point, CoordinateType coord
     return edit->document()->documentLayout()->hitTest(p, Qt::ExactHit);
 }
 
-void QAccessibleTextEdit::selection(int selectionIndex, int *startOffset, int *endOffset)
+void QAccessibleTextEdit::selection(int selectionIndex, int *startOffset, int *endOffset) const
 {
     *startOffset = *endOffset = 0;
     QTextCursor cursor = textEdit()->textCursor();
@@ -473,7 +473,7 @@ void QAccessibleTextEdit::selection(int selectionIndex, int *startOffset, int *e
     *endOffset = cursor.selectionEnd();
 }
 
-QString QAccessibleTextEdit::text(int startOffset, int endOffset)
+QString QAccessibleTextEdit::text(int startOffset, int endOffset) const
 {
     QTextCursor cursor(textEdit()->document());
 
@@ -484,7 +484,7 @@ QString QAccessibleTextEdit::text(int startOffset, int endOffset)
 }
 
 QString QAccessibleTextEdit::textBeforeOffset (int offset, BoundaryType boundaryType,
-        int *startOffset, int *endOffset)
+        int *startOffset, int *endOffset) const
 {
     // TODO - what exactly is before?
     Q_UNUSED(offset);
@@ -495,7 +495,7 @@ QString QAccessibleTextEdit::textBeforeOffset (int offset, BoundaryType boundary
 }
 
 QString QAccessibleTextEdit::textAfterOffset(int offset, BoundaryType boundaryType,
-        int *startOffset, int *endOffset)
+        int *startOffset, int *endOffset) const
 {
     // TODO - what exactly is after?
     Q_UNUSED(offset);
@@ -506,7 +506,7 @@ QString QAccessibleTextEdit::textAfterOffset(int offset, BoundaryType boundaryTy
 }
 
 QString QAccessibleTextEdit::textAtOffset(int offset, BoundaryType boundaryType,
-                                          int *startOffset, int *endOffset)
+                                          int *startOffset, int *endOffset) const
 {
     Q_ASSERT(startOffset);
     Q_ASSERT(endOffset);
@@ -587,7 +587,7 @@ void QAccessibleTextEdit::setSelection(int selectionIndex, int startOffset, int
     textEdit()->setTextCursor(cursor);
 }
 
-int QAccessibleTextEdit::characterCount()
+int QAccessibleTextEdit::characterCount() const
 {
     return textEdit()->toPlainText().count();
 }
@@ -620,7 +620,7 @@ static QTextCursor cursorForRange(QTextEdit *textEdit, int startOffset, int endO
     return cursor;
 }
 
-void QAccessibleTextEdit::copyText(int startOffset, int endOffset)
+void QAccessibleTextEdit::copyText(int startOffset, int endOffset) const
 {
     QTextCursor cursor = cursorForRange(textEdit(), startOffset, endOffset);
 
diff --git a/src/plugins/accessible/widgets/qaccessiblewidgets.h b/src/plugins/accessible/widgets/qaccessiblewidgets.h
index 5fce746..44fdcc7 100644
--- a/src/plugins/accessible/widgets/qaccessiblewidgets.h
+++ b/src/plugins/accessible/widgets/qaccessiblewidgets.h
@@ -79,27 +79,27 @@ public:
 
     // QAccessibleTextInterface
     void addSelection(int startOffset, int endOffset);
-    QString attributes(int offset, int *startOffset, int *endOffset);
-    int cursorPosition();
-    QRect characterRect(int offset, QAccessible2::CoordinateType coordType);
-    int selectionCount();
-    int offsetAtPoint(const QPoint &point, QAccessible2::CoordinateType coordType);
-    void selection(int selectionIndex, int *startOffset, int *endOffset);
-    QString text(int startOffset, int endOffset);
+    QString attributes(int offset, int *startOffset, int *endOffset) const;
+    int cursorPosition() const;
+    QRect characterRect(int offset, QAccessible2::CoordinateType coordType) const;
+    int selectionCount() const;
+    int offsetAtPoint(const QPoint &point, QAccessible2::CoordinateType coordType) const;
+    void selection(int selectionIndex, int *startOffset, int *endOffset) const;
+    QString text(int startOffset, int endOffset) const;
     QString textBeforeOffset (int offset, QAccessible2::BoundaryType boundaryType,
-            int *startOffset, int *endOffset);
+            int *startOffset, int *endOffset) const;
     QString textAfterOffset(int offset, QAccessible2::BoundaryType boundaryType,
-            int *startOffset, int *endOffset);
+            int *startOffset, int *endOffset) const;
     QString textAtOffset(int offset, QAccessible2::BoundaryType boundaryType,
-            int *startOffset, int *endOffset);
+            int *startOffset, int *endOffset) const;
     void removeSelection(int selectionIndex);
     void setCursorPosition(int position);
     void setSelection(int selectionIndex, int startOffset, int endOffset);
-    int characterCount();
+    int characterCount() const;
     void scrollToSubstring(int startIndex, int endIndex);
 
     // QAccessibleEditableTextInterface
-    void copyText(int startOffset, int endOffset);
+    void copyText(int startOffset, int endOffset) const;
     void deleteText(int startOffset, int endOffset);
     void insertText(int offset, const QString &text);
     void cutText(int startOffset, int endOffset);
diff --git a/src/plugins/accessible/widgets/rangecontrols.cpp b/src/plugins/accessible/widgets/rangecontrols.cpp
index 799260c..6c439a7 100644
--- a/src/plugins/accessible/widgets/rangecontrols.cpp
+++ b/src/plugins/accessible/widgets/rangecontrols.cpp
@@ -94,7 +94,7 @@ void *QAccessibleAbstractSpinBox::interface_cast(QAccessible::InterfaceType t)
     return QAccessibleWidget::interface_cast(t);
 }
 
-QVariant QAccessibleAbstractSpinBox::currentValue()
+QVariant QAccessibleAbstractSpinBox::currentValue() const
 {
     QVariant result = abstractSpinBox()->property("value");
     QVariant::Type type = result.type();
@@ -112,12 +112,12 @@ void QAccessibleAbstractSpinBox::setCurrentValue(const QVariant &value)
     abstractSpinBox()->setProperty("value", value);
 }
 
-QVariant QAccessibleAbstractSpinBox::maximumValue()
+QVariant QAccessibleAbstractSpinBox::maximumValue() const
 {
     return abstractSpinBox()->property("maximum");
 }
 
-QVariant QAccessibleAbstractSpinBox::minimumValue()
+QVariant QAccessibleAbstractSpinBox::minimumValue() const
 {
     return abstractSpinBox()->property("minimum");
 }
@@ -258,7 +258,7 @@ void *QAccessibleAbstractSlider::interface_cast(QAccessible::InterfaceType t)
     return QAccessibleWidget::interface_cast(t);
 }
 
-QVariant QAccessibleAbstractSlider::currentValue()
+QVariant QAccessibleAbstractSlider::currentValue() const
 {
     return abstractSlider()->value();
 }
@@ -268,12 +268,12 @@ void QAccessibleAbstractSlider::setCurrentValue(const QVariant &value)
     abstractSlider()->setValue(value.toInt());
 }
 
-QVariant QAccessibleAbstractSlider::maximumValue()
+QVariant QAccessibleAbstractSlider::maximumValue() const
 {
     return abstractSlider()->maximum();
 }
 
-QVariant QAccessibleAbstractSlider::minimumValue()
+QVariant QAccessibleAbstractSlider::minimumValue() const
 {
     return abstractSlider()->minimum();
 }
diff --git a/src/plugins/accessible/widgets/rangecontrols.h b/src/plugins/accessible/widgets/rangecontrols.h
index ea1f644..218c481 100644
--- a/src/plugins/accessible/widgets/rangecontrols.h
+++ b/src/plugins/accessible/widgets/rangecontrols.h
@@ -67,10 +67,10 @@ public:
     void *interface_cast(QAccessible::InterfaceType t);
 
     // QAccessibleValueInterface
-    QVariant currentValue();
+    QVariant currentValue() const;
     void setCurrentValue(const QVariant &value);
-    QVariant maximumValue();
-    QVariant minimumValue();
+    QVariant maximumValue() const;
+    QVariant minimumValue() const;
 
     // FIXME Action interface
 
@@ -106,10 +106,10 @@ public:
     void *interface_cast(QAccessible::InterfaceType t);
 
     // QAccessibleValueInterface
-    QVariant currentValue();
+    QVariant currentValue() const;
     void setCurrentValue(const QVariant &value);
-    QVariant maximumValue();
-    QVariant minimumValue();
+    QVariant maximumValue() const;
+    QVariant minimumValue() const;
 
 protected:
     QAbstractSlider *abstractSlider() const;
diff --git a/src/plugins/accessible/widgets/simplewidgets.cpp b/src/plugins/accessible/widgets/simplewidgets.cpp
index a244116..385ca09 100644
--- a/src/plugins/accessible/widgets/simplewidgets.cpp
+++ b/src/plugins/accessible/widgets/simplewidgets.cpp
@@ -615,30 +615,30 @@ void QAccessibleLineEdit::addSelection(int startOffset, int endOffset)
     setSelection(0, startOffset, endOffset);
 }
 
-QString QAccessibleLineEdit::attributes(int offset, int *startOffset, int *endOffset)
+QString QAccessibleLineEdit::attributes(int offset, int *startOffset, int *endOffset) const
 {
     // QLineEdit doesn't have text attributes
     *startOffset = *endOffset = offset;
     return QString();
 }
 
-int QAccessibleLineEdit::cursorPosition()
+int QAccessibleLineEdit::cursorPosition() const
 {
     return lineEdit()->cursorPosition();
 }
 
-QRect QAccessibleLineEdit::characterRect(int /*offset*/, CoordinateType /*coordType*/)
+QRect QAccessibleLineEdit::characterRect(int /*offset*/, CoordinateType /*coordType*/) const
 {
     // QLineEdit doesn't hand out character rects
     return QRect();
 }
 
-int QAccessibleLineEdit::selectionCount()
+int QAccessibleLineEdit::selectionCount() const
 {
     return lineEdit()->hasSelectedText() ? 1 : 0;
 }
 
-int QAccessibleLineEdit::offsetAtPoint(const QPoint &point, CoordinateType coordType)
+int QAccessibleLineEdit::offsetAtPoint(const QPoint &point, CoordinateType coordType) const
 {
     QPoint p = point;
     if (coordType == RelativeToScreen)
@@ -647,7 +647,7 @@ int QAccessibleLineEdit::offsetAtPoint(const QPoint &point, CoordinateType coord
     return lineEdit()->cursorPositionAt(p);
 }
 
-void QAccessibleLineEdit::selection(int selectionIndex, int *startOffset, int *endOffset)
+void QAccessibleLineEdit::selection(int selectionIndex, int *startOffset, int *endOffset) const
 {
     *startOffset = *endOffset = 0;
     if (selectionIndex != 0)
@@ -657,7 +657,7 @@ void QAccessibleLineEdit::selection(int selectionIndex, int *startOffset, int *e
     *endOffset = *startOffset + lineEdit()->selectedText().count();
 }
 
-QString QAccessibleLineEdit::text(int startOffset, int endOffset)
+QString QAccessibleLineEdit::text(int startOffset, int endOffset) const
 {
     if (startOffset > endOffset)
         return QString();
@@ -669,7 +669,7 @@ QString QAccessibleLineEdit::text(int startOffset, int endOffset)
 }
 
 QString QAccessibleLineEdit::textBeforeOffset(int offset, BoundaryType boundaryType,
-        int *startOffset, int *endOffset)
+        int *startOffset, int *endOffset) const
 {
     if (lineEdit()->echoMode() != QLineEdit::Normal) {
         *startOffset = *endOffset = -1;
@@ -679,7 +679,7 @@ QString QAccessibleLineEdit::textBeforeOffset(int offset, BoundaryType boundaryT
 }
 
 QString QAccessibleLineEdit::textAfterOffset(int offset, BoundaryType boundaryType,
-        int *startOffset, int *endOffset)
+        int *startOffset, int *endOffset) const
 {
     if (lineEdit()->echoMode() != QLineEdit::Normal) {
         *startOffset = *endOffset = -1;
@@ -689,7 +689,7 @@ QString QAccessibleLineEdit::textAfterOffset(int offset, BoundaryType boundaryTy
 }
 
 QString QAccessibleLineEdit::textAtOffset(int offset, BoundaryType boundaryType,
-        int *startOffset, int *endOffset)
+        int *startOffset, int *endOffset) const
 {
     if (lineEdit()->echoMode() != QLineEdit::Normal) {
         *startOffset = *endOffset = -1;
@@ -719,7 +719,7 @@ void QAccessibleLineEdit::setSelection(int selectionIndex, int startOffset, int
     lineEdit()->setSelection(startOffset, endOffset - startOffset);
 }
 
-int QAccessibleLineEdit::characterCount()
+int QAccessibleLineEdit::characterCount() const
 {
     return lineEdit()->text().count();
 }
@@ -746,17 +746,17 @@ void *QAccessibleProgressBar::interface_cast(QAccessible::InterfaceType t)
     return QAccessibleDisplay::interface_cast(t);
 }
 
-QVariant QAccessibleProgressBar::currentValue()
+QVariant QAccessibleProgressBar::currentValue() const
 {
     return progressBar()->value();
 }
 
-QVariant QAccessibleProgressBar::maximumValue()
+QVariant QAccessibleProgressBar::maximumValue() const
 {
     return progressBar()->maximum();
 }
 
-QVariant QAccessibleProgressBar::minimumValue()
+QVariant QAccessibleProgressBar::minimumValue() const
 {
     return progressBar()->minimum();
 }
diff --git a/src/plugins/accessible/widgets/simplewidgets.h b/src/plugins/accessible/widgets/simplewidgets.h
index 8387972..88bc931 100644
--- a/src/plugins/accessible/widgets/simplewidgets.h
+++ b/src/plugins/accessible/widgets/simplewidgets.h
@@ -128,23 +128,23 @@ public:
 
     // QAccessibleTextInterface
     void addSelection(int startOffset, int endOffset);
-    QString attributes(int offset, int *startOffset, int *endOffset);
-    int cursorPosition();
-    QRect characterRect(int offset, QAccessible2::CoordinateType coordType);
-    int selectionCount();
-    int offsetAtPoint(const QPoint &point, QAccessible2::CoordinateType coordType);
-    void selection(int selectionIndex, int *startOffset, int *endOffset);
-    QString text(int startOffset, int endOffset);
+    QString attributes(int offset, int *startOffset, int *endOffset) const;
+    int cursorPosition() const;
+    QRect characterRect(int offset, QAccessible2::CoordinateType coordType) const;
+    int selectionCount() const;
+    int offsetAtPoint(const QPoint &point, QAccessible2::CoordinateType coordType) const;
+    void selection(int selectionIndex, int *startOffset, int *endOffset) const;
+    QString text(int startOffset, int endOffset) const;
     QString textBeforeOffset (int offset, QAccessible2::BoundaryType boundaryType,
-            int *startOffset, int *endOffset);
+            int *startOffset, int *endOffset) const;
     QString textAfterOffset(int offset, QAccessible2::BoundaryType boundaryType,
-            int *startOffset, int *endOffset);
+            int *startOffset, int *endOffset) const;
     QString textAtOffset(int offset, QAccessible2::BoundaryType boundaryType,
-            int *startOffset, int *endOffset);
+            int *startOffset, int *endOffset) const;
     void removeSelection(int selectionIndex);
     void setCursorPosition(int position);
     void setSelection(int selectionIndex, int startOffset, int endOffset);
-    int characterCount();
+    int characterCount() const;
     void scrollToSubstring(int startIndex, int endIndex);
 
 protected:
@@ -160,9 +160,9 @@ public:
     void *interface_cast(QAccessible::InterfaceType t);
 
     // QAccessibleValueInterface
-    QVariant currentValue();
-    QVariant maximumValue();
-    QVariant minimumValue();
+    QVariant currentValue() const;
+    QVariant maximumValue() const;
+    QVariant minimumValue() const;
     inline void setCurrentValue(const QVariant &) {}
 
 protected: