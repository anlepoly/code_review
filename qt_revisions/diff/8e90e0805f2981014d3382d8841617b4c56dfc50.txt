diff --git a/src/corelib/tools/qbitarray.h b/src/corelib/tools/qbitarray.h
index 8fc86b0..aa9c962 100644
--- a/src/corelib/tools/qbitarray.h
+++ b/src/corelib/tools/qbitarray.h
@@ -120,22 +120,22 @@ Q_CORE_EXPORT QBitArray operator|(const QBitArray &, const QBitArray &);
 Q_CORE_EXPORT QBitArray operator^(const QBitArray &, const QBitArray &);
 
 inline bool QBitArray::testBit(int i) const
-{ Q_ASSERT(i >= 0 && i < size());
+{ Q_ASSERT(uint(i) < uint(size()));
  return (*(reinterpret_cast<const uchar*>(d.constData())+1+(i>>3)) & (1 << (i & 7))) != 0; }
 
 inline void QBitArray::setBit(int i)
-{ Q_ASSERT(i >= 0 && i < size());
+{ Q_ASSERT(uint(i) < uint(size()));
  *(reinterpret_cast<uchar*>(d.data())+1+(i>>3)) |= uchar(1 << (i & 7)); }
 
 inline void QBitArray::clearBit(int i)
-{ Q_ASSERT(i >= 0 && i < size());
+{ Q_ASSERT(uint(i) < uint(size()));
  *(reinterpret_cast<uchar*>(d.data())+1+(i>>3)) &= ~uchar(1 << (i & 7)); }
 
 inline void QBitArray::setBit(int i, bool val)
 { if (val) setBit(i); else clearBit(i); }
 
 inline bool QBitArray::toggleBit(int i)
-{ Q_ASSERT(i >= 0 &&  i < size());
+{ Q_ASSERT(uint(i) < uint(size()));
  uchar b = uchar(1<<(i&7)); uchar* p = reinterpret_cast<uchar*>(d.data())+1+(i>>3);
  uchar c = uchar(*p&b); *p^=b; return c!=0; }
 
diff --git a/src/corelib/tools/qbytearray.h b/src/corelib/tools/qbytearray.h
index 668d672..50e52a1 100644
--- a/src/corelib/tools/qbytearray.h
+++ b/src/corelib/tools/qbytearray.h
@@ -400,9 +400,9 @@ inline int QByteArray::size() const
 { return d->size; }
 
 inline char QByteArray::at(int i) const
-{ Q_ASSERT(i >= 0 && i < size()); return d->data()[i]; }
+{ Q_ASSERT(uint(i) < uint(size())); return d->data()[i]; }
 inline char QByteArray::operator[](int i) const
-{ Q_ASSERT(i >= 0 && i < size()); return d->data()[i]; }
+{ Q_ASSERT(uint(i) < uint(size())); return d->data()[i]; }
 inline char QByteArray::operator[](uint i) const
 { Q_ASSERT(i < uint(size())); return d->data()[i]; }
 
diff --git a/src/corelib/tools/qstring.h b/src/corelib/tools/qstring.h
index 5b48a53..47cca0d 100644
--- a/src/corelib/tools/qstring.h
+++ b/src/corelib/tools/qstring.h
@@ -1245,7 +1245,7 @@ public:
     QStringRef appendTo(QString *string) const;
 
     inline const QChar at(int i) const
-        { Q_ASSERT(i >= 0 && i < size()); return m_string->at(i + m_position); }
+        { Q_ASSERT(uint(i) < uint(size())); return m_string->at(i + m_position); }
 
 #ifndef QT_NO_CAST_FROM_ASCII
     // ASCII compatibility