diff --git a/tools/qdoc3/ditaxmlgenerator.cpp b/tools/qdoc3/ditaxmlgenerator.cpp
index 16ee417..7d88f7b 100644
--- a/tools/qdoc3/ditaxmlgenerator.cpp
+++ b/tools/qdoc3/ditaxmlgenerator.cpp
@@ -273,7 +273,7 @@ void DitaXmlGenerator::addLink(const QString& href,
     if (!href.isEmpty()) {
         writeStartTag(t);
         // formathtml
-        xmlWriter().writeAttribute("href", href);
+        writeHrefAttribute(href);
         writeCharacters(text.toString());
         writeEndTag(); // </t>
     }
@@ -1204,7 +1204,7 @@ int DitaXmlGenerator::generateAtom(const Atom *atom,
             if (currentTag() != DT_xref)
                 writeStartTag(DT_fig);
             writeStartTag(DT_image);
-            xmlWriter().writeAttribute("href",protectEnc(fileName));
+            writeHrefAttribute(protectEnc(fileName));
             if (atom->type() == Atom::InlineImage)
                 xmlWriter().writeAttribute("placement","inline");
             else {
@@ -2186,7 +2186,7 @@ void DitaXmlGenerator::writeXrefListItem(const QString& link, const QString& tex
     writeStartTag(DT_li);
     writeStartTag(DT_xref);
     // formathtml
-    xmlWriter().writeAttribute("href",link);
+    writeHrefAttribute(link);
     writeCharacters(text);
     writeEndTag(); // </xref>
     writeEndTag(); // </li>
@@ -2291,8 +2291,10 @@ void DitaXmlGenerator::writeLink(const Node* node,
 {
     if (node) {
         QString link = fileName(node) + QLatin1Char('#') + node->guid();
+        if (link.endsWith("#"))
+            qDebug() << "LINK ENDS WITH #:" << link << outFileName();
         writeStartTag(DT_link);
-        xmlWriter().writeAttribute("href", link);
+        writeHrefAttribute(link);
         xmlWriter().writeAttribute("role", role);
         writeStartTag(DT_linktext);
         writeCharacters(text);
@@ -3058,7 +3060,7 @@ void DitaXmlGenerator::generateCompactList(const Node* relative,
             */
             writeStartTag(DT_xref);
             // formathtml
-            xmlWriter().writeAttribute("href",linkForNode(it.value(), relative));
+            writeHrefAttribute(linkForNode(it.value(), relative));
             
             QStringList pieces;
             if (it.value()->subType() == Node::QmlClass)
@@ -3918,7 +3920,7 @@ void DitaXmlGenerator::generateFullName(const Node* apparentNode,
     writeStartTag(DT_xref);
     // formathtml
     QString href = linkForNode(actualNode, relative);
-    xmlWriter().writeAttribute("href",href);
+    writeHrefAttribute(href);
     writeCharacters(protectEnc(fullName(apparentNode, relative, marker)));
     writeEndTag(); // </xref>
 }
@@ -4307,7 +4309,7 @@ void DitaXmlGenerator::beginLink(const QString& link)
         return;
     writeStartTag(DT_xref);
     // formathtml
-    xmlWriter().writeAttribute("href",link);
+    writeHrefAttribute(link);
     inLink = true;
 }
 
@@ -5868,4 +5870,17 @@ DitaXmlGenerator::writeProlog(const InnerNode* inner)
     writeEndTag(); // </prolog>
 }
 
+/*!
+  This function should be called to write the \a href attribute
+  if the href could be an \e http or \e ftp link. If \a href is
+  one or the other, a \e scope attribute is also writen, with
+  value \e external.
+ */
+void DitaXmlGenerator::writeHrefAttribute(const QString& href)
+{
+    xmlWriter().writeAttribute("href", href);
+    if (href.startsWith("http:") || href.startsWith("ftp:"))
+        xmlWriter().writeAttribute("scope", "external");
+}
+
 QT_END_NAMESPACE
diff --git a/tools/qdoc3/ditaxmlgenerator.h b/tools/qdoc3/ditaxmlgenerator.h
index 3eb377d..f9593ea 100644
--- a/tools/qdoc3/ditaxmlgenerator.h
+++ b/tools/qdoc3/ditaxmlgenerator.h
@@ -321,6 +321,7 @@ class DitaXmlGenerator : public PageGenerator
                               DitaXmlGenerator::DitaTag t, 
                               bool force=true);
     bool writeMetadataElements(const InnerNode* inner, DitaXmlGenerator::DitaTag t);
+    void writeHrefAttribute(const QString& href);
     QString getMetadataElement(const InnerNode* inner, DitaXmlGenerator::DitaTag t);
     QStringList getMetadataElements(const InnerNode* inner, DitaXmlGenerator::DitaTag t);
 
diff --git a/tools/qdoc3/node.cpp b/tools/qdoc3/node.cpp
index 5daf243..8d51d75 100644
--- a/tools/qdoc3/node.cpp
+++ b/tools/qdoc3/node.cpp
@@ -2303,8 +2303,6 @@ QString Node::uuidForNode() const
     case Node::Class:
         str = "class-" + fullDocumentName();
         break;
-    default:
-        break;
     case Node::Enum:
         str = "enum-" + name();
         break;
@@ -2331,12 +2329,50 @@ QString Node::uuidForNode() const
         }
         break;
     case Node::Fake:
-        if (subType() == Node::QmlClass) {
-            str = "qml-class-" + name();
-            break;
+        {
+            switch (subType()) {
+            case Node::QmlClass:
+                str = "qml-class-" + name();
+                break;
+            case Node::QmlPropertyGroup:
+                str = "qml-property-" + name();
+                break;
+            case Node::Page:
+            case Node::Group:
+            case Node::Module:
+            case Node::HeaderFile:
+                str = title();
+                if (str.isEmpty()) {
+                    str = name();
+                    if (str.endsWith(".html"))
+                        str.remove(str.size()-5,5);
+                }
+                str.replace("/","-");
+                break;
+            case Node::File:
+                str = name();
+                str.replace("/","-");
+                break;
+            case Node::Example:
+                str = name();
+                str.replace("/","-");
+                break;
+            case Node::QmlBasicType:
+                str = "qml-basic-type-" + name();
+                break;
+            case Node::QmlModule:
+                str = "qml-module-" + name();
+                break;
+            case Node::Collision:
+                str = title();
+                str.replace(": ","-");
+                break;
+            default:
+                qDebug() << "ERROR: A case was not handled in Node::uuidForNode():"
+                         << "subType():" << subType() << "type():" << type();
+                break;
+            }
         }
-        if (subType() == Node::QmlPropertyGroup)
-            str = "qml-property-" + name();
         break;
     case Node::QmlProperty:
         str = "qml-property-" + name();
@@ -2357,12 +2393,25 @@ QString Node::uuidForNode() const
         str = "var-" + name();
         break;
     case Node::Target:
-        return name();
+        str = name();
+        break;
+    default:
+        qDebug() << "ERROR: A case was not handled in Node::uuidForNode():"
+                 << "type():" << type() << "subType():" << subType();
+        break;
+    }
+    if (str.isEmpty()) {
+        qDebug() << "ERROR: A link text was empty in Node::uuidForNode():"
+                 << "type():" << type() << "subType():" << subType()
+                 << "name():" << name()
+                 << "title():" << title();
+    }
+    else {
+        str = str.toLower();
+        str = str.replace("::","-");
+        str = str.replace(" ","-");
+        str = str.replace("~","dtor.");
     }
-    str = str.toLower();
-    str = str.replace("::","-");
-    str = str.replace(" ","-");
-    str = str.replace("~","dtor.");
     return str;
 }
 
diff --git a/tools/qdoc3/node.h b/tools/qdoc3/node.h
index fba0005..78f13ef 100644
--- a/tools/qdoc3/node.h
+++ b/tools/qdoc3/node.h
@@ -178,6 +178,7 @@ class Node
     virtual bool isQtQuickNode() const { return false; }
     virtual bool isAbstract() const { return false; }
     virtual void setAbstract(bool ) { }
+    virtual QString title() const { return QString(); }
     Type type() const { return type_; }
     virtual SubType subType() const { return NoSubType; }
     InnerNode* parent() const { return parent_; }