diff --git a/doc/src/snippets/declarative/pathinterpolator.qml b/doc/src/snippets/declarative/pathinterpolator.qml
new file mode 100644
index 0000000..ce9af95
--- /dev/null
+++ b/doc/src/snippets/declarative/pathinterpolator.qml
@@ -0,0 +1,74 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the documentation of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:BSD$
+** You may use this file under the terms of the BSD license as follows:
+**
+** "Redistribution and use in source and binary forms, with or without
+** modification, are permitted provided that the following conditions are
+** met:
+**   * Redistributions of source code must retain the above copyright
+**     notice, this list of conditions and the following disclaimer.
+**   * Redistributions in binary form must reproduce the above copyright
+**     notice, this list of conditions and the following disclaimer in
+**     the documentation and/or other materials provided with the
+**     distribution.
+**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
+**     the names of its contributors may be used to endorse or promote
+**     products derived from this software without specific prior written
+**     permission.
+**
+** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+//![0]
+import QtQuick 2.0
+
+Rectangle {
+    width: 400
+    height: 400
+
+    PathInterpolator {
+        id: motionPath
+
+        path: Path {
+            startX: 0; startY: 0
+
+            PathCubic {
+                x: 350; y: 350
+
+                control1X: 350; control1Y: 0
+                control2X: 0; control2Y: 350
+            }
+        }
+
+        NumberAnimation on progress { from: 0; to: 1; duration: 2000 }
+    }
+
+    Rectangle {
+        width: 50; height: 50
+        color: "green"
+
+        //bind our attributes to follow the path as progress changes
+        x: motionPath.x
+        y: motionPath.y
+        rotation: motionPath.angle
+    }
+}
+//![0]
diff --git a/examples/declarative/animation/pathinterpolator/pathinterpolator.qml b/examples/declarative/animation/pathinterpolator/pathinterpolator.qml
new file mode 100644
index 0000000..6749821
--- /dev/null
+++ b/examples/declarative/animation/pathinterpolator/pathinterpolator.qml
@@ -0,0 +1,114 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the examples of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:BSD$
+** You may use this file under the terms of the BSD license as follows:
+**
+** "Redistribution and use in source and binary forms, with or without
+** modification, are permitted provided that the following conditions are
+** met:
+**   * Redistributions of source code must retain the above copyright
+**     notice, this list of conditions and the following disclaimer.
+**   * Redistributions in binary form must reproduce the above copyright
+**     notice, this list of conditions and the following disclaimer in
+**     the documentation and/or other materials provided with the
+**     distribution.
+**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
+**     the names of its contributors may be used to endorse or promote
+**     products derived from this software without specific prior written
+**     permission.
+**
+** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+import QtQuick 2.0
+
+Rectangle {
+    id: window
+    width: 400
+    height: 400
+
+    Canvas {
+        id: canvas
+        anchors.fill: parent
+        smooth: true
+
+        onPaint: {
+            context.strokeStyle = "black"
+            context.path = motionPath.path
+            context.stroke()
+        }
+    }
+
+    PathInterpolator {
+        id: motionPath
+
+        path: Path {
+            startX: 50; startY: 50
+
+            PathCubic {
+                x: window.width - 50
+                y: window.height - 50
+
+                control1X: x; control1Y: 50
+                control2X: 50; control2Y: y
+            }
+
+            onChanged: canvas.requestPaint()
+        }
+
+        NumberAnimation on progress {
+            id: progressAnim
+            running: false
+            from: 0; to: 1
+            duration: 2000
+            easing.type: Easing.InQuad
+        }
+    }
+
+    Rectangle {
+        id: box
+
+        width: 50; height: 50
+        border.width: 1
+        smooth: true
+
+        //bind our attributes to follow the path as progress changes
+        x: motionPath.x
+        y: motionPath.y
+        rotation: motionPath.angle
+        transform: Translate { x: -box.width/2; y: -box.height/2 }
+
+        Text {
+            anchors.centerIn: parent
+            text: "Box"
+        }
+    }
+
+    MouseArea {
+        anchors.fill: parent
+        onClicked: progressAnim.restart()
+    }
+
+    Text {
+        text: "Click anywhere to animate along the path"
+        anchors.horizontalCenter: parent.horizontalCenter
+    }
+}
diff --git a/src/quick/util/qdeclarativepathinterpolator.cpp b/src/quick/util/qdeclarativepathinterpolator.cpp
index 46038f9..c954c23 100644
--- a/src/quick/util/qdeclarativepathinterpolator.cpp
+++ b/src/quick/util/qdeclarativepathinterpolator.cpp
@@ -45,11 +45,30 @@
 
 QT_BEGIN_NAMESPACE
 
+/*!
+    \qmlclass PathInterpolator QQuickPathInterpolator
+    \inqmlmodule QtQuick 2
+    \brief The PathInterpolator element provides a way to manually animate along a path.
+
+    PathInterpolator provides \c x, \c y, and \c angle information for a particular \c progress
+    along a path.
+
+    In the following example, we animate a green rectangle along a bezier path.
+
+    \snippet doc/src/snippets/declarative/pathinterpolator.qml 0
+*/
+
 QDeclarativePathInterpolator::QDeclarativePathInterpolator(QObject *parent) :
     QObject(parent), _path(0), _x(0), _y(0), _angle(0), _progress(0)
 {
 }
 
+/*!
+    \qmlproperty Path QtQuick2::PathInterpolator::path
+    This property holds the path to interpolate.
+
+    For more information on defining a path see the \l Path documentation.
+*/
 QDeclarativePath *QDeclarativePathInterpolator::path() const
 {
     return _path;
@@ -66,6 +85,16 @@ void QDeclarativePathInterpolator::setPath(QDeclarativePath *path)
     emit pathChanged();
 }
 
+/*!
+    \qmlproperty real QtQuick2::PathInterpolator::progress
+    This property holds the current progress along the path.
+
+    Typical usage of PathInterpolator is to set the progress
+    (often via a NumberAnimation), and read the corresponding
+    values for x, y, and angle (often via bindings to these values).
+
+    Progress ranges from 0.0 to 1.0.
+*/
 qreal QDeclarativePathInterpolator::progress() const
 {
     return _progress;
@@ -80,6 +109,12 @@ void QDeclarativePathInterpolator::setProgress(qreal progress)
     _q_pathUpdated();
 }
 
+/*!
+    \qmlproperty real QtQuick2::PathInterpolator::x
+    \qmlproperty real QtQuick2::PathInterpolator::y
+
+    These properties hold the position of the path at \l progress.
+*/
 qreal QDeclarativePathInterpolator::x() const
 {
     return _x;
@@ -90,6 +125,13 @@ qreal QDeclarativePathInterpolator::y() const
     return _y;
 }
 
+/*!
+    \qmlproperty real QtQuick2::PathInterpolator::angle
+
+    This property holds the angle of the path tangent at \l progress.
+
+    Angles are reported clockwise, with zero degrees at the 3 o'clock position.
+*/
 qreal QDeclarativePathInterpolator::angle() const
 {
     return _angle;