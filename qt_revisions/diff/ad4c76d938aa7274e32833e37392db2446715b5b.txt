diff --git a/src/widgets/widgets/qgroupbox.cpp b/src/widgets/widgets/qgroupbox.cpp
index f186a00..7705edd 100644
--- a/src/widgets/widgets/qgroupbox.cpp
+++ b/src/widgets/widgets/qgroupbox.cpp
@@ -149,14 +149,13 @@ void QGroupBoxPrivate::click()
     \ingroup geomanagement
     \inmodule QtWidgets
 
-    A group box provides a frame, a title and a keyboard shortcut, and
-    displays various other widgets inside itself. The title is on top,
-    the keyboard shortcut moves keyboard focus to one of the group
-    box's child widgets.
+    A group box provides a frame, a title on top, a keyboard shortcut, and
+    displays various other widgets inside itself. The keyboard shortcut moves
+    keyboard focus to one of the group box's child widgets.
 
     QGroupBox also lets you set the \l title (normally set in the
     constructor) and the title's \l alignment. Group boxes can be
-    \l checkable; child widgets in checkable group boxes are enabled or
+    \l checkable. Child widgets in checkable group boxes are enabled or
     disabled depending on whether or not the group box is \l checked.
 
     You can minimize the space consumption of a group box by enabling
@@ -512,9 +511,9 @@ QSize QGroupBox::minimumSizeHint() const
 
     A group box usually consists of a surrounding frame with a title
     at the top. If this property is enabled, only the top part of the frame is
-    drawn in most styles; otherwise the whole frame is drawn.
+    drawn in most styles; otherwise, the whole frame is drawn.
 
-    By default, this property is disabled; i.e. group boxes are not flat unless
+    By default, this property is disabled, i.e., group boxes are not flat unless
     explicitly specified.
 
     \b{Note:} In some styles, flat and non-flat group boxes have similar
@@ -546,7 +545,7 @@ void QGroupBox::setFlat(bool b)
 
     If this property is true, the group box displays its title using
     a checkbox in place of an ordinary label. If the checkbox is checked,
-    the group box's children are enabled; otherwise they are disabled and
+    the group box's children are enabled; otherwise, they are disabled and
     inaccessible.
 
     By default, group boxes are not checkable.
@@ -603,7 +602,7 @@ bool QGroupBox::isChecked() const
     \fn void QGroupBox::toggled(bool on)
 
     If the group box is checkable, this signal is emitted when the check box
-    is toggled. \a on is true if the check box is checked; otherwise it is false.
+    is toggled. \a on is true if the check box is checked; otherwise, it is false.
 
     \sa checkable
 */
@@ -613,12 +612,12 @@ bool QGroupBox::isChecked() const
     \fn void QGroupBox::clicked(bool checked)
     \since 4.2
 
-    This signal is emitted when the check box is activated (i.e. pressed down
+    This signal is emitted when the check box is activated (i.e., pressed down
     then released while the mouse cursor is inside the button), or when the
-    shortcut key is typed, Notably, this signal is \e not emitted if you call
+    shortcut key is typed. Notably, this signal is \e not emitted if you call
     setChecked().
 
-    If the check box is checked \a checked is true; it is false if the check
+    If the check box is checked, \a checked is true; it is false if the check
     box is unchecked.
 
     \sa checkable, toggled(), checked
@@ -630,7 +629,7 @@ bool QGroupBox::isChecked() const
 
     If the group box is checkable, it is displayed with a check box.
     If the check box is checked, the group box's children are enabled;
-    otherwise the children are disabled and are inaccessible to the user.
+    otherwise, the children are disabled and are inaccessible to the user.
 
     By default, checkable group boxes are also checked.
 
diff --git a/src/widgets/widgets/qpushbutton.cpp b/src/widgets/widgets/qpushbutton.cpp
index 9ed25c6..16e0687 100644
--- a/src/widgets/widgets/qpushbutton.cpp
+++ b/src/widgets/widgets/qpushbutton.cpp
@@ -99,18 +99,18 @@ QT_BEGIN_NAMESPACE
 
     Push buttons display a textual label, and optionally a small
     icon. These can be set using the constructors and changed later
-    using setText() and setIcon().  If the button is disabled the
+    using setText() and setIcon().  If the button is disabled, the
     appearance of the text and icon will be manipulated with respect
     to the GUI style to make the button look "disabled".
 
     A push button emits the signal clicked() when it is activated by
     the mouse, the Spacebar or by a keyboard shortcut. Connect to
     this signal to perform the button's action. Push buttons also
-    provide less commonly used signals, for example, pressed() and
+    provide less commonly used signals, for example pressed() and
     released().
 
     Command buttons in dialogs are by default auto-default buttons,
-    i.e. they become the default push button automatically when they
+    i.e., they become the default push button automatically when they
     receive the keyboard input focus. A default button is a push
     button that is activated when the user presses the Enter or Return
     key in a dialog. You can change this with setAutoDefault(). Note
@@ -190,7 +190,7 @@ QT_BEGIN_NAMESPACE
 
     In some GUI styles a default button is drawn with an extra frame
     around it, up to 3 pixels or more. Qt automatically keeps this
-    space free around auto-default buttons, i.e. auto-default buttons
+    space free around auto-default buttons, i.e., auto-default buttons
     may have a slightly larger size hint.
 
     This property's default is true for buttons that have a QDialog
@@ -224,7 +224,7 @@ QT_BEGIN_NAMESPACE
 
     If the default property is set to false on the current default button
     while the dialog is visible, a new default will automatically be
-    assigned the next time a pushbutton in the dialog receives focus.
+    assigned the next time a push button in the dialog receives focus.
 
     This property's default is false.
 */