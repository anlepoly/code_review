diff --git a/qmake/generators/mac/pbuilder_pbx.cpp b/qmake/generators/mac/pbuilder_pbx.cpp
index 74456fb..578d680 100644
--- a/qmake/generators/mac/pbuilder_pbx.cpp
+++ b/qmake/generators/mac/pbuilder_pbx.cpp
@@ -536,7 +536,6 @@ ProjectBuilderMakefileGenerator::writeMakeParts(QTextStream &t)
     if(!project->isEmpty("QMAKE_EXTRA_COMPILERS")) {
         const QStringList &quc = project->values("QMAKE_EXTRA_COMPILERS");
         for(QStringList::ConstIterator it = quc.begin(); it != quc.end(); ++it) {
-            QString tmp_out = project->first((*it) + ".output");
             if(project->isEmpty((*it) + ".output"))
                 continue;
             QString name = (*it);
diff --git a/qmake/generators/makefile.cpp b/qmake/generators/makefile.cpp
index f97e664..8b96e7a 100644
--- a/qmake/generators/makefile.cpp
+++ b/qmake/generators/makefile.cpp
@@ -1262,7 +1262,6 @@ MakefileGenerator::writeInstalls(QTextStream &t, const QString &installs, bool n
                 }
                 bool is_target = (wild == fileFixify(var("TARGET"), FileFixifyAbsolute));
                 if(is_target || exists(wild)) { //real file or target
-                    QString file = wild;
                     QFileInfo fi(fileInfo(wild));
                     QString dst_file = filePrefixRoot(root, dst_dir);
                     if(fi.isDir() && project->isActiveConfig("copy_dir_files")) {
@@ -1822,7 +1821,6 @@ MakefileGenerator::writeExtraCompilerTargets(QTextStream &t)
             t << " " << escapeDependencyPath(replaceExtraCompilerVariables(tmp_out, input, QString()));
         } else {
             for(QStringList::ConstIterator input = tmp_inputs.begin(); input != tmp_inputs.end(); ++input) {
-                QString in = Option::fixPathToTargetOS((*input), false);
                 t << " " << escapeDependencyPath(replaceExtraCompilerVariables(tmp_out, (*input), QString()));
             }
         }
diff --git a/qmake/generators/unix/unixmake.cpp b/qmake/generators/unix/unixmake.cpp
index 01cfeb4..7938c5b 100644
--- a/qmake/generators/unix/unixmake.cpp
+++ b/qmake/generators/unix/unixmake.cpp
@@ -210,7 +210,6 @@ UnixMakefileGenerator::init()
                                             pchBaseName + project->first("QMAKE_PCH_OUTPUT_EXT"));
             } else {
                 // gcc style (including clang_pch_style)
-                QString headerPrefix = project->first("QMAKE_PRECOMP_PREFIX");
                 QString headerSuffix;
                 if (project->isActiveConfig("clang_pch_style"))
                     headerSuffix = project->first("QMAKE_PCH_OUTPUT_EXT");
diff --git a/qmake/generators/win32/mingw_make.cpp b/qmake/generators/win32/mingw_make.cpp
index 4328106..65e4e67 100644
--- a/qmake/generators/win32/mingw_make.cpp
+++ b/qmake/generators/win32/mingw_make.cpp
@@ -259,7 +259,6 @@ void MingwMakefileGenerator::init()
         project->values("QMAKE_LIBS") += escapeFilePaths(project->values("RES_FILE"));
     }
 
-    QString targetfilename = project->values("TARGET").first();
     QStringList &configs = project->values("CONFIG");
 
     if(project->isActiveConfig("qt_dll"))