diff --git a/doc/src/qml/debugging.qdoc b/doc/src/qml/debugging.qdoc
index 562464a..462b2fe 100644
--- a/doc/src/qml/debugging.qdoc
+++ b/doc/src/qml/debugging.qdoc
@@ -47,7 +47,7 @@ function f(a, b) {
 The output is generated using the qDebug, qWarning, qCritical methods in C++
 (see also http://doc.qt.nokia.com/latest/debug.html#warning-and-debugging-messages).
 
-\hint Setting the environment variable QML_CONSOLE_EXTENDED also prints the source
+Setting the environment variable QML_CONSOLE_EXTENDED also prints the source
 code location of the call.
 
 \section2 Assert
diff --git a/doc/src/qml/qmlruntime.qdoc b/doc/src/qml/qmlruntime.qdoc
index e5472ae..8313234 100644
--- a/doc/src/qml/qmlruntime.qdoc
+++ b/doc/src/qml/qmlruntime.qdoc
@@ -37,7 +37,7 @@ and it also provides access to third-party QML elements and modules.
 Applications that use QML need to invoke the QML runtime in order to
 execute QML documents. This can be done by creating a QQuickView
 or a QQmlEngine, as described below. In addition, the Declarative UI
-package includes the \QQV tool, which loads \c .qml files. This tool is
+package includes the qmlscene tool, which loads \c .qml files. This tool is
 useful for developing and testing QML code without the need to write
 a C++ application to load the QML runtime.
 
@@ -134,12 +134,10 @@ as details on including QML files through \l{The Qt Resource System}{Qt's Resour
 
 \section1 Developing and Prototyping with QML Viewer
 
-The Declarative UI package includes a QML runtime tool, the \QQV, which loads
+The Declarative UI package includes a QML runtime tool, qmlscene, which loads
 and displays QML documents. This is useful during the application development
 phase for prototyping QML-based applications without writing your own C++
 applications to invoke the QML runtime.
 
-See the \l{QML Viewer} documentation for more details.
-
 */
 
diff --git a/src/qml/qml/qqmlengine.cpp b/src/qml/qml/qqmlengine.cpp
index 626a4b0..0517359 100644
--- a/src/qml/qml/qqmlengine.cpp
+++ b/src/qml/qml/qqmlengine.cpp
@@ -549,7 +549,7 @@ QQuickWorkerScriptEngine *QQmlEnginePrivate::getWorkerScriptEngine()
 
   Note that the QtQuick 1 version is called QDeclarativeEngine.
 
-  \sa QQmlComponent QQmlContext
+  \sa QQmlComponent, QQmlContext
 */
 
 /*!
@@ -1453,7 +1453,7 @@ void QQmlEngine::addImportPath(const QString& path)
   paths specified in the \c QML_IMPORT_PATH environment variable,
   and the builtin \c ImportsPath from QLibraryInfo.
 
-  \sa addImportPath() setImportPathList()
+  \sa addImportPath(), setImportPathList()
 */
 QStringList QQmlEngine::importPathList() const
 {
@@ -1469,7 +1469,7 @@ QStringList QQmlEngine::importPathList() const
   paths specified in the \c QML_IMPORT_PATH environment variable,
   and the builtin \c ImportsPath from QLibraryInfo.
 
-  \sa importPathList() addImportPath()
+  \sa importPathList(), addImportPath()
   */
 void QQmlEngine::setImportPathList(const QStringList &paths)
 {
@@ -1503,7 +1503,7 @@ void QQmlEngine::addPluginPath(const QString& path)
   By default, the list contains only \c .,  i.e. the engine searches
   in the directory of the \c qmldir file itself.
 
-  \sa addPluginPath() setPluginPathList()
+  \sa addPluginPath(), setPluginPathList()
 */
 QStringList QQmlEngine::pluginPathList() const
 {
@@ -1519,7 +1519,7 @@ QStringList QQmlEngine::pluginPathList() const
   By default, the list contains only \c .,  i.e. the engine searches
   in the directory of the \c qmldir file itself.
 
-  \sa pluginPathList() addPluginPath()
+  \sa pluginPathList(), addPluginPath()
   */
 void QQmlEngine::setPluginPathList(const QStringList &paths)
 {
diff --git a/src/qml/qml/qqmlexpression.cpp b/src/qml/qml/qqmlexpression.cpp
index 940b3c8..c8d7392 100644
--- a/src/qml/qml/qqmlexpression.cpp
+++ b/src/qml/qml/qqmlexpression.cpp
@@ -201,7 +201,7 @@ QQmlExpression::QQmlExpression(QQmlContextData *ctxt,
 /*!
     Create a QQmlExpression object that is a child of \a parent.
 
-    The \script provides the expression to be evaluated, the context to evaluate it in,
+    The \a script provides the expression to be evaluated, the context to evaluate it in,
     and the scope object to evaluate it with.
 
     This constructor is functionally equivalent to the following, but in most cases
diff --git a/src/qml/qml/qqmllocale.cpp b/src/qml/qml/qqmllocale.cpp
index f15565c..0371d0e 100644
--- a/src/qml/qml/qqmllocale.cpp
+++ b/src/qml/qml/qqmllocale.cpp
@@ -812,7 +812,7 @@ V8_DEFINE_EXTENSION(QV8LocaleDataDeletable, localeV8Data);
     This product includes software developed by the University of
     California, Berkeley and its contributors.
 
-    \sa {QtQuick2::Date}{Date} {QtQuick2::Number}{Number}
+    \sa {QtQuick2::Date}{Date}, {QtQuick2::Number}{Number}
 */
 
 QQmlLocale::QQmlLocale()
diff --git a/src/qml/qml/qquicklistmodel.cpp b/src/qml/qml/qquicklistmodel.cpp
index 5f12036..37f6e86 100644
--- a/src/qml/qml/qquicklistmodel.cpp
+++ b/src/qml/qml/qquicklistmodel.cpp
@@ -1382,7 +1382,6 @@ QQuickListModelParser::ListInstruction *QQuickListModelParser::ListModelData::in
 
     \snippet doc/src/snippets/qml/listmodel.qml 0
 
-    \clearfloat
     Roles (properties) in each element must begin with a lower-case letter and
     should be common to all elements in a model. The ListElement documentation
     provides more guidelines for how elements should be defined.
@@ -1407,7 +1406,6 @@ QQuickListModelParser::ListInstruction *QQuickListModelParser::ListModelData::in
 
     \snippet doc/src/snippets/qml/listmodel-nested.qml delegate
 
-    \clearfloat
     \section1 Modifying List Models
 
     The content of a ListModel may be created and modified using the clear(),
@@ -1769,7 +1767,7 @@ int QQuickListModel::count() const
 
     Deletes all content from the model.
 
-    \sa append() remove()
+    \sa append(), remove()
 */
 void QQuickListModel::clear()
 {
@@ -1833,7 +1831,7 @@ void QQuickListModel::remove(QQmlV8Function *args)
     The \a index must be to an existing item in the list, or one past
     the end of the list (equivalent to append).
 
-    \sa set() append()
+    \sa set(), append()
 */
 
 void QQuickListModel::insert(QQmlV8Function *args)
@@ -1944,7 +1942,7 @@ void QQuickListModel::move(int from, int to, int n)
         fruitModel.append({"cost": 5.95, "name":"Pizza"})
     \endcode
 
-    \sa set() remove()
+    \sa set(), remove()
 */
 void QQuickListModel::append(QQmlV8Function *args)
 {