diff --git a/src/corelib/io/qdebug.cpp b/src/corelib/io/qdebug.cpp
index 8c17a61..5769323 100644
--- a/src/corelib/io/qdebug.cpp
+++ b/src/corelib/io/qdebug.cpp
@@ -125,6 +125,14 @@
 */
 
 /*!
+    \fn QDebug::swap(QDebug &other)
+    \since 5.0
+
+    Swaps this debug stream instance with \a other. This function is
+    very fast and never fails.
+*/
+
+/*!
     \fn QDebug &QDebug::space()
 
     Writes a space character to the debug stream and returns a reference to
diff --git a/src/corelib/io/qdebug.h b/src/corelib/io/qdebug.h
index 6b0eaef..f0e59c8 100644
--- a/src/corelib/io/qdebug.h
+++ b/src/corelib/io/qdebug.h
@@ -91,6 +91,8 @@ public:
             delete stream;
         }
     }
+    inline void swap(QDebug &other) { qSwap(stream, other.stream); }
+
     inline QDebug &space() { stream->space = true; stream->ts << ' '; return *this; }
     inline QDebug &nospace() { stream->space = false; return *this; }
     inline QDebug &maybeSpace() { if (stream->space) stream->ts << ' '; return *this; }
diff --git a/src/corelib/io/qdir.cpp b/src/corelib/io/qdir.cpp
index 9a66ca2..b92f03a 100644
--- a/src/corelib/io/qdir.cpp
+++ b/src/corelib/io/qdir.cpp
@@ -1711,6 +1711,14 @@ QDir &QDir::operator=(const QString &path)
 }
 
 /*!
+    \fn void QDir::swap(QDir &other)
+    \since 5.0
+
+    Swaps this QDir instance with \a other. This function is very fast
+    and never fails.
+*/
+
+/*!
     \fn bool QDir::operator!=(const QDir &dir) const
 
     Returns true if directory \a dir and this directory have different
diff --git a/src/corelib/io/qdir.h b/src/corelib/io/qdir.h
index a5105fe..a6f9b32 100644
--- a/src/corelib/io/qdir.h
+++ b/src/corelib/io/qdir.h
@@ -115,6 +115,9 @@ public:
     { qSwap(d_ptr, other.d_ptr); return *this; }
 #endif
 
+    inline void swap(QDir &other)
+    { qSwap(d_ptr, other.d_ptr); }
+
     void setPath(const QString &path);
     QString path() const;
     QString absolutePath() const;
diff --git a/src/corelib/io/qfileinfo.cpp b/src/corelib/io/qfileinfo.cpp
index 4973ecb..ac87e23 100644
--- a/src/corelib/io/qfileinfo.cpp
+++ b/src/corelib/io/qfileinfo.cpp
@@ -430,6 +430,14 @@ QFileInfo &QFileInfo::operator=(const QFileInfo &fileinfo)
 }
 
 /*!
+    \fn void QFileInfo::swap(QFileInfo &other)
+    \since 5.0
+
+    Swaps this file info with \a other. This function is very fast and
+    never fails.
+*/
+
+/*!
     Sets the file that the QFileInfo provides information about to \a
     file.
 
diff --git a/src/corelib/io/qfileinfo.h b/src/corelib/io/qfileinfo.h
index 0f43ebd..41db9d7 100644
--- a/src/corelib/io/qfileinfo.h
+++ b/src/corelib/io/qfileinfo.h
@@ -74,6 +74,10 @@ public:
     inline QFileInfo&operator=(QFileInfo &&other)
     { qSwap(d_ptr, other.d_ptr); return *this; }
 #endif
+
+    inline void swap(QFileInfo &other)
+    { qSwap(d_ptr, other.d_ptr); }
+
     bool operator==(const QFileInfo &fileinfo) const;
     inline bool operator!=(const QFileInfo &fileinfo) const { return !(operator==(fileinfo)); }
 
diff --git a/src/corelib/io/qprocess.cpp b/src/corelib/io/qprocess.cpp
index 7228cec..04597f1 100644
--- a/src/corelib/io/qprocess.cpp
+++ b/src/corelib/io/qprocess.cpp
@@ -237,6 +237,14 @@ QProcessEnvironment &QProcessEnvironment::operator=(const QProcessEnvironment &o
 }
 
 /*!
+    \fn void QProcessEnvironment::swap(QProcessEnvironment &other)
+    \since 5.0
+
+    Swaps this process environment instance with \a other. This
+    function is very fast and never fails.
+*/
+
+/*!
     \fn bool QProcessEnvironment::operator !=(const QProcessEnvironment &other) const
 
     Returns true if this and the \a other QProcessEnvironment objects are different.
diff --git a/src/corelib/io/qprocess.h b/src/corelib/io/qprocess.h
index fe5e84c..dbc226e 100644
--- a/src/corelib/io/qprocess.h
+++ b/src/corelib/io/qprocess.h
@@ -72,6 +72,8 @@ public:
     ~QProcessEnvironment();
     QProcessEnvironment &operator=(const QProcessEnvironment &other);
 
+    inline void swap(QProcessEnvironment &other) { qSwap(d, other.d); }
+
     bool operator==(const QProcessEnvironment &other) const;
     inline bool operator!=(const QProcessEnvironment &other) const
     { return !(*this == other); }
diff --git a/src/corelib/io/qurlquery.cpp b/src/corelib/io/qurlquery.cpp
index f5ba15a..24742e4 100644
--- a/src/corelib/io/qurlquery.cpp
+++ b/src/corelib/io/qurlquery.cpp
@@ -359,6 +359,13 @@ QUrlQuery &QUrlQuery::operator =(const QUrlQuery &other)
 }
 
 /*!
+    \fn void QUrlQuery::swap(QUrlQuery &other)
+
+    Swaps this URL query instance with \a other. This function is very
+    fast and never fails.
+*/
+
+/*!
     Destroys this QUrlQuery object.
 */
 QUrlQuery::~QUrlQuery()
diff --git a/src/corelib/itemmodels/qabstractitemmodel.cpp b/src/corelib/itemmodels/qabstractitemmodel.cpp
index c94b3cb..c782877 100644
--- a/src/corelib/itemmodels/qabstractitemmodel.cpp
+++ b/src/corelib/itemmodels/qabstractitemmodel.cpp
@@ -213,6 +213,13 @@ QPersistentModelIndex &QPersistentModelIndex::operator=(const QPersistentModelIn
     if (d) d->ref.ref();
     return *this;
 }
+/*!
+    \fn void QPersistentModelIndex::swap(QPersistentModelIndex &other)
+    \since 5.0
+
+    Swaps this persistent modelindex with \a other. This function is
+    very fast and never fails.
+*/
 
 /*!
     Sets the persistent model index to refer to the same item in a model
diff --git a/src/corelib/itemmodels/qabstractitemmodel.h b/src/corelib/itemmodels/qabstractitemmodel.h
index 976c160..df39c33 100644
--- a/src/corelib/itemmodels/qabstractitemmodel.h
+++ b/src/corelib/itemmodels/qabstractitemmodel.h
@@ -116,6 +116,7 @@ public:
     inline bool operator!=(const QPersistentModelIndex &other) const
     { return !operator==(other); }
     QPersistentModelIndex &operator=(const QPersistentModelIndex &other);
+    inline void swap(QPersistentModelIndex &other) { qSwap(d, other.d); }
     bool operator==(const QModelIndex &other) const;
     bool operator!=(const QModelIndex &other) const;
     QPersistentModelIndex &operator=(const QModelIndex &other);
diff --git a/src/corelib/tools/qdatetime.cpp b/src/corelib/tools/qdatetime.cpp
index 1343600..b76f4e3 100644
--- a/src/corelib/tools/qdatetime.cpp
+++ b/src/corelib/tools/qdatetime.cpp
@@ -2208,6 +2208,13 @@ QDateTime &QDateTime::operator=(const QDateTime &other)
     d = other.d;
     return *this;
 }
+/*!
+    \fn void QDateTime::swap(QDateTime &other)
+    \since 5.0
+
+    Swaps this date-time with \a other. This operation is very fast
+    and never fails.
+*/
 
 /*!
     Returns true if both the date and the time are null; otherwise
diff --git a/src/corelib/tools/qdatetime.h b/src/corelib/tools/qdatetime.h
index a648285..c38e780 100644
--- a/src/corelib/tools/qdatetime.h
+++ b/src/corelib/tools/qdatetime.h
@@ -210,6 +210,8 @@ public:
 
     QDateTime &operator=(const QDateTime &other);
 
+    inline void swap(QDateTime &other) { qSwap(d, other.d); }
+
     bool isNull() const;
     bool isValid() const;