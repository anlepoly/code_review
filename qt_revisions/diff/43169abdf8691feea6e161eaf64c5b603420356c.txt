diff --git a/src/network/access/qnetworkaccessmanager.cpp b/src/network/access/qnetworkaccessmanager.cpp
index 1118c32..a1a7a7d 100644
--- a/src/network/access/qnetworkaccessmanager.cpp
+++ b/src/network/access/qnetworkaccessmanager.cpp
@@ -347,7 +347,7 @@ static void ensureInitialized()
     \note To have the request not send credentials you must not call
     setUser() or setPassword() on the \a authenticator object. This
     will result in the \l finished() signal being emitted with a
-    \l QNetworkReply with error \l AuthenticationRequiredError.
+    \l QNetworkReply with error \l {QNetworkReply::} {AuthenticationRequiredError}.
 
     \note It is not possible to use a QueuedConnection to connect to
     this signal, as the connection will fail if the authenticator has
diff --git a/src/network/bearer/qnetworksession.cpp b/src/network/bearer/qnetworksession.cpp
index 6527065..79611aa 100644
--- a/src/network/bearer/qnetworksession.cpp
+++ b/src/network/bearer/qnetworksession.cpp
@@ -235,10 +235,10 @@ QT_BEGIN_NAMESPACE
 */
 
 /*!
-    \fn void QNetworkSession::usagePoliciesChanged(UsagePolicies)
+    \fn void QNetworkSession::usagePoliciesChanged(QNetworkSession::UsagePolicies usagePolicies)
     \since 5.0
 
-    This signal is emitted when the \a UsagePolicies in force are changed by the system.
+    This signal is emitted when the \a usagePolicies in force are changed by the system.
 */
 
 /*!
diff --git a/src/network/bearer/qnetworksession.h b/src/network/bearer/qnetworksession.h
index b934120..2e30a50 100644
--- a/src/network/bearer/qnetworksession.h
+++ b/src/network/bearer/qnetworksession.h
@@ -131,7 +131,7 @@ Q_SIGNALS:
     void error(QNetworkSession::SessionError);
     void preferredConfigurationChanged(const QNetworkConfiguration &config, bool isSeamless);
     void newConfigurationActivated();
-    void usagePoliciesChanged(QNetworkSession::UsagePolicies);
+    void usagePoliciesChanged(QNetworkSession::UsagePolicies usagePolicies);
 
 protected:
     virtual void connectNotify(const QMetaMethod &signal);