diff --git a/src/widgets/itemviews/qtreeview.cpp b/src/widgets/itemviews/qtreeview.cpp
index be78cdb..aaec2b1 100644
--- a/src/widgets/itemviews/qtreeview.cpp
+++ b/src/widgets/itemviews/qtreeview.cpp
@@ -1390,7 +1390,10 @@ void QTreeViewPrivate::adjustViewOptionsForIndex(QStyleOptionViewItemV4 *option,
 
     QVector<int> logicalIndices; // index = visual index of visible columns only. data = logical index.
     QVector<QStyleOptionViewItemV4::ViewItemPosition> viewItemPosList; // vector of left/middle/end for each logicalIndex, visible columns only.
-    calcLogicalIndices(&logicalIndices, &viewItemPosList);
+    const bool spanning = viewItems.at(row).spanning;
+    const int left = (spanning ? header->visualIndex(0) : 0);
+    const int right = (spanning ? header->visualIndex(0) : header->count() - 1 );
+    calcLogicalIndices(&logicalIndices, &viewItemPosList, left, right);
 
     int columnIndex = 0;
     for (int visualIndex = 0; visualIndex < current.column(); ++visualIndex) {
@@ -1488,10 +1491,8 @@ static inline bool ancestorOf(QObject *widget, QObject *other)
     return false;
 }
 
-void QTreeViewPrivate::calcLogicalIndices(QVector<int> *logicalIndices, QVector<QStyleOptionViewItemV4::ViewItemPosition> *itemPositions) const
+void QTreeViewPrivate::calcLogicalIndices(QVector<int> *logicalIndices, QVector<QStyleOptionViewItemV4::ViewItemPosition> *itemPositions, int left, int right) const
 {
-    const int left = (spanning ? header->visualIndex(0) : leftAndRight.first);
-    const int right = (spanning ? header->visualIndex(0) : leftAndRight.second);
     const int columnCount = header->count();
     /* 'left' and 'right' are the left-most and right-most visible visual indices.
        Compute the first visible logical indices before and after the left and right.
@@ -1615,7 +1616,7 @@ void QTreeView::drawRow(QPainter *painter, const QStyleOptionViewItem &option,
 
     QVector<int> logicalIndices;
     QVector<QStyleOptionViewItemV4::ViewItemPosition> viewItemPosList; // vector of left/middle/end for each logicalIndex
-    d->calcLogicalIndices(&logicalIndices, &viewItemPosList);
+    d->calcLogicalIndices(&logicalIndices, &viewItemPosList, left, right);
 
     for (int currentLogicalSection = 0; currentLogicalSection < logicalIndices.count(); ++currentLogicalSection) {
         int headerSection = logicalIndices.at(currentLogicalSection);
diff --git a/src/widgets/itemviews/qtreeview_p.h b/src/widgets/itemviews/qtreeview_p.h
index c8fb885..091420e 100644
--- a/src/widgets/itemviews/qtreeview_p.h
+++ b/src/widgets/itemviews/qtreeview_p.h
@@ -170,7 +170,7 @@ public:
 
     // logicalIndices: vector of currently visibly logical indices
     // itemPositions: vector of view item positions (beginning/middle/end/onlyone)
-    void calcLogicalIndices(QVector<int> *logicalIndices, QVector<QStyleOptionViewItemV4::ViewItemPosition> *itemPositions) const;
+    void calcLogicalIndices(QVector<int> *logicalIndices, QVector<QStyleOptionViewItemV4::ViewItemPosition> *itemPositions, int left, int right) const;
 
     QHeaderView *header;
     int indent;
diff --git a/tests/auto/widgets/itemviews/qtreeview/tst_qtreeview.cpp b/tests/auto/widgets/itemviews/qtreeview/tst_qtreeview.cpp
index e1f175a..5908605 100644
--- a/tests/auto/widgets/itemviews/qtreeview/tst_qtreeview.cpp
+++ b/tests/auto/widgets/itemviews/qtreeview/tst_qtreeview.cpp
@@ -2990,6 +2990,19 @@ void tst_QTreeView::styleOptionViewItem()
     view.setFirstColumnSpanned(2, QModelIndex(), true);
     view.setAlternatingRowColors(true);
 
+#ifdef QT_BUILD_INTERNAL
+    {
+        // Test the rendering to pixmap before painting the widget.
+        // The rendering to pixmap should not depend on having been
+        // painted already yet.
+        delegate.count = 0;
+        QItemSelection sel(model.index(0,0), model.index(0,modelColumns-1));
+        QRect rect;
+        view.aiv_priv()->renderToPixmap(sel.indexes(), &rect);
+        QTRY_VERIFY(delegate.count == visibleColumns);
+    }
+#endif
+
     delegate.count = 0;
     delegate.allCollapsed = true;
     view.showMaximized();