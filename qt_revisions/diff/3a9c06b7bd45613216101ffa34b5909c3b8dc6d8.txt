diff --git a/src/corelib/json/qjsonarray.cpp b/src/corelib/json/qjsonarray.cpp
index 6bae200..d143215 100644
--- a/src/corelib/json/qjsonarray.cpp
+++ b/src/corelib/json/qjsonarray.cpp
@@ -275,7 +275,7 @@ void QJsonArray::removeAt(int i)
     detach();
     a->removeItems(i, 1);
     ++d->compactionCounter;
-    if (d->compactionCounter > 32 && d->compactionCounter >= (int)a->length/2)
+    if (d->compactionCounter > 32u && d->compactionCounter >= unsigned(a->length) / 2u)
         compact();
 }
 
@@ -379,7 +379,7 @@ void QJsonArray::replace(int i, const QJsonValue &value)
         QJsonPrivate::Value::copyData(value, (char *)a + valueOffset, compressed);
 
     ++d->compactionCounter;
-    if (d->compactionCounter > 32 && d->compactionCounter >= (int)a->length/2)
+    if (d->compactionCounter > 32u && d->compactionCounter >= unsigned(a->length) / 2u)
         compact();
 }
 
diff --git a/src/corelib/json/qjsonobject.cpp b/src/corelib/json/qjsonobject.cpp
index e14000f..e880078 100644
--- a/src/corelib/json/qjsonobject.cpp
+++ b/src/corelib/json/qjsonobject.cpp
@@ -335,7 +335,7 @@ void QJsonObject::remove(const QString &key)
     detach();
     o->removeItems(index, 1);
     ++d->compactionCounter;
-    if (d->compactionCounter > 32 && d->compactionCounter >= (int)o->length/2)
+    if (d->compactionCounter > 32u && d->compactionCounter >= unsigned(o->length) / 2u)
         compact();
 }
 
@@ -361,7 +361,7 @@ QJsonValue QJsonObject::take(const QString &key)
     QJsonPrivate::Entry *e = o->entryAt(index);
     o->removeItems(index, 1);
     ++d->compactionCounter;
-    if (d->compactionCounter > 32 && d->compactionCounter >= (int)o->length/2)
+    if (d->compactionCounter > 32u && d->compactionCounter >= unsigned(o->length) / 2u)
         compact();
 
     return QJsonValue(d, o, e->value);
@@ -432,7 +432,7 @@ QJsonObject::iterator QJsonObject::erase(QJsonObject::iterator it)
 
     o->removeItems(index, 1);
     ++d->compactionCounter;
-    if (d->compactionCounter > 32 && d->compactionCounter >= (int)o->length/2)
+    if (d->compactionCounter > 32u && d->compactionCounter >= unsigned(o->length) / 2u)
         compact();
 
     // iterator hasn't changed