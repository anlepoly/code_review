diff --git a/src/activeqt/container/qaxscript.cpp b/src/activeqt/container/qaxscript.cpp
index 9518377..31ecb81 100644
--- a/src/activeqt/container/qaxscript.cpp
+++ b/src/activeqt/container/qaxscript.cpp
@@ -564,6 +564,8 @@ long QAxScriptEngine::queryInterface(const QUuid &uuid, void **iface) const
 #ifndef QT_NO_QAXSCRIPT
     return engine->QueryInterface(uuid, iface);
 #else
+    Q_UNUSED(uuid);
+    Q_UNUSED(iface);
     return E_NOTIMPL;
 #endif
 }
@@ -596,6 +598,8 @@ void QAxScriptEngine::setState(State st)
         return;
     
     engine->SetScriptState((SCRIPTSTATE)st);
+#else
+    Q_UNUSED(st);
 #endif
 }
 
@@ -610,6 +614,8 @@ void QAxScriptEngine::addItem(const QString &name)
         return;
     
     engine->AddNamedItem((wchar_t*)name.utf16(), SCRIPTITEM_ISSOURCE|SCRIPTITEM_ISVISIBLE);
+#else
+    Q_UNUSED(name);
 #endif
 }
 
diff --git a/src/activeqt/container/qaxwidget.cpp b/src/activeqt/container/qaxwidget.cpp
index a7cf0c2..1e0d3e8 100644
--- a/src/activeqt/container/qaxwidget.cpp
+++ b/src/activeqt/container/qaxwidget.cpp
@@ -575,7 +575,6 @@ bool QAxClientSite::activateObject(bool initialized, const QByteArray &data)
         host = new QAxHostWidget(widget, this);
 
     bool showHost = false;
-    HRESULT hr = S_OK;
     if (!m_spOleObject)
         widget->queryInterface(IID_IOleObject, (void**)&m_spOleObject);
     if (m_spOleObject) {
@@ -592,8 +591,8 @@ bool QAxClientSite::activateObject(bool initialized, const QByteArray &data)
             // try to activate as document server
                 IStorage *storage = 0;
                 ILockBytes * bytes = 0;
-                HRESULT hres = ::CreateILockBytesOnHGlobal(0, TRUE, &bytes);
-                hres = ::StgCreateDocfileOnILockBytes(bytes, STGM_SHARE_EXCLUSIVE|STGM_CREATE|STGM_READWRITE, 0, &storage);
+                ::CreateILockBytesOnHGlobal(0, TRUE, &bytes);
+                ::StgCreateDocfileOnILockBytes(bytes, STGM_SHARE_EXCLUSIVE|STGM_CREATE|STGM_READWRITE, 0, &storage);
 
                 persistStorage->InitNew(storage);
                 persistStorage->Release();
@@ -709,9 +708,9 @@ bool QAxClientSite::activateObject(bool initialized, const QByteArray &data)
 
         RECT rcPos = { host->x(), host->y(), host->x()+sizehint.width(), host->y()+sizehint.height() };
 
-        hr = m_spOleObject->DoVerb(OLEIVERB_INPLACEACTIVATE, 0, (IOleClientSite*)this, 0,
-                                   (HWND)host->winId(),
-                                   &rcPos);
+        m_spOleObject->DoVerb(OLEIVERB_INPLACEACTIVATE, 0, (IOleClientSite*)this, 0,
+                              (HWND)host->winId(),
+                              &rcPos);
 
         if (!m_spOleControl)
             m_spOleObject->QueryInterface(IID_IOleControl, (void**)&m_spOleControl);
diff --git a/src/activeqt/shared/qaxtypes.cpp b/src/activeqt/shared/qaxtypes.cpp
index bcd8380..b1ffa91 100644
--- a/src/activeqt/shared/qaxtypes.cpp
+++ b/src/activeqt/shared/qaxtypes.cpp
@@ -549,7 +549,7 @@ bool QVariantToVARIANT(const QVariant &var, VARIANT &arg, const QByteArray &type
                 int maxColumns = col.count();
                 if (maxColumns) {
                     is2D = true;
-                    SAFEARRAYBOUND rgsabound[2] = { {0} };
+                    SAFEARRAYBOUND rgsabound[2] = { {0, 0}, {0, 0} };
                     rgsabound[0].cElements = count;
                     rgsabound[1].cElements = maxColumns;
                     array = SafeArrayCreate(VT_VARIANT, 2, rgsabound);
diff --git a/tools/dumpcpp/main.cpp b/tools/dumpcpp/main.cpp
index 02420cf..d27c7bf 100644
--- a/tools/dumpcpp/main.cpp
+++ b/tools/dumpcpp/main.cpp
@@ -371,7 +371,6 @@ void generateClassDecl(QTextStream &out, const QString &controlID, const QMetaOb
         
         if (property.isWritable()) {
             QByteArray setter(propertyName);
-            QChar firstChar = QLatin1Char(setter.at(0));
             if (isupper(setter.at(0))) {
                 setter = "Set" + setter;
             } else {