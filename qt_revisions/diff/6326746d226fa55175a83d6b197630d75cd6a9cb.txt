diff --git a/src/tools/qdoc/config.cpp b/src/tools/qdoc/config.cpp
index 1ecfb6d..89d4f1a 100644
--- a/src/tools/qdoc/config.cpp
+++ b/src/tools/qdoc/config.cpp
@@ -50,6 +50,7 @@
 #include <qtextstream.h>
 #include <qdebug.h>
 #include "config.h"
+#include "generator.h"
 #include <stdlib.h>
 
 QT_BEGIN_NAMESPACE
@@ -148,6 +149,7 @@ QStringList MetaStack::getExpanded(const Location& location)
 }
 
 QT_STATIC_CONST_IMPL QString Config::dot = QLatin1String(".");
+bool Config::debug = false;
 bool Config::generateExamples = true;
 QString Config::overrideOutputDir;
 QString Config::installDir;
@@ -548,6 +550,10 @@ QString Config::findFile(const Location& location,
                          const QString& fileName,
                          QString& userFriendlyFilePath)
 {
+    if (debug)
+        qDebug() << "FILES:" << files
+                 << "DIRS:" << dirs
+                 << "FILENAME:" << fileName;
     if (fileName.isEmpty() || fileName.startsWith(QLatin1Char('/'))) {
         userFriendlyFilePath = fileName;
         return fileName;
@@ -572,6 +578,8 @@ QString Config::findFile(const Location& location,
     if (fileInfo.fileName().isEmpty()) {
         QStringList::ConstIterator d = dirs.constBegin();
         while (d != dirs.constEnd()) {
+            if (debug)
+                qDebug() << "TEST:" << QDir(*d).absolutePath() << firstComponent;
             fileInfo.setFile(QDir(*d), firstComponent);
             if (fileInfo.exists()) {
                 break;
@@ -853,9 +861,7 @@ void Config::load(Location location, const QString& fileName)
                 /*
                   Here is the recursive call.
                  */
-                load(location,
-                     QFileInfo(QFileInfo(fileName).dir(), includeFile)
-                     .filePath());
+                load(location, QFileInfo(QFileInfo(fileName).dir(), includeFile).filePath());
             }
             else {
                 /*
diff --git a/src/tools/qdoc/config.h b/src/tools/qdoc/config.h
index b3a35b9..eca632a 100644
--- a/src/tools/qdoc/config.h
+++ b/src/tools/qdoc/config.h
@@ -114,6 +114,7 @@ public:
 
     QT_STATIC_CONST QString dot;
 
+    static bool debug;
     static bool generateExamples;
     static QString installDir;
     static QString overrideOutputDir;
diff --git a/src/tools/qdoc/generator.cpp b/src/tools/qdoc/generator.cpp
index 67e18b4..b728aa3 100644
--- a/src/tools/qdoc/generator.cpp
+++ b/src/tools/qdoc/generator.cpp
@@ -1548,10 +1548,10 @@ void Generator::initialize(const Config &config)
             // Documentation template handling
             QStringList searchDirs;
             QString templateDir = config.getString((*g)->format() + Config::dot + CONFIG_TEMPLATEDIR);
+            qDebug() << "TEMPLATEDIR:" << templateDir << (*g)->format() + Config::dot + CONFIG_TEMPLATEDIR;
             if (templateDir.isEmpty())
                 templateDir = ".";
             searchDirs.append(templateDir);
-
             QStringList noExts;
             QStringList scripts = config.getCleanPathList((*g)->format()+Config::dot+CONFIG_SCRIPTS);
             e = scripts.constBegin();
@@ -1573,6 +1573,10 @@ void Generator::initialize(const Config &config)
             }
 
             QStringList styles = config.getCleanPathList((*g)->format()+Config::dot+CONFIG_STYLESHEETS);
+            qDebug() << "STYLES:" << styles;
+            qDebug() << "SEARCHDIRS:" << searchDirs;
+            qDebug() << "STYLEFILES:" << styleFiles;
+            Config::debug = true;
             e = styles.constBegin();
             while (e != styles.constEnd()) {
                 QString userFriendlyFilePath;
@@ -1582,6 +1586,7 @@ void Generator::initialize(const Config &config)
                                                     *e,
                                                     noExts,
                                                     userFriendlyFilePath);
+                qDebug() << "FILEPATH:" << filePath;
                 if (!filePath.isEmpty())
                     Config::copyFile(config.lastLocation(),
                                      filePath,
@@ -1590,6 +1595,7 @@ void Generator::initialize(const Config &config)
                                      "/style");
                 ++e;
             }
+            Config::debug = false;
         }
         ++g;
     }
diff --git a/src/tools/qdoc/main.cpp b/src/tools/qdoc/main.cpp
index c70160f..fda9bf1 100644
--- a/src/tools/qdoc/main.cpp
+++ b/src/tools/qdoc/main.cpp
@@ -261,11 +261,16 @@ static void processQdocconfFile(const QString &fileName)
     config.setStringList(CONFIG_NOLINKERRORS, QStringList(noLinkErrors ? "true" : "false"));
     config.setStringList(CONFIG_OBSOLETELINKS, QStringList(obsoleteLinks ? "true" : "false"));
 
-    documentationPath = QLibraryInfo::rawLocation(QLibraryInfo::DocumentationPath,
-                                                  QLibraryInfo::EffectivePaths);
-
-    // Set a few environment variables that can be used from the qdocconf file
-    qputenv("QT_INSTALL_DOCS", documentationPath.toLatin1());
+    /*
+      If QT_INSTALL_DOCS is not set, set it here so it can be used from
+      the qdocconf files.
+    */
+    QString qt_install_docs = qgetenv("QT_INSTALL_DOCS");
+    if (qt_install_docs.isEmpty()) {
+        documentationPath = QLibraryInfo::rawLocation(QLibraryInfo::DocumentationPath,
+                                                      QLibraryInfo::EffectivePaths);
+        qputenv("QT_INSTALL_DOCS", documentationPath.toLatin1());
+    }
 
     /*
       With the default configuration values in place, load