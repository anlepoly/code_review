diff --git a/src/serialportinfo_mac.cpp b/src/serialportinfo_mac.cpp
index 1366f3a..e76b7e1 100755
--- a/src/serialportinfo_mac.cpp
+++ b/src/serialportinfo_mac.cpp
@@ -43,7 +43,6 @@
 
 #include "serialportinfo.h"
 #include "serialportinfo_p.h"
-#include "ttylocker_unix_p.h"
 #include "serialportengine_unix_p.h"
 
 #include <sys/param.h>
@@ -59,10 +58,6 @@
 #endif
 #include <IOKit/IOBSD.h>
 
-#include <QtCore/qvariant.h>
-#include <QtCore/qstringlist.h>
-#include <QtCore/qfile.h>
-
 QT_BEGIN_NAMESPACE_SERIALPORT
 
 enum { MATCHING_PROPERTIES_COUNT = 6 };
@@ -267,27 +262,4 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()
     return ports;
 }
 
-static QList<qint32> emptyList()
-{
-    QList<qint32> list;
-    return list;
-}
-
-QList<qint32> SerialPortInfo::standardRates()
-{
-    return SerialPortPrivate::standardRates();
-}
-
-bool SerialPortInfo::isBusy() const
-{
-    bool currPid = false;
-    return TtyLocker::isLocked(portName().toLocal8Bit().constData(), &currPid);
-}
-
-bool SerialPortInfo::isValid() const
-{
-    QFile f(systemLocation());
-    return f.exists();
-}
-
 QT_END_NAMESPACE_SERIALPORT
diff --git a/src/serialportinfo_unix.cpp b/src/serialportinfo_unix.cpp
index 95691e2..495d93b 100755
--- a/src/serialportinfo_unix.cpp
+++ b/src/serialportinfo_unix.cpp
@@ -46,44 +46,28 @@
 #include "ttylocker_unix_p.h"
 #include "serialportengine_unix_p.h"
 
-#include <sys/types.h>
-#include <signal.h>
-#include <unistd.h>
-#include <errno.h>
-#include <sys/ioctl.h>
-#include <fcntl.h>
-
-#ifdef Q_OS_LINUX
-#  include <linux/serial.h>
-#endif
+#ifndef Q_OS_MAC
 
 #if defined (Q_OS_LINUX) && defined (HAVE_LIBUDEV)
 extern "C"
 {
-#  include <libudev.h>
+#include <libudev.h>
 }
 #else
-#  include <QtCore/qdir.h>
-#endif
-
+#include <QtCore/qdir.h>
 #include <QtCore/qstringlist.h>
-#include <QtCore/qregexp.h>
 #include <QtCore/qfile.h>
+#endif
 
 QT_BEGIN_NAMESPACE_SERIALPORT
 
 #if defined (Q_OS_LINUX) && defined (HAVE_LIBUDEV)
 
-// For detail enumerate - skipping, filters is not used.
-// Instead of filters used libudev.
-
 // White list for devices without a parent
 static const QString rfcommDeviceName(QLatin1String("rfcomm"));
 
 #else
 
-// For simple enumerate.
-
 static QStringList generateFiltersOfDevices()
 {
     QStringList l;
@@ -104,10 +88,6 @@ static QStringList generateFiltersOfDevices()
     return l;
 }
 
-// Only for a simple enumeration by the mask of all available
-// devices in /dev directory. Used in the following cases:
-// - for Gnu/Linux without libudev
-// - for any other *nix, bsd (exception Mac OSX)
 inline QStringList& filtersOfDevices()
 {
     static QStringList l = generateFiltersOfDevices();
@@ -122,8 +102,6 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()
 
 #if defined (Q_OS_LINUX) && defined (HAVE_LIBUDEV)
 
-    // Detailed enumerate devices for Gnu/Linux with use libudev.
-
     struct ::udev *udev = ::udev_new();
     if (udev) {
 
@@ -222,14 +200,9 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()
     }
 
 #elif defined (Q_OS_FREEBSD) && defined (HAVE_LIBUSB)
-
     // TODO: Implement me.
-    //
-
 #else
 
-    // Simple enumerate devices for other *nix OS in device directory /dev.
-
     QDir devDir(QLatin1String("/dev"));
     if (devDir.exists()) {
 
@@ -265,6 +238,10 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()
     return ports;
 }
 
+#endif // Q_OS_MAC
+
+// common part
+
 QList<qint32> SerialPortInfo::standardRates()
 {
     return SerialPortPrivate::standardRates();
diff --git a/src/serialportinfo_win.cpp b/src/serialportinfo_win.cpp
index 8842f78..5df25ec 100755
--- a/src/serialportinfo_win.cpp
+++ b/src/serialportinfo_win.cpp
@@ -55,6 +55,8 @@
 
 QT_BEGIN_NAMESPACE_SERIALPORT
 
+#ifndef Q_OS_WINCE
+
 static const GUID guidsArray[] =
 {
     // Windows Ports Class GUID
@@ -253,6 +255,9 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()
     return ports;
 }
 
+#endif
+
+// common part
 
 QList<qint32> SerialPortInfo::standardRates()
 {
diff --git a/src/serialportinfo_wince.cpp b/src/serialportinfo_wince.cpp
index f9b6830..00ce6e1 100644
--- a/src/serialportinfo_wince.cpp
+++ b/src/serialportinfo_wince.cpp
@@ -43,22 +43,14 @@
 
 #include "serialportinfo.h"
 #include "serialportinfo_p.h"
-#include "serialportengine_win_p.h"
 
 #include <qt_windows.h>
-#include <objbase.h>
-#include <initguid.h>
 
 #include <QtCore/qvariant.h>
 #include <QtCore/qstringlist.h>
 
 QT_BEGIN_NAMESPACE_SERIALPORT
 
-static const GUID guidsArray[] =
-{
-    { 0xCC5195AC, 0xBA49, 0x48A0, { 0xBE, 0x17, 0xDF, 0x6D, 0x1B, 0x01, 0x73, 0xDD } }
-};
-
 const static QString valueName(QLatin1String("FriendlyName"));
 static QString findDescription(HKEY parentKeyHandle, const QString &subKey)
 {
@@ -140,38 +132,4 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()
     return ports;
 }
 
-
-QList<qint32> SerialPortInfo::standardRates()
-{
-    return SerialPortPrivate::standardRates();
-}
-
-bool SerialPortInfo::isBusy() const
-{
-    const HANDLE descriptor = ::CreateFile(reinterpret_cast<const wchar_t*>(systemLocation().utf16()),
-                                           GENERIC_READ | GENERIC_WRITE, 0, 0, OPEN_EXISTING, 0, 0);
-
-    if (descriptor == INVALID_HANDLE_VALUE) {
-        if (::GetLastError() == ERROR_ACCESS_DENIED)
-            return true;
-    } else {
-        ::CloseHandle(descriptor);
-    }
-    return false;
-}
-
-bool SerialPortInfo::isValid() const
-{
-    const HANDLE descriptor = ::CreateFile(reinterpret_cast<const wchar_t*>(systemLocation().utf16()),
-                                           GENERIC_READ | GENERIC_WRITE, 0, 0, OPEN_EXISTING, 0, 0);
-
-    if (descriptor == INVALID_HANDLE_VALUE) {
-        if (::GetLastError() != ERROR_ACCESS_DENIED)
-            return false;
-    } else {
-        ::CloseHandle(descriptor);
-    }
-    return true;
-}
-
 QT_END_NAMESPACE_SERIALPORT
diff --git a/src/src-lib.pri b/src/src-lib.pri
index fa89b0a..73fc5ba 100644
--- a/src/src-lib.pri
+++ b/src/src-lib.pri
@@ -20,15 +20,15 @@ SOURCES += \
     $$PWD/serialport.cpp \
     $$PWD/serialportinfo.cpp
 
-
 win32 {
+    SOURCES += $$PWD/serialportinfo_win.cpp
+
     !wince*: {
         PRIVATE_HEADERS += \
             $$PWD/serialportengine_win_p.h
 
         SOURCES += \
-            $$PWD/serialportengine_win.cpp \
-            $$PWD/serialportinfo_win.cpp
+            $$PWD/serialportengine_win.cpp
 
         LIBS += -lsetupapi -luuid -ladvapi32
     } else {
@@ -69,13 +69,13 @@ unix:!symbian {
         $$PWD/serialportengine_unix_p.h
     SOURCES += \
         $$PWD/ttylocker_unix.cpp \
-        $$PWD/serialportengine_unix.cpp
+        $$PWD/serialportengine_unix.cpp \
+        $$PWD/serialportinfo_unix.cpp
 
     macx {
         SOURCES += $$PWD/serialportinfo_mac.cpp
         LIBS += -framework IOKit -framework CoreFoundation
     } else {
-        SOURCES += $$PWD/serialportinfo_unix.cpp
         linux*:contains( DEFINES, HAVE_LIBUDEV ) {
             LIBS += -ludev
         }