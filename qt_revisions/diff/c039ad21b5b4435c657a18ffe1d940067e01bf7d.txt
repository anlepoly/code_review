diff --git a/src/widgets/widgets/qwidgetlinecontrol_p.h b/src/widgets/widgets/qwidgetlinecontrol_p.h
index ebc5758..88b816d 100644
--- a/src/widgets/widgets/qwidgetlinecontrol_p.h
+++ b/src/widgets/widgets/qwidgetlinecontrol_p.h
@@ -277,7 +277,18 @@ public:
     bool hasAcceptableInput() const { return hasAcceptableInput(m_text); }
     bool fixup();
 
-    QString inputMask() const { return m_maskData ? m_inputMask + QLatin1Char(';') + m_blank : QString(); }
+    QString inputMask() const
+    {
+        QString mask;
+        if (m_maskData) {
+            mask = m_inputMask;
+            if (m_blank != QLatin1Char(' ')) {
+                mask += QLatin1Char(';');
+                mask += m_blank;
+            }
+        }
+        return mask;
+    }
     void setInputMask(const QString &mask)
     {
         parseInputMask(mask);
diff --git a/tests/auto/widgets/widgets/qlineedit/tst_qlineedit.cpp b/tests/auto/widgets/widgets/qlineedit/tst_qlineedit.cpp
index 384c5c2..f2a37d8 100644
--- a/tests/auto/widgets/widgets/qlineedit/tst_qlineedit.cpp
+++ b/tests/auto/widgets/widgets/qlineedit/tst_qlineedit.cpp
@@ -665,14 +665,14 @@ void tst_QLineEdit::inputMask_data()
     QTest::newRow("nul 2") << QString() << QString();
 
     // try different masks
-    QTest::newRow("mask 1") << QString("000.000.000.000") << QString("000.000.000.000; ");
+    QTest::newRow("mask 1") << QString("000.000.000.000") << QString("000.000.000.000");
     QTest::newRow("mask 2") << QString("000.000.000.000;#") << QString("000.000.000.000;#");
-    QTest::newRow("mask 3") << QString("AAA.aa.999.###;") << QString("AAA.aa.999.###; ");
-    QTest::newRow("mask 4") << QString(">abcdef<GHIJK") << QString(">abcdef<GHIJK; ");
+    QTest::newRow("mask 3") << QString("AAA.aa.999.###;") << QString("AAA.aa.999.###");
+    QTest::newRow("mask 4") << QString(">abcdef<GHIJK") << QString(">abcdef<GHIJK");
 
     // set an invalid input mask...
     // the current behaviour is that this exact (faulty) string is returned.
-    QTest::newRow("invalid") << QString("ABCDEFGHIKLMNOP;") << QString("ABCDEFGHIKLMNOP; ");
+    QTest::newRow("invalid") << QString("ABCDEFGHIKLMNOP;") << QString("ABCDEFGHIKLMNOP");
 
     // verify that we can unset the mask again
     QTest::newRow("unset") << QString("") << QString();