diff --git a/doc/src/changes.qdoc b/doc/src/changes.qdoc
index e3d4317..f60b4e7 100644
--- a/doc/src/changes.qdoc
+++ b/doc/src/changes.qdoc
@@ -106,7 +106,7 @@ they are documented elsewhere.
            normal Qt namespace (usually nothing, unless built specially).  There
            was a Qt Multimedia Kit namespace for several enumerations.  This namespace
            has now changed to Qt Multimedia, so if you've used one of the
-           \c SupportEstimate, \c EncodingQuality, \c EncodingMode or \c AvailabilityError
+           \c SupportEstimate, \c EncodingQuality, \c EncodingMode or \c AvailabilityStatus
            enumerations you'll need to change your code.  In fact, running a global
            search and replace on \c QtMultimediaKit (to replace it with \c QtMultimedia) will
            go a long way with porting your code.
diff --git a/src/imports/multimedia/plugins.qmltypes b/src/imports/multimedia/plugins.qmltypes
index 779f164..7743df4 100644
--- a/src/imports/multimedia/plugins.qmltypes
+++ b/src/imports/multimedia/plugins.qmltypes
@@ -1434,9 +1434,9 @@ Module {
             Parameter { name: "available"; type: "bool" }
         }
         Signal {
-            name: "availabilityErrorChanged"
+            name: "availabilityChanged"
             type: "void"
-            Parameter { name: "error"; type: "QtMultimedia::AvailabilityError" }
+            Parameter { name: "error"; type: "QtMultimedia::AvailabilityStatus" }
         }
     }
     Component {
diff --git a/src/imports/multimedia/qdeclarativeaudio.cpp b/src/imports/multimedia/qdeclarativeaudio.cpp
index aaf43fe..e9fda4f 100644
--- a/src/imports/multimedia/qdeclarativeaudio.cpp
+++ b/src/imports/multimedia/qdeclarativeaudio.cpp
@@ -99,7 +99,7 @@ void QDeclarativeAudio::_q_error(QMediaPlayer::Error errorCode)
     emit errorChanged();
 }
 
-void QDeclarativeAudio::_q_availabilityChanged(QtMultimedia::AvailabilityError)
+void QDeclarativeAudio::_q_availabilityChanged(QtMultimedia::AvailabilityStatus)
 {
     emit availabilityChanged(availability());
 }
@@ -153,7 +153,7 @@ QDeclarativeAudio::Availability QDeclarativeAudio::availability() const
 {
     if (!m_player)
         return Unavailable;
-    return Availability(m_player->availabilityError());
+    return Availability(m_player->availability());
 }
 
 QUrl QDeclarativeAudio::source() const
@@ -658,10 +658,10 @@ void QDeclarativeAudio::classBegin()
     connect(m_player, SIGNAL(videoAvailableChanged(bool)),
             this, SIGNAL(hasVideoChanged()));
 
-    m_error = m_player->availabilityError() == QtMultimedia::ServiceMissingError ? QMediaPlayer::ServiceMissingError : QMediaPlayer::NoError;
+    m_error = m_player->availability() == QtMultimedia::ServiceMissing ? QMediaPlayer::ServiceMissingError : QMediaPlayer::NoError;
 
-    connect(m_player, SIGNAL(availabilityErrorChanged(QtMultimedia::AvailabilityError)),
-                     this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityError)));
+    connect(m_player, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)),
+                     this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
     m_metaData.reset(new QDeclarativeMediaMetaData(m_player));
 
diff --git a/src/imports/multimedia/qdeclarativeaudio_p.h b/src/imports/multimedia/qdeclarativeaudio_p.h
index 7116131..f4cfa8a 100644
--- a/src/imports/multimedia/qdeclarativeaudio_p.h
+++ b/src/imports/multimedia/qdeclarativeaudio_p.h
@@ -138,9 +138,9 @@ public:
     };
 
     enum Availability {
-        Available = QtMultimedia::NoError,
-        Busy = QtMultimedia::BusyError,
-        Unavailable = QtMultimedia::ServiceMissingError,
+        Available = QtMultimedia::Available,
+        Busy = QtMultimedia::Busy,
+        Unavailable = QtMultimedia::ServiceMissing,
         ResourceMissing = QtMultimedia::ResourceError
     };
 
@@ -237,7 +237,7 @@ Q_SIGNALS:
 
 private Q_SLOTS:
     void _q_error(QMediaPlayer::Error);
-    void _q_availabilityChanged(QtMultimedia::AvailabilityError);
+    void _q_availabilityChanged(QtMultimedia::AvailabilityStatus);
     void _q_statusChanged();
 
 private:
diff --git a/src/imports/multimedia/qdeclarativecamera.cpp b/src/imports/multimedia/qdeclarativecamera.cpp
index 6308edc..d1219ad 100644
--- a/src/imports/multimedia/qdeclarativecamera.cpp
+++ b/src/imports/multimedia/qdeclarativecamera.cpp
@@ -68,9 +68,9 @@ void QDeclarativeCamera::_q_updateState(QCamera::State state)
     emit cameraStateChanged(QDeclarativeCamera::State(state));
 }
 
-void QDeclarativeCamera::_q_availabilityChanged(QtMultimedia::AvailabilityError error)
+void QDeclarativeCamera::_q_availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 {
-    emit availabilityChanged(Availability(error));
+    emit availabilityChanged(Availability(availability));
 }
 
 /*!
@@ -188,9 +188,7 @@ QDeclarativeCamera::QDeclarativeCamera(QObject *parent) :
     connect(m_camera, SIGNAL(stateChanged(QCamera::State)), this, SLOT(_q_updateState(QCamera::State)));
     connect(m_camera, SIGNAL(statusChanged(QCamera::Status)), this, SIGNAL(cameraStatusChanged()));
     connect(m_camera, SIGNAL(error(QCamera::Error)), this, SLOT(_q_error(QCamera::Error)));
-
-    // Note we map availabilityError->availability
-    connect(m_camera, SIGNAL(availabilityErrorChanged(QtMultimedia::AvailabilityError)), this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityError)));
+    connect(m_camera, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)), this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
     connect(m_camera->focus(), SIGNAL(opticalZoomChanged(qreal)), this, SIGNAL(opticalZoomChanged(qreal)));
     connect(m_camera->focus(), SIGNAL(digitalZoomChanged(qreal)), this, SIGNAL(digitalZoomChanged(qreal)));
@@ -260,7 +258,7 @@ QString QDeclarativeCamera::errorString() const
  */
 QDeclarativeCamera::Availability QDeclarativeCamera::availability() const
 {
-    return Availability(m_camera->availabilityError());
+    return Availability(m_camera->availability());
 }
 
 
diff --git a/src/imports/multimedia/qdeclarativecamera_p.h b/src/imports/multimedia/qdeclarativecamera_p.h
index e36a9c9..137df3b 100644
--- a/src/imports/multimedia/qdeclarativecamera_p.h
+++ b/src/imports/multimedia/qdeclarativecamera_p.h
@@ -216,9 +216,9 @@ public:
     };
 
     enum Availability {
-        Available = QtMultimedia::NoError,
-        Busy = QtMultimedia::BusyError,
-        Unavailable = QtMultimedia::ServiceMissingError,
+        Available = QtMultimedia::Available,
+        Busy = QtMultimedia::Busy,
+        Unavailable = QtMultimedia::ServiceMissing,
         ResourceMissing = QtMultimedia::ResourceError
     };
 
@@ -287,7 +287,7 @@ Q_SIGNALS:
 private Q_SLOTS:
     void _q_updateState(QCamera::State);
     void _q_error(QCamera::Error);
-    void _q_availabilityChanged(QtMultimedia::AvailabilityError);
+    void _q_availabilityChanged(QtMultimedia::AvailabilityStatus);
 
 protected:
     void classBegin();
diff --git a/src/imports/multimedia/qdeclarativeradio.cpp b/src/imports/multimedia/qdeclarativeradio.cpp
index 128a997..74d7d49 100644
--- a/src/imports/multimedia/qdeclarativeradio.cpp
+++ b/src/imports/multimedia/qdeclarativeradio.cpp
@@ -115,9 +115,7 @@ QDeclarativeRadio::QDeclarativeRadio(QObject *parent) :
     connect(m_radioTuner, SIGNAL(mutedChanged(bool)), this, SIGNAL(mutedChanged(bool)));
     connect(m_radioTuner, SIGNAL(stationFound(int, QString)), this, SIGNAL(stationFound(int, QString)));
     connect(m_radioTuner, SIGNAL(antennaConnectedChanged(bool)), this, SIGNAL(antennaConnectedChanged(bool)));
-
-    // Note we map availabilityError->availability
-    connect(m_radioTuner, SIGNAL(availabilityErrorChanged(QtMultimedia::AvailabilityError)), this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityError)));
+    connect(m_radioTuner, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)), this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
     connect(m_radioTuner, SIGNAL(error(QRadioTuner::Error)), this, SLOT(_q_error(QRadioTuner::Error)));
 }
@@ -339,7 +337,7 @@ bool QDeclarativeRadio::isAntennaConnected() const
  */
 QDeclarativeRadio::Availability QDeclarativeRadio::availability() const
 {
-    return Availability(m_radioTuner->availabilityError());
+    return Availability(m_radioTuner->availability());
 }
 
 void QDeclarativeRadio::setBand(QDeclarativeRadio::Band band)
@@ -528,9 +526,9 @@ void QDeclarativeRadio::_q_error(QRadioTuner::Error errorCode)
     emit errorChanged();
 }
 
-void QDeclarativeRadio::_q_availabilityChanged(QtMultimedia::AvailabilityError error)
+void QDeclarativeRadio::_q_availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 {
-    emit availabilityChanged(Availability(error));
+    emit availabilityChanged(Availability(availability));
 }
 
 /*!
diff --git a/src/imports/multimedia/qdeclarativeradio_p.h b/src/imports/multimedia/qdeclarativeradio_p.h
index 3829c84..e247c7f 100644
--- a/src/imports/multimedia/qdeclarativeradio_p.h
+++ b/src/imports/multimedia/qdeclarativeradio_p.h
@@ -120,9 +120,9 @@ public:
     };
 
     enum Availability {
-        Available = QtMultimedia::NoError,
-        Busy = QtMultimedia::BusyError,
-        Unavailable = QtMultimedia::ServiceMissingError,
+        Available = QtMultimedia::Available,
+        Busy = QtMultimedia::Busy,
+        Unavailable = QtMultimedia::ServiceMissing,
         ResourceMissing = QtMultimedia::ResourceError
     };
 
@@ -189,7 +189,7 @@ private Q_SLOTS:
     void _q_stateChanged(QRadioTuner::State state);
     void _q_bandChanged(QRadioTuner::Band band);
     void _q_error(QRadioTuner::Error errorCode);
-    void _q_availabilityChanged(QtMultimedia::AvailabilityError);
+    void _q_availabilityChanged(QtMultimedia::AvailabilityStatus);
 
 private:
     Q_DISABLE_COPY(QDeclarativeRadio)
diff --git a/src/imports/multimedia/qdeclarativeradiodata.cpp b/src/imports/multimedia/qdeclarativeradiodata.cpp
index 76cae0f..b03579e 100644
--- a/src/imports/multimedia/qdeclarativeradiodata.cpp
+++ b/src/imports/multimedia/qdeclarativeradiodata.cpp
@@ -141,7 +141,7 @@ QDeclarativeRadioData::~QDeclarativeRadioData()
  */
 QDeclarativeRadioData::Availability QDeclarativeRadioData::availability() const
 {
-    return Availability(m_radioData->availabilityError());
+    return Availability(m_radioData->availability());
 }
 
 
@@ -281,9 +281,9 @@ void QDeclarativeRadioData::_q_error(QRadioData::Error errorCode)
     emit errorChanged();
 }
 
-void QDeclarativeRadioData::_q_availabilityChanged(QtMultimedia::AvailabilityError error)
+void QDeclarativeRadioData::_q_availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 {
-    emit availabilityChanged(Availability(error));
+    emit availabilityChanged(Availability(availability));
 }
 
 void QDeclarativeRadioData::connectSignals()
@@ -297,10 +297,8 @@ void QDeclarativeRadioData::connectSignals()
     connect(m_radioData, SIGNAL(radioTextChanged(QString)), this, SIGNAL(radioTextChanged(QString)));
     connect(m_radioData, SIGNAL(alternativeFrequenciesEnabledChanged(bool)), this,
                          SIGNAL(alternativeFrequenciesEnabledChanged(bool)));
-
-    // Note we map availabilityError->availability
     // Since the radio data type depends on the service for the tuner, the availability is also dictated from the tuner
-    connect(m_radioTuner, SIGNAL(availabilityErrorChanged(QtMultimedia::AvailabilityError)), this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityError)));
+    connect(m_radioTuner, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)), this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
     connect(m_radioData, SIGNAL(error(QRadioData::Error)), this, SLOT(_q_error(QRadioData::Error)));
 }
diff --git a/src/imports/multimedia/qdeclarativeradiodata_p.h b/src/imports/multimedia/qdeclarativeradiodata_p.h
index ce157e7..9740e76 100644
--- a/src/imports/multimedia/qdeclarativeradiodata_p.h
+++ b/src/imports/multimedia/qdeclarativeradiodata_p.h
@@ -137,9 +137,9 @@ public:
     };
 
     enum Availability {
-        Available = QtMultimedia::NoError,
-        Busy = QtMultimedia::BusyError,
-        Unavailable = QtMultimedia::ServiceMissingError,
+        Available = QtMultimedia::Available,
+        Busy = QtMultimedia::Busy,
+        Unavailable = QtMultimedia::ServiceMissing,
         ResourceMissing = QtMultimedia::ResourceError
     };
 
@@ -176,7 +176,7 @@ Q_SIGNALS:
 private Q_SLOTS:
     void _q_programTypeChanged(QRadioData::ProgramType programType);
     void _q_error(QRadioData::Error errorCode);
-    void _q_availabilityChanged(QtMultimedia::AvailabilityError);
+    void _q_availabilityChanged(QtMultimedia::AvailabilityStatus);
 
 private:
     void connectSignals();
diff --git a/src/multimedia/camera/qcamera.cpp b/src/multimedia/camera/qcamera.cpp
index 063e280..3d081d9 100644
--- a/src/multimedia/camera/qcamera.cpp
+++ b/src/multimedia/camera/qcamera.cpp
@@ -412,11 +412,11 @@ QCamera::~QCamera()
 /*!
     Returns the availability state of the camera service.
 */
-QtMultimedia::AvailabilityError QCamera::availabilityError() const
+QtMultimedia::AvailabilityStatus QCamera::availability() const
 {
     Q_D(const QCamera);
     if (d->control == NULL)
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 
     if (d->deviceControl && d->deviceControl->deviceCount() == 0)
         return QtMultimedia::ResourceError;
@@ -424,7 +424,7 @@ QtMultimedia::AvailabilityError QCamera::availabilityError() const
     if (d->error != QCamera::NoError)
         return QtMultimedia::ResourceError;
 
-    return QMediaObject::availabilityError();
+    return QMediaObject::availability();
 }
 
 
diff --git a/src/multimedia/camera/qcamera.h b/src/multimedia/camera/qcamera.h
index 851521d..7fc5226 100644
--- a/src/multimedia/camera/qcamera.h
+++ b/src/multimedia/camera/qcamera.h
@@ -152,7 +152,7 @@ public:
     static QList<QByteArray> availableDevices();
     static QString deviceDescription(const QByteArray &device);
 
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
     State state() const;
     Status status() const;
diff --git a/src/multimedia/camera/qcameraimagecapture.cpp b/src/multimedia/camera/qcameraimagecapture.cpp
index 4b86fb3..4bf2472 100644
--- a/src/multimedia/camera/qcameraimagecapture.cpp
+++ b/src/multimedia/camera/qcameraimagecapture.cpp
@@ -312,14 +312,14 @@ bool QCameraImageCapture::isAvailable() const
 }
 
 /*!
-    Returns the availability error code.
+    Returns the availability of this functionality.
 */
-QtMultimedia::AvailabilityError QCameraImageCapture::availabilityError() const
+QtMultimedia::AvailabilityStatus QCameraImageCapture::availability() const
 {
     if (d_func()->control != NULL)
-        return QtMultimedia::NoError;
+        return QtMultimedia::Available;
     else
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 }
 
 /*!
diff --git a/src/multimedia/camera/qcameraimagecapture.h b/src/multimedia/camera/qcameraimagecapture.h
index f050d52..1d1fa2e 100644
--- a/src/multimedia/camera/qcameraimagecapture.h
+++ b/src/multimedia/camera/qcameraimagecapture.h
@@ -97,7 +97,7 @@ public:
     ~QCameraImageCapture();
 
     bool isAvailable() const;
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
     QMediaObject *mediaObject() const;
 
diff --git a/src/multimedia/controls/qmediaavailabilitycontrol.cpp b/src/multimedia/controls/qmediaavailabilitycontrol.cpp
index 1610b08..8c86ee7 100644
--- a/src/multimedia/controls/qmediaavailabilitycontrol.cpp
+++ b/src/multimedia/controls/qmediaavailabilitycontrol.cpp
@@ -90,7 +90,7 @@ QMediaAvailabilityControl::~QMediaAvailabilityControl()
 
 
 /*!
-  \fn QtMultimedia::AvailabilityError QMediaAvailabilityControl::availability() const
+  \fn QtMultimedia::AvailabilityStatus QMediaAvailabilityControl::availability() const
 
   Returns the current availability of this instance of the media service.
   If the availability changes at run time (for example, some other media
@@ -100,7 +100,7 @@ QMediaAvailabilityControl::~QMediaAvailabilityControl()
 
 
 /*!
-    \fn void QMediaAvailabilityControl::availabilityChanged(QtMultimedia::AvailabilityError availability)
+    \fn void QMediaAvailabilityControl::availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 
     Signal emitted when the current \a availability value changed.
 */
diff --git a/src/multimedia/controls/qmediaavailabilitycontrol.h b/src/multimedia/controls/qmediaavailabilitycontrol.h
index 16f46f0..7117d2a 100644
--- a/src/multimedia/controls/qmediaavailabilitycontrol.h
+++ b/src/multimedia/controls/qmediaavailabilitycontrol.h
@@ -62,10 +62,10 @@ class Q_MULTIMEDIA_EXPORT QMediaAvailabilityControl : public QMediaControl
 public:
     ~QMediaAvailabilityControl();
 
-    virtual QtMultimedia::AvailabilityError availability() const = 0;
+    virtual QtMultimedia::AvailabilityStatus availability() const = 0;
 
 signals:
-    void availabilityChanged(QtMultimedia::AvailabilityError availability);
+    void availabilityChanged(QtMultimedia::AvailabilityStatus availability);
 
 protected:
     QMediaAvailabilityControl(QObject* parent = 0);
diff --git a/src/multimedia/playback/qmediaplayer.cpp b/src/multimedia/playback/qmediaplayer.cpp
index 067893e..2d42479 100644
--- a/src/multimedia/playback/qmediaplayer.cpp
+++ b/src/multimedia/playback/qmediaplayer.cpp
@@ -84,7 +84,7 @@ QT_BEGIN_NAMESPACE
 
     \list
     \li Accessing the currently playing media's metadata (\l {QMediaObject::metaData()} and \l {QtMultimedia::MetaData}{predefined meta-data keys})
-    \li Checking to see if the media playback service is currently available (\l {QMediaObject::availabilityError()})
+    \li Checking to see if the media playback service is currently available (\l {QMediaObject::availability()})
     \endlist
 
     \sa QMediaObject, QMediaService, QVideoWidget, QMediaPlaylist
@@ -1013,14 +1013,14 @@ void QMediaPlayer::setVideoOutput(QAbstractVideoSurface *surface)
 }
 
 /*! \reimp */
-QtMultimedia::AvailabilityError QMediaPlayer::availabilityError() const
+QtMultimedia::AvailabilityStatus QMediaPlayer::availability() const
 {
     Q_D(const QMediaPlayer);
 
     if (!d->control)
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 
-    return QMediaObject::availabilityError();
+    return QMediaObject::availability();
 }
 
 
diff --git a/src/multimedia/playback/qmediaplayer.h b/src/multimedia/playback/qmediaplayer.h
index b6d154b..f800471 100644
--- a/src/multimedia/playback/qmediaplayer.h
+++ b/src/multimedia/playback/qmediaplayer.h
@@ -161,7 +161,7 @@ public:
 
     QNetworkConfiguration currentNetworkConfiguration() const;
 
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
 public Q_SLOTS:
     void play();
diff --git a/src/multimedia/qmediaobject.cpp b/src/multimedia/qmediaobject.cpp
index e9a620b..e0da94e 100644
--- a/src/multimedia/qmediaobject.cpp
+++ b/src/multimedia/qmediaobject.cpp
@@ -71,8 +71,8 @@ void QMediaObjectPrivate::_q_availabilityChanged()
     // Really this should not always emit, but
     // we can't really tell from here (isAvailable
     // may not have changed, or the mediaobject's overridden
-    // availabilityError() may not have changed).
-    q->availabilityErrorChanged(q->availabilityError());
+    // availability() may not have changed).
+    q->availabilityChanged(q->availability());
     q->availabilityChanged(q->isAvailable());
 }
 
@@ -113,18 +113,23 @@ QMediaObject::~QMediaObject()
 }
 
 /*!
-    Returns the service availability error state.
+    Returns the availability of the functionality offered by this object.
+
+    In some cases the functionality may not be available (for example, if
+    the current operating system or platform does not provide the required
+    functionality), or it may be temporarily unavailable (for example,
+    audio playback during a phone call or similar).
 */
 
-QtMultimedia::AvailabilityError QMediaObject::availabilityError() const
+QtMultimedia::AvailabilityStatus QMediaObject::availability() const
 {
     if (d_func()->service == 0)
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 
     if (d_func()->availabilityControl)
         return d_func()->availabilityControl->availability();
 
-    return QtMultimedia::NoError;
+    return QtMultimedia::Available;
 }
 
 /*!
@@ -133,7 +138,7 @@ QtMultimedia::AvailabilityError QMediaObject::availabilityError() const
 
 bool QMediaObject::isAvailable() const
 {
-    return availabilityError() == QtMultimedia::NoError;
+    return availability() == QtMultimedia::Available;
 }
 
 /*!
@@ -403,7 +408,7 @@ void QMediaObject::setupControls()
         d->availabilityControl = d->service->requestControl<QMediaAvailabilityControl*>();
         if (d->availabilityControl) {
             connect(d->availabilityControl,
-                    SIGNAL(availabilityChanged(QtMultimedia::AvailabilityError)),
+                    SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)),
                     SLOT(_q_availabilityChanged()));
         }
     }
@@ -412,13 +417,13 @@ void QMediaObject::setupControls()
 /*!
     \fn QMediaObject::availabilityChanged(bool available)
 
-    Signal emitted when the availability state has changed to \a available
+    Signal emitted when the availability state has changed to \a available.
 */
 
 /*!
-    \fn QMediaObject::availabilityErrorChanged(QtMultimedia::AvailabilityError error)
+    \fn QMediaObject::availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 
-    Signal emitted when the availability error has changed to \a error
+    Signal emitted when the availability of the service has changed to \a availabilty
 */
 
 
diff --git a/src/multimedia/qmediaobject.h b/src/multimedia/qmediaobject.h
index 3c67dd6..e2b3517 100644
--- a/src/multimedia/qmediaobject.h
+++ b/src/multimedia/qmediaobject.h
@@ -67,7 +67,7 @@ public:
     ~QMediaObject();
 
     virtual bool isAvailable() const;
-    virtual QtMultimedia::AvailabilityError availabilityError() const;
+    virtual QtMultimedia::AvailabilityStatus availability() const;
 
     virtual QMediaService* service() const;
 
@@ -90,7 +90,7 @@ Q_SIGNALS:
     void metaDataChanged(const QString &key, const QVariant &value);
 
     void availabilityChanged(bool available);
-    void availabilityErrorChanged(QtMultimedia::AvailabilityError error);
+    void availabilityChanged(QtMultimedia::AvailabilityStatus availability);
 
 protected:
     QMediaObject(QObject *parent, QMediaService *service);
diff --git a/src/multimedia/qtmedianamespace.cpp b/src/multimedia/qtmedianamespace.cpp
index 2c4afdf..94c2dbf 100644
--- a/src/multimedia/qtmedianamespace.cpp
+++ b/src/multimedia/qtmedianamespace.cpp
@@ -49,7 +49,7 @@ namespace
     public:
         QMultimediaNamespacePrivateRegisterMetaTypes()
         {
-            qRegisterMetaType<QtMultimedia::AvailabilityError>();
+            qRegisterMetaType<QtMultimedia::AvailabilityStatus>();
             qRegisterMetaType<QtMultimedia::SupportEstimate>();
             qRegisterMetaType<QtMultimedia::EncodingMode>();
             qRegisterMetaType<QtMultimedia::EncodingQuality>();
@@ -400,7 +400,7 @@ Q_DEFINE_METADATA(ThumbnailImage);
 */
 
 /*!
-    \enum QtMultimedia::AvailabilityError
+    \enum QtMultimedia::AvailabilityStatus
 
     Enumerates Service status errors.
 
diff --git a/src/multimedia/qtmedianamespace.h b/src/multimedia/qtmedianamespace.h
index 2f0f423..5e6bb3f 100644
--- a/src/multimedia/qtmedianamespace.h
+++ b/src/multimedia/qtmedianamespace.h
@@ -314,11 +314,11 @@ namespace QtMultimedia
         TwoPassEncoding
     };
 
-    enum AvailabilityError
+    enum AvailabilityStatus
     {
-        NoError,
-        ServiceMissingError,
-        BusyError,
+        Available,
+        ServiceMissing,
+        Busy,
         ResourceError
     };
 
@@ -328,7 +328,7 @@ namespace QtMultimedia
 
 QT_END_NAMESPACE
 
-Q_DECLARE_METATYPE(QtMultimedia::AvailabilityError)
+Q_DECLARE_METATYPE(QtMultimedia::AvailabilityStatus)
 Q_DECLARE_METATYPE(QtMultimedia::SupportEstimate)
 Q_DECLARE_METATYPE(QtMultimedia::EncodingMode)
 Q_DECLARE_METATYPE(QtMultimedia::EncodingQuality)
diff --git a/src/multimedia/radio/qradiodata.cpp b/src/multimedia/radio/qradiodata.cpp
index 1aa3964..a2f3964 100644
--- a/src/multimedia/radio/qradiodata.cpp
+++ b/src/multimedia/radio/qradiodata.cpp
@@ -227,18 +227,18 @@ bool QRadioData::setMediaObject(QMediaObject *mediaObject)
 /*!
     Returns the availability of the radio data service.
 
-    A long as there is a media service which provides control, then the
-    \l{QtMultimedia::AvailabilityError}{availability error} will be that
-    of the \l{QRadioTuner::availabilityError()}{radio tuner}.
+    A long as there is a media service which provides radio functionality, then the
+    \l{QtMultimedia::AvailabilityStatus}{availability} will be that
+    of the \l{QRadioTuner::availability()}{radio tuner}.
 */
-QtMultimedia::AvailabilityError QRadioData::availabilityError() const
+QtMultimedia::AvailabilityStatus QRadioData::availability() const
 {
     Q_D(const QRadioData);
 
     if (d->control == 0)
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 
-    return d->mediaObject->availabilityError();
+    return d->mediaObject->availability();
 }
 
 /*!
diff --git a/src/multimedia/radio/qradiodata.h b/src/multimedia/radio/qradiodata.h
index 6e282f3..5d409f8 100644
--- a/src/multimedia/radio/qradiodata.h
+++ b/src/multimedia/radio/qradiodata.h
@@ -91,7 +91,7 @@ public:
     QRadioData(QMediaObject *mediaObject, QObject *parent = 0);
     ~QRadioData();
 
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
     QMediaObject *mediaObject() const;
 
diff --git a/src/multimedia/radio/qradiotuner.cpp b/src/multimedia/radio/qradiotuner.cpp
index f5dad44..722419a 100644
--- a/src/multimedia/radio/qradiotuner.cpp
+++ b/src/multimedia/radio/qradiotuner.cpp
@@ -159,15 +159,15 @@ QRadioTuner::~QRadioTuner()
 /*!
     Returns the availability of the radio tuner.
 */
-QtMultimedia::AvailabilityError QRadioTuner::availabilityError() const
+QtMultimedia::AvailabilityStatus QRadioTuner::availability() const
 {
     if (d_func()->control == 0)
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 
     if (!d_func()->control->isAntennaConnected())
         return QtMultimedia::ResourceError;
 
-    return QMediaObject::availabilityError();
+    return QMediaObject::availability();
 }
 
 /*!
diff --git a/src/multimedia/radio/qradiotuner.h b/src/multimedia/radio/qradiotuner.h
index 8f11321..dbec6d8 100644
--- a/src/multimedia/radio/qradiotuner.h
+++ b/src/multimedia/radio/qradiotuner.h
@@ -87,7 +87,7 @@ public:
     QRadioTuner(QObject *parent = 0);
     ~QRadioTuner();
 
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
     State state() const;
 
diff --git a/src/multimedia/recording/qmediarecorder.cpp b/src/multimedia/recording/qmediarecorder.cpp
index 08df4f9..12279c4 100644
--- a/src/multimedia/recording/qmediarecorder.cpp
+++ b/src/multimedia/recording/qmediarecorder.cpp
@@ -185,7 +185,7 @@ void QMediaRecorderPrivate::_q_applySettings()
     }
 }
 
-void QMediaRecorderPrivate::_q_availabilityChanged(QtMultimedia::AvailabilityError error)
+void QMediaRecorderPrivate::_q_availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 {
     Q_Q(QMediaRecorder);
     Q_UNUSED(error);
@@ -193,8 +193,8 @@ void QMediaRecorderPrivate::_q_availabilityChanged(QtMultimedia::AvailabilityErr
     // Really this should not always emit, but
     // we can't really tell from here (isAvailable
     // may not have changed, or the mediaobject's overridden
-    // availabilityError() may not have changed).
-    q->availabilityErrorChanged(q->availabilityError());
+    // availability() may not have changed).
+    q->availabilityChanged(q->availability());
     q->availabilityChanged(q->isAvailable());
 }
 
@@ -323,8 +323,8 @@ bool QMediaRecorder::setMediaObject(QMediaObject *object)
                 service->releaseControl(d->metaDataControl);
             }
             if (d->availabilityControl) {
-                disconnect(d->availabilityControl, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityError)),
-                           this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityError)));
+                disconnect(d->availabilityControl, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)),
+                           this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityStatus)));
                 service->releaseControl(d->availabilityControl);
             }
         }
@@ -375,8 +375,8 @@ bool QMediaRecorder::setMediaObject(QMediaObject *object)
 
                 d->availabilityControl = service->requestControl<QMediaAvailabilityControl*>();
                 if (d->availabilityControl) {
-                    connect(d->availabilityControl, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityError)),
-                            this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityError)));
+                    connect(d->availabilityControl, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)),
+                            this, SLOT(_q_availabilityChanged(QtMultimedia::AvailabilityStatus)));
                 }
 
                 connect(d->control, SIGNAL(stateChanged(QMediaRecorder::State)),
@@ -442,23 +442,23 @@ bool QMediaRecorder::setMediaObject(QMediaObject *object)
 */
 bool QMediaRecorder::isAvailable() const
 {
-    return availabilityError() == QtMultimedia::NoError;
+    return availability() == QtMultimedia::Available;
 }
 
 /*!
-    Returns the availability error code.
+    Returns the availability of this functionality.
 
-    \sa availabilityErrorChanged()
+    \sa availabilityChanged()
 */
-QtMultimedia::AvailabilityError QMediaRecorder::availabilityError() const
+QtMultimedia::AvailabilityStatus QMediaRecorder::availability() const
 {
     if (d_func()->control == NULL)
-        return QtMultimedia::ServiceMissingError;
+        return QtMultimedia::ServiceMissing;
 
     if (d_func()->availabilityControl)
         return d_func()->availabilityControl->availability();
 
-    return QtMultimedia::NoError;
+    return QtMultimedia::Available;
 }
 
 QUrl QMediaRecorder::outputLocation() const
@@ -960,7 +960,7 @@ void QMediaRecorder::stop()
 */
 
 /*!
-    \fn QMediaRecorder::availabilityErrorChanged(QtMultimedia::AvailabilityError availability)
+    \fn QMediaRecorder::availabilityChanged(QtMultimedia::AvailabilityStatus availability)
 
     Signals that the service availability has changed to \a availability.
 */
diff --git a/src/multimedia/recording/qmediarecorder.h b/src/multimedia/recording/qmediarecorder.h
index 3f8c4a5..3363811 100644
--- a/src/multimedia/recording/qmediarecorder.h
+++ b/src/multimedia/recording/qmediarecorder.h
@@ -117,7 +117,7 @@ public:
     QMediaObject *mediaObject() const;
 
     bool isAvailable() const;
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
     QUrl outputLocation() const;
     bool setOutputLocation(const QUrl &location);
@@ -192,7 +192,7 @@ Q_SIGNALS:
     void metaDataChanged(const QString &key, const QVariant &value);
 
     void availabilityChanged(bool available);
-    void availabilityErrorChanged(QtMultimedia::AvailabilityError error);
+    void availabilityChanged(QtMultimedia::AvailabilityStatus availability);
 
 protected:
     QMediaRecorder(QMediaRecorderPrivate &dd, QMediaObject *mediaObject, QObject *parent = 0);
@@ -209,7 +209,7 @@ private:
     Q_PRIVATE_SLOT(d_func(), void _q_updateActualLocation(const QUrl &))
     Q_PRIVATE_SLOT(d_func(), void _q_updateNotifyInterval(int))
     Q_PRIVATE_SLOT(d_func(), void _q_applySettings())
-    Q_PRIVATE_SLOT(d_func(), void _q_availabilityChanged(QtMultimedia::AvailabilityError))
+    Q_PRIVATE_SLOT(d_func(), void _q_availabilityChanged(QtMultimedia::AvailabilityStatus))
 };
 
 QT_END_NAMESPACE
diff --git a/src/multimedia/recording/qmediarecorder_p.h b/src/multimedia/recording/qmediarecorder_p.h
index 56922c4..744afe6 100644
--- a/src/multimedia/recording/qmediarecorder_p.h
+++ b/src/multimedia/recording/qmediarecorder_p.h
@@ -92,7 +92,7 @@ public:
     void _q_notify();
     void _q_updateNotifyInterval(int ms);
     void _q_applySettings();
-    void _q_availabilityChanged(QtMultimedia::AvailabilityError error);
+    void _q_availabilityChanged(QtMultimedia::AvailabilityStatus availability);
 
     QMediaRecorder *q_ptr;
 };
diff --git a/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.cpp b/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.cpp
index 96cdf05..fa6284f 100644
--- a/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.cpp
+++ b/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.cpp
@@ -58,9 +58,9 @@ void QGStreamerAvailabilityControl::handleAvailabilityChanged()
     emit availabilityChanged(this->availability());
 }
 
-QtMultimedia::AvailabilityError QGStreamerAvailabilityControl::availability() const
+QtMultimedia::AvailabilityStatus QGStreamerAvailabilityControl::availability() const
 {
-    return m_resources->isAvailable() ? QtMultimedia::NoError : QtMultimedia::BusyError;
+    return m_resources->isAvailable() ? QtMultimedia::Available : QtMultimedia::Busy;
 }
 
 QT_END_NAMESPACE
diff --git a/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.h b/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.h
index 3695955..786ea16 100644
--- a/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.h
+++ b/src/plugins/gstreamer/mediaplayer/qgstreameravailabilitycontrol.h
@@ -53,7 +53,7 @@ class QGStreamerAvailabilityControl : public QMediaAvailabilityControl
     Q_OBJECT
 public:
     QGStreamerAvailabilityControl(QMediaPlayerResourceSetInterface *resources, QObject *parent = 0);
-    QtMultimedia::AvailabilityError availability() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
 private Q_SLOTS:
     void handleAvailabilityChanged();
diff --git a/src/plugins/v4l/radio/v4lradiocontrol.cpp b/src/plugins/v4l/radio/v4lradiocontrol.cpp
index 06be59a..6b36bba 100644
--- a/src/plugins/v4l/radio/v4lradiocontrol.cpp
+++ b/src/plugins/v4l/radio/v4lradiocontrol.cpp
@@ -88,10 +88,10 @@ bool V4LRadioControl::isAvailable() const
     return available;
 }
 
-QtMultimedia::AvailabilityError V4LRadioControl::availabilityError() const
+QtMultimedia::AvailabilityStatus V4LRadioControl::availability() const
 {
     if (fd > 0)
-        return QtMultimedia::NoError;
+        return QtMultimedia::Available;
     else
         return QtMultimedia::ResourceError;
 }
diff --git a/src/plugins/v4l/radio/v4lradiocontrol.h b/src/plugins/v4l/radio/v4lradiocontrol.h
index 6b683dc..56e1ee2 100644
--- a/src/plugins/v4l/radio/v4lradiocontrol.h
+++ b/src/plugins/v4l/radio/v4lradiocontrol.h
@@ -65,7 +65,7 @@ public:
     ~V4LRadioControl();
 
     bool isAvailable() const;
-    QtMultimedia::AvailabilityError availabilityError() const;
+    QtMultimedia::AvailabilityStatus availability() const;
 
     QRadioTuner::State state() const;
 
diff --git a/tests/auto/unit/qaudioprobe/tst_qaudioprobe.cpp b/tests/auto/unit/qaudioprobe/tst_qaudioprobe.cpp
index 78b9b7b..eb94a61 100644
--- a/tests/auto/unit/qaudioprobe/tst_qaudioprobe.cpp
+++ b/tests/auto/unit/qaudioprobe/tst_qaudioprobe.cpp
@@ -104,7 +104,7 @@ void tst_QAudioProbe::testNullService()
     recorder = new QAudioRecorder;
 
     QVERIFY(!recorder->isAvailable());
-    QCOMPARE(recorder->availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(recorder->availability(), QtMultimedia::ServiceMissing);
 
     QAudioProbe probe;
     QVERIFY(!probe.isActive());
@@ -122,7 +122,7 @@ void tst_QAudioProbe::testNullControl()
     recorder = new QAudioRecorder;
 
     QVERIFY(!recorder->isAvailable());
-    QCOMPARE(recorder->availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(recorder->availability(), QtMultimedia::ServiceMissing);
 
     QAudioProbe probe;
     QVERIFY(!probe.isActive());
diff --git a/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp b/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp
index 676fb66..9ed941c 100644
--- a/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp
+++ b/tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp
@@ -106,7 +106,7 @@ void tst_QAudioRecorder::testNullService()
     QAudioRecorder source;
 
     QVERIFY(!source.isAvailable());
-    QCOMPARE(source.availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(source.availability(), QtMultimedia::ServiceMissing);
 
     QCOMPARE(source.audioInputs().size(), 0);
     QCOMPARE(source.defaultAudioInput(), QString());
@@ -120,7 +120,7 @@ void tst_QAudioRecorder::testNullControl()
     QAudioRecorder source;
 
     QVERIFY(!source.isAvailable());
-    QCOMPARE(source.availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(source.availability(), QtMultimedia::ServiceMissing);
 
     QCOMPARE(source.audioInputs().size(), 0);
     QCOMPARE(source.defaultAudioInput(), QString());
@@ -163,7 +163,7 @@ void tst_QAudioRecorder::testAvailability()
     QAudioRecorder source;
 
     QVERIFY(source.isAvailable());
-    QCOMPARE(source.availabilityError(), QtMultimedia::NoError);
+    QCOMPARE(source.availability(), QtMultimedia::Available);
 }
 
 void tst_QAudioRecorder::testAvailableAudioInputChangedSignal()
diff --git a/tests/auto/unit/qcamera/tst_qcamera.cpp b/tests/auto/unit/qcamera/tst_qcamera.cpp
index 42bc69e..8011abb 100644
--- a/tests/auto/unit/qcamera/tst_qcamera.cpp
+++ b/tests/auto/unit/qcamera/tst_qcamera.cpp
@@ -1233,7 +1233,7 @@ void tst_QCamera::testQCameraIsAvailable()
 {
     QCamera camera;
     QVERIFY(camera.isAvailable());
-    QVERIFY(camera.availabilityError() == QtMultimedia::NoError);
+    QVERIFY(camera.availability() == QtMultimedia::Available);
 }
 
 void tst_QCamera::testQCameraIsNotAvailable()
@@ -1243,7 +1243,7 @@ void tst_QCamera::testQCameraIsNotAvailable()
 
     QCOMPARE(camera.error(), QCamera::ServiceMissingError);
     QVERIFY(!camera.isAvailable());
-    QCOMPARE(camera.availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(camera.availability(), QtMultimedia::ServiceMissing);
 }
 
 /* Test case for searchAndLock ( QCamera::LockTypes locks ) */
diff --git a/tests/auto/unit/qcameraimagecapture/tst_qcameraimagecapture.cpp b/tests/auto/unit/qcameraimagecapture/tst_qcameraimagecapture.cpp
index f931545..6f12073 100644
--- a/tests/auto/unit/qcameraimagecapture/tst_qcameraimagecapture.cpp
+++ b/tests/auto/unit/qcameraimagecapture/tst_qcameraimagecapture.cpp
@@ -312,7 +312,7 @@ void tst_QCameraImageCapture::errors()
     imageCapture1.capture(QString::fromLatin1("/dev/null"));
     QVERIFY(imageCapture1.error() == QCameraImageCapture::NotSupportedFeatureError);
     QVERIFY2(!imageCapture1.errorString().isEmpty(), "Device does not support images capture");
-    QVERIFY(imageCapture1.availabilityError() == QtMultimedia::ServiceMissingError);
+    QVERIFY(imageCapture1.availability() == QtMultimedia::ServiceMissing);
 
     provider->service = mockcameraservice;
 
@@ -321,12 +321,12 @@ void tst_QCameraImageCapture::errors()
     QVERIFY(imageCapture.isAvailable() == true);
     QVERIFY(imageCapture.error() == QCameraImageCapture::NoError);
     QVERIFY(imageCapture.errorString().isEmpty());
-    QVERIFY(imageCapture.availabilityError() == QtMultimedia::NoError);
+    QVERIFY(imageCapture.availability() == QtMultimedia::Available);
 
     imageCapture.capture();
     QVERIFY(imageCapture.error() == QCameraImageCapture::NotReadyError);
     QVERIFY2(!imageCapture.errorString().isEmpty(), "Could not capture in stopped state");
-    QVERIFY(imageCapture.availabilityError() == QtMultimedia::NoError);
+    QVERIFY(imageCapture.availability() == QtMultimedia::Available);
 }
 
 //MaemoAPI-1831:test error
diff --git a/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp b/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp
index f249ab2..7157e82 100644
--- a/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp
+++ b/tests/auto/unit/qmediaobject/tst_qmediaobject.cpp
@@ -441,54 +441,54 @@ void tst_QMediaObject::availability()
     {
         QtTestMediaObject nullObject(0);
         QCOMPARE(nullObject.isAvailable(), false);
-        QCOMPARE(nullObject.availabilityError(), QtMultimedia::ServiceMissingError);
+        QCOMPARE(nullObject.availability(), QtMultimedia::ServiceMissing);
     }
 
     {
         QtTestMediaObjectService service;
         QtTestMediaObject object(&service);
         QCOMPARE(object.isAvailable(), true);
-        QCOMPARE(object.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(object.availability(), QtMultimedia::Available);
     }
 
     {
-        MockAvailabilityControl available(QtMultimedia::NoError);
+        MockAvailabilityControl available(QtMultimedia::Available);
         QtTestMediaObjectService service(0, &available);
         QtTestMediaObject object(&service);
         QSignalSpy availabilitySpy(&object, SIGNAL(availabilityChanged(bool)));
-        QSignalSpy availabilityErrorSpy(&object, SIGNAL(availabilityChanged(bool)));
+        QSignalSpy availabilityStatusSpy(&object, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
         QCOMPARE(object.isAvailable(), true);
-        QCOMPARE(object.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(object.availability(), QtMultimedia::Available);
 
-        available.setAvailability(QtMultimedia::BusyError);
+        available.setAvailability(QtMultimedia::Busy);
         QCOMPARE(object.isAvailable(), false);
-        QCOMPARE(object.availabilityError(), QtMultimedia::BusyError);
+        QCOMPARE(object.availability(), QtMultimedia::Busy);
         QCOMPARE(availabilitySpy.count(), 1);
-        QCOMPARE(availabilityErrorSpy.count(), 1);
+        QCOMPARE(availabilityStatusSpy.count(), 1);
 
-        available.setAvailability(QtMultimedia::NoError);
+        available.setAvailability(QtMultimedia::Available);
         QCOMPARE(object.isAvailable(), true);
-        QCOMPARE(object.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(object.availability(), QtMultimedia::Available);
         QCOMPARE(availabilitySpy.count(), 2);
-        QCOMPARE(availabilityErrorSpy.count(), 2);
+        QCOMPARE(availabilityStatusSpy.count(), 2);
     }
 
     {
-        MockAvailabilityControl available(QtMultimedia::BusyError);
+        MockAvailabilityControl available(QtMultimedia::Busy);
         QtTestMediaObjectService service(0, &available);
         QtTestMediaObject object(&service);
         QSignalSpy availabilitySpy(&object, SIGNAL(availabilityChanged(bool)));
-        QSignalSpy availabilityErrorSpy(&object, SIGNAL(availabilityChanged(bool)));
+        QSignalSpy availabilityStatusSpy(&object, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
         QCOMPARE(object.isAvailable(), false);
-        QCOMPARE(object.availabilityError(), QtMultimedia::BusyError);
+        QCOMPARE(object.availability(), QtMultimedia::Busy);
 
-        available.setAvailability(QtMultimedia::NoError);
+        available.setAvailability(QtMultimedia::Available);
         QCOMPARE(object.isAvailable(), true);
-        QCOMPARE(object.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(object.availability(), QtMultimedia::Available);
         QCOMPARE(availabilitySpy.count(), 1);
-        QCOMPARE(availabilityErrorSpy.count(), 1);
+        QCOMPARE(availabilityStatusSpy.count(), 1);
     }
 }
 
diff --git a/tests/auto/unit/qmediaplayer/tst_qmediaplayer.cpp b/tests/auto/unit/qmediaplayer/tst_qmediaplayer.cpp
index a3aedc1..c1765d1 100644
--- a/tests/auto/unit/qmediaplayer/tst_qmediaplayer.cpp
+++ b/tests/auto/unit/qmediaplayer/tst_qmediaplayer.cpp
@@ -222,7 +222,7 @@ void tst_QMediaPlayer::testNullService()
     QCOMPARE(player.playbackRate(), qreal(0));
     QCOMPARE(player.error(), QMediaPlayer::ServiceMissingError);
     QCOMPARE(player.isAvailable(), false);
-    QCOMPARE(player.availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(player.availability(), QtMultimedia::ServiceMissing);
 
     {
         QFETCH_GLOBAL(QMediaContent, mediaContent);
@@ -501,7 +501,7 @@ void tst_QMediaPlayer::testErrorString()
 void tst_QMediaPlayer::testIsAvailable()
 {
     QCOMPARE(player->isAvailable(), true);
-    QCOMPARE(player->availabilityError(), QtMultimedia::NoError);
+    QCOMPARE(player->availability(), QtMultimedia::Available);
 }
 
 void tst_QMediaPlayer::testService()
diff --git a/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp b/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
index 1040903..1f433e6 100644
--- a/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
+++ b/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
@@ -100,7 +100,7 @@ private slots:
     void testAudioSettingsOperatorAssign();
     void testAudioSettingsDestructor();
 
-    void testAvailabilityError();
+    void testAvailabilityStatus();
     void testIsAvailable();
     void testMediaObject();
     void testEnum();
@@ -1113,14 +1113,14 @@ void tst_QMediaRecorder::testAudioSettingsDestructor()
     delete audiosettings;
 }
 
-/* availabilityError() API test. */
-void tst_QMediaRecorder::testAvailabilityError()
+/* availability() API test. */
+void tst_QMediaRecorder::testAvailabilityStatus()
 {
     {
         MockMediaRecorderService service(0, 0);
         MockMediaObject object(0, &service);
         QMediaRecorder recorder(&object);
-        QCOMPARE(recorder.availabilityError(), QtMultimedia::ServiceMissingError);
+        QCOMPARE(recorder.availability(), QtMultimedia::ServiceMissing);
         QCOMPARE(recorder.isAvailable(), false);
     }
     {
@@ -1129,7 +1129,7 @@ void tst_QMediaRecorder::testAvailabilityError()
         service1.mockMetaDataControl->populateMetaData();
         MockMediaObject object1(0, &service1);
         QMediaRecorder recorder1(&object1);
-        QCOMPARE(recorder1.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(recorder1.availability(), QtMultimedia::Available);
         QCOMPARE(recorder1.isAvailable(), true);
     }
     {
@@ -1139,29 +1139,29 @@ void tst_QMediaRecorder::testAvailabilityError()
         MockMediaObject object1(0, &service1);
         QMediaRecorder recorder1(&object1);
 
-        QCOMPARE(recorder1.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(recorder1.availability(), QtMultimedia::Available);
         QCOMPARE(recorder1.isAvailable(), true);
     }
     {
         MockMediaRecorderControl recorderControl(0);
-        MockAvailabilityControl availability(QtMultimedia::NoError);
+        MockAvailabilityControl availability(QtMultimedia::Available);
         MockMediaRecorderService service1(0, &recorderControl, &availability);
         service1.mockMetaDataControl->populateMetaData();
         MockMediaObject object1(0, &service1);
         QMediaRecorder recorder1(&object1);
 
-        QSignalSpy spy(&object1, SIGNAL(availabilityErrorChanged(QtMultimedia::AvailabilityError)));
+        QSignalSpy spy(&object1, SIGNAL(availabilityChanged(QtMultimedia::AvailabilityStatus)));
 
-        QCOMPARE(recorder1.availabilityError(), QtMultimedia::NoError);
+        QCOMPARE(recorder1.availability(), QtMultimedia::Available);
         QCOMPARE(recorder1.isAvailable(), true);
 
-        availability.setAvailability(QtMultimedia::BusyError);
-        QCOMPARE(recorder1.availabilityError(), QtMultimedia::BusyError);
+        availability.setAvailability(QtMultimedia::Busy);
+        QCOMPARE(recorder1.availability(), QtMultimedia::Busy);
         QCOMPARE(recorder1.isAvailable(), false);
         QCOMPARE(spy.count(), 1);
 
-        availability.setAvailability(QtMultimedia::NoError);
-        QCOMPARE(recorder1.availabilityError(), QtMultimedia::NoError);
+        availability.setAvailability(QtMultimedia::Available);
+        QCOMPARE(recorder1.availability(), QtMultimedia::Available);
         QCOMPARE(recorder1.isAvailable(), true);
         QCOMPARE(spy.count(), 2);
     }
diff --git a/tests/auto/unit/qmultimedia_common/mockavailabilitycontrol.h b/tests/auto/unit/qmultimedia_common/mockavailabilitycontrol.h
index 9e449da..5c11213 100644
--- a/tests/auto/unit/qmultimedia_common/mockavailabilitycontrol.h
+++ b/tests/auto/unit/qmultimedia_common/mockavailabilitycontrol.h
@@ -50,18 +50,18 @@ class MockAvailabilityControl : public QMediaAvailabilityControl
     Q_OBJECT
 
 public:
-    MockAvailabilityControl(QtMultimedia::AvailabilityError available)
+    MockAvailabilityControl(QtMultimedia::AvailabilityStatus available)
         : m_availability(available)
     {
 
     }
 
-    QtMultimedia::AvailabilityError availability() const
+    QtMultimedia::AvailabilityStatus availability() const
     {
         return m_availability;
     }
 
-    void setAvailability(QtMultimedia::AvailabilityError availability)
+    void setAvailability(QtMultimedia::AvailabilityStatus availability)
     {
         if (m_availability != availability) {
             m_availability = availability;
@@ -69,7 +69,7 @@ public:
         }
     }
 
-    QtMultimedia::AvailabilityError m_availability;
+    QtMultimedia::AvailabilityStatus m_availability;
 };
 
 #endif // MOCKAVAILABILITYCONTROL_H
diff --git a/tests/auto/unit/qradiodata/tst_qradiodata.cpp b/tests/auto/unit/qradiodata/tst_qradiodata.cpp
index 0e11385..c3a5036 100644
--- a/tests/auto/unit/qradiodata/tst_qradiodata.cpp
+++ b/tests/auto/unit/qradiodata/tst_qradiodata.cpp
@@ -89,7 +89,7 @@ void tst_QRadioData::initTestCase()
 {
     qRegisterMetaType<QRadioData::ProgramType>("QRadioData::ProgramType");
 
-    mockAvailability = new MockAvailabilityControl(QtMultimedia::NoError);
+    mockAvailability = new MockAvailabilityControl(QtMultimedia::Available);
     mockTuner = new MockRadioTunerControl(this);
     mockData = new MockRadioDataControl(this);
 
@@ -105,7 +105,7 @@ void tst_QRadioData::initTestCase()
     radio = new QRadioTuner;
     radioData = radio->radioData();
 
-    QVERIFY(radioData->availabilityError() == QtMultimedia::NoError);
+    QVERIFY(radioData->availability() == QtMultimedia::Available);
 }
 
 void tst_QRadioData::cleanupTestCase()
diff --git a/tests/auto/unit/qradiotuner/tst_qradiotuner.cpp b/tests/auto/unit/qradiotuner/tst_qradiotuner.cpp
index 07bf8a8..11a7034 100644
--- a/tests/auto/unit/qradiotuner/tst_qradiotuner.cpp
+++ b/tests/auto/unit/qradiotuner/tst_qradiotuner.cpp
@@ -95,7 +95,7 @@ void tst_QRadioTuner::initTestCase()
     qRegisterMetaType<QRadioTuner::Band>("QRadioTuner::Band");
 
     mock = new MockRadioTunerControl(this);
-    mockAvailability = new MockAvailabilityControl(QtMultimedia::NoError);
+    mockAvailability = new MockAvailabilityControl(QtMultimedia::Available);
 
     QMap<QString, QMediaControl *> map;
     map.insert(QRadioTunerControl_iid, mock);
@@ -108,13 +108,13 @@ void tst_QRadioTuner::initTestCase()
     radio = new QRadioTuner;
     QVERIFY(radio->service() != 0);
     QVERIFY(radio->isAvailable());
-    QVERIFY(radio->availabilityError() == QtMultimedia::NoError);
+    QVERIFY(radio->availability() == QtMultimedia::Available);
 
     QSignalSpy stateSpy(radio, SIGNAL(stateChanged(QRadioTuner::State)));
 
     QCOMPARE(radio->state(), QRadioTuner::StoppedState);    
     radio->start();
-    QVERIFY(radio->availabilityError() == QtMultimedia::NoError);
+    QVERIFY(radio->availability() == QtMultimedia::Available);
     QCOMPARE(radio->state(), QRadioTuner::ActiveState);
 
     QCOMPARE(stateSpy.count(), 1);
@@ -129,7 +129,7 @@ void tst_QRadioTuner::cleanupTestCase()
     QSignalSpy stateSpy(radio, SIGNAL(stateChanged(QRadioTuner::State)));
 
     radio->stop();
-    QVERIFY(radio->availabilityError() == QtMultimedia::NoError);
+    QVERIFY(radio->availability() == QtMultimedia::Available);
     QCOMPARE(radio->state(), QRadioTuner::StoppedState);
     QCOMPARE(stateSpy.count(), 1);
 
diff --git a/tests/auto/unit/qvideoprobe/tst_qvideoprobe.cpp b/tests/auto/unit/qvideoprobe/tst_qvideoprobe.cpp
index c96f6f2..56ee74f 100644
--- a/tests/auto/unit/qvideoprobe/tst_qvideoprobe.cpp
+++ b/tests/auto/unit/qvideoprobe/tst_qvideoprobe.cpp
@@ -116,7 +116,7 @@ void tst_QVideoProbe::testNullService()
     player = new QMediaPlayer;
 
     QVERIFY(!player->isAvailable());
-    QCOMPARE(player->availabilityError(), QtMultimedia::ServiceMissingError);
+    QCOMPARE(player->availability(), QtMultimedia::ServiceMissing);
 
     QVideoProbe probe;
     QVERIFY(!probe.isActive());