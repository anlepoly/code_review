diff --git a/src/gui/image/qimage.cpp b/src/gui/image/qimage.cpp
index c107fea..9df6bd1 100644
--- a/src/gui/image/qimage.cpp
+++ b/src/gui/image/qimage.cpp
@@ -114,17 +114,6 @@ static QImage rotated90(const QImage &src);
 static QImage rotated180(const QImage &src);
 static QImage rotated270(const QImage &src);
 
-// ### Qt 5: remove
-Q_GUI_EXPORT qint64 qt_image_id(const QImage &image)
-{
-    return image.cacheKey();
-}
-
-const QVector<QRgb> *qt_image_colortable(const QImage &image)
-{
-    return &image.d->colortable;
-}
-
 QBasicAtomicInt qimage_serial_number = Q_BASIC_ATOMIC_INITIALIZER(1);
 
 QImageData::QImageData()
diff --git a/src/gui/image/qimage.h b/src/gui/image/qimage.h
index a8491c8..4d1b503 100644
--- a/src/gui/image/qimage.h
+++ b/src/gui/image/qimage.h
@@ -295,8 +295,6 @@ private:
     friend class QRasterPlatformPixmap;
     friend class QBlittablePlatformPixmap;
     friend class QPixmapCacheEntry;
-    friend Q_GUI_EXPORT qint64 qt_image_id(const QImage &image);
-    friend const QVector<QRgb> *qt_image_colortable(const QImage &image);
 
 public:
     typedef QImageData * DataPtr;
diff --git a/src/gui/painting/qpaintengine_raster.cpp b/src/gui/painting/qpaintengine_raster.cpp
index 60ead45..e1b271d 100644
--- a/src/gui/painting/qpaintengine_raster.cpp
+++ b/src/gui/painting/qpaintengine_raster.cpp
@@ -4501,8 +4501,6 @@ void QSpanData::setupMatrix(const QTransform &matrix, int bilin)
     adjustSpanMethods();
 }
 
-extern const QVector<QRgb> *qt_image_colortable(const QImage &image);
-
 void QSpanData::initTexture(const QImage *image, int alpha, QTextureData::Type _type, const QRect &sourceRect)
 {
     const QImageData *d = const_cast<QImage *>(image)->data_ptr();