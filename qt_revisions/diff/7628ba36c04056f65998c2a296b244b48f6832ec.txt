diff --git a/tools/qdoc3/node.cpp b/tools/qdoc3/node.cpp
index dc20f1c..96b5263 100644
--- a/tools/qdoc3/node.cpp
+++ b/tools/qdoc3/node.cpp
@@ -2000,7 +2000,7 @@ QmlClassNode::QmlClassNode(InnerNode *parent,
                            const ClassNode* cn)
     : FakeNode(parent, name, QmlClass, Node::ApiPage),
       abstract(false),
-      cnode(cn),
+      cnode_(cn),
       base_(0)
 {
     int i = 0;
@@ -2169,8 +2169,8 @@ void QmlClassNode::resolveInheritance(const Tree* tree)
         if (base_)
             return;
     }
-    if (cnode) {
-        const QmlClassNode* qcn = cnode->findQmlBaseNode();
+    if (cnode_) {
+        const QmlClassNode* qcn = cnode_->findQmlBaseNode();
         if (qcn != 0)
             base_ = qcn;
     }
diff --git a/tools/qdoc3/node.h b/tools/qdoc3/node.h
index c64290b..87c1b9e 100644
--- a/tools/qdoc3/node.h
+++ b/tools/qdoc3/node.h
@@ -497,7 +497,7 @@ class QmlClassNode : public FakeNode
     virtual ~QmlClassNode();
     virtual bool isQmlNode() const { return true; }
     virtual bool isQtQuickNode() const { return (qmlModuleName() == "QtQuick"); }
-    virtual const ClassNode* classNode() const { return cnode; }
+    virtual const ClassNode* classNode() const { return cnode_; }
     virtual QString fileBase() const;
     virtual void setCurrentChild();
     virtual void clearCurrentChild();
@@ -518,7 +518,7 @@ class QmlClassNode : public FakeNode
 
  private:
     bool abstract;
-    const ClassNode*    cnode;
+    const ClassNode*    cnode_;
     const FakeNode*     base_;
     ImportList          importList_;
 };
diff --git a/tools/qdoc3/tree.cpp b/tools/qdoc3/tree.cpp
index d731a08..0b2f7aa 100644
--- a/tools/qdoc3/tree.cpp
+++ b/tools/qdoc3/tree.cpp
@@ -1081,7 +1081,8 @@ void Tree::readIndexSection(const QDomElement& element,
             location = Location(name.toLower() + ".html");
 
     }
-    else if (element.nodeName() == "qmlclass") {
+    else if ((element.nodeName() == "qmlclass") ||
+             ((element.nodeName() == "page") && (element.attribute("subtype") == "qmlclass"))) {
         QmlClassNode* qcn = new QmlClassNode(parent, name, 0);
         qcn->setTitle(element.attribute("title"));
         if (element.hasAttribute("location"))