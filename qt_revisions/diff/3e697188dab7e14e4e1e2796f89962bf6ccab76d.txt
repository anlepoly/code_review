diff --git a/tests/auto/network/access/qnetworkreply/tst_qnetworkreply.cpp b/tests/auto/network/access/qnetworkreply/tst_qnetworkreply.cpp
index 95cf2c9..e338640 100644
--- a/tests/auto/network/access/qnetworkreply/tst_qnetworkreply.cpp
+++ b/tests/auto/network/access/qnetworkreply/tst_qnetworkreply.cpp
@@ -4452,7 +4452,6 @@ void tst_QNetworkReply::ioGetFromBuiltinHttp_data()
 
 void tst_QNetworkReply::ioGetFromBuiltinHttp()
 {
-    QSKIP("Limiting is broken right now, check QTBUG-15065");
     QFETCH(bool, https);
     QFETCH(int, bufferSize);
 
@@ -4509,8 +4508,6 @@ void tst_QNetworkReply::ioGetFromBuiltinHttp()
     if (reader.data.size() < testData.size()) { // oops?
         QCOMPARE(reader.data, testData.mid(0, reader.data.size()));
         qDebug() << "The data is incomplete, the last" << testData.size() - reader.data.size() << "bytes are missing";
-        QEXPECT_FAIL("http+limited", "Limiting is broken right now, check QTBUG-15065", Abort);
-        QEXPECT_FAIL("https+limited", "Limiting is broken right now, check QTBUG-15065", Abort);
     }
     QCOMPARE(reader.data.size(), testData.size());
     QCOMPARE(reader.data, testData);
@@ -4522,9 +4519,11 @@ void tst_QNetworkReply::ioGetFromBuiltinHttp()
         const int minRate = rate * 1024 * (100-allowedDeviation) / 100;
         const int maxRate = rate * 1024 * (100+allowedDeviation) / 100;
         qDebug() << minRate << "<="<< server.transferRate << "<=" << maxRate << "?";
-        QEXPECT_FAIL("http+limited", "Limiting is broken right now, check QTBUG-15065", Continue);
-        QEXPECT_FAIL("https+limited", "Limiting is broken right now, check QTBUG-15065", Continue);
-        QVERIFY(server.transferRate >= minRate && server.transferRate <= maxRate);
+        // The test takes too long to run if sending enough data to overwhelm the
+        // reciever's kernel buffers.
+        //QEXPECT_FAIL("http+limited", "Limiting is broken right now, check QTBUG-15065", Continue);
+        //QEXPECT_FAIL("https+limited", "Limiting is broken right now, check QTBUG-15065", Continue);
+        //QVERIFY(server.transferRate >= minRate && server.transferRate <= maxRate);
     }
 }