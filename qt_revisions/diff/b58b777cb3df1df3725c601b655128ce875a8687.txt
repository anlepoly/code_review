diff --git a/src/dbus/qdbuspendingcall.cpp b/src/dbus/qdbuspendingcall.cpp
index 9659afa..3d5dc42 100644
--- a/src/dbus/qdbuspendingcall.cpp
+++ b/src/dbus/qdbuspendingcall.cpp
@@ -286,6 +286,14 @@ QDBusPendingCall &QDBusPendingCall::operator=(const QDBusPendingCall &other)
 }
 
 /*!
+    \fn void QDBusPendingCall::swap(QDBusPendingCall &other)
+    \since 5.0
+
+    Swaps this pending call instance with \a other. This function is
+    very fast and never fails.
+*/
+
+/*!
     \fn bool QDBusPendingCallWatcher::isFinished() const
 
     Returns true if the pending call has finished processing and the
diff --git a/src/dbus/qdbuspendingcall.h b/src/dbus/qdbuspendingcall.h
index 8655435..0256c4c 100644
--- a/src/dbus/qdbuspendingcall.h
+++ b/src/dbus/qdbuspendingcall.h
@@ -68,6 +68,8 @@ public:
     ~QDBusPendingCall();
     QDBusPendingCall &operator=(const QDBusPendingCall &other);
 
+    void swap(QDBusPendingCall &other) { qSwap(d, other.d); }
+
 #ifndef Q_QDOC
     // pretend that they aren't here
     bool isFinished() const;
diff --git a/src/dbus/qdbusunixfiledescriptor.cpp b/src/dbus/qdbusunixfiledescriptor.cpp
index bcf5f64..b5e8817 100644
--- a/src/dbus/qdbusunixfiledescriptor.cpp
+++ b/src/dbus/qdbusunixfiledescriptor.cpp
@@ -187,6 +187,14 @@ QDBusUnixFileDescriptor::~QDBusUnixFileDescriptor()
 }
 
 /*!
+    \fn void QDBusUnixFileDescriptor::swap(QDBusUnixFileDescriptor &other)
+    \since 5.0
+
+    Swaps this file descriptor instance with \a other. This function
+    is very fast and never fails.
+*/
+
+/*!
     Returns true if this Unix file descriptor is valid. A valid Unix file
     descriptor is not -1.
 
diff --git a/src/dbus/qdbusunixfiledescriptor.h b/src/dbus/qdbusunixfiledescriptor.h
index bfb2262..9fe0b77 100644
--- a/src/dbus/qdbusunixfiledescriptor.h
+++ b/src/dbus/qdbusunixfiledescriptor.h
@@ -68,6 +68,9 @@ public:
     QDBusUnixFileDescriptor &operator=(const QDBusUnixFileDescriptor &other);
     ~QDBusUnixFileDescriptor();
 
+    void swap(QDBusUnixFileDescriptor &other)
+    { qSwap(d, other.d); }
+
     bool isValid() const;
 
     int fileDescriptor() const;