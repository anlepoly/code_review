diff --git a/src/network/access/qnetworkcookie.cpp b/src/network/access/qnetworkcookie.cpp
index 7174acc..7299633 100644
--- a/src/network/access/qnetworkcookie.cpp
+++ b/src/network/access/qnetworkcookie.cpp
@@ -152,6 +152,7 @@ QNetworkCookie &QNetworkCookie::operator=(const QNetworkCookie &other)
 */
 
 /*!
+    \since 5.0
     Returns true if this cookie is equal to \a other. This function
     only returns true if all fields of the cookie are the same.
 
@@ -1056,6 +1057,7 @@ QList<QNetworkCookie> QNetworkCookiePrivate::parseSetCookieHeaderLine(const QByt
 }
 
 /*!
+    \since 5.0
     This functions normalizes the path and domain of the cookie if they were previously empty.
 */
 void QNetworkCookie::normalize(const QUrl &url)
diff --git a/src/network/access/qnetworkcookiejar.cpp b/src/network/access/qnetworkcookiejar.cpp
index a7436cb..980b02e 100644
--- a/src/network/access/qnetworkcookiejar.cpp
+++ b/src/network/access/qnetworkcookiejar.cpp
@@ -252,6 +252,7 @@ QList<QNetworkCookie> QNetworkCookieJar::cookiesForUrl(const QUrl &url) const
 }
 
 /*!
+    \since 5.0
     Adds \a cookie to this cookie jar.
 
     Returns true if \a cookie was added, false otherwise.
@@ -276,6 +277,7 @@ bool QNetworkCookieJar::insertCookie(const QNetworkCookie &cookie)
 }
 
 /*!
+    \since 5.0
     If a cookie with the same identifier as \a cookie exists in this cookie jar
     it will be updated. This function uses insertCookie().
 
@@ -292,6 +294,7 @@ bool QNetworkCookieJar::updateCookie(const QNetworkCookie &cookie)
 }
 
 /*!
+    \since 5.0
     Deletes from cookie jar the cookie found to have the same identifier as \a cookie.
 
     Returns true if a cookie was deleted, false otherwise.
@@ -311,6 +314,7 @@ bool QNetworkCookieJar::deleteCookie(const QNetworkCookie &cookie)
 }
 
 /*!
+    \since 5.0
     Returns true if the domain and path of \a cookie are valid, false otherwise.
 */
 bool QNetworkCookieJar::validateCookie(const QNetworkCookie &cookie, const QUrl &url) const
diff --git a/src/network/bearer/qnetworksession.cpp b/src/network/bearer/qnetworksession.cpp
index 90bbe1b..83e0dc1 100644
--- a/src/network/bearer/qnetworksession.cpp
+++ b/src/network/bearer/qnetworksession.cpp
@@ -151,6 +151,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \enum QNetworkSession::UsagePolicies
+    \since 5.0
 
     These flags allow the system to inform the application of network usage restrictions that
     may be in place.
@@ -235,6 +236,7 @@ QT_BEGIN_NAMESPACE
 
 /*!
     \fn void QNetworkSession::usagePoliciesChanged(UsagePolicies)
+    \since 5.0
 
     This signal is emitted when the usage policies in force are changed by the system.
 */
diff --git a/src/network/kernel/qdnslookup.cpp b/src/network/kernel/qdnslookup.cpp
index f4b143a..a47a26f 100644
--- a/src/network/kernel/qdnslookup.cpp
+++ b/src/network/kernel/qdnslookup.cpp
@@ -157,6 +157,7 @@ static void qt_qdnsservicerecord_sort(QList<QDnsServiceRecord> &records)
 /*!
     \class QDnsLookup
     \brief The QDnsLookup class represents a DNS lookup.
+    \since 5.0
 
     \inmodule QtNetwork
     \ingroup network
diff --git a/src/network/kernel/qnetworkproxy.cpp b/src/network/kernel/qnetworkproxy.cpp
index 501afce..6c1ee0e 100644
--- a/src/network/kernel/qnetworkproxy.cpp
+++ b/src/network/kernel/qnetworkproxy.cpp
@@ -706,6 +706,7 @@ QNetworkProxy QNetworkProxy::applicationProxy()
 }
 
 /*!
+    \since 5.0
     Returns the value of the known network header \a header if it is
     in use for this proxy. If it is not present, returns QVariant()
     (i.e., an invalid variant).
@@ -720,6 +721,7 @@ QVariant QNetworkProxy::header(QNetworkRequest::KnownHeaders header) const
 }
 
 /*!
+    \since 5.0
     Sets the value of the known header \a header to be \a value,
     overriding any previously set headers. This operation also sets
     the equivalent raw HTTP header.
@@ -736,6 +738,7 @@ void QNetworkProxy::setHeader(QNetworkRequest::KnownHeaders header, const QVaria
 }
 
 /*!
+    \since 5.0
     Returns true if the raw header \a headerName is in use for this
     proxy. Returns false if the proxy is not of type HttpProxy or
     HttpCachingProxy.
@@ -750,6 +753,7 @@ bool QNetworkProxy::hasRawHeader(const QByteArray &headerName) const
 }
 
 /*!
+    \since 5.0
     Returns the raw form of header \a headerName. If no such header is
     present or the proxy is not of type HttpProxy or HttpCachingProxy,
     an empty QByteArray is returned, which may be indistinguishable
@@ -772,6 +776,7 @@ QByteArray QNetworkProxy::rawHeader(const QByteArray &headerName) const
 }
 
 /*!
+    \since 5.0
     Returns a list of all raw headers that are set in this network
     proxy. The list is in the order that the headers were set.
 
@@ -788,6 +793,7 @@ QList<QByteArray> QNetworkProxy::rawHeaderList() const
 }
 
 /*!
+    \since 5.0
     Sets the header \a headerName to be of value \a headerValue. If \a
     headerName corresponds to a known header (see
     QNetworkRequest::KnownHeaders), the raw format will be parsed and
@@ -1521,6 +1527,10 @@ QList<QNetworkProxy> QNetworkProxyFactory::proxyForQuery(const QNetworkProxyQuer
 }
 
 #ifndef QT_NO_DEBUG_STREAM
+/*!
+    \since 5.0
+    Outputs a QNetworkProxy details to a debug stream
+*/
 QDebug operator<<(QDebug debug, const QNetworkProxy &proxy)
 {
     QNetworkProxy::ProxyType type = proxy.type();
diff --git a/src/network/ssl/qsslcertificate.cpp b/src/network/ssl/qsslcertificate.cpp
index af60d8f..95b8a8e 100644
--- a/src/network/ssl/qsslcertificate.cpp
+++ b/src/network/ssl/qsslcertificate.cpp
@@ -104,6 +104,12 @@
     \value CountryName "C" The country.
 
     \value StateOrProvinceName "ST" The state or province.
+
+    \value DistinguishedNameQualifier The distinguished name qualifier
+
+    \value SerialNumber The certificate's serial number
+
+    \value EmailAddress The email address associated with the certificate
 */
 
 #include "qsslsocket_openssl_symbols_p.h"
@@ -398,6 +404,7 @@ QStringList QSslCertificate::subjectInfo(const QByteArray &attribute) const
 }
 
 /*!
+    \since 5.0
     Returns a list of the attributes that have values in the subject
     information of this certificate. The information associated
     with a given attribute can be accessed using the subjectInfo()
@@ -418,6 +425,7 @@ QList<QByteArray> QSslCertificate::subjectInfoAttributes() const
 }
 
 /*!
+    \since 5.0
     Returns a list of the attributes that have values in the issuer
     information of this certificate. The information associated
     with a given attribute can be accessed using the issuerInfo()
diff --git a/src/network/ssl/qsslkey.cpp b/src/network/ssl/qsslkey.cpp
index c1dcf7d..e934a2e 100644
--- a/src/network/ssl/qsslkey.cpp
+++ b/src/network/ssl/qsslkey.cpp
@@ -269,6 +269,7 @@ QSslKey::QSslKey(QIODevice *device, QSsl::KeyAlgorithm algorithm, QSsl::Encoding
 }
 
 /*!
+    \since 5.0
     Constructs a QSslKey from a valid native key \a handle.
     \a type specifies whether the key is public or private.
 
diff --git a/src/network/ssl/qsslsocket.cpp b/src/network/ssl/qsslsocket.cpp
index 27c0123..cfc59fd 100644
--- a/src/network/ssl/qsslsocket.cpp
+++ b/src/network/ssl/qsslsocket.cpp
@@ -1608,6 +1608,7 @@ bool QSslSocket::supportsSsl()
 }
 
 /*!
+    \since 5.0
     Returns the version number of the SSL library in use. Note that
     this is the version of the library in use at run-time not compile
     time. If no SSL support is available then this will return an
@@ -1619,6 +1620,7 @@ long QSslSocket::sslLibraryVersionNumber()
 }
 
 /*!
+    \since 5.0
     Returns the version string of the SSL library in use. Note that
     this is the version of the library in use at run-time not compile
     time. If no SSL support is available then this will return an empty value.