diff --git a/doc/src/examples/globalVariables.qdoc b/doc/src/examples/globalVariables.qdoc
index cea3a00..86ed514 100644
--- a/doc/src/examples/globalVariables.qdoc
+++ b/doc/src/examples/globalVariables.qdoc
@@ -107,16 +107,16 @@
 
     Global variables with complex types:
     \list 1
-    \o \span {class="variableName"} {mutableComplex1} in globals.cpp at line 14
-    \o \span {class="variableName"} {mutableComplex2} in globals.cpp at line 15
-    \o \span {class="variableName"} {constComplex1} in globals.cpp at line 16
-    \o \span {class="variableName"} {constComplex2} in globals.cpp at line 17
+    \li \span {class="variableName"} {mutableComplex1} in globals.cpp at line 14
+    \li \span {class="variableName"} {mutableComplex2} in globals.cpp at line 15
+    \li \span {class="variableName"} {constComplex1} in globals.cpp at line 16
+    \li \span {class="variableName"} {constComplex2} in globals.cpp at line 17
     \endlist
 
     Mutable global variables with primitives types:
     \list 1
-    \o \span {class="variableName"} {mutablePrimitive1} in globals.cpp at line 1
-    \o \span {class="variableName"} {mutablePrimitive2} in globals.cpp at line 2
+    \li \span {class="variableName"} {mutablePrimitive1} in globals.cpp at line 1
+    \li \span {class="variableName"} {mutablePrimitive2} in globals.cpp at line 2
     \endlist
 
     \div {class="details"} End report: 2008-12-16T13:43:49.65Z \enddiv
diff --git a/doc/src/examples/trafficinfo.qdoc b/doc/src/examples/trafficinfo.qdoc
index 1eeadb1..6381a7e 100644
--- a/doc/src/examples/trafficinfo.qdoc
+++ b/doc/src/examples/trafficinfo.qdoc
@@ -62,11 +62,11 @@
 
     The parameters have the following meanings:
     \list
-        \o \e{f} The unique station ID of Nydalen.
-        \o \e{t} The hour in 0-23 format.
-        \o \e{m} The minute in 0-59 format.
-        \o \e{d} The date in dd.mm.yyyy format.
-        \o \e{start} Not interesting for our use but should be passed.
+        \li \e{f} The unique station ID of Nydalen.
+        \li \e{t} The hour in 0-23 format.
+        \li \e{m} The minute in 0-59 format.
+        \li \e{d} The date in dd.mm.yyyy format.
+        \li \e{start} Not interesting for our use but should be passed.
     \endlist
 
     As a result we get the following document:
diff --git a/doc/src/xml-processing/xml-patterns.qdoc b/doc/src/xml-processing/xml-patterns.qdoc
index 8d2d873..7626912 100644
--- a/doc/src/xml-processing/xml-patterns.qdoc
+++ b/doc/src/xml-processing/xml-patterns.qdoc
@@ -84,24 +84,24 @@
 
     \list
 
-    \o \bold{Ease of development}: All the C++ programming required to
+    \li \b{Ease of development}: All the C++ programming required to
        perform data query tasks can be replaced by a simple XQuery
        like the example above.
 
-    \o \bold{Comprehensive functionality}: The
+    \li \b{Comprehensive functionality}: The
        \l{http://www.w3.org/TR/xquery/#id-expressions} {expression
        syntax} and rich set of
        \l{http://www.w3.org/TR/xpath-functions} {functions and
        operators} provided by XQuery are sufficient for performing any
        data searching, selecting, and sorting tasks.
 
-    \o \bold{Conformance to standards}: Conformance to all applicable
+    \li \b{Conformance to standards}: Conformance to all applicable
        XML and XQuery standards ensures that QtXmlPatterns can always
        process XML documents generated by other conformant
        applications, and that XML documents created with QtXmlPatterns
        can be processed by other conformant applications.
 
-    \o \bold{Maximal flexibility} The QtXmlPatterns module can be used
+    \li \b{Maximal flexibility} The QtXmlPatterns module can be used
        to query XML data \e{and} non-XML data that can be
        \l{QAbstractXmlNodeModel} {modeled to look like XML}.
 
@@ -201,69 +201,69 @@
     \table
 
     \header
-        \o QVariant type
-        \o XQuery $variable type
+        \li QVariant type
+        \li XQuery $variable type
 
     \row
-        \o QVariant::LongLong
-        \o \c xs:integer
+        \li QVariant::LongLong
+        \li \c xs:integer
 
     \row
-        \o QVariant::Int
-        \o \c xs:integer
+        \li QVariant::Int
+        \li \c xs:integer
 
     \row
-        \o QVariant::UInt
-        \o \c xs:nonNegativeInteger
+        \li QVariant::UInt
+        \li \c xs:nonNegativeInteger
 
     \row
-        \o QVariant::ULongLong
-        \o \c xs:unsignedLong
+        \li QVariant::ULongLong
+        \li \c xs:unsignedLong
 
     \row
-        \o QVariant::String
-        \o \c xs:string
+        \li QVariant::String
+        \li \c xs:string
 
     \row
-        \o QVariant::Double
-        \o \c xs:double
+        \li QVariant::Double
+        \li \c xs:double
 
     \row
-        \o QVariant::Bool
-        \o \c xs:boolean
+        \li QVariant::Bool
+        \li \c xs:boolean
 
     \row
-        \o QVariant::Double
-        \o \c xs:decimal
+        \li QVariant::Double
+        \li \c xs:decimal
 
     \row
-        \o QVariant::ByteArray
-        \o \c xs:base64Binary
+        \li QVariant::ByteArray
+        \li \c xs:base64Binary
 
     \row
-        \o QVariant::StringList
-        \o \c xs:string*
+        \li QVariant::StringList
+        \li \c xs:string*
 
     \row
-        \o QVariant::Url
-        \o \c xs:string
+        \li QVariant::Url
+        \li \c xs:string
 
     \row
-        \o QVariant::Date
-        \o \c xs:date.
+        \li QVariant::Date
+        \li \c xs:date.
 
     \row
-        \o QVariant::DateTime
-        \o \c xs:dateTime
+        \li QVariant::DateTime
+        \li \c xs:dateTime
 
     \row
-        \o QVariant::Time.
-        \o \c xs:time. (see \l{Binding To Time}{Binding To
+        \li QVariant::Time.
+        \li \c xs:time. (see \l{Binding To Time}{Binding To
         QVariant::Time} below)
 
     \row
-        \o QVariantList
-        \o (see \l{Binding To QVariantList}{Binding To QVariantList}
+        \li QVariantList
+        \li (see \l{Binding To QVariantList}{Binding To QVariantList}
            below)
 
     \endtable
@@ -315,93 +315,93 @@
     \table
 
     \header
-        \o XQuery result item type
-        \o QVariant type returned
+        \li XQuery result item type
+        \li QVariant type returned
 
     \row
-        \o \c xs:QName
-        \o QXmlName (see \l{Handling QXmlNames}{Handling QXmlNames}
+        \li \c xs:QName
+        \li QXmlName (see \l{Handling QXmlNames}{Handling QXmlNames}
         below)
 
     \row
-        \o \c xs:integer
-        \o QVariant::LongLong
+        \li \c xs:integer
+        \li QVariant::LongLong
 
     \row
-        \o \c xs:string
-        \o QVariant::String
+        \li \c xs:string
+        \li QVariant::String
 
     \row
-        \o \c xs:string*
-        \o QVariant::StringList
+        \li \c xs:string*
+        \li QVariant::StringList
 
     \row
-        \o \c xs:double
-        \o QVariant::Double
+        \li \c xs:double
+        \li QVariant::Double
 
     \row
-        \o \c xs:float
-        \o QVariant::Double
+        \li \c xs:float
+        \li QVariant::Double
 
     \row
-        \o \c xs:boolean
-        \o QVariant::Bool
+        \li \c xs:boolean
+        \li QVariant::Bool
 
     \row
-        \o \c xs:decimal
-        \o QVariant::Double
+        \li \c xs:decimal
+        \li QVariant::Double
 
     \row
-        \o \c xs:hexBinary
-        \o QVariant::ByteArray
+        \li \c xs:hexBinary
+        \li QVariant::ByteArray
 
     \row
-        \o \c xs:base64Binary
-        \o QVariant::ByteArray
+        \li \c xs:base64Binary
+        \li QVariant::ByteArray
 
     \row
-        \o \c xs:gYear
-        \o QVariant::DateTime
+        \li \c xs:gYear
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:gYearMonth
-        \o QVariant::DateTime
+        \li \c xs:gYearMonth
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:gMonthDay
-        \o QVariant::DateTime
+        \li \c xs:gMonthDay
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:gDay
-        \o QVariant::DateTime
+        \li \c xs:gDay
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:gMonth
-        \o QVariant::DateTime
+        \li \c xs:gMonth
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:anyURI
-        \o QVariant::Url
+        \li \c xs:anyURI
+        \li QVariant::Url
 
     \row
-        \o \c xs:untypedAtomic
-        \o QVariant::String
+        \li \c xs:untypedAtomic
+        \li QVariant::String
 
     \row
-        \o \c xs:ENTITY
-        \o QVariant::String
+        \li \c xs:ENTITY
+        \li QVariant::String
 
     \row
-        \o \c xs:date
-        \o QVariant::DateTime
+        \li \c xs:date
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:dateTime
-        \o QVariant::DateTime
+        \li \c xs:dateTime
+        \li QVariant::DateTime
 
     \row
-        \o \c xs:time
-        \o (see \l{xstime-not-mapped}{No mapping for xs:time} below)
+        \li \c xs:time
+        \li (see \l{xstime-not-mapped}{No mapping for xs:time} below)
 
     \endtable
 
@@ -527,18 +527,18 @@
 
     \list
 
-        \o The internal representation for word processor documents
+        \li The internal representation for word processor documents
 
-        \o The set of dependencies for a software build system
+        \li The set of dependencies for a software build system
 
-        \o The hierarchy (or graph) that links a set of HTML documents
+        \li The hierarchy (or graph) that links a set of HTML documents
         from a web crawler
 
-        \o The images and meta-data in an image collection
+        \li The images and meta-data in an image collection
 
-        \o The set of D-Bus interfaces available in a system
+        \li The set of D-Bus interfaces available in a system
 
-        \o A QObject hierarchy, as seen in the \l{QObject XML Model
+        \li A QObject hierarchy, as seen in the \l{QObject XML Model
         Example} {QObject XML Model example}.
 
     \endlist
@@ -630,10 +630,10 @@
 
     \list
 
-    \o Some corner cases involving namespaces and element constructors
+    \li Some corner cases involving namespaces and element constructors
        are incorrect.
 
-    \o XPath is a subset of XQuery and the implementation of
+    \li XPath is a subset of XQuery and the implementation of
        QtXmlPatterns uses XPath 2.0 with XQuery 1.0.
 
     \endlist
@@ -659,9 +659,9 @@
     features:
 
     \list
-        \o Basic XSLT 2.0 processor
-        \o Serialization feature
-        \o Backwards Compatibility feature
+        \li Basic XSLT 2.0 processor
+        \li Serialization feature
+        \li Backwards Compatibility feature
     \endlist
 
     For details, see \l{http://www.w3.org/TR/xslt20/#conformance}{XSL
@@ -683,100 +683,100 @@
 
     \table
     \header
-        \o XSL Feature
-        \o Support Status
+        \li XSL Feature
+        \li Support Status
     \row
-        \o \c xsl:key and \c fn:key()
-        \o not supported
+        \li \c xsl:key and \c fn:key()
+        \li not supported
     \row
-        \o \c xsl:include
-        \o not supported
+        \li \c xsl:include
+        \li not supported
     \row
-        \o \c xsl:import
-        \o not supported
+        \li \c xsl:import
+        \li not supported
     \row
-        \o \c xsl:copy
+        \li \c xsl:copy
 
-        \o The \c copy-namespaces and \c inherit-namespaces attributes
+        \li The \c copy-namespaces and \c inherit-namespaces attributes
            have no effect. For copied comments, attributes and
            processing instructions, the copy has the same node
            identity as the original.
 
     \row
-        \o \c xsl:copy-of
-        \o The \c copy-namespaces attribute has no effect.
+        \li \c xsl:copy-of
+        \li The \c copy-namespaces attribute has no effect.
     \row
-        \o \c fn:format-number()
-        \o not supported
+        \li \c fn:format-number()
+        \li not supported
     \row
-        \o \c xsl:message
-        \o not supported
+        \li \c xsl:message
+        \li not supported
     \row
-        \o \c xsl:use-when
-        \o not supported
+        \li \c xsl:use-when
+        \li not supported
     \row
-        \o \c Tunnel Parameters
-        \o not supported
+        \li \c Tunnel Parameters
+        \li not supported
     \row
-        \o \c xsl:attribute-set
-        \o not supported
+        \li \c xsl:attribute-set
+        \li not supported
     \row
-        \o \c xsl:decimal-format
-        \o not supported
+        \li \c xsl:decimal-format
+        \li not supported
     \row
-        \o \c xsl:fallback
-        \o not supported
+        \li \c xsl:fallback
+        \li not supported
     \row
-        \o \c xsl:apply-imports
-        \o not supported
+        \li \c xsl:apply-imports
+        \li not supported
     \row
-        \o \c xsl:character-map
-        \o not supported
+        \li \c xsl:character-map
+        \li not supported
     \row
-        \o \c xsl:number
-        \o not supported
+        \li \c xsl:number
+        \li not supported
     \row
-        \o \c xsl:namespace-alias
-        \o not supported
+        \li \c xsl:namespace-alias
+        \li not supported
     \row
-        \o \c xsl:output
-        \o not supported
+        \li \c xsl:output
+        \li not supported
     \row
-        \o \c xsl:output-character
-        \o not supported
+        \li \c xsl:output-character
+        \li not supported
     \row
-        \o \c xsl:preserve-space
-        \o not supported
+        \li \c xsl:preserve-space
+        \li not supported
     \row
-        \o \c xsl:result-document
-        \o not supported
+        \li \c xsl:result-document
+        \li not supported
     \row
-        \o Patterns
-        \o Complex patterns or patterns with predicates have issues.
+        \li Patterns
+        \li Complex patterns or patterns with predicates have issues.
     \row
-        \o \c 2.0 Compatibility Mode
+        \li \c 2.0 Compatibility Mode
 
-        \o Stylesheets are interpreted as XSLT 2.0 stylesheets, even
+        \li Stylesheets are interpreted as XSLT 2.0 stylesheets, even
            if the \c version attribute is in the XSLT source is
            1.0. In other words, the version attribute is ignored.
 
     \row
-        \o Grouping
+        \li Grouping
 
-        \o \c fn:current-group(), \c fn:grouping-key() and \c
+        \li \c fn:current-group(), \c fn:grouping-key() and \c
            xsl:for-each-group.
 
     \row
-        \o Regexp elements
-        \o \c xsl:analyze-string, \c xsl:matching-substring,
+        \li Regexp elements
+        \li \c xsl:analyze-string, \c xsl:matching-substring,
            \c xsl:non-matching-substring, and \c fn:regex-group()
     \row
-        \o Date & Time formatting
-        \o \c fn:format-dateTime(), \c fn:format-date() and fn:format-time().
+        \li Date & Time formatting
+        \li \c fn:format-dateTime(), \c fn:format-date() and fn:format-time().
 
     \row
-        \o XPath Conformance
-        \o Since XPath is a subset of XSLT, its issues are in affect too.
+        \li XPath Conformance
+        \li Since XPath is a subset of XSLT, its issues are in affect too.
     \endtable
 
     The QtXmlPatterns implementation of the XPath Data Model does not
@@ -792,13 +792,13 @@
     include:
 
     \list
-    \o Regular expression support is currently not conformant
+    \li Regular expression support is currently not conformant
        but follows Qt's QRegExp standard syntax.
 
-    \o Operators for \c xs:time, \c xs:date, and \c xs:dateTime
+    \li Operators for \c xs:time, \c xs:date, and \c xs:dateTime
        are incomplete.
 
-    \o Formatting of very large or very small \c xs:double, \c
+    \li Formatting of very large or very small \c xs:double, \c
        xs:float, and \c xs:decimal values may be incorrect.
     \endlist
 
@@ -823,16 +823,16 @@
     are:
 
     \list
-    \o Large \c minOccurs or \c maxOccurs values or deeply nested ones
+    \li Large \c minOccurs or \c maxOccurs values or deeply nested ones
        require huge amount of memory which might cause the system to freeze.
        Such a schema should be rewritten to use \c unbounded as value instead
        of large numbers. This restriction will hopefully be fixed in a later release.
-    \o Comparison of really small or large floating point values might lead to
+    \li Comparison of really small or large floating point values might lead to
        wrong results in some cases. However such numbers should not be relevant
        for day-to-day usage.
-    \o Regular expression support is currently not conformant but follows
+    \li Regular expression support is currently not conformant but follows
        Qt's QRegExp standard syntax.
-    \o Identity constraint checks can not use the values of default or fixed
+    \li Identity constraint checks can not use the values of default or fixed
        attribute definitions.
     \endlist
 
@@ -843,30 +843,30 @@
 
     \table
     \header
-        \o Scheme Name
-        \o Description
+        \li Scheme Name
+        \li Description
     \row
-        \o \c file
-        \o Local files.
+        \li \c file
+        \li Local files.
     \row
-        \o \c data
+        \li \c data
 
-        \o The bytes are encoded in the URI itself. e.g., \c
+        \li The bytes are encoded in the URI itself. e.g., \c
            data:application/xml,%3Ce%2F%3E is \c <e/>.
 
     \row
-        \o \c ftp
-        \o Resources retrieved via FTP.
+        \li \c ftp
+        \li Resources retrieved via FTP.
     \row
-        \o \c http
-        \o Resources retrieved via HTTP.
+        \li \c http
+        \li Resources retrieved via HTTP.
     \row
-        \o \c https
-        \o Resources retrieved via HTTPS. This will succeed if no SSL
+        \li \c https
+        \li Resources retrieved via HTTPS. This will succeed if no SSL
            errors are encountered.
     \row
-        \o \c qrc
-        \o Qt Resource files. Expressing it as an empty scheme, :/...,
+        \li \c qrc
+        \li Qt Resource files. Expressing it as an empty scheme, :/...,
            is not supported.
 
     \endtable
diff --git a/doc/src/xml-processing/xml-processing.qdoc b/doc/src/xml-processing/xml-processing.qdoc
index f7502ac..dfcf183 100644
--- a/doc/src/xml-processing/xml-processing.qdoc
+++ b/doc/src/xml-processing/xml-processing.qdoc
@@ -54,14 +54,14 @@
     \section1 Topics:
 
     \list
-    \o \l {Classes for XML Processing}
-    \o \l {An Introduction to Namespaces}
-    \o \l {XML Streaming}
-    \o \l {The SAX Interface}
-    \o \l {Working with the DOM Tree}
-    \o \l {XQuery}{XQuery/XPath and XML Schema}
+    \li \l {Classes for XML Processing}
+    \li \l {An Introduction to Namespaces}
+    \li \l {XML Streaming}
+    \li \l {The SAX Interface}
+    \li \l {Working with the DOM Tree}
+    \li \l {XQuery}{XQuery/XPath and XML Schema}
         \list
-        \o \l{A Short Path to XQuery}
+        \li \l{A Short Path to XQuery}
         \endlist
     \endlist
     
@@ -168,10 +168,10 @@
     default namespace. So why didn't we simply use the default namespace
     we'd already declared? The answer is quite complex:
     \list
-    \o attributes without a prefix don't belong to any XML namespace at
+    \li attributes without a prefix don't belong to any XML namespace at
     all, not even to the default namespace;
-    \o additionally omitting the prefix would lead to a \e title-title clash;
-    \o writing it as \e xmlns:title would declare a new namespace with the
+    \li additionally omitting the prefix would lead to a \e title-title clash;
+    \li writing it as \e xmlns:title would declare a new namespace with the
     prefix \e title instead of applying the default \e xmlns namespace.
     \endlist
 
@@ -189,16 +189,16 @@
     The following terms are used to distinguish the parts of names within
     the context of namespaces:
     \list
-    \o  The \e {qualified name}
+    \li  The \e {qualified name}
         is the name as it appears in the document. (In the above example \e
         book:title is a qualified name.)
-    \o  A \e {namespace prefix} in a qualified name
+    \li  A \e {namespace prefix} in a qualified name
         is the part to the left of the ":". (\e book is the namespace prefix in
         \e book:title.)
-    \o  The \e {local part} of a name (also refered to as the \e {local
+    \li  The \e {local part} of a name (also refered to as the \e {local
         name}) appears to the right of the ":". (Thus \e title is the
         local part of \e book:title.)
-    \o  The \e {namespace URI} ("Uniform Resource Identifier") is a unique
+    \li  The \e {namespace URI} ("Uniform Resource Identifier") is a unique
         identifier for a namespace. It looks like a URL
         (e.g. \e http://www.example.com/fnord/ ) but does not require
         data to be accessible by the given protocol at the named address.
@@ -320,9 +320,9 @@
     Whilst reading (a SAX2 parser is usually referred to as "reader") 
     the above document three events would be triggered:
     \list 1
-    \o A start tag occurs (\c{<quote>}).
-    \o Character data (i.e. text) is found, "A quotation.".
-    \o An end tag is parsed (\c{</quote>}).
+    \li A start tag occurs (\c{<quote>}).
+    \li Character data (i.e. text) is found, "A quotation.".
+    \li An end tag is parsed (\c{</quote>}).
     \endlist
 
     Each time such an event occurs the parser reports it; you can set up
@@ -342,21 +342,21 @@
 
     The reader reports parsing events through special handler classes:
     \table
-    \header \o Handler class \o Description
-    \row \o \l QXmlContentHandler
-         \o Reports events related to the content of a document (e.g. the start tag
+    \header \li Handler class \li Description
+    \row \li \l QXmlContentHandler
+         \li Reports events related to the content of a document (e.g. the start tag
             or characters).
-    \row \o \l QXmlDTDHandler
-         \o Reports events related to the DTD (e.g. notation declarations).
-    \row \o \l QXmlErrorHandler
-         \o Reports errors or warnings that occurred during parsing.
-    \row \o \l QXmlEntityResolver
-         \o Reports external entities during parsing and allows users to resolve
+    \row \li \l QXmlDTDHandler
+         \li Reports events related to the DTD (e.g. notation declarations).
+    \row \li \l QXmlErrorHandler
+         \li Reports errors or warnings that occurred during parsing.
+    \row \li \l QXmlEntityResolver
+         \li Reports external entities during parsing and allows users to resolve
             external entities themselves instead of leaving it to the reader.
-    \row \o \l QXmlDeclHandler
-         \o Reports further DTD related events (e.g. attribute declarations).
-    \row \o \l QXmlLexicalHandler
-         \o Reports events related to the lexical structure of the
+    \row \li \l QXmlDeclHandler
+         \li Reports further DTD related events (e.g. attribute declarations).
+    \row \li \l QXmlLexicalHandler
+         \li Reports events related to the lexical structure of the
             document (the beginning of the DTD, comments etc.).
     \endtable
 
@@ -370,13 +370,13 @@
     Apart from those already mentioned, the following SAX2 support classes 
     provide additional useful functionality:
     \table
-    \header \o Class \o Description
-    \row \o \l QXmlAttributes
-         \o Used to pass attributes in a start element event.
-    \row \o \l QXmlLocator
-         \o Used to obtain the actual parsing position of an event.
-    \row \o \l QXmlNamespaceSupport
-         \o Used to implement namespace support for a reader. Note that
+    \header \li Class \li Description
+    \row \li \l QXmlAttributes
+         \li Used to pass attributes in a start element event.
+    \row \li \l QXmlLocator
+         \li Used to obtain the actual parsing position of an event.
+    \row \li \l QXmlNamespaceSupport
+         \li Used to implement namespace support for a reader. Note that
             namespaces do not change the parsing behavior. They are only
             reported through the handler.
     \endtable
@@ -435,12 +435,12 @@
 
     They influence the reporting behavior in the following way:
     \list 1
-    \o Namespace prefixes and local parts of elements and attributes can
+    \li Namespace prefixes and local parts of elements and attributes can
     be reported.
-    \o The qualified names of elements and attributes are reported.
-    \o \l QXmlContentHandler::startPrefixMapping() and \l
+    \li The qualified names of elements and attributes are reported.
+    \li \l QXmlContentHandler::startPrefixMapping() and \l
     QXmlContentHandler::endPrefixMapping() are called by the reader.
-    \o Attributes that declare namespaces (i.e. the attribute \e xmlns and
+    \li Attributes that declare namespaces (i.e. the attribute \e xmlns and
     attributes starting with \e{xmlns:}) are reported.
     \endlist
 
@@ -485,15 +485,15 @@
     \l QXmlSimpleReader implements the following behavior:
 
     \table
-    \header \o (namespaces, namespace-prefixes)
-            \o Namespace prefix and local part
-            \o Qualified names
-            \o Prefix mapping
-            \o xmlns attributes
-    \row \o (true, false) \o Yes \o Yes* \o Yes \o No
-    \row \o (true, true) \o Yes \o Yes \o Yes \o Yes
-    \row \o (false, true) \o No* \o Yes \o No* \o Yes
-    \row \o (false, false) \i41 Illegal
+    \header \li (namespaces, namespace-prefixes)
+            \li Namespace prefix and local part
+            \li Qualified names
+            \li Prefix mapping
+            \li xmlns attributes
+    \row \li (true, false) \li Yes \li Yes* \li Yes \li No
+    \row \li (true, true) \li Yes \li Yes \li Yes \li Yes
+    \row \li (false, true) \li No* \li Yes \li No* \li Yes
+    \row \li (false, false) \li {4,1} Illegal
     \endtable
 
     The behavior of the entries marked with an asterisk (*) is not specified by SAX.
@@ -548,60 +548,60 @@
     Here are the available node classes and their potential child classes:
 
     \list
-    \o \l QDomDocument: Possible children are
+    \li \l QDomDocument: Possible children are
             \list
-            \o \l QDomElement (at most one)
-            \o \l QDomProcessingInstruction
-            \o \l QDomComment
-            \o \l QDomDocumentType
+            \li \l QDomElement (at most one)
+            \li \l QDomProcessingInstruction
+            \li \l QDomComment
+            \li \l QDomDocumentType
             \endlist
-    \o \l QDomDocumentFragment: Possible children are
+    \li \l QDomDocumentFragment: Possible children are
             \list
-            \o \l QDomElement
-            \o \l QDomProcessingInstruction
-            \o \l QDomComment
-            \o \l QDomText
-            \o \l QDomCDATASection
-            \o \l QDomEntityReference
+            \li \l QDomElement
+            \li \l QDomProcessingInstruction
+            \li \l QDomComment
+            \li \l QDomText
+            \li \l QDomCDATASection
+            \li \l QDomEntityReference
             \endlist
-    \o \l QDomDocumentType: No children
-    \o \l QDomEntityReference: Possible children are
+    \li \l QDomDocumentType: No children
+    \li \l QDomEntityReference: Possible children are
             \list
-            \o \l QDomElement
-            \o \l QDomProcessingInstruction
-            \o \l QDomComment
-            \o \l QDomText
-            \o \l QDomCDATASection
-            \o \l QDomEntityReference
+            \li \l QDomElement
+            \li \l QDomProcessingInstruction
+            \li \l QDomComment
+            \li \l QDomText
+            \li \l QDomCDATASection
+            \li \l QDomEntityReference
             \endlist
-    \o \l QDomElement: Possible children are
+    \li \l QDomElement: Possible children are
             \list
-            \o \l QDomElement
-            \o \l QDomText
-            \o \l QDomComment
-            \o \l QDomProcessingInstruction
-            \o \l QDomCDATASection
-            \o \l QDomEntityReference
+            \li \l QDomElement
+            \li \l QDomText
+            \li \l QDomComment
+            \li \l QDomProcessingInstruction
+            \li \l QDomCDATASection
+            \li \l QDomEntityReference
             \endlist
-    \o \l QDomAttr: Possible children are
+    \li \l QDomAttr: Possible children are
             \list
-            \o \l QDomText
-            \o \l QDomEntityReference
+            \li \l QDomText
+            \li \l QDomEntityReference
             \endlist
-    \o \l QDomProcessingInstruction: No children
-    \o \l QDomComment: No children
-    \o \l QDomText: No children
-    \o \l QDomCDATASection: No children
-    \o \l QDomEntity: Possible children are
+    \li \l QDomProcessingInstruction: No children
+    \li \l QDomComment: No children
+    \li \l QDomText: No children
+    \li \l QDomCDATASection: No children
+    \li \l QDomEntity: Possible children are
             \list
-            \o \l QDomElement
-            \o \l QDomProcessingInstruction
-            \o \l QDomComment
-            \o \l QDomText
-            \o \l QDomCDATASection
-            \o \l QDomEntityReference
+            \li \l QDomElement
+            \li \l QDomProcessingInstruction
+            \li \l QDomComment
+            \li \l QDomText
+            \li \l QDomCDATASection
+            \li \l QDomEntityReference
             \endlist
-    \o \l QDomNotation: No children
+    \li \l QDomNotation: No children
     \endlist
 
     With \l QDomNodeList and \l QDomNamedNodeMap two collection classes 
diff --git a/doc/src/xml-processing/xquery-introduction.qdoc b/doc/src/xml-processing/xquery-introduction.qdoc
index 9347010..74c5cb1 100644
--- a/doc/src/xml-processing/xquery-introduction.qdoc
+++ b/doc/src/xml-processing/xquery-introduction.qdoc
@@ -126,9 +126,9 @@ first step creates the initial focus by calling the \c{doc()}
 function. We can paraphrase what the query engine does at each step:
 
 \list 1
-    \o for each node in the initial focus (the document node)...
-    \o for each descendant node that is a \c{<recipe>} element...
-    \o collect the child nodes that are \c{<title>} elements.
+    \li for each node in the initial focus (the document node)...
+    \li for each descendant node that is a \c{<recipe>} element...
+    \li collect the child nodes that are \c{<title>} elements.
 \endlist
 
 Again the double slash means select all the \c{<recipe>} elements in the
@@ -181,49 +181,49 @@ supports the following axes.
 
 \table
 \header
-  \o Axis Specifier
-  \o refers to the axis containing...
+  \li Axis Specifier
+  \li refers to the axis containing...
   \row
-    \o \c{self::}
-    \o the context node itself
+    \li \c{self::}
+    \li the context node itself
   \row
-    \o \c{attribute::}
-    \o all attribute nodes of the context node
+    \li \c{attribute::}
+    \li all attribute nodes of the context node
   \row
-    \o \c{child::}
-    \o all child nodes of the context node (not attributes)
+    \li \c{child::}
+    \li all child nodes of the context node (not attributes)
   \row
-    \o \c{descendant::}
-    \o all descendants of the context node (children, grandchildren, etc)
+    \li \c{descendant::}
+    \li all descendants of the context node (children, grandchildren, etc)
   \row
-    \o \c{descendant-or-self::}
-    \o all nodes in \c{descendant} + \c{self}
+    \li \c{descendant-or-self::}
+    \li all nodes in \c{descendant} + \c{self}
   \row
-    \o \c{parent::}
-    \o the parent node of the context node, or empty if there is no parent
+    \li \c{parent::}
+    \li the parent node of the context node, or empty if there is no parent
   \row
-    \o \c{ancestor::}
-    \o all ancestors of the context node (parent, grandparent, etc)
+    \li \c{ancestor::}
+    \li all ancestors of the context node (parent, grandparent, etc)
   \row
-    \o \c{ancestor-or-self::}
-    \o all nodes in \c{ancestor} + \c{self}
+    \li \c{ancestor-or-self::}
+    \li all nodes in \c{ancestor} + \c{self}
   \row
-    \o \c{following::}
-    \o all nodes in the tree containing the context node, \e not
+    \li \c{following::}
+    \li all nodes in the tree containing the context node, \e not
     including \c{descendant}, \e and that follow the context node
     in the document
   \row
-    \o \c{preceding::}
-    \o all nodes in the tree contianing the context node, \e not
+    \li \c{preceding::}
+    \li all nodes in the tree contianing the context node, \e not
     including \c{ancestor}, \e and that precede the context node in
     the document
   \row
-    \o \c{following-sibling::}
-    \o all children of the context node's \c{parent} that follow the
+    \li \c{following-sibling::}
+    \li all children of the context node's \c{parent} that follow the
     context node in the document
   \row
-    \o \c{preceding-sibling::}
-    \o all children of the context node's \c{parent} that precede the
+    \li \c{preceding-sibling::}
+    \li all children of the context node's \c{parent} that precede the
     context node in the document
 \endtable
 
@@ -243,41 +243,41 @@ and are often called the \l{Name Tests}.
 
 \table
 \header
-  \o Node Test
-  \o matches all...
+  \li Node Test
+  \li matches all...
   \row
-    \o \c{node()}
-    \o nodes of any kind
+    \li \c{node()}
+    \li nodes of any kind
   \row
-    \o \c{text()}
-    \o text nodes
+    \li \c{text()}
+    \li text nodes
   \row
-    \o \c{comment()}
-    \o comment nodes
+    \li \c{comment()}
+    \li comment nodes
   \row
-    \o \c{element()}
-    \o element nodes (same as star: *)
+    \li \c{element()}
+    \li element nodes (same as star: *)
   \row
-    \o \c{element(name)}
-    \o element nodes named \c{name}
+    \li \c{element(name)}
+    \li element nodes named \c{name}
   \row
-    \o \c{attribute()}
-    \o attribute nodes
+    \li \c{attribute()}
+    \li attribute nodes
   \row
-    \o \c{attribute(name)}
-    \o attribute nodes named \c{name}
+    \li \c{attribute(name)}
+    \li attribute nodes named \c{name}
    \row
-    \o \c{processing-instruction()}
-    \o processing-instructions
+    \li \c{processing-instruction()}
+    \li processing-instructions
   \row
-    \o \c{processing-instruction(name)}
-    \o processing-instructions named \c{name}
+    \li \c{processing-instruction(name)}
+    \li processing-instructions named \c{name}
   \row
-    \o \c{document-node()}
-    \o document nodes (there is only one)
+    \li \c{document-node()}
+    \li document nodes (there is only one)
   \row
-    \o \c{document-node(element(name))}
-    \o document node with document element \c{name}
+    \li \c{document-node(element(name))}
+    \li document node with document element \c{name}
 \endtable
 
 \target Shorthand Form
@@ -292,39 +292,39 @@ form. Here is a table of some frequently used shorthand forms:
 
 \table
 \header
-  \o Shorthand syntax
-  \o Short for...
-  \o matches all...
+  \li Shorthand syntax
+  \li Short for...
+  \li matches all...
   \row
-    \o \c{name}
-    \o \c{child::element(name)}
-    \o child nodes that are \c{name} elements
+    \li \c{name}
+    \li \c{child::element(name)}
+    \li child nodes that are \c{name} elements
 
   \row
-    \o \c{*}
-    \o \c{child::element()}
-    \o child nodes that are elements (\c{node()} matches
+    \li \c{*}
+    \li \c{child::element()}
+    \li child nodes that are elements (\c{node()} matches
     \e all child nodes)
 
   \row
-    \o \c{..}
-    \o \c{parent::node()}
-    \o parent nodes (there is only one)
+    \li \c{..}
+    \li \c{parent::node()}
+    \li parent nodes (there is only one)
 
   \row
-    \o \c{@*}
-    \o \c{attribute::attribute()}
-    \o attribute nodes
+    \li \c{@*}
+    \li \c{attribute::attribute()}
+    \li attribute nodes
 
   \row
-    \o \c{@name}
-    \o \c{attribute::attribute(name)}
-    \o \c{name} attributes
+    \li \c{@name}
+    \li \c{attribute::attribute(name)}
+    \li \c{name} attributes
 
   \row
-    \o \c{//}
-    \o \c{descendant-or-self::node()}
-    \o descendent nodes (when used instead of '/')
+    \li \c{//}
+    \li \c{descendant-or-self::node()}
+    \li descendent nodes (when used instead of '/')
 
 \endtable
 
@@ -555,15 +555,15 @@ boolean predicate takes the value of its expression and determines its
 \e{effective boolean value} according to the following rules:
 
 \list
-    \o An expression that evaluates to a single node is \c{true}.
+    \li An expression that evaluates to a single node is \c{true}.
 
-    \o An expression that evaluates to a string is \c{false} if the
+    \li An expression that evaluates to a string is \c{false} if the
        string is empty and \c{true} if the string is not empty.
 
-    \o An expression that evaluates to a boolean value (i.e. type
+    \li An expression that evaluates to a boolean value (i.e. type
     \c{xs:boolean}) is that value.
 
-    \o If the expression evaluates to anything else, it's an error
+    \li If the expression evaluates to anything else, it's an error
     (e.g. type \c{xs:date}).
 
 \endlist
@@ -742,9 +742,9 @@ quite informative. An XQuery textbook will be a good investment.
 You can also ask questions on XQuery mail lists:
 
 \list
-\o
+\li
 \l{http://qt.nokia.com/lists/qt-interest/}{qt-interest}
-\o
+\li
 \l{http://www.x-query.com/mailman/listinfo/talk}{talk at x-query.com}.
 \endlist
 
@@ -757,10 +757,10 @@ difficult, though, so consider investing in a textbook:
 
 \list
 
-    \o \l{http://www.w3.org/TR/xquery/}{XQuery 1.0: An XML Query
+    \li \l{http://www.w3.org/TR/xquery/}{XQuery 1.0: An XML Query
     Language} - the main source for syntax and semantics.
 
-    \o \l{http://www.w3.org/TR/xpath-functions/}{XQuery 1.0 and XPath
+    \li \l{http://www.w3.org/TR/xpath-functions/}{XQuery 1.0 and XPath
        2.0 Functions and Operators} - the builtin functions and operators.
 
 \endlist
@@ -861,17 +861,17 @@ misplaced, and placed correctly:
 
 \table
 \header
-  \o element constructor with expression...
-  \o evaluates to...
+  \li element constructor with expression...
+  \li evaluates to...
   \row
-    \o <e>sum((1, 2, 3))</e>
-    \o <e>sum((1, 2, 3))</e>
+    \li <e>sum((1, 2, 3))</e>
+    \li <e>sum((1, 2, 3))</e>
   \row
-    \o <e>sum({(1, 2, 3)})</e>
-    \o <e>sum(1 2 3)</e>
+    \li <e>sum({(1, 2, 3)})</e>
+    \li <e>sum(1 2 3)</e>
   \row
-    \o <e>{sum((1, 2, 3))}</e>
-    \o <e>6</e>
+    \li <e>{sum((1, 2, 3))}</e>
+    \li <e>6</e>
 \endtable
 
 \section2 My predicate is correct, so why doesn't it select the right stuff?
diff --git a/src/xmlpatterns/api/qabstractxmlforwarditerator.cpp b/src/xmlpatterns/api/qabstractxmlforwarditerator.cpp
index 094d53c..7d974e5 100644
--- a/src/xmlpatterns/api/qabstractxmlforwarditerator.cpp
+++ b/src/xmlpatterns/api/qabstractxmlforwarditerator.cpp
@@ -52,10 +52,10 @@
   An item can be instantiated in QAbstractXmlForwardIterator if:
   \list
 
-  \o It has a default constructor, a copy constructor, and an
+  \li It has a default constructor, a copy constructor, and an
   assignment operator, and
 
-  \o It has an appropriate qIsForwardIteratorEnd() function.
+  \li It has an appropriate qIsForwardIteratorEnd() function.
   \endlist
 
    @ingroup Patternist_iterators
diff --git a/src/xmlpatterns/api/qabstractxmlnodemodel.cpp b/src/xmlpatterns/api/qabstractxmlnodemodel.cpp
index 6dfaad2..bc1d2a8 100644
--- a/src/xmlpatterns/api/qabstractxmlnodemodel.cpp
+++ b/src/xmlpatterns/api/qabstractxmlnodemodel.cpp
@@ -161,18 +161,18 @@ bool QAbstractXmlNodeModel::isIgnorableInDeepEqual(const QXmlNodeModelIndex &n)
 
   \list 1
 
-    \o Instantiate QXmlQuery and give it the XQuery to be run;
+    \li Instantiate QXmlQuery and give it the XQuery to be run;
 
-    \o Instantiate a subclass of QAbstractXmlNodeModel or
+    \li Instantiate a subclass of QAbstractXmlNodeModel or
     QSimpleXmlNodeModel;
 
-    \o Retrieve a QXmlNodeModelIndex for the node in the model where
+    \li Retrieve a QXmlNodeModelIndex for the node in the model where
     the QXmlQuery should start the query;
 
-    \o Use QXmlQuery::bindVariable() to bind the QXmlNodeModelIndex
+    \li Use QXmlQuery::bindVariable() to bind the QXmlNodeModelIndex
     to \c {$variable name};
 
-    \o Call one of the QXmlQuery evaluation functions to run the
+    \li Call one of the QXmlQuery evaluation functions to run the
     query.
 
   \endlist
@@ -339,15 +339,15 @@ QAbstractXmlNodeModel::~QAbstractXmlNodeModel()
 
   \list
 
-  \o For document nodes, the base URI and the document URI are the same.
+  \li For document nodes, the base URI and the document URI are the same.
 
-  \o For elements, the base URI is the URI appearing in the element's
+  \li For elements, the base URI is the URI appearing in the element's
      \c xml:base attribute, if present, or it is resolved to the
      parent element's base URI.
 
-  \o Namespace nodes have no base URI.
+  \li Namespace nodes have no base URI.
 
-  \o The base URI for a processing instruction, comment, attribute,
+  \li The base URI for a processing instruction, comment, attribute,
   or text node is the base URI of the node's parent element.
 
   \endlist
@@ -380,11 +380,11 @@ QAbstractXmlNodeModel::~QAbstractXmlNodeModel()
 
   \list
 
-  \o If \a n is a document node, return an absolute QUrl containing
+  \li If \a n is a document node, return an absolute QUrl containing
      the document URI, or a default constructed QUrl. The latter
      signals that no document URI is available for the document node.
 
-  \o For all other nodes, return a default constructed QUrl.
+  \li For all other nodes, return a default constructed QUrl.
 
   \endlist
 
@@ -761,9 +761,9 @@ QAbstractXmlNodeModel::iterate(const QXmlNodeModelIndex &ni,
   cases by guaranteeing that it will never ask for:
 
   \list
-    \o Children or siblings for attributes.
-    \o Children for comments, processing instructions, and text nodes.
-    \o Siblings or parents for document nodes.
+    \li Children or siblings for attributes.
+    \li Children for comments, processing instructions, and text nodes.
+    \li Siblings or parents for document nodes.
   \endlist
 
   A typical implementation performs a \c switch on the value of \a
@@ -895,19 +895,19 @@ void QAbstractXmlNodeModel::sendNamespaces(const QXmlNodeModelIndex &n,
 
   \list
 
-  \o For processing instructions, the string value is the data
+  \li For processing instructions, the string value is the data
   section(excluding any whitespace appearing between the name and the
   data).
 
-  \o For text nodes, the string value equals the text node.
+  \li For text nodes, the string value equals the text node.
 
-  \o For comments, the content of the comment
+  \li For comments, the content of the comment
 
-  \o For elements, the concatenation of all text nodes that are
+  \li For elements, the concatenation of all text nodes that are
   descendants. Note, this is not only the children, but the
   childrens' childrens' text nodes, and so forth.
 
-  \o For document nodes, the concatenation of all text nodes in the
+  \li For document nodes, the concatenation of all text nodes in the
   document.
 
   \endlist
@@ -1308,9 +1308,9 @@ bool QXmlItem::isNull() const
   {XML node model}. It contains:
 
   \list
-    \o A pointer to an \l{QAbstractXmlNodeModel} {XML node model},
+    \li A pointer to an \l{QAbstractXmlNodeModel} {XML node model},
     which is returned by model(), and
-    \o Some data, which is returned by data(), internalPointer(),
+    \li Some data, which is returned by data(), internalPointer(),
     and additionalData().
   \endlist
 
@@ -1323,10 +1323,10 @@ bool QXmlItem::isNull() const
 
   \list
 
-  \o Send the output of your XQuery to an \l{QAbstractXmlReceiver}
+  \li Send the output of your XQuery to an \l{QAbstractXmlReceiver}
   {XML receiver}, or
 
-  \o Let your XQuery do all the work to produce the desired result.
+  \li Let your XQuery do all the work to produce the desired result.
 
   \endlist
 
diff --git a/src/xmlpatterns/api/qabstractxmlreceiver.cpp b/src/xmlpatterns/api/qabstractxmlreceiver.cpp
index 0daf24f..e8880b7 100644
--- a/src/xmlpatterns/api/qabstractxmlreceiver.cpp
+++ b/src/xmlpatterns/api/qabstractxmlreceiver.cpp
@@ -92,22 +92,22 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o An \e {Element Node} represents an XML element.
+  \li An \e {Element Node} represents an XML element.
 
-  \o An \e {Attribute Node} represents an XML attribute.
+  \li An \e {Attribute Node} represents an XML attribute.
 
-  \o A \e {Document Node} represents an entire XML document.
+  \li A \e {Document Node} represents an entire XML document.
 
-  \o A \e {Text Node} represents character data (element content).
+  \li A \e {Text Node} represents character data (element content).
 
-  \o A \e {Processing Instruction Node} represents an XML
+  \li A \e {Processing Instruction Node} represents an XML
   processing instruction, which is used in an XML document
   to tell the application reading the document to perform
   some action. A typical example is to use a processing
   instruction to tell the application to use a particular
   XSLT stylesheet to display the document.
 
-  \o And a \e {Comment node} represents an XML comment.
+  \li And a \e {Comment node} represents an XML comment.
 
   \endlist
 
@@ -117,34 +117,34 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o Each \e node appears in the \e sequence before its children
+  \li Each \e node appears in the \e sequence before its children
   and their descendants appear.
 
-  \o A \e node's descendants appear in the \e sequence before
+  \li A \e node's descendants appear in the \e sequence before
   any of its siblings appear.
 
-  \o A \e {Document Node} represents an entire document. Zero or
+  \li A \e {Document Node} represents an entire document. Zero or
   more \e {Document Nodes} can appear in a \e sequence, but they
   can only be top level items (i.e., a \e {Document Node} can't
   be a child of another \e node.
 
-  \o \e {Namespace Nodes} immediately follow the \e {Element Node}
+  \li \e {Namespace Nodes} immediately follow the \e {Element Node}
    with which they are associated.
 
-  \o \e {Attribute Nodes} immediately follow the \e {Namespace Nodes}
+  \li \e {Attribute Nodes} immediately follow the \e {Namespace Nodes}
    of the element with which they are associated, or...
 
-   \o If there are no \e {Namespace Nodes} following an element, then
+   \li If there are no \e {Namespace Nodes} following an element, then
    the \e {Attribute Nodes} immediately follow the element.
 
-   \o An \e {atomic value} can only appear as a top level \e item,
+   \li An \e {atomic value} can only appear as a top level \e item,
    i.e., it can't appear as a child of a \e node.
 
-   \o \e {Processing Instruction Nodes} do not have children, and
+   \li \e {Processing Instruction Nodes} do not have children, and
    their parent is either a \e {Document Node} or an \e {Element
    Node}.
 
-   \o \e {Comment Nodes} do not have children, and
+   \li \e {Comment Nodes} do not have children, and
    their parent is either a \e {Document Node} or an \e {Element
    Node}.
 
@@ -158,27 +158,27 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o startDocument() and endDocument() are called for each
+  \li startDocument() and endDocument() are called for each
   \e {Document Node} in the \e sequence. endDocument() is not
   called until all the \e {Document Node's} children have
   appeared in the \e sequence.
 
-  \o startElement() and endElement() are called for each
+  \li startElement() and endElement() are called for each
   \e {Element Node}. endElement() is not called until all the
   \e {Element Node's} children have appeared in the \e sequence.
 
-  \o attribute() is called for each \e {Attribute Node}.
+  \li attribute() is called for each \e {Attribute Node}.
 
-  \o comment() is called for each \e {Comment Node}.
+  \li comment() is called for each \e {Comment Node}.
 
-  \o characters() is called for each \e {Text Node}.
+  \li characters() is called for each \e {Text Node}.
 
-  \o processingInstruction() is called for each \e {Processing
+  \li processingInstruction() is called for each \e {Processing
   Instruction Node}.
 
-  \o namespaceBinding() is called for each \e {Namespace Node}.
+  \li namespaceBinding() is called for each \e {Namespace Node}.
 
-  \o atomicValue() is called for each \e {atomic value}.
+  \li atomicValue() is called for each \e {atomic value}.
 
   \endlist
 
diff --git a/src/xmlpatterns/api/qxmlname.cpp b/src/xmlpatterns/api/qxmlname.cpp
index 2a67ea5..53d8155 100644
--- a/src/xmlpatterns/api/qxmlname.cpp
+++ b/src/xmlpatterns/api/qxmlname.cpp
@@ -435,17 +435,17 @@ bool QXmlName::isNCName(const QString &candidate)
 
     \table
     \header
-        \o Clark Name
-        \o Description
+        \li Clark Name
+        \li Description
     \row
-        \o \c html
-        \o The local name \c html, in no namespace
+        \li \c html
+        \li The local name \c html, in no namespace
     \row
-        \o \c {http://www.w3.org/1999/xhtml}html
-        \o The local name \c html, in the XHTML namespace
+        \li \c {http://www.w3.org/1999/xhtml}html
+        \li The local name \c html, in the XHTML namespace
     \row
-        \o \c {http://www.w3.org/1999/xhtml}my:html
-        \o The local name \c html, in the XHTML namespace, with the prefix \c my
+        \li \c {http://www.w3.org/1999/xhtml}my:html
+        \li The local name \c html, in the XHTML namespace, with the prefix \c my
     \endtable
 
     If the namespace contains braces, the returned value is either invalid or
diff --git a/src/xmlpatterns/api/qxmlquery.cpp b/src/xmlpatterns/api/qxmlquery.cpp
index c8747ae..c254843 100644
--- a/src/xmlpatterns/api/qxmlquery.cpp
+++ b/src/xmlpatterns/api/qxmlquery.cpp
@@ -98,7 +98,7 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o evaluateTo(QAbstractXmlReceiver *) is called with a pointer to an
+  \li evaluateTo(QAbstractXmlReceiver *) is called with a pointer to an
   XML \l {QAbstractXmlReceiver} {receiver}, which receives the query
   results as a sequence of callbacks. The receiver callback class is
   like the callback class used for translating the output of a SAX
@@ -110,7 +110,7 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o evaluateTo(QXmlResultItems *) is called with a pointer to an
+  \li evaluateTo(QXmlResultItems *) is called with a pointer to an
   iterator for an empty sequence of query \l {QXmlResultItems} {result
   items}.  The Java-like iterator allows the query results to be
   accessed sequentially.
@@ -119,7 +119,7 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o evaluateTo(QStringList *) is like evaluateTo(QXmlResultItems *),
+  \li evaluateTo(QStringList *) is like evaluateTo(QXmlResultItems *),
   but the query must evaluate to a sequence of strings.
 
   \endlist
@@ -184,12 +184,12 @@ QT_BEGIN_NAMESPACE
 
   \list
 
-  \o The error message is sent to the messageHandler().
+  \li The error message is sent to the messageHandler().
 
-  \o QXmlResultItems::hasError() will return \c{true}, or
+  \li QXmlResultItems::hasError() will return \c{true}, or
   evaluateTo() will return \c{false};
 
-  \o The results of the evaluation are undefined.
+  \li The results of the evaluation are undefined.
 
   \endlist
 
@@ -345,24 +345,24 @@ QXmlQuery &QXmlQuery::operator=(const QXmlQuery &other)
 
   \table
   \header
-    \o message() argument
-    \o Semantics
+    \li message() argument
+    \li Semantics
   \row
-    \o QtMsgType type
-    \o Only QtWarningMsg and QtFatalMsg are used. The former
+    \li QtMsgType type
+    \li Only QtWarningMsg and QtFatalMsg are used. The former
        identifies a compile or runtime warning, while the
        latter identifies a dynamic or static error.
   \row
-    \o const QString & description
-    \o An XHTML document which is the actual message. It is translated
+    \li const QString & description
+    \li An XHTML document which is the actual message. It is translated
        into the current language.
   \row
-    \o const QUrl &identifier
-    \o Identifies the error with a URI, where the fragment is
+    \li const QUrl &identifier
+    \li Identifies the error with a URI, where the fragment is
        the error code, and the rest of the URI is the error namespace.
   \row
-    \o const QSourceLocation & sourceLocation
-    \o Identifies where the error occurred.
+    \li const QSourceLocation & sourceLocation
+    \li Identifies where the error occurred.
   \endtable
 
  */
diff --git a/src/xmlpatterns/api/qxmlschema.cpp b/src/xmlpatterns/api/qxmlschema.cpp
index d3850c0..a1dfe7a 100644
--- a/src/xmlpatterns/api/qxmlschema.cpp
+++ b/src/xmlpatterns/api/qxmlschema.cpp
@@ -216,23 +216,23 @@ QUrl QXmlSchema::documentUri() const
 
   \table
   \header
-    \o message() argument
-    \o Semantics
+    \li message() argument
+    \li Semantics
   \row
-    \o QtMsgType type
-    \o Only QtWarningMsg and QtFatalMsg are used. The former
+    \li QtMsgType type
+    \li Only QtWarningMsg and QtFatalMsg are used. The former
        identifies a warning, while the latter identifies an error.
   \row
-    \o const QString & description
-    \o An XHTML document which is the actual message. It is translated
+    \li const QString & description
+    \li An XHTML document which is the actual message. It is translated
        into the current language.
   \row
-    \o const QUrl &identifier
-    \o Identifies the error with a URI, where the fragment is
+    \li const QUrl &identifier
+    \li Identifies the error with a URI, where the fragment is
        the error code, and the rest of the URI is the error namespace.
   \row
-    \o const QSourceLocation & sourceLocation
-    \o Identifies where the error occurred.
+    \li const QSourceLocation & sourceLocation
+    \li Identifies where the error occurred.
   \endtable
 
  */
diff --git a/src/xmlpatterns/api/qxmlschemavalidator.cpp b/src/xmlpatterns/api/qxmlschemavalidator.cpp
index 2af6bae..ed867f9 100644
--- a/src/xmlpatterns/api/qxmlschemavalidator.cpp
+++ b/src/xmlpatterns/api/qxmlschemavalidator.cpp
@@ -254,23 +254,23 @@ QXmlSchema QXmlSchemaValidator::schema() const
 
   \table
   \header
-    \o message() argument
-    \o Semantics
+    \li message() argument
+    \li Semantics
   \row
-    \o QtMsgType type
-    \o Only QtWarningMsg and QtFatalMsg are used. The former
+    \li QtMsgType type
+    \li Only QtWarningMsg and QtFatalMsg are used. The former
        identifies a warning, while the latter identifies an error.
   \row
-    \o const QString & description
-    \o An XHTML document which is the actual message. It is translated
+    \li const QString & description
+    \li An XHTML document which is the actual message. It is translated
        into the current language.
   \row
-    \o const QUrl &identifier
-    \o Identifies the error with a URI, where the fragment is
+    \li const QUrl &identifier
+    \li Identifies the error with a URI, where the fragment is
        the error code, and the rest of the URI is the error namespace.
   \row
-    \o const QSourceLocation & sourceLocation
-    \o Identifies where the error occurred.
+    \li const QSourceLocation & sourceLocation
+    \li Identifies where the error occurred.
   \endtable
 
  */
diff --git a/src/xmlpatterns/api/qxmlserializer.cpp b/src/xmlpatterns/api/qxmlserializer.cpp
index a50b161..ea77756 100644
--- a/src/xmlpatterns/api/qxmlserializer.cpp
+++ b/src/xmlpatterns/api/qxmlserializer.cpp
@@ -116,14 +116,14 @@ QXmlSerializerPrivate::QXmlSerializerPrivate(const QXmlQuery &query,
   QXmlSerializer will:
 
   \list
-  \o Declare namespaces when needed,
+  \li Declare namespaces when needed,
 
-  \o Use appropriate escaping, when characters can't be
+  \li Use appropriate escaping, when characters can't be
   represented in the XML,
 
-  \o Handle line endings appropriately,
+  \li Handle line endings appropriately,
 
-  \o Report errors, when it can't serialize the content, e.g.,
+  \li Report errors, when it can't serialize the content, e.g.,
   when asked to serialize an attribute that is a top-level node,
   or when more than one top-level element is encountered.
 
diff --git a/tools/xmlpatterns/qapplicationargument.cpp b/tools/xmlpatterns/qapplicationargument.cpp
index a487350..d400a59 100644
--- a/tools/xmlpatterns/qapplicationargument.cpp
+++ b/tools/xmlpatterns/qapplicationargument.cpp
@@ -59,23 +59,23 @@ QT_BEGIN_NAMESPACE
 
  \table
    \header
-        \o Characteristic
-        \o Functions
+        \li Characteristic
+        \li Functions
     \row
-        \o A name. For instance, "backend"
-        \o setName() and name()
+        \li A name. For instance, "backend"
+        \li setName() and name()
     \row
-        \o A description, for human consumption.
-        \o setDescription() and description()
+        \li A description, for human consumption.
+        \li setDescription() and description()
     \row
-        \o How many times the argument can occur. For instance, whether the argument is optional or not.
-        \o setMinimumOccurrence() & minimumOccurrence(), setMaximumOccurrence() & maximumOccurrence()
+        \li How many times the argument can occur. For instance, whether the argument is optional or not.
+        \li setMinimumOccurrence() & minimumOccurrence(), setMaximumOccurrence() & maximumOccurrence()
     \row
-        \o The type of the argument's value, if it has one. For instance, \c int or \c bool.
-        \o setType() and type()
+        \li The type of the argument's value, if it has one. For instance, \c int or \c bool.
+        \li setType() and type()
     \row
-        \o The value that should be used in case the argument isn't used.
-        \o setDefaultValue() and defaultValue()
+        \li The value that should be used in case the argument isn't used.
+        \li setDefaultValue() and defaultValue()
  \endtable
 
  \sa QApplicationArgumentParser
diff --git a/tools/xmlpatterns/qapplicationargumentparser.cpp b/tools/xmlpatterns/qapplicationargumentparser.cpp
index 0e2e4ed..62bd3e2 100644
--- a/tools/xmlpatterns/qapplicationargumentparser.cpp
+++ b/tools/xmlpatterns/qapplicationargumentparser.cpp
@@ -65,13 +65,13 @@ QT_BEGIN_NAMESPACE
  QApplicationArgumentParser simplifies writing command line applications by taking care of:
 
  \list
-    \o Generating help and version arguments
-    \o Taking care of converting arguments to QVariant types, since each argument
+    \li Generating help and version arguments
+    \li Taking care of converting arguments to QVariant types, since each argument
        has a type: QApplicationArgument::type()
-    \o Validates the command line such that the user operates on well-defined input. For instance,
+    \li Validates the command line such that the user operates on well-defined input. For instance,
        that the argument is a valid integer if that is the case, that an argument does not
        occur more times than allowed, and so on.
-    \o Allows customization through sub-classing.
+    \li Allows customization through sub-classing.
  \endlist
 
  The user declares what arguments that can be given to the application with QApplicationArgument. Provided
@@ -107,12 +107,12 @@ QT_BEGIN_NAMESPACE
  parse(). It would do the following:
 
  \list
-    \o Call input() to retrieve the strings the user specified on the command line.
-    \o Call declaredArguments() to retrieve the arguments that the implementor has
+    \li Call input() to retrieve the strings the user specified on the command line.
+    \li Call declaredArguments() to retrieve the arguments that the implementor has
        decided can be specified.
-    \o Parse and validate the input. Salt and pepper as per taste.
-    \o If an error occurred, call setExitCode() and return \c false.
-    \o Otherwise, call setExitCode(Success), provide access to the
+    \li Parse and validate the input. Salt and pepper as per taste.
+    \li If an error occurred, call setExitCode() and return \c false.
+    \li Otherwise, call setExitCode(Success), provide access to the
        arguments by calling setUsedArguments(), and return \c true. If a
        help message was requested, call setExitCode(Success) and return \c false.
  \endlist