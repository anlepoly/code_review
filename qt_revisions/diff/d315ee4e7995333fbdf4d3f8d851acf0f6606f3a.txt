diff --git a/src/plugins/sensors/simulator/qsensordata_simulator.cpp b/src/plugins/sensors/simulator/qsensordata_simulator.cpp
index 0cf70d4..de001d6 100644
--- a/src/plugins/sensors/simulator/qsensordata_simulator.cpp
+++ b/src/plugins/sensors/simulator/qsensordata_simulator.cpp
@@ -65,7 +65,7 @@ QDataStream &operator>>(QDataStream &in, QAmbientLightReadingData &s)
 {
     qint32 lightLevel;
     in >> lightLevel >> s.timestamp;
-    s.lightLevel = static_cast<QAmbientLightReading::LightLevel>(lightLevel);
+    s.lightLevel = static_cast<SimulatorLightLevel>(lightLevel);
     return in;
 }
 
diff --git a/src/plugins/sensors/simulator/qsensordata_simulator_p.h b/src/plugins/sensors/simulator/qsensordata_simulator_p.h
index cec91ca..af92444 100644
--- a/src/plugins/sensors/simulator/qsensordata_simulator_p.h
+++ b/src/plugins/sensors/simulator/qsensordata_simulator_p.h
@@ -53,15 +53,23 @@
 // We mean it.
 //
 
-#include <qambientlightsensor.h>
 #include <QtCore/QMetaType>
 #include <QtCore/QDateTime>
 
 namespace QtMobility {
 
+enum SimulatorLightLevel {
+    Undefined = 0,
+    Dark,
+    Twilight,
+    Light,
+    Bright,
+    Sunny
+};
+
 struct QAmbientLightReadingData
 {
-    QAmbientLightReading::LightLevel lightLevel;
+    SimulatorLightLevel lightLevel;
     QDateTime timestamp;
 };
 
diff --git a/src/plugins/sensors/simulator/simulatorambientlightsensor.cpp b/src/plugins/sensors/simulator/simulatorambientlightsensor.cpp
index b36257f..040bc2d 100644
--- a/src/plugins/sensors/simulator/simulatorambientlightsensor.cpp
+++ b/src/plugins/sensors/simulator/simulatorambientlightsensor.cpp
@@ -54,6 +54,28 @@ SimulatorAmbientLightSensor::SimulatorAmbientLightSensor(QSensor *sensor)
 void SimulatorAmbientLightSensor::poll()
 {
     QtMobility::QAmbientLightReadingData data = get_qtAmbientLightData();
+    QAmbientLightReading::LightLevel convertedLightLevel;
+    switch (data.lightLevel) {
+    case QtMobility::Undefined:
+        convertedLightLevel = QAmbientLightReading::Undefined;
+        break;
+    case QtMobility::Dark:
+        convertedLightLevel = QAmbientLightReading::Dark;
+        break;
+    case QtMobility::Twilight:
+        convertedLightLevel = QAmbientLightReading::Twilight;
+        break;
+    case QtMobility::Light:
+        convertedLightLevel = QAmbientLightReading::Light;
+        break;
+    case QtMobility::Bright:
+        convertedLightLevel = QAmbientLightReading::Bright;
+        break;
+    case QtMobility::Sunny:
+        convertedLightLevel = QAmbientLightReading::Sunny;
+        break;
+    }
+
     quint64 newTimestamp;
     if (!data.timestamp.isValid())
         newTimestamp = QDateTime::currentDateTime().toTime_t();