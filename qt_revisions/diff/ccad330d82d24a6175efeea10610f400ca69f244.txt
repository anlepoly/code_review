diff --git a/src/assistant/assistant/openpageswidget.cpp b/src/assistant/assistant/openpageswidget.cpp
index 57d1a82..b2cdb11 100644
--- a/src/assistant/assistant/openpageswidget.cpp
+++ b/src/assistant/assistant/openpageswidget.cpp
@@ -106,8 +106,8 @@ OpenPagesWidget::OpenPagesWidget(OpenPagesModel *model)
 
     header()->hide();
     header()->setStretchLastSection(false);
-    header()->setResizeMode(0, QHeaderView::Stretch);
-    header()->setResizeMode(1, QHeaderView::Fixed);
+    header()->setSectionResizeMode(0, QHeaderView::Stretch);
+    header()->setSectionResizeMode(1, QHeaderView::Fixed);
     header()->resizeSection(1, 18);
 
     installEventFilter(this);
diff --git a/src/designer/src/components/objectinspector/objectinspector.cpp b/src/designer/src/components/objectinspector/objectinspector.cpp
index d502ccc..45aad7c 100644
--- a/src/designer/src/components/objectinspector/objectinspector.cpp
+++ b/src/designer/src/components/objectinspector/objectinspector.cpp
@@ -255,7 +255,7 @@ ObjectInspector::ObjectInspectorPrivate::ObjectInspectorPrivate(QDesignerFormEdi
     m_treeView->setModel(m_model);
     m_treeView->setItemDelegate(new ObjectInspectorDelegate);
     m_treeView->setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOn);
-    m_treeView->header()->setResizeMode(1, QHeaderView::Stretch);
+    m_treeView->header()->setSectionResizeMode(1, QHeaderView::Stretch);
     m_treeView->setSelectionMode(QAbstractItemView::ExtendedSelection);
     m_treeView->setAlternatingRowColors(true);
     m_treeView->setTextElideMode (Qt::ElideMiddle);
diff --git a/src/designer/src/components/taskmenu/treewidgeteditor.cpp b/src/designer/src/components/taskmenu/treewidgeteditor.cpp
index 17e68c5..45d0d4c 100644
--- a/src/designer/src/components/taskmenu/treewidgeteditor.cpp
+++ b/src/designer/src/components/taskmenu/treewidgeteditor.cpp
@@ -85,7 +85,7 @@ TreeWidgetEditor::TreeWidgetEditor(QDesignerFormWindowInterface *form, QDialog *
     ui.moveItemRightButton->setIcon(createIconSet(QString::fromUtf8("leveldown.png")));
     ui.moveItemLeftButton->setIcon(createIconSet(QString::fromUtf8("levelup.png")));
 
-    ui.treeWidget->header()->setMovable(false);
+    ui.treeWidget->header()->setSectionsMovable(false);
 
     connect(ui.newItemButton, SIGNAL(clicked()), this, SLOT(on_newItemButton_clicked()));
     connect(ui.newSubItemButton, SIGNAL(clicked()), this, SLOT(on_newSubItemButton_clicked()));
diff --git a/src/linguist/linguist/mainwindow.cpp b/src/linguist/linguist/mainwindow.cpp
index aef6208..f08bd16 100644
--- a/src/linguist/linguist/mainwindow.cpp
+++ b/src/linguist/linguist/mainwindow.cpp
@@ -309,7 +309,7 @@ MainWindow::MainWindow()
     m_contextView->setSortingEnabled(true);
     m_contextView->setWhatsThis(tr("This panel lists the source contexts."));
     m_contextView->setModel(m_sortedContextsModel);
-    m_contextView->header()->setMovable(false);
+    m_contextView->header()->setSectionsMovable(false);
     m_contextView->setColumnHidden(0, true);
     m_contextView->header()->setStretchLastSection(false);
 
@@ -337,7 +337,7 @@ MainWindow::MainWindow()
     m_messageView->setAllColumnsShowFocus(true);
     m_messageView->setItemsExpandable(false);
     m_messageView->setModel(m_sortedMessagesModel);
-    m_messageView->header()->setMovable(false);
+    m_messageView->header()->setSectionsMovable(false);
     m_messageView->setColumnHidden(0, true);
 
     m_messagesDock->setWidget(m_messageView);
@@ -514,8 +514,8 @@ MainWindow::~MainWindow()
 
 void MainWindow::initViewHeaders()
 {
-    m_contextView->header()->setResizeMode(1, QHeaderView::Stretch);
-    m_contextView->header()->setResizeMode(2, QHeaderView::ResizeToContents);
+    m_contextView->header()->setSectionResizeMode(1, QHeaderView::Stretch);
+    m_contextView->header()->setSectionResizeMode(2, QHeaderView::ResizeToContents);
     m_messageView->setColumnHidden(2, true);
     // last visible column auto-stretches
 }
@@ -525,10 +525,10 @@ void MainWindow::modelCountChanged()
     int mc = m_dataModel->modelCount();
 
     for (int i = 0; i < mc; ++i) {
-        m_contextView->header()->setResizeMode(i + 1, QHeaderView::Fixed);
+        m_contextView->header()->setSectionResizeMode(i + 1, QHeaderView::Fixed);
         m_contextView->header()->resizeSection(i + 1, 24);
 
-        m_messageView->header()->setResizeMode(i + 1, QHeaderView::Fixed);
+        m_messageView->header()->setSectionResizeMode(i + 1, QHeaderView::Fixed);
         m_messageView->header()->resizeSection(i + 1, 24);
     }
 
diff --git a/src/linguist/linguist/messagemodel.cpp b/src/linguist/linguist/messagemodel.cpp
index bef0cea..bd997ae 100644
--- a/src/linguist/linguist/messagemodel.cpp
+++ b/src/linguist/linguist/messagemodel.cpp
@@ -804,13 +804,14 @@ void MultiDataModel::close(int model)
 
 void MultiDataModel::closeAll()
 {
+    m_msgModel->beginResetModel();
     m_numFinished = 0;
     m_numEditable = 0;
     m_numMessages = 0;
     qDeleteAll(m_dataModels);
     m_dataModels.clear();
     m_multiContextList.clear();
-    m_msgModel->reset();
+    m_msgModel->endResetModel();
     emit allModelsDeleted();
     onModifiedChanged();
 }
diff --git a/src/linguist/linguist/messagemodel.h b/src/linguist/linguist/messagemodel.h
index d5fd9df..29bfe89 100644
--- a/src/linguist/linguist/messagemodel.h
+++ b/src/linguist/linguist/messagemodel.h
@@ -519,7 +519,6 @@ public:
     QModelIndex modelIndex(const MultiDataIndex &index);
 
 private slots:
-    void reset() { QAbstractItemModel::reset(); }
     void multiContextItemChanged(const MultiDataIndex &index);
     void contextItemChanged(const MultiDataIndex &index);
     void messageItemChanged(const MultiDataIndex &index);
diff --git a/src/linguist/linguist/phrasemodel.cpp b/src/linguist/linguist/phrasemodel.cpp
index 4f96344..a87ae42 100644
--- a/src/linguist/linguist/phrasemodel.cpp
+++ b/src/linguist/linguist/phrasemodel.cpp
@@ -47,8 +47,9 @@ void PhraseModel::removePhrases()
 {
     int r = plist.count();
     if (r > 0) {
+        beginResetModel();
         plist.clear();
-        reset();
+        endResetModel();
     }
 }
 
diff --git a/src/linguist/linguist/phraseview.cpp b/src/linguist/linguist/phraseview.cpp
index 8f91358..85c703c 100644
--- a/src/linguist/linguist/phraseview.cpp
+++ b/src/linguist/linguist/phraseview.cpp
@@ -87,7 +87,7 @@ PhraseView::PhraseView(MultiDataModel *model, QList<QHash<QString, QList<Phrase
         (void) new GuessShortcut(i, this, SLOT(guessShortcut(int)));
 
     header()->setResizeMode(QHeaderView::Interactive);
-    header()->setClickable(true);
+    header()->setSectionsClickable(true);
     header()->restoreState(QSettings().value(phraseViewHeaderKey()).toByteArray());
 
     connect(this, SIGNAL(activated(QModelIndex)), this, SLOT(selectPhrase(QModelIndex)));
@@ -235,7 +235,7 @@ void PhraseView::setSourceText(int model, const QString &sourceText)
         foreach (const Candidate &candidate, cl) {
             QString def;
             if (n < 9)
-                def = tr("Guess (%1)").arg(QString(QKeySequence(Qt::CTRL | (Qt::Key_0 + (n + 1)))));
+                def = tr("Guess (%1)").arg(QKeySequence(Qt::CTRL | (Qt::Key_0 + (n + 1))).toString(QKeySequence::NativeText));
             else
                 def = tr("Guess");
             Phrase *guess = new Phrase(candidate.source, candidate.target, def, n);
diff --git a/src/shared/qtpropertybrowser/qttreepropertybrowser.cpp b/src/shared/qtpropertybrowser/qttreepropertybrowser.cpp
index 281c313..edc847b 100644
--- a/src/shared/qtpropertybrowser/qttreepropertybrowser.cpp
+++ b/src/shared/qtpropertybrowser/qttreepropertybrowser.cpp
@@ -447,7 +447,7 @@ void QtTreePropertyBrowserPrivate::init(QWidget *parent)
     m_delegate = new QtPropertyEditorDelegate(parent);
     m_delegate->setEditorPrivate(this);
     m_treeWidget->setItemDelegate(m_delegate);
-    m_treeWidget->header()->setMovable(false);
+    m_treeWidget->header()->setSectionsMovable(false);
     m_treeWidget->header()->setResizeMode(QHeaderView::Stretch);
 
     m_expandIcon = drawIndicatorIcon(q_ptr->palette(), q_ptr->style());