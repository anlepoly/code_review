diff --git a/tests/auto/qtquick1/qdeclarativetextedit/tst_qdeclarativetextedit.cpp b/tests/auto/qtquick1/qdeclarativetextedit/tst_qdeclarativetextedit.cpp
index e3979d0..d98fb99 100644
--- a/tests/auto/qtquick1/qdeclarativetextedit/tst_qdeclarativetextedit.cpp
+++ b/tests/auto/qtquick1/qdeclarativetextedit/tst_qdeclarativetextedit.cpp
@@ -59,6 +59,7 @@
 #include <private/qapplication_p.h>
 #include <private/qwidgettextcontrol_p.h>
 #include <private/qinputpanel_p.h>
+#include "../../shared/platforminputcontext.h"
 
 
 Q_DECLARE_METATYPE(QDeclarative1TextEdit::SelectionMode)
@@ -88,59 +89,6 @@ void sendPreeditText(const QString &text, int cursor)
     QApplication::sendEvent(qApp->inputPanel()->inputItem(), &event);
 }
 
-class PlatformInputContext : public QPlatformInputContext
-{
-public:
-    PlatformInputContext()
-        : m_visible(false), m_action(QInputPanel::Click), m_cursorPosition(0),
-          m_invokeActionCallCount(0), m_showInputPanelCallCount(0), m_hideInputPanelCallCount(0),
-          m_updateCallCount(0)
-    {
-    }
-
-    virtual void showInputPanel()
-    {
-        m_visible = true;
-        m_showInputPanelCallCount++;
-    }
-    virtual void hideInputPanel()
-    {
-        m_visible = false;
-        m_hideInputPanelCallCount++;
-    }
-    virtual bool isInputPanelVisible() const
-    {
-        return m_visible;
-    }
-    virtual void invokeAction(QInputPanel::Action action, int cursorPosition)
-    {
-        m_invokeActionCallCount++;
-        m_action = action;
-        m_cursorPosition = cursorPosition;
-    }
-    virtual void update(Qt::InputMethodQueries)
-    {
-        m_updateCallCount++;
-    }
-
-    void clear() {
-        m_cursorPosition = 0;
-        m_invokeActionCallCount = 0;
-        m_visible = false;
-        m_showInputPanelCallCount = 0;
-        m_hideInputPanelCallCount = 0;
-        m_updateCallCount = 0;
-    }
-
-    bool m_visible;
-    QInputPanel::Action m_action;
-    int m_cursorPosition;
-    int m_invokeActionCallCount;
-    int m_showInputPanelCallCount;
-    int m_hideInputPanelCallCount;
-    int m_updateCallCount;
-};
-
 
 class tst_qdeclarativetextedit : public QObject
 
diff --git a/tests/auto/qtquick1/qdeclarativetextinput/tst_qdeclarativetextinput.cpp b/tests/auto/qtquick1/qdeclarativetextinput/tst_qdeclarativetextinput.cpp
index aaee4ec..f13cbf4 100644
--- a/tests/auto/qtquick1/qdeclarativetextinput/tst_qdeclarativetextinput.cpp
+++ b/tests/auto/qtquick1/qdeclarativetextinput/tst_qdeclarativetextinput.cpp
@@ -51,6 +51,7 @@
 #include <QtCore/qmath.h>
 #include <private/qapplication_p.h>
 #include <private/qinputpanel_p.h>
+#include "../../shared/platforminputcontext.h"
 
 #include "qplatformdefs.h"
 
@@ -82,60 +83,6 @@ void sendPreeditText(const QString &text, int cursor)
 }
 
 
-class PlatformInputContext : public QPlatformInputContext
-{
-public:
-    PlatformInputContext()
-        : m_visible(false), m_action(QInputPanel::Click), m_cursorPosition(0),
-          m_invokeActionCallCount(0), m_showInputPanelCallCount(0), m_hideInputPanelCallCount(0),
-          m_updateCallCount(0)
-    {
-    }
-
-    virtual void showInputPanel()
-    {
-        m_visible = true;
-        m_showInputPanelCallCount++;
-    }
-    virtual void hideInputPanel()
-    {
-        m_visible = false;
-        m_hideInputPanelCallCount++;
-    }
-    virtual bool isInputPanelVisible() const
-    {
-        return m_visible;
-    }
-    virtual void invokeAction(QInputPanel::Action action, int cursorPosition)
-    {
-        m_invokeActionCallCount++;
-        m_action = action;
-        m_cursorPosition = cursorPosition;
-    }
-    virtual void update(Qt::InputMethodQueries)
-    {
-        m_updateCallCount++;
-    }
-
-    void clear() {
-        m_cursorPosition = 0;
-        m_invokeActionCallCount = 0;
-        m_visible = false;
-        m_showInputPanelCallCount = 0;
-        m_hideInputPanelCallCount = 0;
-        m_updateCallCount = 0;
-    }
-
-    bool m_visible;
-    QInputPanel::Action m_action;
-    int m_cursorPosition;
-    int m_invokeActionCallCount;
-    int m_showInputPanelCallCount;
-    int m_hideInputPanelCallCount;
-    int m_updateCallCount;
-};
-
-
 class tst_qdeclarativetextinput : public QObject
 
 {
diff --git a/tests/auto/qtquick2/qquicktextedit/tst_qquicktextedit.cpp b/tests/auto/qtquick2/qquicktextedit/tst_qquicktextedit.cpp
index 075eacb..e5c4640 100644
--- a/tests/auto/qtquick2/qquicktextedit/tst_qquicktextedit.cpp
+++ b/tests/auto/qtquick2/qquicktextedit/tst_qquicktextedit.cpp
@@ -60,7 +60,7 @@
 #include <QMimeData>
 #include <private/qquicktextcontrol_p.h>
 #include "../../shared/util.h"
-#include <qplatforminputcontext_qpa.h>
+#include "../../shared/platforminputcontext.h"
 #include <private/qinputpanel_p.h>
 
 #ifdef Q_OS_MAC
@@ -2101,27 +2101,6 @@ void tst_qquicktextedit::textInput()
     QCOMPARE(edit->text(), QString("string"));
 }
 
-class PlatformInputContext : public QPlatformInputContext
-{
-public:
-    PlatformInputContext() : m_visible(false) {}
-
-    virtual void showInputPanel()
-    {
-        m_visible = true;
-    }
-    virtual void hideInputPanel()
-    {
-        m_visible = false;
-    }
-    virtual bool isInputPanelVisible() const
-    {
-        return m_visible;
-    }
-
-    bool m_visible;
-};
-
 void tst_qquicktextedit::openInputPanel()
 {
     PlatformInputContext platformInputContext;
diff --git a/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp b/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp
index 10220a6..3319936 100644
--- a/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp
+++ b/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp
@@ -56,14 +56,13 @@
 #include <QStyle>
 #include <QtOpenGL/QGLShaderProgram>
 #include <math.h>
-#include <qplatforminputcontext_qpa.h>
-#include <private/qinputpanel_p.h>
 
 #ifdef Q_OS_MAC
 #include <Carbon/Carbon.h>
 #endif
 
 #include "qplatformdefs.h"
+#include "../../shared/platforminputcontext.h"
 
 Q_DECLARE_METATYPE(QQuickTextInput::SelectionMode)
 DEFINE_BOOL_CONFIG_OPTION(qmlDisableDistanceField, QML_DISABLE_DISTANCEFIELD)
@@ -2294,39 +2293,6 @@ void tst_qquicktextinput::simulateKey(QQuickView *view, int key)
     QGuiApplication::sendEvent(view, &release);
 }
 
-class PlatformInputContext : public QPlatformInputContext
-{
-public:
-    PlatformInputContext()
-        : m_visible(false), m_action(QInputPanel::Click), m_cursorPosition(0),
-          m_invokeActionCallCount(0)
-    {
-    }
-
-    virtual void showInputPanel()
-    {
-        m_visible = true;
-    }
-    virtual void hideInputPanel()
-    {
-        m_visible = false;
-    }
-    virtual bool isInputPanelVisible() const
-    {
-        return m_visible;
-    }
-    virtual void invokeAction(QInputPanel::Action action, int cursorPosition)
-    {
-        m_invokeActionCallCount++;
-        m_action = action;
-        m_cursorPosition = cursorPosition;
-    }
-
-    bool m_visible;
-    QInputPanel::Action m_action;
-    int m_cursorPosition;
-    int m_invokeActionCallCount;
-};
 
 void tst_qquicktextinput::openInputPanel()
 {
diff --git a/tests/auto/shared/platforminputcontext.h b/tests/auto/shared/platforminputcontext.h
new file mode 100644
index 0000000..3a9813e
--- /dev/null
+++ b/tests/auto/shared/platforminputcontext.h
@@ -0,0 +1,96 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the test suite of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+#include <qplatforminputcontext_qpa.h>
+#include <QtGui/QInputPanel>
+
+class PlatformInputContext : public QPlatformInputContext
+{
+public:
+    PlatformInputContext()
+        : m_visible(false), m_action(QInputPanel::Click), m_cursorPosition(0),
+          m_invokeActionCallCount(0), m_showInputPanelCallCount(0), m_hideInputPanelCallCount(0),
+          m_updateCallCount(0)
+    {
+    }
+
+    virtual void showInputPanel()
+    {
+        m_visible = true;
+        m_showInputPanelCallCount++;
+    }
+    virtual void hideInputPanel()
+    {
+        m_visible = false;
+        m_hideInputPanelCallCount++;
+    }
+    virtual bool isInputPanelVisible() const
+    {
+        return m_visible;
+    }
+    virtual void invokeAction(QInputPanel::Action action, int cursorPosition)
+    {
+        m_invokeActionCallCount++;
+        m_action = action;
+        m_cursorPosition = cursorPosition;
+    }
+    virtual void update(Qt::InputMethodQueries)
+    {
+        m_updateCallCount++;
+    }
+
+    void clear() {
+        m_cursorPosition = 0;
+        m_invokeActionCallCount = 0;
+        m_visible = false;
+        m_showInputPanelCallCount = 0;
+        m_hideInputPanelCallCount = 0;
+        m_updateCallCount = 0;
+    }
+
+    bool m_visible;
+    QInputPanel::Action m_action;
+    int m_cursorPosition;
+    int m_invokeActionCallCount;
+    int m_showInputPanelCallCount;
+    int m_hideInputPanelCallCount;
+    int m_updateCallCount;
+};