diff --git a/src/corelib/kernel/qeventdispatcher_win.cpp b/src/corelib/kernel/qeventdispatcher_win.cpp
index 26fd631..8d357b5 100644
--- a/src/corelib/kernel/qeventdispatcher_win.cpp
+++ b/src/corelib/kernel/qeventdispatcher_win.cpp
@@ -582,7 +582,7 @@ void QEventDispatcherWin32Private::doWsaAsyncSelect(int socket)
         sn_event |= FD_OOB;
     // BoundsChecker may emit a warning for WSAAsyncSelect when sn_event == 0
     // This is a BoundsChecker bug and not a Qt bug
-    WSAAsyncSelect(socket, internalHwnd, sn_event ? WM_QT_SOCKETNOTIFIER : 0, sn_event);
+    WSAAsyncSelect(socket, internalHwnd, sn_event ? int(WM_QT_SOCKETNOTIFIER) : 0, sn_event);
 }
 
 void QEventDispatcherWin32::createInternalHwnd()
@@ -733,7 +733,7 @@ bool QEventDispatcherWin32::processEvents(QEventLoop::ProcessEventsFlags flags)
                     TranslateMessage(&msg);
                     DispatchMessage(&msg);
                 }
-            } else if (waitRet >= WAIT_OBJECT_0 && waitRet < WAIT_OBJECT_0 + nCount) {
+            } else if (waitRet - WAIT_OBJECT_0 < nCount) {
                 d->activateEventNotifier(d->winEventNotifierList.at(waitRet - WAIT_OBJECT_0));
             } else {
                 // nothing todo so break
@@ -755,7 +755,7 @@ bool QEventDispatcherWin32::processEvents(QEventLoop::ProcessEventsFlags flags)
             emit aboutToBlock();
             waitRet = MsgWaitForMultipleObjectsEx(nCount, pHandles, INFINITE, QS_ALLINPUT, MWMO_ALERTABLE | MWMO_INPUTAVAILABLE);
             emit awake();
-            if (waitRet >= WAIT_OBJECT_0 && waitRet < WAIT_OBJECT_0 + nCount) {
+            if (waitRet - WAIT_OBJECT_0 < nCount) {
                 d->activateEventNotifier(d->winEventNotifierList.at(waitRet - WAIT_OBJECT_0));
                 retVal = true;
             }
@@ -858,7 +858,7 @@ void QEventDispatcherWin32::registerTimer(int timerId, int interval, Qt::TimerTy
 
     Q_D(QEventDispatcherWin32);
 
-    register WinTimerInfo *t = new WinTimerInfo;
+    WinTimerInfo *t = new WinTimerInfo;
     t->dispatcher = this;
     t->timerId  = timerId;
     t->interval = interval;