diff --git a/tests/auto/unit/qcamera/tst_qcamera.cpp b/tests/auto/unit/qcamera/tst_qcamera.cpp
index 08bd953..565a8c2 100644
--- a/tests/auto/unit/qcamera/tst_qcamera.cpp
+++ b/tests/auto/unit/qcamera/tst_qcamera.cpp
@@ -475,10 +475,7 @@ void tst_QCamera::testCameraCapture()
 
     imageCapture.capture(QString::fromLatin1("/dev/null"));
 
-    for (int i=0; i<100 && capturedSignal.isEmpty(); i++)
-        QTest::qWait(10);
-
-    QCOMPARE(capturedSignal.size(), 1);
+    QTRY_COMPARE(capturedSignal.size(), 1);
     QCOMPARE(errorSignal.size(), 0);
     QCOMPARE(imageCapture.error(), QCameraImageCapture::NoError);
 }
@@ -494,10 +491,7 @@ void tst_QCamera::testCameraCaptureMetadata()
     camera.start();
     int id = imageCapture.capture(QString::fromLatin1("/dev/null"));
 
-    for (int i=0; i<100 && savedSignal.isEmpty(); i++)
-        QTest::qWait(10);
-
-    QCOMPARE(savedSignal.size(), 1);
+    QTRY_COMPARE(savedSignal.size(), 1);
 
     QCOMPARE(metadataSignal.size(), 3);
 
@@ -885,10 +879,7 @@ void tst_QCamera::testCameraLock()
     lockFailedSignal.clear();
     lockStatusChangedSignal.clear();
 
-    for (int i=0; i<200 && camera.lockStatus() == QCamera::Searching; i++)
-        QTest::qWait(10);
-
-    QCOMPARE(camera.lockStatus(), QCamera::Locked);
+    QTRY_COMPARE(camera.lockStatus(), QCamera::Locked);
     QCOMPARE(lockedSignal.count(), 1);
     QCOMPARE(lockFailedSignal.count(), 0);
     QCOMPARE(lockStatusChangedSignal.count(), 1);
diff --git a/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp b/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
index 7131595..220bb20 100644
--- a/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
+++ b/tests/auto/unit/qmediarecorder/tst_qmediarecorder.cpp
@@ -718,8 +718,7 @@ void tst_QMediaRecorder::testSettingsApplied()
     //the settings are applied in the next event loop
     QMediaRecorder recorder(&object);
     QCOMPARE(recorderControl.m_settingAppliedCount, 0);
-    QTest::qWait(10);
-    QCOMPARE(recorderControl.m_settingAppliedCount, 1);
+    QTRY_COMPARE(recorderControl.m_settingAppliedCount, 1);
 
     QVideoEncoderSettings videoSettings;
     videoSettings.setResolution(640,480);
@@ -732,8 +731,7 @@ void tst_QMediaRecorder::testSettingsApplied()
     recorder.setContainerFormat("mkv");
 
     QCOMPARE(recorderControl.m_settingAppliedCount, 1);
-    QTest::qWait(10);
-    QCOMPARE(recorderControl.m_settingAppliedCount, 2);
+    QTRY_COMPARE(recorderControl.m_settingAppliedCount, 2);
 
     //encoder settings are applied before recording if changed
     audioSettings.setQuality(QtMultimedia::VeryHighQuality);
diff --git a/tests/auto/unit/qvideowidget/tst_qvideowidget.cpp b/tests/auto/unit/qvideowidget/tst_qvideowidget.cpp
index 5d08a57..59816b4 100644
--- a/tests/auto/unit/qvideowidget/tst_qvideowidget.cpp
+++ b/tests/auto/unit/qvideowidget/tst_qvideowidget.cpp
@@ -1554,10 +1554,7 @@ void tst_QVideoWidget::paintRendererControl()
     QCOMPARE(surface->isActive(), true);
     QCOMPARE(surface->isReady(), false);
 
-    //wait up to 2 seconds for the frame to be presented
-    for (int i=0; i<200 && !surface->isReady(); i++)
-        QTest::qWait(10);
-
+    QTRY_COMPARE(surface->isReady(), true);
     QCOMPARE(surface->isActive(), true);
     QCOMPARE(surface->isReady(), true);
 }