diff --git a/src/corelib/codecs/qtextcodec.cpp b/src/corelib/codecs/qtextcodec.cpp
index 203560d..d42d29d 100644
--- a/src/corelib/codecs/qtextcodec.cpp
+++ b/src/corelib/codecs/qtextcodec.cpp
@@ -583,9 +583,9 @@ QTextCodec* QTextCodec::codecForMib(int mib)
 
 #ifdef QT_USE_ICU
     return QIcuCodec::codecForMibUnlocked(mib);
-#endif
-
+#else
     return 0;
+#endif
 }
 
 /*!
diff --git a/src/corelib/global/qlibraryinfo.cpp b/src/corelib/global/qlibraryinfo.cpp
index 3f01425..ccf0718 100644
--- a/src/corelib/global/qlibraryinfo.cpp
+++ b/src/corelib/global/qlibraryinfo.cpp
@@ -250,8 +250,9 @@ QLibraryInfo::isDebugBuild()
 {
 #ifdef QT_DEBUG
     return true;
-#endif
+#else
     return false;
+#endif
 }
 
 #endif // QT_BOOTSTRAPPED
diff --git a/src/gui/painting/qtextureglyphcache.cpp b/src/gui/painting/qtextureglyphcache.cpp
index ed0e92e..43243b7 100644
--- a/src/gui/painting/qtextureglyphcache.cpp
+++ b/src/gui/painting/qtextureglyphcache.cpp
@@ -275,10 +275,7 @@ QImage QTextureGlyphCache::textureMapForGlyph(glyph_t g, QFixed subPixelPosition
 {
     if (m_type == QFontEngineGlyphCache::Raster_RGBMask)
         return m_current_fontengine->alphaRGBMapForGlyph(g, subPixelPosition, m_transform);
-    else
-        return m_current_fontengine->alphaMapForGlyph(g, subPixelPosition, m_transform);
-
-    return QImage();
+    return m_current_fontengine->alphaMapForGlyph(g, subPixelPosition, m_transform);
 }
 
 /************************************************************************
diff --git a/src/widgets/kernel/qapplication_qpa.cpp b/src/widgets/kernel/qapplication_qpa.cpp
index 62e4904..6b04c18 100644
--- a/src/widgets/kernel/qapplication_qpa.cpp
+++ b/src/widgets/kernel/qapplication_qpa.cpp
@@ -387,7 +387,6 @@ bool QApplication::isEffectEnabled(Qt::UIEffect effect)
     return QColormap::instance().depth() >= 16
            && (QApplicationPrivate::enabledAnimations & QPlatformTheme::GeneralUiEffect)
            && (QApplicationPrivate::enabledAnimations & uiEffectToFlag(effect));
-        return false;
 }
 
 QWidget *QApplication::topLevelAt(const QPoint &pos)