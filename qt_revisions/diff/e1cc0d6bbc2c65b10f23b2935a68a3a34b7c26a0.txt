diff --git a/src/corelib/tools/qstringbuilder.h b/src/corelib/tools/qstringbuilder.h
index 0fd164c..e34425b 100644
--- a/src/corelib/tools/qstringbuilder.h
+++ b/src/corelib/tools/qstringbuilder.h
@@ -167,6 +167,16 @@ template <> struct QConcatenable<QChar> : private QAbstractConcatenable
     { *out++ = c; }
 };
 
+template <> struct QConcatenable<QChar::SpecialCharacter> : private QAbstractConcatenable
+{
+    typedef QChar::SpecialCharacter type;
+    typedef QString ConvertTo;
+    enum { ExactSize = true };
+    static int size(const QChar::SpecialCharacter) { return 1; }
+    static inline void appendTo(const QChar::SpecialCharacter c, QChar *&out)
+    { *out++ = c; }
+};
+
 template <> struct QConcatenable<QCharRef> : private QAbstractConcatenable
 {
     typedef QCharRef type;
diff --git a/tests/auto/corelib/tools/qstringbuilder/qstringbuilder1/stringbuilder.cpp b/tests/auto/corelib/tools/qstringbuilder/qstringbuilder1/stringbuilder.cpp
index afc1607..556b9ac 100644
--- a/tests/auto/corelib/tools/qstringbuilder/qstringbuilder1/stringbuilder.cpp
+++ b/tests/auto/corelib/tools/qstringbuilder/qstringbuilder1/stringbuilder.cpp
@@ -73,6 +73,7 @@ void runScenario()
     QString string(l1string);
     QStringRef stringref(&string, 2, 10);
     QLatin1Char achar('c');
+    QChar::SpecialCharacter special(QChar::Nbsp);
     QString r2(QLatin1String(LITERAL LITERAL));
     QString r3 = QString::fromUtf8(UTF8_LITERAL UTF8_LITERAL);
     QString r;
@@ -97,6 +98,8 @@ void runScenario()
     QCOMPARE(r, QString(string P achar));
     r = achar + string;
     QCOMPARE(r, QString(achar P string));
+    r = special + string;
+    QCOMPARE(r, QString(special P string));
 
 #ifdef Q_COMPILER_UNICODE_STRINGS
     r = QStringLiteral(UNICODE_LITERAL);