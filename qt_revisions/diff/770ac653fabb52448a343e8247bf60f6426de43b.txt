diff --git a/tools/qdoc3/ditaxmlgenerator.cpp b/tools/qdoc3/ditaxmlgenerator.cpp
index af8fa22..951428f 100644
--- a/tools/qdoc3/ditaxmlgenerator.cpp
+++ b/tools/qdoc3/ditaxmlgenerator.cpp
@@ -4377,8 +4377,7 @@ void DitaXmlGenerator::generateDetailedQmlMember(const Node* node,
                 QString attr;
                 int ro = qpn->getReadOnly();
                 if (ro < 0) {
-                    const ClassNode* cn = qpn->declarativeCppNode();
-                    if (cn && !qpn->isWritable(myTree))
+                    if (!qpn->isWritable(myTree))
                         attr = "read-only";
                 }
                 else if (ro > 0)
diff --git a/tools/qdoc3/htmlgenerator.cpp b/tools/qdoc3/htmlgenerator.cpp
index 0db0f5c..1031a71 100644
--- a/tools/qdoc3/htmlgenerator.cpp
+++ b/tools/qdoc3/htmlgenerator.cpp
@@ -4025,8 +4025,7 @@ void HtmlGenerator::generateDetailedQmlMember(const Node *node,
 
                 int ro = qpn->getReadOnly();
                 if (ro < 0) {
-                    const ClassNode* cn = qpn->declarativeCppNode();
-                    if (cn && !qpn->isWritable(myTree)) {
+                    if (!qpn->isWritable(myTree)) {
                         out() << "<span class=\"qmlreadonly\">read-only</span>";
                     }
                 }
diff --git a/tools/qdoc3/qmlvisitor.cpp b/tools/qdoc3/qmlvisitor.cpp
index 6dd835b..5aca1fc 100644
--- a/tools/qdoc3/qmlvisitor.cpp
+++ b/tools/qdoc3/qmlvisitor.cpp
@@ -436,7 +436,7 @@ bool QmlDocVisitor::visit(QDeclarativeJS::AST::UiPublicMember *member)
             if (qmlClass) {
                 QString name = member->name.toString();
                 QmlPropertyNode *qmlPropNode = new QmlPropertyNode(qmlClass, name, type, false);
-                qmlPropNode->setWritable(!member->isReadonlyMember);
+                qmlPropNode->setReadOnly(member->isReadonlyMember);
                 if (member->isDefaultMember)
                     qmlPropNode->setDefault();
                 applyDocumentation(member->firstSourceLocation(), qmlPropNode);