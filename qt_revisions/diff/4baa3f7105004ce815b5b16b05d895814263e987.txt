diff --git a/src/quick/items/qquickwindowmanager.cpp b/src/quick/items/qquickwindowmanager.cpp
index 392085a..2022d24 100644
--- a/src/quick/items/qquickwindowmanager.cpp
+++ b/src/quick/items/qquickwindowmanager.cpp
@@ -135,7 +135,6 @@ extern Q_GUI_EXPORT QImage qt_gl_read_framebuffer(const QSize &size, bool alpha_
   after shouldExit has been set to true.
  */
 
-DEFINE_BOOL_CONFIG_OPTION(qmlFixedAnimationStep, QML_FIXED_ANIMATION_STEP);
 DEFINE_BOOL_CONFIG_OPTION(qmlNoThreadedRenderer, QML_BAD_GUI_RENDER_LOOP);
 DEFINE_BOOL_CONFIG_OPTION(qmlForceThreadedRenderer, QML_FORCE_THREADED_RENDERER); // Might trigger graphics driver threading bugs, use at own risk
 
@@ -332,14 +331,22 @@ QQuickWindowManager *QQuickWindowManager::instance()
 
         theInstance = QSGContext::createWindowManager();
 
-        bool fancy = QGuiApplicationPrivate::platformIntegration()->hasCapability(QPlatformIntegration::BufferQueueingOpenGL)
+        bool bufferQueuing = QGuiApplicationPrivate::platformIntegration()->hasCapability(QPlatformIntegration::BufferQueueingOpenGL);
+        bool fancy = bufferQueuing
             && QGuiApplicationPrivate::platformIntegration()->hasCapability(QPlatformIntegration::ThreadedOpenGL);
         if (qmlNoThreadedRenderer())
             fancy = false;
         else if (qmlForceThreadedRenderer())
             fancy = true;
 
-        if (qmlFixedAnimationStep())
+        // Enable fixed animation steps...
+        QByteArray fixed = qgetenv("QML_FIXED_ANIMATION_STEP");
+        bool fixedAnimationSteps = bufferQueuing;
+        if (fixed == "no")
+            fixedAnimationSteps = false;
+        else if (fixed.length())
+            fixedAnimationSteps = true;
+        if (fixedAnimationSteps)
             QUnifiedTimer::instance(true)->setConsistentTiming(true);
 
         if (!theInstance) {