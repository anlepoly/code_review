diff --git a/src/plugins/sensors/blackberry/bbpressuresensor.cpp b/src/plugins/sensors/blackberry/bbpressuresensor.cpp
new file mode 100644
index 0000000..e14705e
--- /dev/null
+++ b/src/plugins/sensors/blackberry/bbpressuresensor.cpp
@@ -0,0 +1,83 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Research In Motion
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the QtSensors module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+#include "bbpressuresensor.h"
+
+class BbPressureReadingPrivate
+{
+public:
+    BbPressureReadingPrivate()
+        : pressure(0)
+    {
+    }
+
+    qreal pressure;
+};
+
+IMPLEMENT_READING(BbPressureReading)
+
+qreal BbPressureReading::pressure() const
+{
+    return d->pressure;
+}
+
+void BbPressureReading::setPressure(qreal pressure)
+{
+    d->pressure = pressure;
+}
+
+BbPressureSensor::BbPressureSensor(QSensor *sensor)
+    : BbSensorBackend<BbPressureReading>(devicePath(), SENSOR_TYPE_PRESSURE, sensor)
+{
+    setDescription(QLatin1String("Pressure in Pascals"));
+}
+
+QString BbPressureSensor::devicePath()
+{
+    return QLatin1String("/dev/sensor/pressure");
+}
+
+bool BbPressureSensor::updateReadingFromEvent(const sensor_event_t &event, BbPressureReading *reading)
+{
+    // TODO: I was unable to test this since the device I was testing this with did not have
+    //       a pressure sensor. Verify that this works and check that the units are correct.
+    reading->setPressure(event.pressure_s.pressure);
+    return true;
+}
diff --git a/src/plugins/sensors/blackberry/bbpressuresensor.h b/src/plugins/sensors/blackberry/bbpressuresensor.h
new file mode 100644
index 0000000..25f62f0
--- /dev/null
+++ b/src/plugins/sensors/blackberry/bbpressuresensor.h
@@ -0,0 +1,71 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Research In Motion
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the QtSensors module of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+#ifndef BBPRESSURESENSOR_H
+#define BBPRESSURESENSOR_H
+
+#include "bbsensorbackend.h"
+
+class BbPressureReadingPrivate;
+
+class BbPressureReading : public QSensorReading
+{
+    Q_OBJECT
+    Q_PROPERTY(qreal pressure READ pressure)
+    DECLARE_READING(BbPressureReading)
+public:
+    qreal pressure() const;
+    void setPressure(qreal pressure);
+};
+
+class BbPressureSensor : public BbSensorBackend<BbPressureReading>
+{
+    Q_OBJECT
+
+public:
+    explicit BbPressureSensor(QSensor *sensor);
+
+    static QString devicePath();
+
+protected:
+    bool updateReadingFromEvent(const sensor_event_t &event, BbPressureReading *reading);
+};
+
+#endif
diff --git a/src/plugins/sensors/blackberry/blackberry.pro b/src/plugins/sensors/blackberry/blackberry.pro
index 2b849e5..052683e 100644
--- a/src/plugins/sensors/blackberry/blackberry.pro
+++ b/src/plugins/sensors/blackberry/blackberry.pro
@@ -16,6 +16,7 @@ HEADERS += bbsensorbackend.h \
     bblightsensor.h \
     bbmagnetometer.h \
     bborientationsensor.h \
+    bbpressuresensor.h \
     bbproximitysensor.h \
     bbrotationsensor.h \
     bbtemperaturesensor.h \
@@ -29,6 +30,7 @@ SOURCES += bbsensorbackend.cpp \
     bblightsensor.cpp \
     bbmagnetometer.cpp \
     bborientationsensor.cpp \
+    bbpressuresensor.cpp \
     bbproximitysensor.cpp \
     bbrotationsensor.cpp \
     bbtemperaturesensor.cpp \
diff --git a/src/plugins/sensors/blackberry/main.cpp b/src/plugins/sensors/blackberry/main.cpp
index 61ec0cd..0d264e5 100644
--- a/src/plugins/sensors/blackberry/main.cpp
+++ b/src/plugins/sensors/blackberry/main.cpp
@@ -45,6 +45,7 @@
 #include "bblightsensor.h"
 #include "bbmagnetometer.h"
 #include "bborientationsensor.h"
+#include "bbpressuresensor.h"
 #include "bbproximitysensor.h"
 #include "bbrotationsensor.h"
 #include "bbtemperaturesensor.h"
@@ -59,6 +60,7 @@ static const char *bbIRProximitySensorId = "bbIRProximitySensor";
 static const char *bbLightSensorId = "bbLightSensor";
 static const char *bbMagnetometerId = "bbMagnetometer";
 static const char *bbOrientationSensorId = "bbOrientationSensor";
+static const char *bbPressureSensorId = "bbPressureSensor";
 static const char *bbProximitySensorId = "bbProximitySensor";
 static const char *bbRotationSensorId = "bbRotationSensor";
 static const char *bbTemperatureSensorId = "bbTemperatureSensorId";
@@ -86,6 +88,8 @@ public:
             QSensorManager::registerBackend("QMagnetometer", bbMagnetometerId, this);
         if (sensorSupported(BbOrientationSensor::devicePath()))
             QSensorManager::registerBackend("QOrientationSensor", bbOrientationSensorId, this);
+        if (sensorSupported(BbPressureSensor::devicePath()))
+            QSensorManager::registerBackend("BbPressureSensor", bbPressureSensorId, this);
         if (sensorSupported(BbProximitySensor::devicePath()))
             QSensorManager::registerBackend("QProximitySensor", bbProximitySensorId, this);
         if (sensorSupported(BbRotationSensor::devicePath()))
@@ -111,6 +115,8 @@ public:
             backend = new BbMagnetometer(sensor);
         if (sensor->identifier() == bbOrientationSensorId)
             backend = new BbOrientationSensor(sensor);
+        if (sensor->identifier() == bbPressureSensorId)
+            backend = new BbPressureSensor(sensor);
         if (sensor->identifier() == bbProximitySensorId)
             backend = new BbProximitySensor(sensor);
         if (sensor->identifier() == bbRotationSensorId)