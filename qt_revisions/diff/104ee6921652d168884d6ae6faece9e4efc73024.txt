diff --git a/qmake/generators/mac/pbuilder_pbx.cpp b/qmake/generators/mac/pbuilder_pbx.cpp
index c967e18..74046a0 100644
--- a/qmake/generators/mac/pbuilder_pbx.cpp
+++ b/qmake/generators/mac/pbuilder_pbx.cpp
@@ -166,16 +166,6 @@ ProjectBuilderMakefileGenerator::writeSubDirs(QTextStream &t)
                         fprintf(stderr, "Cannot find directory: %s\n", dir.toLatin1().constData());
                 }
                 if(tmp_proj.read(fn)) {
-                    if(Option::debug_level) {
-                        debug_msg(1, "Dumping all variables:");
-                        const QHash<QString, QStringList> &vars = tmp_proj.variables();
-                        for (QHash<QString, QStringList>::ConstIterator it = vars.begin();
-                            it != vars.end(); ++it) {
-                            if(it.key().left(1) != "." && !it.value().isEmpty())
-                                debug_msg(1, "%s: %s === %s", fn.toLatin1().constData(), it.key().toLatin1().constData(),
-                                          it.value().join(" :: ").toLatin1().constData());
-                        }
-                    }
                     if(tmp_proj.first("TEMPLATE") == "subdirs") {
                         QMakeProject *pp = new QMakeProject(&tmp_proj);
                         pb_subdirs += new ProjectBuilderSubDirs(pp, dir);
diff --git a/qmake/generators/metamakefile.cpp b/qmake/generators/metamakefile.cpp
index 425cc31..ef47082 100644
--- a/qmake/generators/metamakefile.cpp
+++ b/qmake/generators/metamakefile.cpp
@@ -214,17 +214,6 @@ BuildsMetaMakefileGenerator::write(const QString &oldpwd)
             if(!ret)
                 Option::output.remove();
         }
-
-        // debugging
-        if(Option::debug_level) {
-            debug_msg(1, "Dumping all variables:");
-            QHash<QString, QStringList> &vars = project->variables();
-            for(QHash<QString, QStringList>::Iterator it = vars.begin(); it != vars.end(); ++it) {
-                if(!it.key().startsWith(".") && !it.value().isEmpty())
-                    debug_msg(1, "%s === %s", it.key().toLatin1().constData(),
-                              it.value().join(" :: ").toLatin1().constData());
-            }
-        }
     }
     return ret;
 }
diff --git a/qmake/generators/win32/msvc_vcproj.cpp b/qmake/generators/win32/msvc_vcproj.cpp
index 2162841..606fee6 100644
--- a/qmake/generators/win32/msvc_vcproj.cpp
+++ b/qmake/generators/win32/msvc_vcproj.cpp
@@ -483,16 +483,6 @@ void VcprojGenerator::writeSubDirs(QTextStream &t)
                         tmp_vcproj.setProjectFile(&tmp_proj);
                         Option::qmake_mode = old_mode;
                         Option::output_dir = old_output_dir;
-                        if(Option::debug_level) {
-                            debug_msg(1, "Dumping all variables:");
-                            const QHash<QString, QStringList> &vars = tmp_proj.variables();
-                            for (QHash<QString, QStringList>::ConstIterator it = vars.begin();
-                                it != vars.end(); ++it) {
-                                if(it.key().left(1) != "." && !it.value().isEmpty())
-                                    debug_msg(1, "%s: %s === %s", fn.toLatin1().constData(), it.key().toLatin1().constData(),
-                                                it.value().join(" :: ").toLatin1().constData());
-                            }
-                        }
 
                         // We assume project filename is [QMAKE_PROJECT_NAME].vcproj
                         QString vcproj = unescapeFilePath(tmp_vcproj.project->first("QMAKE_PROJECT_NAME") + project->first("VCPROJ_EXTENSION"));