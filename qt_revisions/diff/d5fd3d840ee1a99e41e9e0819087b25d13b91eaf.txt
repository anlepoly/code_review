diff --git a/tools/qdoc3/config.cpp b/tools/qdoc3/config.cpp
index d137905..a583d1d 100644
--- a/tools/qdoc3/config.cpp
+++ b/tools/qdoc3/config.cpp
@@ -148,6 +148,8 @@ QStringList MetaStack::getExpanded(const Location& location)
 }
 
 QT_STATIC_CONST_IMPL QString Config::dot = QLatin1String(".");
+QString Config::overrideOutputDir;
+QSet<QString> Config::overrideOutputFormats;
 QMap<QString, QString> Config::extractedDirs;
 int Config::numInstances;
 
@@ -269,6 +271,32 @@ int Config::getInt(const QString& var) const
 }
 
 /*!
+  Function to return the correct outputdir.
+  outputdir can be set using the qdocconf or the command-line
+  variable -outputdir.
+  */
+QString Config::getOutputDir() const
+{
+    if (overrideOutputDir.isNull())
+        return getString(CONFIG_OUTPUTDIR);
+    else
+        return overrideOutputDir;
+}
+
+/*!
+  Function to return the correct outputformats.
+  outputformats can be set using the qdocconf or the command-line
+  variable -outputformat.
+  */
+QSet<QString> Config::getOutputFormats() const
+{
+    if (overrideOutputFormats.isEmpty())
+        return getStringSet(CONFIG_OUTPUTFORMATS);
+    else
+        return overrideOutputFormats;
+}
+
+/*!
   First, this function looks up the configuration variable \a var
   in the location map and, if found, sets the internal variable
   \c{lastLoc} to the Location that \a var maps to.
diff --git a/tools/qdoc3/config.h b/tools/qdoc3/config.h
index 5fbc0f6..6e0f3af 100644
--- a/tools/qdoc3/config.h
+++ b/tools/qdoc3/config.h
@@ -71,6 +71,8 @@ class Config
     const Location& lastLocation() const { return lastLoc; }
     bool getBool(const QString& var) const;
     int getInt(const QString& var) const;
+    QString getOutputDir() const;
+    QSet<QString> getOutputFormats() const;
     QString getString(const QString& var) const;
     QSet<QString> getStringSet(const QString& var) const;
     QStringList getStringList(const QString& var) const;
@@ -108,6 +110,9 @@ class Config
 
     QT_STATIC_CONST QString dot;
 
+    static QString overrideOutputDir;
+    static QSet<QString> overrideOutputFormats;
+
  private:
     static bool isMetaKeyChar(QChar ch);
     void load(Location location, const QString& fileName);
diff --git a/tools/qdoc3/generator.cpp b/tools/qdoc3/generator.cpp
index e278883..2ab1e05 100644
--- a/tools/qdoc3/generator.cpp
+++ b/tools/qdoc3/generator.cpp
@@ -132,15 +132,15 @@ void Generator::terminateGenerator()
 
 void Generator::initialize(const Config &config)
 {
-    outputFormats = config.getStringSet(CONFIG_OUTPUTFORMATS);
+    outputFormats = config.getOutputFormats();
     if (!outputFormats.isEmpty()) {
-        outDir_ = config.getString(CONFIG_OUTPUTDIR);
+        outDir_ = config.getOutputDir();
         baseDir_ = config.getString(CONFIG_BASEDIR);
         if (!baseDir_.isEmpty())
             config.location().warning(tr("\"basedir\" specified in config file. "
                                          "All output will be in module directories of the output directory"));
         if (outDir_.isEmpty())
-            config.lastLocation().fatal(tr("No output directory specified in configuration file"));
+            config.lastLocation().fatal(tr("No output directory specified in configuration file or on the command line"));
 
         QDir dirInfo;
         if (dirInfo.exists(outDir_)) {
diff --git a/tools/qdoc3/helpprojectwriter.cpp b/tools/qdoc3/helpprojectwriter.cpp
index 8e1e24a..d9ddb1a 100644
--- a/tools/qdoc3/helpprojectwriter.cpp
+++ b/tools/qdoc3/helpprojectwriter.cpp
@@ -56,7 +56,7 @@ HelpProjectWriter::HelpProjectWriter(const Config &config, const QString &defaul
 {
     // The output directory should already have been checked by the calling
     // generator.
-    outputDir = config.getString(CONFIG_OUTPUTDIR);
+    outputDir = config.getOutputDir();
 
     QStringList names = config.getStringList(CONFIG_QHP + Config::dot + "projects");
 
diff --git a/tools/qdoc3/main.cpp b/tools/qdoc3/main.cpp
index a7364dd..bfd7fc8 100644
--- a/tools/qdoc3/main.cpp
+++ b/tools/qdoc3/main.cpp
@@ -106,18 +106,22 @@ static void printHelp()
 {
     Location::information(tr("Usage: qdoc [options] file1.qdocconf ...\n"
                               "Options:\n"
-                              "    -help         "
+                              "    -help          "
                               "Display this information and exit\n"
-                              "    -version      "
+                              "    -version       "
                               "Display version of qdoc and exit\n"
-                              "    -D<name>      "
+                              "    -D<name>       "
                               "Define <name> as a macro while parsing sources\n"
-                              "    -highlighting         "
+                              "    -highlighting  "
                               "Turn on syntax highlighting (makes qdoc run slower)\n"
-                              "    -showinternal "
+                              "    -showinternal  "
                               "Include stuff marked internal\n"
                               "    -obsoletelinks "
-                              "Report links from obsolete items to non-obsolete items") );
+                              "Report links from obsolete items to non-obsolete items\n"
+                              "    -outputdir     "
+                              "Specify output directory, overrides setting in qdocconf file\n"
+                              "    -outputformat  "
+                              "Specify output format, overrides setting in qdocconf file") );
 }
 
 /*!
@@ -251,7 +255,7 @@ static void processQdocconfFile(const QString &fileName)
     /*
       By default, the only output format is HTML.
      */
-    QSet<QString> outputFormats = config.getStringSet(CONFIG_OUTPUTFORMATS);
+    QSet<QString> outputFormats = config.getOutputFormats();
     Location outputFormatsLocation = config.lastLocation();
 
     /*
@@ -445,6 +449,14 @@ int main(int argc, char **argv)
         else if (opt == "-obsoletelinks") {
             obsoleteLinks = true;
         }
+        else if (opt == "-outputdir") {
+            Config::overrideOutputDir = argv[i];
+            i++;
+        }
+        else if (opt == "-outputformat") {
+            Config::overrideOutputFormats.insert(argv[i]);
+            i++;
+        }
         else {
             qdocFiles.append(opt);
         }