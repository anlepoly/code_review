diff --git a/doc/src/declarative/advtutorial.qdoc b/doc/src/declarative/advtutorial.qdoc
index 9624a37..e50ec30 100644
--- a/doc/src/declarative/advtutorial.qdoc
+++ b/doc/src/declarative/advtutorial.qdoc
@@ -52,10 +52,10 @@ control QML elements.
 Tutorial chapters:
 
 \list 1
-\o \l {declarative/tutorials/samegame/samegame1}{Creating the Game Canvas and Blocks}
-\o \l {declarative/tutorials/samegame/samegame2}{Populating the Game Canvas}
-\o \l {declarative/tutorials/samegame/samegame3}{Implementing the Game Logic}
-\o \l {declarative/tutorials/samegame/samegame4}{Finishing Touches}
+\li \l {declarative/tutorials/samegame/samegame1}{Creating the Game Canvas and Blocks}
+\li \l {declarative/tutorials/samegame/samegame2}{Populating the Game Canvas}
+\li \l {declarative/tutorials/samegame/samegame3}{Implementing the Game Logic}
+\li \l {declarative/tutorials/samegame/samegame4}{Finishing Touches}
 \endlist
 
 All the code in this tutorial can be found in Qt's \c examples/declarative/tutorials/samegame
@@ -165,18 +165,18 @@ and moves the new block to its position on the game canvas. This involves severa
 
 \list
 
-\o \l {QML:Qt::createComponent()}{Qt.createComponent()} is called to
+\li \l {QML:Qt::createComponent()}{Qt.createComponent()} is called to
    generate an element from \c Block.qml.  If the component is ready,
    we can call \c createObject() to create an instance of the \c Block
    item.
 
-\o If \c createObject() returned null (i.e. if there was an error
+\li If \c createObject() returned null (i.e. if there was an error
    while loading the object), print the error information.
 
-\o Place the block in its position on the board and set its width and
+\li Place the block in its position on the board and set its width and
    height.  Also, store it in the blocks array for future reference.
 
-\o Finally, print error information to the console if the component
+\li Finally, print error information to the console if the component
    could not be loaded for some reason (for example, if the file is
    missing).
 
@@ -224,11 +224,11 @@ until it is won or lost.
 To do this, we have added the following functions to \c samegame.js:
 
 \list
-\o \c{handleClick(x,y)}
-\o \c{floodFill(xIdx,yIdx,type)}
-\o \c{shuffleDown()}
-\o \c{victoryCheck()}
-\o \c{floodMoveCheck(xIdx, yIdx, type)}
+\li \c{handleClick(x,y)}
+\li \c{floodFill(xIdx,yIdx,type)}
+\li \c{shuffleDown()}
+\li \c{victoryCheck()}
+\li \c{floodMoveCheck(xIdx, yIdx, type)}
 \endlist
 
 As this is a tutorial about QML, not game design, we will only discuss \c handleClick() and \c victoryCheck() below since they interface directly with the QML elements. Note that although the game logic here is written in JavaScript, it could have been written in C++ and then exposed to QML. 
@@ -454,10 +454,10 @@ makes it very easy to fetch and display XML based data such as RSS in a QML appl
 By following this tutorial you've seen how you can write a fully functional application in QML:
 
 \list
-\o Build your application with \l {{QML Elements}}{QML elements}
-\o Add application logic \l{Integrating JavaScript}{with JavaScript code}
-\o Add animations with \l {Behavior}{Behaviors} and \l{QML States}{states}
-\o Store persistent application data using, for example, the \l{Offline Storage API} or \l XMLHttpRequest
+\li Build your application with \l {{QML Elements}}{QML elements}
+\li Add application logic \l{Integrating JavaScript}{with JavaScript code}
+\li Add animations with \l {Behavior}{Behaviors} and \l{QML States}{states}
+\li Store persistent application data using, for example, the \l{Offline Storage API} or \l XMLHttpRequest
 \endlist
 
 There is so much more to learn about QML that we haven't been able to cover in this tutorial. Check out all the
diff --git a/doc/src/declarative/animation.qdoc b/doc/src/declarative/animation.qdoc
index 0485717..e9bf695 100644
--- a/doc/src/declarative/animation.qdoc
+++ b/doc/src/declarative/animation.qdoc
@@ -36,27 +36,27 @@
 \keyword qml-animation-elements
 \section1 Animation and Transitions Elements
 \list
-\o \l {Transition} - Animates transitions during state changes
-\o \l {SequentialAnimation} - Runs animations sequentially
-\o \l {ParallelAnimation} - Runs animations in parallel
-\o \l {Behavior} - Specifies a default animation for property changes
-\o \l {PropertyAction} - Sets immediate property changes during animation
-\o \l {PauseAnimation} - Introduces a pause in an animation
-\o \l {SmoothedAnimation} - Allows a property to smoothly track a value
-\o \l {SpringAnimation} - Allows a property to track a value in a spring-like motion
-\o \l {ScriptAction} - Runs scripts during an animation
+\li \l {Transition} - Animates transitions during state changes
+\li \l {SequentialAnimation} - Runs animations sequentially
+\li \l {ParallelAnimation} - Runs animations in parallel
+\li \l {Behavior} - Specifies a default animation for property changes
+\li \l {PropertyAction} - Sets immediate property changes during animation
+\li \l {PauseAnimation} - Introduces a pause in an animation
+\li \l {SmoothedAnimation} - Allows a property to smoothly track a value
+\li \l {SpringAnimation} - Allows a property to track a value in a spring-like motion
+\li \l {ScriptAction} - Runs scripts during an animation
 \endlist
 
 \keyword qml-property-animation-elements
 Elements that animate properties based on data types
 \list
-\o \l {PropertyAnimation} - Animates property changes
-\o \l {NumberAnimation} - Animates properties of type qreal
-\o \l {Vector3dAnimation} - Animates properties of type QVector3d
-\o \l {ColorAnimation} - Animates color changes
-\o \l {RotationAnimation} - Animates rotations
-\o \l {ParentAnimation} - Animates parent changes
-\o \l {AnchorAnimation} - Animates anchor changes
+\li \l {PropertyAnimation} - Animates property changes
+\li \l {NumberAnimation} - Animates properties of type qreal
+\li \l {Vector3dAnimation} - Animates properties of type QVector3d
+\li \l {ColorAnimation} - Animates color changes
+\li \l {RotationAnimation} - Animates rotations
+\li \l {ParentAnimation} - Animates parent changes
+\li \l {AnchorAnimation} - Animates anchor changes
 \endlist
 
 In QML, animations are created by applying animation elements to property
@@ -204,22 +204,22 @@ of the different easing types.
 In addition, QML provides several other elements useful for animation:
 
 \list
-\o PauseAnimation: enables pauses during animations
-\o ScriptAction: allows JavaScript to be executed during an animation, and can
+\li PauseAnimation: enables pauses during animations
+\li ScriptAction: allows JavaScript to be executed during an animation, and can
 be used together with StateChangeScript to reused existing scripts
-\o PropertyAction: changes a property \e immediately during an animation,
+\li PropertyAction: changes a property \e immediately during an animation,
 without animating the property change
 \endlist
 
 These are specialized animation elements that animate different property types
 \list
-\o SmoothedAnimation: a specialized NumberAnimation that provides smooth
+\li SmoothedAnimation: a specialized NumberAnimation that provides smooth
 changes in animation when the target value changes
-\o SpringAnimation: provides a spring-like animation with specialized
+\li SpringAnimation: provides a spring-like animation with specialized
 attributes such as \l {SpringAnimation::}{mass},
 \l{SpringAnimation::}{damping} and \l{SpringAnimation::}{epsilon}
-\o ParentAnimation: used for animating a parent change (see ParentChange)
-\o AnchorAnimation: used for animating an anchor change (see AnchorChanges)
+\li ParentAnimation: used for animating a parent change (see ParentChange)
+\li AnchorAnimation: used for animating an anchor change (see AnchorChanges)
 \endlist
 
 */
diff --git a/doc/src/declarative/basicelements.qdoc b/doc/src/declarative/basicelements.qdoc
index 890efe2..a45bf2f 100644
--- a/doc/src/declarative/basicelements.qdoc
+++ b/doc/src/declarative/basicelements.qdoc
@@ -40,15 +40,15 @@ scene.
 \section1 Basic Elements
 This is a list of some of the elements readily available for users.
 \list
-\o \l {Item}
-\o \l {Rectangle}
-\o \l {Image}
-\o \l {Text}
-\o \l {TextInput}
-\o \l {TextEdit}
-\o \l {FocusScope}
-\o \l {Component}
-\o \l {MouseArea}
+\li \l {Item}
+\li \l {Rectangle}
+\li \l {Image}
+\li \l {Text}
+\li \l {TextInput}
+\li \l {TextEdit}
+\li \l {FocusScope}
+\li \l {Component}
+\li \l {MouseArea}
 \endlist
 
 For a complete list of QML elements, please visit the \l {QML Elements} page.
diff --git a/doc/src/declarative/basictypes.qdoc b/doc/src/declarative/basictypes.qdoc
index 34ddd92..82bf5a6 100644
--- a/doc/src/declarative/basictypes.qdoc
+++ b/doc/src/declarative/basictypes.qdoc
@@ -324,12 +324,12 @@
     A font type has the properties of a QFont. The properties are:
 
     \list
-    \o \c string font.family
-    \o \c bool font.bold
-    \o \c bool font.italic
-    \o \c bool font.underline
-    \o \c real font.pointSize
-    \o \c int font.pixelSize
+    \li \c string font.family
+    \li \c bool font.bold
+    \li \c bool font.italic
+    \li \c bool font.underline
+    \li \c real font.pointSize
+    \li \c int font.pixelSize
     \endlist
 
     Example:
@@ -350,9 +350,9 @@
     are:
 
     \list
-    \o \c slot action.trigger - invoke the action
-    \o \c bool action.enabled - true if the action is enabled
-    \o \c string action.text - the text associated with the action
+    \li \c slot action.trigger - invoke the action
+    \li \c bool action.enabled - true if the action is enabled
+    \li \c string action.text - the text associated with the action
     \endlist
 
     Actions are used like this:
@@ -442,8 +442,8 @@
     The \c variant type can also hold:
 
     \list
-    \o An array of \l {QML Basic Types}{basic type} values
-    \o A map of key-value pairs with \l {QML Basic Types}{basic-type} values
+    \li An array of \l {QML Basic Types}{basic type} values
+    \li A map of key-value pairs with \l {QML Basic Types}{basic-type} values
     \endlist
 
     For example, below is an \c items array and an \c attributes map. Their
diff --git a/doc/src/declarative/behaviors-and-states.qdoc b/doc/src/declarative/behaviors-and-states.qdoc
index 7b6ed1d..9de4230 100644
--- a/doc/src/declarative/behaviors-and-states.qdoc
+++ b/doc/src/declarative/behaviors-and-states.qdoc
@@ -77,8 +77,8 @@ problem occurs because we have used a Behavior to animate the change in color, a
 
 To state the problem more formally, using States and Behaviors together can cause unexpected behavior when:
 \list
-\o a Behavior is used to animate a property change, specifically when moving from an explicitly defined state back to the implicit base state; and
-\o this Behavior can be interrupted to (re-)enter an explicitly defined state.
+\li a Behavior is used to animate a property change, specifically when moving from an explicitly defined state back to the implicit base state; and
+\li this Behavior can be interrupted to (re-)enter an explicitly defined state.
 \endlist
 
 The problem occurs because of the way the base state is defined for QML: as the "snapshot" state of the application just prior to entering an explicitly defined state. In this case, if we are in the process of animating from green back
diff --git a/doc/src/declarative/codingconventions.qdoc b/doc/src/declarative/codingconventions.qdoc
index a333843..335f91f 100644
--- a/doc/src/declarative/codingconventions.qdoc
+++ b/doc/src/declarative/codingconventions.qdoc
@@ -40,14 +40,14 @@ If you need an introduction to the language, please read \l {Introduction to the
 Through our documentation and examples, QML objects are always structured in the following order:
 
 \list
-\o id
-\o property declarations
-\o signal declarations
-\o JavaScript functions
-\o object properties
-\o child objects
-\o states
-\o transitions
+\li id
+\li property declarations
+\li signal declarations
+\li JavaScript functions
+\li object properties
+\li child objects
+\li states
+\li transitions
 \endlist
 
 For better readability, we separate these different parts with an empty line.
diff --git a/doc/src/declarative/declarativeui.qdoc b/doc/src/declarative/declarativeui.qdoc
index dea971a..780e63c 100644
--- a/doc/src/declarative/declarativeui.qdoc
+++ b/doc/src/declarative/declarativeui.qdoc
@@ -46,94 +46,94 @@ Qt applications.
 \section1 Getting Started
 
 \list
-\o \l{Introduction to Qt Quick}
-\o \l{QML for Qt Programmers}{QML Programming for Qt Programmers}
-\o \l{Getting Started Programming with QML}
+\li \l{Introduction to Qt Quick}
+\li \l{QML for Qt Programmers}{QML Programming for Qt Programmers}
+\li \l{Getting Started Programming with QML}
 
-\o \l{What's new in Qt Quick}{What's New in the Qt Quick Release}
-\o \l{QML Examples and Demos}
+\li \l{What's new in Qt Quick}{What's New in the Qt Quick Release}
+\li \l{QML Examples and Demos}
 \endlist
 
 \section1 QML Features
 
 \list
-\o \l{QML Basic Elements}{Basic Elements}
-\o \l{QML Basic Types}{Data Types}
-\o \l{Property Binding}
-\o \l{Using QML Positioner and Repeater Items}{Component Layouts}
-\o \l{Anchor-based Layout in QML}{Layouts using Anchors}
-\o \l{QML Mouse Events}{Mouse Events}
-\o \l{QML Text Handling and Validators}{Text Handling and Validators}
-\o \l{Keyboard Focus in QML}{Keyboard Focus}
-\o \l{QML Signal and Handler Event System}{Signal and Handler Event System}
-\o \l{Importing Reusable Components}
-\o \l{QML States}{States}
-\o \l{QML Animation and Transitions}{Animation and Transitions}
-\o \l{QML Data Models}{Structuring Data with Models}
-\o \l{Presenting Data with Views}
-\o \l{Extending QML Functionalities using C++}
-\o \l{Using QML Bindings in C++ Applications}
-\o \l{Integrating QML Code with Existing Qt UI Code}
-\o \l{Dynamic Object Management in QML}{Dynamic Object Management}
-\o \l{Network Transparency}{Loading Resources in QML}
-\o \l{QML Internationalization}{Internationalization}
+\li \l{QML Basic Elements}{Basic Elements}
+\li \l{QML Basic Types}{Data Types}
+\li \l{Property Binding}
+\li \l{Using QML Positioner and Repeater Items}{Component Layouts}
+\li \l{Anchor-based Layout in QML}{Layouts using Anchors}
+\li \l{QML Mouse Events}{Mouse Events}
+\li \l{QML Text Handling and Validators}{Text Handling and Validators}
+\li \l{Keyboard Focus in QML}{Keyboard Focus}
+\li \l{QML Signal and Handler Event System}{Signal and Handler Event System}
+\li \l{Importing Reusable Components}
+\li \l{QML States}{States}
+\li \l{QML Animation and Transitions}{Animation and Transitions}
+\li \l{QML Data Models}{Structuring Data with Models}
+\li \l{Presenting Data with Views}
+\li \l{Extending QML Functionalities using C++}
+\li \l{Using QML Bindings in C++ Applications}
+\li \l{Integrating QML Code with Existing Qt UI Code}
+\li \l{Dynamic Object Management in QML}{Dynamic Object Management}
+\li \l{Network Transparency}{Loading Resources in QML}
+\li \l{QML Internationalization}{Internationalization}
 \endlist
 
 \section1 QML Add-Ons
 
 \list
-\o \l{Qt Quick Components for Symbian 1.1}{Qt Quick Components for Symbian} - a native component set for the Symbian^3 platform
-\o \l{QtWebKit QML Module}
-\o \l{http://doc.qt.nokia.com/qtmobility-1.1.0/qml-plugins.html}{Mobility QML Plugins}
-\o \l {http://doc.qt.nokia.com/qt-components-symbian-1.1/index.html}{Qt Quick Components}
+\li \l{Qt Quick Components for Symbian 1.1}{Qt Quick Components for Symbian} - a native component set for the Symbian^3 platform
+\li \l{QtWebKit QML Module}
+\li \l{http://doc.qt.nokia.com/qtmobility-1.1.0/qml-plugins.html}{Mobility QML Plugins}
+\li \l {http://doc.qt.nokia.com/qt-components-symbian-1.1/index.html}{Qt Quick Components}
 \endlist
 
 \section1 Qt Quick Tools
 
 \list
-\o \l{Debugging QML}
-\o \l{external: Developing Qt Quick Applications with Creator}{Developing with Qt Creator}
-\o \l{QML Viewer}
+\li \l{Debugging QML}
+\li \l{external: Developing Qt Quick Applications with Creator}{Developing with Qt Creator}
+\li \l{QML Viewer}
 \endlist
 
 \section1 Reference
 
 \list
-\o \l{Introduction to the QML language}{QML Syntax}
-\o \l{QML Elements}
-\o \l{Qt Declarative Module}
-\o \l{QML Basic Types}{QML Data Types}
-\o \l{QML Coding Conventions}
-\o \l{external: Qt Creator Manual}{Qt Creator Manual}
-\o \l{Programming with Qt}
-\o \l{http://doc.qt.nokia.com/qtmobility-1.1.0/index.html}{Qt Mobility Documentation}
+\li \l{Introduction to the QML language}{QML Syntax}
+\li \l{QML Elements}
+\li \l{Qt Declarative Module}
+\li \l{QML Basic Types}{QML Data Types}
+\li \l{QML Coding Conventions}
+\li \l{external: Qt Creator Manual}{Qt Creator Manual}
+\li \l{Programming with Qt}
+\li \l{http://doc.qt.nokia.com/qtmobility-1.1.0/index.html}{Qt Mobility Documentation}
 \endlist
 
 \section1 Architecture
 
 \list
-\o \l{Qt Declarative UI Runtime}
-\o \l{Integrating JavaScript}
-\o \l{QML Scope}
-\o \l{QML Modules}
-\o \l{QML Documents}
-\o \l{QML Global Object}
-\o \l{QML Internationalization}
-\o \l{QML Right-to-left User Interfaces}
-\o \l{QML Security}
-\o \l{Qt Declarative Module}
+\li \l{Qt Declarative UI Runtime}
+\li \l{Integrating JavaScript}
+\li \l{QML Scope}
+\li \l{QML Modules}
+\li \l{QML Documents}
+\li \l{QML Global Object}
+\li \l{QML Internationalization}
+\li \l{QML Right-to-left User Interfaces}
+\li \l{QML Security}
+\li \l{Qt Declarative Module}
 \endlist
 
 \section1 Examples
 
 \list
-\o \l{QML Tutorial}{"Hello World" Tutorial}
-\o \l{Getting Started Programming with QML}
-\o \l{QML Advanced Tutorial}{Tutorial: "Same Game"}
-\o \l{Tutorial: Writing QML extensions with C++}
-\o \l{QML Examples and Demos}
+\li \l{QML Tutorial}{"Hello World" Tutorial}
+\li \l{Getting Started Programming with QML}
+\li \l{QML Advanced Tutorial}{Tutorial: "Same Game"}
+\li \l{Tutorial: Writing QML extensions with C++}
+\li \l{QML Examples and Demos}
 
-\o Forum Nokia:
+\li Forum Nokia:
 \l{http://wiki.forum.nokia.com/index.php/Qt_Quick_examples_for_porting}{Qt Quick
 examples for porting}
 \endlist
@@ -141,19 +141,19 @@ examples for porting}
 \section1 Best Practices
 
 \list
-\o \l{QML Best Practices: Coding Conventions}{Coding Tips}
-\o \l{QML Performance}{Performance Tips}
+\li \l{QML Best Practices: Coding Conventions}{Coding Tips}
+\li \l{QML Performance}{Performance Tips}
 \endlist
 
 \section1 License Information
 \list
-\o \l{Qt Quick Licensing Information}
+\li \l{Qt Quick Licensing Information}
 \endlist
 
 \section1 Online Examples
 
 \list
-\o Forum Nokia:
+\li Forum Nokia:
 \l{http://wiki.forum.nokia.com/index.php/Qt_Quick_examples_for_porting}{Qt Quick
 examples for porting}
 \endlist
diff --git a/doc/src/declarative/dynamicobjects.qdoc b/doc/src/declarative/dynamicobjects.qdoc
index fdb610c..681ef30 100644
--- a/doc/src/declarative/dynamicobjects.qdoc
+++ b/doc/src/declarative/dynamicobjects.qdoc
@@ -69,10 +69,10 @@ a \l Component object from this URL.
 Once you have a \l Component, you can call its \l {Component::createObject()}{createObject()} method to create an instance of
 the component. This function can take one or two arguments:
 \list
-\o The first is the parent for the new item. Since graphical items will not appear on the scene without a parent, it is 
+\li The first is the parent for the new item. Since graphical items will not appear on the scene without a parent, it is
   recommended that you set the parent this way. However, if you wish to set the parent later you can safely pass \c null to 
   this function. 
-\o The second is optional and is a map of property-value items that define initial any property values for the item.
+\li The second is optional and is a map of property-value items that define initial any property values for the item.
   Property values specified by this argument are applied to the object before its creation is finalized, avoiding
   binding errors that may occur if particular properties must be initialized to enable other property bindings.
   when certain properties have been bound to before they have been set by the code. Additionally, there are small
@@ -145,11 +145,11 @@ the bindings in the dynamic item will no longer work.
 The actual creation context depends on how an item is created:
 
 \list
-\o If \l {QML:Qt::createComponent()}{Qt.createComponent()} is used, the creation context
+\li If \l {QML:Qt::createComponent()}{Qt.createComponent()} is used, the creation context
    is the QDeclarativeContext in which this method is called
-\o If \l{QML:Qt::createQmlObject()}{Qt.createQmlObject()}
+\li If \l{QML:Qt::createQmlObject()}{Qt.createQmlObject()}
    if called, the creation context is the context of the parent item passed to this method
-\o If a \c {Component{}} item is defined and \l {Component::createObject()}{createObject()}
+\li If a \c {Component{}} item is defined and \l {Component::createObject()}{createObject()}
    is called on that item, the creation context is the context in which the \c Component is defined
 \endlist
 
@@ -178,12 +178,12 @@ component. Each instance runs a NumberAnimation, and when the animation has fini
 
 \table
 \row
-\o \c application.qml
-\o \c SelfDestroyingRect.qml
+\li \c application.qml
+\li \c SelfDestroyingRect.qml
 
 \row
-\o \snippet doc/src/snippets/declarative/dynamicObjects-destroy.qml 0
-\o \snippet doc/src/snippets/declarative/SelfDestroyingRect.qml 0
+\li \snippet doc/src/snippets/declarative/dynamicObjects-destroy.qml 0
+\li \snippet doc/src/snippets/declarative/SelfDestroyingRect.qml 0
 
 \endtable
 
diff --git a/doc/src/declarative/elements.qdoc b/doc/src/declarative/elements.qdoc
index f591514..48f943b 100644
--- a/doc/src/declarative/elements.qdoc
+++ b/doc/src/declarative/elements.qdoc
@@ -43,149 +43,149 @@ To see the QML elements listed by functional area, see the
 
 \section1 Basic QML Elements
 \list
-\o \l {Item} - Basic item element inherited by QML elements
-\o \l {Component} - Encapsulates QML elements during importing
-\o \l {QML:QtObject} {QtObject} - Basic element containing only the \c {objectName} property
+\li \l {Item} - Basic item element inherited by QML elements
+\li \l {Component} - Encapsulates QML elements during importing
+\li \l {QML:QtObject} {QtObject} - Basic element containing only the \c {objectName} property
 \endlist
 
 \section1 Graphics
 \list
-\o \l {Rectangle} - A rectangle element
-\o \l {Image} - For incorporating bitmaps into a scene
-\o \l {BorderImage} - Allows the use of images as borders
-\o \l {AnimatedImage} - For playing animations stored in a series of frames
-\o \l {Gradient} - For defining a color gradient
-\o \l {GradientStop} - Used to define a color within a \l {Gradient}
-\o \l {SystemPalette} - Provides access to the Qt palettes
+\li \l {Rectangle} - A rectangle element
+\li \l {Image} - For incorporating bitmaps into a scene
+\li \l {BorderImage} - Allows the use of images as borders
+\li \l {AnimatedImage} - For playing animations stored in a series of frames
+\li \l {Gradient} - For defining a color gradient
+\li \l {GradientStop} - Used to define a color within a \l {Gradient}
+\li \l {SystemPalette} - Provides access to the Qt palettes
 \endlist
 
 \section1 Text Handling
 \list
-\o \l {Text} - For inserting formatted text into a scene
-\o \l {TextInput} - Captures user key input
-\o \l {TextEdit} - Displays multiple lines of editable formatted text
-\o \l {IntValidator} - Validates values as integers
-\o \l {DoubleValidator} - Validates real values
-\o \l {RegExpValidator} - Validator for string regular expressions
-\o \l {FontLoader} - Loads fonts by name or URL
+\li \l {Text} - For inserting formatted text into a scene
+\li \l {TextInput} - Captures user key input
+\li \l {TextEdit} - Displays multiple lines of editable formatted text
+\li \l {IntValidator} - Validates values as integers
+\li \l {DoubleValidator} - Validates real values
+\li \l {RegExpValidator} - Validator for string regular expressions
+\li \l {FontLoader} - Loads fonts by name or URL
 \endlist
 
 \section1 Mouse and Interaction Area
 \list
-\o \l {MouseArea} - Sets up an area for mouse interaction
-\o \l {Keys} - Provides components with attached properties to handle key input.
-\o \l {FocusScope} - Element that mediate keyboard focus changes
-\o \l {Flickable} - Provides a surface that can be "flicked"
-\o \l {Flipable} - Provides a surface that produces "flipping" effects
-\o \l {PinchArea} - Enables simple pinch gesture handling
+\li \l {MouseArea} - Sets up an area for mouse interaction
+\li \l {Keys} - Provides components with attached properties to handle key input.
+\li \l {FocusScope} - Element that mediate keyboard focus changes
+\li \l {Flickable} - Provides a surface that can be "flicked"
+\li \l {Flipable} - Provides a surface that produces "flipping" effects
+\li \l {PinchArea} - Enables simple pinch gesture handling
 \endlist
 
 \section1 Positioners and Repeater
 \list
-\o \l {Column} - Arranges its children vertically
-\o \l {Row} - Arranges its children horizontally
-\o \l {Grid} - Positions its children in a grid
-\o \l {Flow} - Positions its children with wrapping support
-\o \l {Repeater} - Uses a model to create multiple components
+\li \l {Column} - Arranges its children vertically
+\li \l {Row} - Arranges its children horizontally
+\li \l {Grid} - Positions its children in a grid
+\li \l {Flow} - Positions its children with wrapping support
+\li \l {Repeater} - Uses a model to create multiple components
 \endlist
 
 \section1 Transformations
 \list
-\o \l {Scale} - Assigns item scaling behaviors
-\o \l {Rotation} - Assigns item rotation behaviors
-\o \l {Translate} - Assigns item translation behaviors
+\li \l {Scale} - Assigns item scaling behaviors
+\li \l {Rotation} - Assigns item rotation behaviors
+\li \l {Translate} - Assigns item translation behaviors
 \endlist
 
 \section1 States
 \list
-\o \l {State} - Defines sets of configurations of objects and properties
-\o \l {PropertyChanges} - Describes property changes within a state
-\o \l {StateGroup} - Contains a set of states and state transitions
-\o \l {StateChangeScript} - Allows script binding in a state
-\o \l {ParentChange} - Re-parent an Item in a state change
-\o \l {AnchorChanges} - Change the anchors of an item in a state
+\li \l {State} - Defines sets of configurations of objects and properties
+\li \l {PropertyChanges} - Describes property changes within a state
+\li \l {StateGroup} - Contains a set of states and state transitions
+\li \l {StateChangeScript} - Allows script binding in a state
+\li \l {ParentChange} - Re-parent an Item in a state change
+\li \l {AnchorChanges} - Change the anchors of an item in a state
 \endlist
 
 \section1 Animation and Transitions
 \list
-\o \l {Transition} - Animates transitions during state changes
-\o \l {SequentialAnimation} - Runs animations sequentially
-\o \l {ParallelAnimation} - Runs animations in parallel
-\o \l {Behavior} - Specifies a default animation for property changes
-\o \l {PropertyAction} - Sets immediate property changes during animation
-\o \l {PauseAnimation} - Introduces a pause in an animation
-\o \l {SmoothedAnimation} - Allows a property to smoothly track a value
-\o \l {SpringAnimation} - Allows a property to track a value in a spring-like motion
-\o \l {ScriptAction} - Runs scripts during an animation
+\li \l {Transition} - Animates transitions during state changes
+\li \l {SequentialAnimation} - Runs animations sequentially
+\li \l {ParallelAnimation} - Runs animations in parallel
+\li \l {Behavior} - Specifies a default animation for property changes
+\li \l {PropertyAction} - Sets immediate property changes during animation
+\li \l {PauseAnimation} - Introduces a pause in an animation
+\li \l {SmoothedAnimation} - Allows a property to smoothly track a value
+\li \l {SpringAnimation} - Allows a property to track a value in a spring-like motion
+\li \l {ScriptAction} - Runs scripts during an animation
 \endlist
 
 Elements that animate properties based on data types
 \list
-\o \l {PropertyAnimation} - Animates property changes
-\o \l {NumberAnimation} - Animates properties of type qreal
-\o \l {Vector3dAnimation} - Animates properties of type QVector3d
-\o \l {ColorAnimation} - Animates color changes
-\o \l {RotationAnimation} - Animates rotations
-\o \l {ParentAnimation} - Animates parent changes
-\o \l {AnchorAnimation} - Animates anchor changes
+\li \l {PropertyAnimation} - Animates property changes
+\li \l {NumberAnimation} - Animates properties of type qreal
+\li \l {Vector3dAnimation} - Animates properties of type QVector3d
+\li \l {ColorAnimation} - Animates color changes
+\li \l {RotationAnimation} - Animates rotations
+\li \l {ParentAnimation} - Animates parent changes
+\li \l {AnchorAnimation} - Animates anchor changes
 \endlist
 
 \section1 Models and Data Handling
 \list
-\o \l {ListModel} - Defines a list of data
-\o \l {ListElement} - Defines a data item in a \l {ListModel}
-\o \l {VisualItemModel} - Contains items that already defines its own visual delegate
-\o \l {VisualDataModel} - Encapsulates a model and a delegate
-\o \l {XmlListModel} - Specifies a model using XPath expressions
-\o \l {XmlRole} - Specifies a role for an \l {XmlListModel}
-\o \l {Binding} - Binds any value to any property
-\o \l {Package} - Collection that enables sharing of items within different views
+\li \l {ListModel} - Defines a list of data
+\li \l {ListElement} - Defines a data item in a \l {ListModel}
+\li \l {VisualItemModel} - Contains items that already defines its own visual delegate
+\li \l {VisualDataModel} - Encapsulates a model and a delegate
+\li \l {XmlListModel} - Specifies a model using XPath expressions
+\li \l {XmlRole} - Specifies a role for an \l {XmlListModel}
+\li \l {Binding} - Binds any value to any property
+\li \l {Package} - Collection that enables sharing of items within different views
 \endlist
 
 \section1 Views
 \list
-\o \l {ListView} - Provides a list visualization of a model
-\o \l {GridView} - Provides a grid visualization of a model
-\o \l {PathView} - Visualizes a model's contents along a path. See \l {Path Definition}{Path Elements} for more information.
+\li \l {ListView} - Provides a list visualization of a model
+\li \l {GridView} - Provides a grid visualization of a model
+\li \l {PathView} - Visualizes a model's contents along a path. See \l {Path Definition}{Path Elements} for more information.
 \endlist
 
 \section1 Path Definition
 \list
-\o \l {Path} - Defines a path used by \l {PathView}
-\o \l {PathLine} - Defines a line in \l {Path}
-\o \l {PathQuad} - Defines a quadratic Bezier curve in a \l {Path}
-\o \l {PathCubic} - Defines a cubic Bezier curve in a \l {Path}
-\o \l {PathAttribute} - Allows the setting of attributes along a \l {Path}
-\o \l {PathPercent} - Modifies the item distribution along a \l {Path}
+\li \l {Path} - Defines a path used by \l {PathView}
+\li \l {PathLine} - Defines a line in \l {Path}
+\li \l {PathQuad} - Defines a quadratic Bezier curve in a \l {Path}
+\li \l {PathCubic} - Defines a cubic Bezier curve in a \l {Path}
+\li \l {PathAttribute} - Allows the setting of attributes along a \l {Path}
+\li \l {PathPercent} - Modifies the item distribution along a \l {Path}
 \endlist
 
 \section1 Utility
 \list
-\o \l {Connections} - Explicitly connects signals and signal handlers
-\o \l {Timer} - Provides timed triggers
-\o \l {QML:Qt} {Qt} - The QML global Qt object provides useful enums and functions from Qt.
-\o \l {WorkerScript} - Enables the use of threads in QML
-\o \l {Loader} - Controls the loading of items or components
-\o \l {LayoutItem} - Allows declarative UI elements inside Qt's Graphics View layouts
+\li \l {Connections} - Explicitly connects signals and signal handlers
+\li \l {Timer} - Provides timed triggers
+\li \l {QML:Qt} {Qt} - The QML global Qt object provides useful enums and functions from Qt.
+\li \l {WorkerScript} - Enables the use of threads in QML
+\li \l {Loader} - Controls the loading of items or components
+\li \l {LayoutItem} - Allows declarative UI elements inside Qt's Graphics View layouts
 \endlist
 
 \section1 Graphical Effects
 \list
-\o \l {Particles} - Generates and animates particles
-\o \l {ParticleMotionLinear} - Adds linear motion behavior to \l {Particles}
-\o \l {ParticleMotionGravity} - Adds gravitational motion to \l {Particles}
-\o \l {ParticleMotionWander} - Adds varied motions to \l {Particles}
-\o \l {ShaderEffectItem} - Enables the use of OpenGL Shading Language together with QML
-\o \l {ShaderEffectSource} - Encapsulates QML item tree as a source item for \l {ShaderEffectItem}
+\li \l {Particles} - Generates and animates particles
+\li \l {ParticleMotionLinear} - Adds linear motion behavior to \l {Particles}
+\li \l {ParticleMotionGravity} - Adds gravitational motion to \l {Particles}
+\li \l {ParticleMotionWander} - Adds varied motions to \l {Particles}
+\li \l {ShaderEffectItem} - Enables the use of OpenGL Shading Language together with QML
+\li \l {ShaderEffectSource} - Encapsulates QML item tree as a source item for \l {ShaderEffectItem}
 \endlist
 
 \section1 Add-On Elements
 These elements are not included in the \c{QtQuick 1.0} module. Their respective QML bindings
 should first be obtained and installed.
 \list
-\o \l{WebView}{QtWebKit QML Module - WebView Element} - For displaying Web contents
-\o \l{http://doc.qt.nokia.com/qtmobility-1.1.0/qml-plugins.html}{Mobility QML Plugins}
-\o \l {http://doc.qt.nokia.com/qt-components-symbian-1.1/index.html}{Qt Quick Components}
+\li \l{WebView}{QtWebKit QML Module - WebView Element} - For displaying Web contents
+\li \l{http://doc.qt.nokia.com/qtmobility-1.1.0/qml-plugins.html}{Mobility QML Plugins}
+\li \l {http://doc.qt.nokia.com/qt-components-symbian-1.1/index.html}{Qt Quick Components}
 \endlist
 
 */
diff --git a/doc/src/declarative/example-slideswitch.qdoc b/doc/src/declarative/example-slideswitch.qdoc
index 86d4090..26d2b2f 100644
--- a/doc/src/declarative/example-slideswitch.qdoc
+++ b/doc/src/declarative/example-slideswitch.qdoc
@@ -36,12 +36,12 @@ The code for this example can be found in the \c $QTDIR/examples/declarative/ui-
 The elements that compose the switch are:
 
 \list
-\o a \c on property (the interface to interact with the switch),
-\o two images (the background image and the knob),
-\o two mouse regions for user interation (on the background image and on the knob),
-\o two states (a \e on state and a \e off state),
-\o two functions or slots to react to the user interation (\c toggle() and \c dorelease()),
-\o and a transition that describe how to go from one state to the other.
+\li a \c on property (the interface to interact with the switch),
+\li two images (the background image and the knob),
+\li two mouse regions for user interation (on the background image and on the knob),
+\li two states (a \e on state and a \e off state),
+\li two functions or slots to react to the user interation (\c toggle() and \c dorelease()),
+\li and a transition that describe how to go from one state to the other.
 \endlist
 
 \section1 Switch.qml
@@ -92,8 +92,8 @@ in the \c dorelease() function that is called in the \c onReleased property.
 
 We define the two states of the switch:
 \list
-\o In the \e on state the knob is on the right (\c x position is 78) and the \c on property is \c true.
-\o In the \e off state the knob is on the left (\c x position is 1) and the \c on property is \c false.
+\li In the \e on state the knob is on the right (\c x position is 78) and the \c on property is \c true.
+\li In the \e off state the knob is on the left (\c x position is 1) and the \c on property is \c false.
 \endlist
 
 For more information on states see \l{qmlstates}{QML States}.
diff --git a/doc/src/declarative/examples.qdoc b/doc/src/declarative/examples.qdoc
index 80e5d18..966b224 100644
--- a/doc/src/declarative/examples.qdoc
+++ b/doc/src/declarative/examples.qdoc
@@ -60,43 +60,43 @@ can be used to produce sophisticated interfaces and applications:
 \table
 \row
 
-\o
+\li
 \l{demos/declarative/calculator}{Calculator}
 \image qml-calculator-example-small.png
 
-\o
+\li
 \l{demos/declarative/flickr}{Flickr Mobile}
 \image qml-flickr-demo-small.png
 
-\o
+\li
 \l{demos/declarative/minehunt}{Minehunt}
 \image qml-minehunt-demo-small.png
 
 \row
 
-\o
+\li
 \l{demos/declarative/photoviewer}{Photo Viewer}
 \image qml-photoviewer-demo-small.png
 
-\o
+\li
 \l{demos/declarative/rssnews}{RSS News Reader}
 \image qml-rssnews-demo-small.png
 
-\o
+\li
 \l{demos/declarative/samegame}{Same Game}
 \image qml-samegame-demo-small.png
 
 \row
 
-\o
+\li
 \l{demos/declarative/snake}{Snake}
 \image qml-snake-demo-small.png
 
-\o
+\li
 \l{demos/declarative/twitter}{Twitter}
 \image qml-twitter-demo-small.png
 
-\o
+\li
 \l{demos/declarative/webbrowser}{Web Browser}
 \image qml-webbrowser-demo-small.png
 
@@ -116,127 +116,127 @@ The examples can be found in Qt's \c examples/declarative directory.
 
 \section2 Animation
 \list
-\o \l{declarative/animation/basics/color-animation}{Color Animation}
-\o \l{declarative/animation/behaviors/behavior-example}{Behaviors}
-\o \l{declarative/animation/easing}{Easing}
-\o \l{declarative/animation/basics/property-animation}{Property Animation}
-\o \l{declarative/animation/states}{States}
-\o \l{declarative/animation/behaviors/wigglytext}{Wiggly Text}
+\li \l{declarative/animation/basics/color-animation}{Color Animation}
+\li \l{declarative/animation/behaviors/behavior-example}{Behaviors}
+\li \l{declarative/animation/easing}{Easing}
+\li \l{declarative/animation/basics/property-animation}{Property Animation}
+\li \l{declarative/animation/states}{States}
+\li \l{declarative/animation/behaviors/wigglytext}{Wiggly Text}
 \endlist
 
 \section2 Image Elements
 \list
-\o \l{declarative/imageelements/borderimage}{BorderImage}
-\o \l{declarative/imageelements/image}{Image}
+\li \l{declarative/imageelements/borderimage}{BorderImage}
+\li \l{declarative/imageelements/image}{Image}
 \endlist
 
 \section2 Text
 \list
-\o \l{declarative/text/fonts}{Fonts}
-\o \l{declarative/text/textselection}{Text Selection}
+\li \l{declarative/text/fonts}{Fonts}
+\li \l{declarative/text/textselection}{Text Selection}
 \endlist
 
 \section2 Positioners
 \list
-\o \l{declarative/positioners}{Example}
+\li \l{declarative/positioners}{Example}
 \endlist
 
 \section2 Key Interaction
 \list
-\o \l{declarative/keyinteraction/focus}{Focus}
+\li \l{declarative/keyinteraction/focus}{Focus}
 \endlist
 
 \section2 Touch Interaction
 \list
-\o \l{declarative/touchinteraction/mousearea}{MouseArea}
+\li \l{declarative/touchinteraction/mousearea}{MouseArea}
 \endlist
 
 \section2 UI Components
 \list
-\o \l{declarative/ui-components/dialcontrol}{Dial control}
-\o \l{declarative/ui-components/flipable}{Flipable}
-\o \l{declarative/ui-components/progressbar}{Progress bar}
-\o \l{declarative/ui-components/scrollbar}{Scroll bar}
-\o \l{declarative/ui-components/searchbox}{Search box}
-\o \l{declarative/ui-components/slideswitch}{Slide switch}
-\o \l{declarative/ui-components/spinner}{Spinner}
-\o \l{declarative/ui-components/tabwidget}{Tab widget}
+\li \l{declarative/ui-components/dialcontrol}{Dial control}
+\li \l{declarative/ui-components/flipable}{Flipable}
+\li \l{declarative/ui-components/progressbar}{Progress bar}
+\li \l{declarative/ui-components/scrollbar}{Scroll bar}
+\li \l{declarative/ui-components/searchbox}{Search box}
+\li \l{declarative/ui-components/slideswitch}{Slide switch}
+\li \l{declarative/ui-components/spinner}{Spinner}
+\li \l{declarative/ui-components/tabwidget}{Tab widget}
 \endlist
 
 \section2 Toys
 \list
-\o \l{declarative/toys/clocks}{Clocks}
-\o \l{declarative/toys/corkboards}{Corkboards}
-\o \l{declarative/toys/dynamicscene}{Dynamic Scene}
-\o \l{declarative/toys/tic-tac-toe}{Tic Tac Toe}
-\o \l{declarative/toys/tvtennis}{TV Tennis}
+\li \l{declarative/toys/clocks}{Clocks}
+\li \l{declarative/toys/corkboards}{Corkboards}
+\li \l{declarative/toys/dynamicscene}{Dynamic Scene}
+\li \l{declarative/toys/tic-tac-toe}{Tic Tac Toe}
+\li \l{declarative/toys/tvtennis}{TV Tennis}
 \endlist
 
 \section2 Models and Views
 \list
-\o \l{declarative/modelviews/gridview}{GridView}
-\o \l{Models and Views: ListView Examples}{ListView}
-\o \l{declarative/modelviews/pathview}{PathView}
-\o \l{declarative/modelviews/package}{Package}
-\o \l{declarative/modelviews/parallax}{Parallax}
-\o \l{declarative/modelviews/visualitemmodel}{VisualItemModel}
+\li \l{declarative/modelviews/gridview}{GridView}
+\li \l{Models and Views: ListView Examples}{ListView}
+\li \l{declarative/modelviews/pathview}{PathView}
+\li \l{declarative/modelviews/package}{Package}
+\li \l{declarative/modelviews/parallax}{Parallax}
+\li \l{declarative/modelviews/visualitemmodel}{VisualItemModel}
 
-\o \l{declarative/modelviews/stringlistmodel}{String ListModel}
-\o \l{declarative/modelviews/objectlistmodel}{Object ListModel}
-\o \l{declarative/modelviews/abstractitemmodel}{AbstractItemModel}
+\li \l{declarative/modelviews/stringlistmodel}{String ListModel}
+\li \l{declarative/modelviews/objectlistmodel}{Object ListModel}
+\li \l{declarative/modelviews/abstractitemmodel}{AbstractItemModel}
 
-\o \l{Models and Views: WebView Examples}{WebView}
+\li \l{Models and Views: WebView Examples}{WebView}
 \endlist
 
 \section2 XML
 \list
-\o \l{declarative/xml/xmlhttprequest}{XmlHttpRequest}
+\li \l{declarative/xml/xmlhttprequest}{XmlHttpRequest}
 \endlist
 
 \section2 Internationalization (i18n)
 \list
-\o \l{declarative/i18n}{Example}
+\li \l{declarative/i18n}{Example}
 \endlist
 
 \section2 Right-to-left User Interfaces
 \list
-\o \l{declarative/righttoleft/layoutmirroring}{Layout mirroring}
-\o \l{declarative/righttoleft/layoutdirection}{Layout direction}
-\o \l{declarative/righttoleft/textalignment}{Text alignment}
+\li \l{declarative/righttoleft/layoutmirroring}{Layout mirroring}
+\li \l{declarative/righttoleft/layoutdirection}{Layout direction}
+\li \l{declarative/righttoleft/textalignment}{Text alignment}
 \endlist
 
 \section2 Threading
 \list
-\o \l{declarative/threading/threadedlistmodel}{Threaded ListModel}
-\o \l{declarative/threading/workerscript}{WorkerScript}
+\li \l{declarative/threading/threadedlistmodel}{Threaded ListModel}
+\li \l{declarative/threading/workerscript}{WorkerScript}
 \endlist
 
 \section2 Screen Orientation
 \list
-\o \l{declarative/screenorientation}{Example}
+\li \l{declarative/screenorientation}{Example}
 \endlist
 
 \section2 SQL Local Storage
 \list
-\o \l{declarative/sqllocalstorage}{Example}
+\li \l{declarative/sqllocalstorage}{Example}
 \endlist
 
 \section2 C++ Extensions
 \list
-\o \l{declarative-cppextensions-reference.html}{Reference examples}
-\o \l{declarative/cppextensions/plugins}{Plugins}
-\o \l{declarative-cppextensions-qgraphicslayouts.html}{QGraphicsLayouts}
-\o \l{declarative/cppextensions/qwidgets}{QWidgets}
-\o \l{declarative/cppextensions/imageprovider}{Image provider}
-\o \l{declarative/cppextensions/networkaccessmanagerfactory}{Network access manager factory}
+\li \l{declarative-cppextensions-reference.html}{Reference examples}
+\li \l{declarative/cppextensions/plugins}{Plugins}
+\li \l{declarative-cppextensions-qgraphicslayouts.html}{QGraphicsLayouts}
+\li \l{declarative/cppextensions/qwidgets}{QWidgets}
+\li \l{declarative/cppextensions/imageprovider}{Image provider}
+\li \l{declarative/cppextensions/networkaccessmanagerfactory}{Network access manager factory}
 \endlist
 
 
 \section1 Labs
 
 \list
-\o \l{src/imports/folderlistmodel}{Folder List Model} - a C++ model plugin
-\o \l{declarative/shadereffects}{Shader Effects}
+\li \l{src/imports/folderlistmodel}{Folder List Model} - a C++ model plugin
+\li \l{declarative/shadereffects}{Shader Effects}
 \endlist
 
 */
diff --git a/doc/src/declarative/extending-tutorial.qdoc b/doc/src/declarative/extending-tutorial.qdoc
index 8dac402..568aece 100644
--- a/doc/src/declarative/extending-tutorial.qdoc
+++ b/doc/src/declarative/extending-tutorial.qdoc
@@ -43,13 +43,13 @@ examples/declarative/tutorials/extending directory.
 Tutorial chapters:
 
 \list 1
-\o \l{declarative/tutorials/extending/chapter1-basics}{Creating a New Type}
-\o \l{declarative/tutorials/extending/chapter2-methods}{Connecting to C++ Methods and Signals}
-\o \l{declarative/tutorials/extending/chapter3-bindings}{Property Binding}
-\o \l{declarative/tutorials/extending/chapter4-customPropertyTypes}{Using Custom Property Types}
-\o \l{declarative/tutorials/extending/chapter5-listproperties}{Using List Property Types}
-\o \l{declarative/tutorials/extending/chapter6-plugins}{Writing an Extension Plugin}
-\o \l{qml-extending-tutorial7.html}{In Summary}
+\li \l{declarative/tutorials/extending/chapter1-basics}{Creating a New Type}
+\li \l{declarative/tutorials/extending/chapter2-methods}{Connecting to C++ Methods and Signals}
+\li \l{declarative/tutorials/extending/chapter3-bindings}{Property Binding}
+\li \l{declarative/tutorials/extending/chapter4-customPropertyTypes}{Using Custom Property Types}
+\li \l{declarative/tutorials/extending/chapter5-listproperties}{Using List Property Types}
+\li \l{declarative/tutorials/extending/chapter6-plugins}{Writing an Extension Plugin}
+\li \l{qml-extending-tutorial7.html}{In Summary}
 \endlist
 
 */
@@ -91,8 +91,8 @@ properties. Since QML makes extensive use of Qt's \l{Meta-Object System}{meta ob
 this new class must:
 
 \list
-\o Inherit from QObject
-\o Declare its properties using the Q_PROPERTY macro
+\li Inherit from QObject
+\li Declare its properties using the Q_PROPERTY macro
 \endlist
 
 Here is our \c PieChart class, defined in \c piechart.h:
@@ -289,11 +289,11 @@ We can also use various other property types. QML has built-in support for the t
 listed in the \l{QML Basic Types} documentation, which includes the following:
 
 \list
-\o bool, unsigned int, int, float, double, qreal
-\o QString, QUrl, QColor
-\o QDate, QTime, QDateTime
-\o QPoint, QPointF, QSize, QSizeF, QRect, QRectF
-\o QVariant
+\li bool, unsigned int, int, float, double, qreal
+\li QString, QUrl, QColor
+\li QDate, QTime, QDateTime
+\li QPoint, QPointF, QSize, QSizeF, QRect, QRectF
+\li QVariant
 \endlist
 
 If we want to create a property whose type is not supported by QML by default,
@@ -408,9 +408,9 @@ loading our own C++ application.
 To create a plugin library, we need:
 
 \list
-\o A plugin class that registers our QML types
-\o A project file that describes the plugin
-\o A \l{Writing a qmldir file}{qmldir} file that tells the QML engine to load the plugin
+\li A plugin class that registers our QML types
+\li A project file that describes the plugin
+\li A \l{Writing a qmldir file}{qmldir} file that tells the QML engine to load the plugin
 \endlist
 
 First, we create a plugin class named \c ChartsPlugin. It subclasses QDeclarativeExtensionPlugin
@@ -459,12 +459,12 @@ be used by \c app.qml without import statements.
 In this tutorial, we've shown the basic steps for creating a QML extension:
 
 \list
-\o Define new QML types by subclassing QObject and registering them with qmlRegisterType()
-\o Add callable methods using Q_INVOKABLE or Qt slots, and connect to Qt signals with an \c onSignal syntax
-\o Add property bindings by defining \l{Qt's Property System}{NOTIFY} signals
-\o Define custom property types if the built-in types are not sufficient
-\o Define list property types using QDeclarativeListProperty
-\o Create a plugin library by defining a Qt plugin and writing a \c qmldir file
+\li Define new QML types by subclassing QObject and registering them with qmlRegisterType()
+\li Add callable methods using Q_INVOKABLE or Qt slots, and connect to Qt signals with an \c onSignal syntax
+\li Add property bindings by defining \l{Qt's Property System}{NOTIFY} signals
+\li Define custom property types if the built-in types are not sufficient
+\li Define list property types using QDeclarativeListProperty
+\li Create a plugin library by defining a Qt plugin and writing a \c qmldir file
 \endlist
 
 
diff --git a/doc/src/declarative/extending.qdoc b/doc/src/declarative/extending.qdoc
index f1db369..c188a92 100644
--- a/doc/src/declarative/extending.qdoc
+++ b/doc/src/declarative/extending.qdoc
@@ -90,11 +90,11 @@ properties of the types listed in the \l{QML Basic Types}
 document, which includes the following:
 
 \list
-\o bool, unsigned int, int, float, double, qreal
-\o QString, QUrl, QColor
-\o QDate, QTime, QDateTime
-\o QPoint, QPointF, QSize, QSizeF, QRect, QRectF
-\o QVariant
+\li bool, unsigned int, int, float, double, qreal
+\li QString, QUrl, QColor
+\li QDate, QTime, QDateTime
+\li QPoint, QPointF, QSize, QSizeF, QRect, QRectF
+\li QVariant
 \endlist
 
 When a property of a supported type is added to a C++ class, in a QML
@@ -432,13 +432,13 @@ It is an element's responsibility to ensure that it does not access or return
 pointers to invalid objects.  QML makes the following guarentees:
 
 \list
-\o An object assigned to a QObject (or QObject-derived) pointer property will be
+\li An object assigned to a QObject (or QObject-derived) pointer property will be
 valid at the time of assignment.
 
 Following assignment, it is the responsibility of the class to subsequently guard
 this pointer, either through a class specific method or the generic QPointer class.
 
-\o An object assigned to a QVariant will be valid at the time of assignment.
+\li An object assigned to a QVariant will be valid at the time of assignment.
 
 When assigning an object to a QVariant property, QML will always use a QMetaType::QObjectStar
 typed QVariant.  It is the responsibility of the class to guard the pointer.  A
@@ -446,7 +446,7 @@ general rule when writing a class that uses QVariant properties is to check the
 type of the QVariant when it is set and if the type is not handled by your class,
 reset it to an invalid variant.
 
-\o An object assigned to a QObject (or QObject-derived) list property will be
+\li An object assigned to a QObject (or QObject-derived) list property will be
 valid at the time of assignment.
 
 Following assignment, it is the responsibility of the class to subsequently guard
diff --git a/doc/src/declarative/focus.qdoc b/doc/src/declarative/focus.qdoc
index 85900fe..f8a9a08 100644
--- a/doc/src/declarative/focus.qdoc
+++ b/doc/src/declarative/focus.qdoc
@@ -46,13 +46,13 @@ and to address some of the cases unique to fluid user interfaces, the QML items
 
 When the user presses or releases a key, the following occurs:
 \list 1
-\o Qt receives the key action and generates a key event.
-\o If the Qt widget containing the \l QDeclarativeView has focus, the key event
+\li Qt receives the key action and generates a key event.
+\li If the Qt widget containing the \l QDeclarativeView has focus, the key event
 is delivered to it. Otherwise, regular Qt key handling continues.
-\o The key event is delivered by the scene to the QML \l Item with
+\li The key event is delivered by the scene to the QML \l Item with
 \e {active focus}. If no Item has active focus, the key event is
 \l {QEvent::ignore()}{ignored} and regular Qt key handling continues.
-\o If the QML Item with active focus accepts the key event, propagation
+\li If the QML Item with active focus accepts the key event, propagation
 stops. Otherwise the event is "bubbled up", by recursively passing it to each
 Item's parent until either the event is accepted, or the root Item is reached.
 
@@ -63,7 +63,7 @@ item and thus subsequently be ignored.
 \snippet doc/src/snippets/declarative/focus/rectangle.qml simple key event
 \snippet doc/src/snippets/declarative/focus/rectangle.qml simple key event end
 
-\o If the root \l Item is reached, the key event is \l {QEvent::ignore()}{ignored} and regular Qt key handling continues.
+\li If the root \l Item is reached, the key event is \l {QEvent::ignore()}{ignored} and regular Qt key handling continues.
 
 \endlist
 
@@ -137,11 +137,11 @@ visual result shown.
 
 Conceptually \e {focus scopes} are quite simple.
 \list
-\o Within each focus scope one element may have \c {Item::focus} set to
+\li Within each focus scope one element may have \c {Item::focus} set to
 \c true. If more than one \l Item has the \c focus property set, the
 last element to set the \c focus will have the focus and the others are unset,
 similar to when there are no focus scopes.
-\o When a focus scope receives active focus, the contained element with
+\li When a focus scope receives active focus, the contained element with
 \c focus set (if any) also gets the active focus. If this element is
 also a \l FocusScope, the proxying behavior continues. Both the
 focus scope and the sub-focused item will have \c activeFocus property set.
diff --git a/doc/src/declarative/globalobject.qdoc b/doc/src/declarative/globalobject.qdoc
index c59e207..9a74519 100644
--- a/doc/src/declarative/globalobject.qdoc
+++ b/doc/src/declarative/globalobject.qdoc
@@ -48,8 +48,8 @@ data from over a network.
 The XMLHttpRequest API implements the same \l {http://www.w3.org/TR/XMLHttpRequest/}{W3C standard}
 as many popular web browsers with following exceptions:
 \list
-\i QML's XMLHttpRequest does not enforce the same origin policy.
-\i QML's XMLHttpRequest does not support \e synchronous requests.
+\li QML's XMLHttpRequest does not enforce the same origin policy.
+\li QML's XMLHttpRequest does not support \e synchronous requests.
 \endlist
 
 Additionally, the \c responseXML XML DOM tree currently supported by QML is a reduced subset
@@ -58,58 +58,58 @@ browser.  The following objects and properties are supported by the QML implemen
 
 \table
 \header
-\o \bold {Node}
-\o \bold {Document}
-\o \bold {Element}
-\o \bold {Attr}
-\o \bold {CharacterData}
-\o \bold {Text}
+\li \b {Node}
+\li \b {Document}
+\li \b {Element}
+\li \b {Attr}
+\li \b {CharacterData}
+\li \b {Text}
 
 \row
-\o 
+\li
 \list
-\o nodeName
-\o nodeValue
-\o nodeType
-\o parentNode
-\o childNodes
-\o firstChild
-\o lastChild
-\o previousSibling
-\o nextSibling
-\o attributes
+\li nodeName
+\li nodeValue
+\li nodeType
+\li parentNode
+\li childNodes
+\li firstChild
+\li lastChild
+\li previousSibling
+\li nextSibling
+\li attributes
 \endlist
 
-\o 
+\li
 \list
-\o xmlVersion
-\o xmlEncoding
-\o xmlStandalone
-\o documentElement
+\li xmlVersion
+\li xmlEncoding
+\li xmlStandalone
+\li documentElement
 \endlist
 
-\o
+\li
 \list 
-\o tagName
+\li tagName
 \endlist
 
-\o
+\li
 \list
-\o name
-\o value
-\o ownerElement
+\li name
+\li value
+\li ownerElement
 \endlist
 
-\o
+\li
 \list 
-\o data
-\o length
+\li data
+\li length
 \endlist
 
-\o
+\li
 \list
-\o isElementContentWhitespace
-\o wholeText
+\li isElementContentWhitespace
+\li wholeText
 \endlist
 
 \endtable
@@ -150,12 +150,12 @@ May throw exception with code property SQLException.DATABASE_ERR, or SQLExceptio
 When a database is first created, an INI file is also created specifying its characteristics:
 
 \table
-\header \o \bold {Key} \o \bold {Value}
-\row \o Name \o The name of the database passed to \c openDatabase()
-\row \o Version \o The version of the database passed to \c openDatabase()
-\row \o Description \o The description of the database passed to \c openDatabase()
-\row \o EstimatedSize \o The estimated size (in bytes) of the database passed to \c openDatabase()
-\row \o Driver \o Currently "QSQLITE"
+\header \li \b {Key} \li \b {Value}
+\row \li Name \li The name of the database passed to \c openDatabase()
+\row \li Version \li The version of the database passed to \c openDatabase()
+\row \li Description \li The description of the database passed to \c openDatabase()
+\row \li EstimatedSize \li The estimated size (in bytes) of the database passed to \c openDatabase()
+\row \li Driver \li Currently "QSQLITE"
 \endtable
 
 This data can be used by application tools.
@@ -190,11 +190,11 @@ This method executes a SQL \e statement, binding the list of \e values to SQL po
 It returns a results object, with the following properties:
 
 \table
-\header \o \bold {Type} \o \bold {Property} \o \bold {Value} \o \bold {Applicability}
-\row \o int \o rows.length \o The number of rows in the result \o SELECT
-\row \o var \o rows.item(i) \o Function that returns row \e i of the result \o SELECT
-\row \o int \o rowsAffected \o The number of rows affected by a modification \o UPDATE, DELETE
-\row \o string \o insertId \o The id of the row inserted \o INSERT
+\header \li \b {Type} \li \b {Property} \li \b {Value} \li \b {Applicability}
+\row \li int \li rows.length \li The number of rows in the result \li SELECT
+\row \li var \li rows.item(i) \li Function that returns row \e i of the result \li SELECT
+\row \li int \li rowsAffected \li The number of rows affected by a modification \li UPDATE, DELETE
+\row \li string \li insertId \li The id of the row inserted \li INSERT
 \endtable
 
 May throw exception with code property SQLException.DATABASE_ERR, SQLException.SYNTAX_ERR, or SQLException.UNKNOWN_ERR.
diff --git a/doc/src/declarative/integrating.qdoc b/doc/src/declarative/integrating.qdoc
index 6685442..fb4a64f 100644
--- a/doc/src/declarative/integrating.qdoc
+++ b/doc/src/declarative/integrating.qdoc
@@ -92,9 +92,9 @@ The following QGraphicsView options are recommended for optimal performance
 of QML UIs:
 
 \list
-\o QGraphicsView::setOptimizationFlags(QGraphicsView::DontSavePainterState)
-\o QGraphicsView::setViewportUpdateMode(QGraphicsView::BoundingRectViewportUpdate)
-\o QGraphicsScene::setItemIndexMethod(QGraphicsScene::NoIndex)
+\li QGraphicsView::setOptimizationFlags(QGraphicsView::DontSavePainterState)
+\li QGraphicsView::setViewportUpdateMode(QGraphicsView::BoundingRectViewportUpdate)
+\li QGraphicsScene::setItemIndexMethod(QGraphicsScene::NoIndex)
 \endlist
 
 \section2 Loading QGraphicsWidget objects in QML
diff --git a/doc/src/declarative/javascriptblocks.qdoc b/doc/src/declarative/javascriptblocks.qdoc
index 6a3b3f4..9ffa295 100644
--- a/doc/src/declarative/javascriptblocks.qdoc
+++ b/doc/src/declarative/javascriptblocks.qdoc
@@ -158,10 +158,10 @@ which in turn can call \c factorial() in \c factorial.js, as it has included
 
 \table
 \row
-\o {1,2} \snippet doc/src/snippets/declarative/integrating-javascript/includejs/app.qml 0
-\o \snippet doc/src/snippets/declarative/integrating-javascript/includejs/script.js 0
+\li {1,2} \snippet doc/src/snippets/declarative/integrating-javascript/includejs/app.qml 0
+\li \snippet doc/src/snippets/declarative/integrating-javascript/includejs/script.js 0
 \row
-\o \snippet doc/src/snippets/declarative/integrating-javascript/includejs/factorial.js 0
+\li \snippet doc/src/snippets/declarative/integrating-javascript/includejs/factorial.js 0
 \endtable
 
 Notice that calling \l {QML:Qt::include()}{Qt.include()} imports all functions from
@@ -218,8 +218,8 @@ in \c script.js:
 
 \table
 \row
-\o \snippet doc/src/snippets/declarative/integrating-javascript/connectjs.qml 0
-\o \snippet doc/src/snippets/declarative/integrating-javascript/script.js 0
+\li \snippet doc/src/snippets/declarative/integrating-javascript/connectjs.qml 0
+\li \snippet doc/src/snippets/declarative/integrating-javascript/script.js 0
 \endtable
 
 The \c jsFunction() will now be called whenever MouseArea's \c clicked signal is emitted.
@@ -233,7 +233,7 @@ See \l{QML Signal and Handler Event System#Connecting Signals to Methods and Sig
 QML executes standard JavaScript code, with the following restrictions:
 
 \list
-\o JavaScript code cannot modify the global object.
+\li JavaScript code cannot modify the global object.
 
 In QML, the global object is constant - existing properties cannot be modified or
 deleted, and no new properties may be created.
@@ -266,7 +266,7 @@ Any attempt to modify the global object - either implicitly or explicitly - will
 cause an exception.  If uncaught, this will result in an warning being printed,
 that includes the file and line number of the offending code.
 
-\o Global code is run in a reduced scope
+\li Global code is run in a reduced scope
 
 During startup, if a QML file includes an external JavaScript file with "global"
 code, it is executed in a scope that contains only the external file itself and
@@ -291,7 +291,7 @@ This restriction exists as the QML environment is not yet fully established.
 To run code after the environment setup has completed, refer to
 \l {Running JavaScript at Startup}.
 
-\o The value of \c this is currently undefined in QML in the majority of contexts
+\li The value of \c this is currently undefined in QML in the majority of contexts
 
 The \c this keyword is supported when binding properties from JavaScript. 
 In all other situations, the value of
diff --git a/doc/src/declarative/modules.qdoc b/doc/src/declarative/modules.qdoc
index 7ff3a02..92d5e6d 100644
--- a/doc/src/declarative/modules.qdoc
+++ b/doc/src/declarative/modules.qdoc
@@ -42,10 +42,10 @@ explicitly using the \c import statement to import them as modules. For
 example, an \c import statement is required to use:
 
 \list
-\o A component defined in another QML file that is not in the same directory
-\o A component defined in a QML file located on a remote server
-\o A \l{QDeclarativeExtensionPlugin}{QML extension plugin} library (unless the plugin is installed in the same directory)
-\o A JavaScript file (note this must be imported using \l {#namespaces}{named imports})
+\li A component defined in another QML file that is not in the same directory
+\li A component defined in a QML file located on a remote server
+\li A \l{QDeclarativeExtensionPlugin}{QML extension plugin} library (unless the plugin is installed in the same directory)
+\li A JavaScript file (note this must be imported using \l {#namespaces}{named imports})
 \endlist
 
 An \c import statement includes the module name, and possibly a version number.
@@ -76,11 +76,11 @@ directory using a relative or absolute path, like this:
 
 \table
 \row
-\o Directory structure
-\o Contents of application.qml
+\li Directory structure
+\li Contents of application.qml
 
 \row
-\o
+\li
 \code
 MyQMLProject
     |- MyComponents
@@ -91,7 +91,7 @@ MyQMLProject
         |- application.qml
 \endcode
 
-\o
+\li
 \qml
 import "../MyComponents"
 
@@ -181,9 +181,9 @@ locations to be searched by the QML engine for a matching module. By default, th
 contains:
 
 \list
-\o The directory of the current file
-\o The location specified by QLibraryInfo::ImportsPath
-\o Paths specified by the \c QML_IMPORT_PATH environment variable
+\li The directory of the current file
+\li The location specified by QLibraryInfo::ImportsPath
+\li Paths specified by the \c QML_IMPORT_PATH environment variable
 \endlist
 
 Additional import paths can be added through QDeclarativeEngine::addImportPath() or the
@@ -313,9 +313,9 @@ plugin <Name> [<Path>]
 typeinfo <File>
 \endcode
 
-\bold {# <Comment>} lines are used for comments. They are ignored by the QML engine.
+\b {# <Comment>} lines are used for comments. They are ignored by the QML engine.
 
-\bold {<TypeName> [<InitialVersion>] <File>} lines are used to add QML files as types.
+\b {<TypeName> [<InitialVersion>] <File>} lines are used to add QML files as types.
 <TypeName> is the type being made available, the optional <InitialVersion> is a version
 number, and <File> is the (relative) file name of the QML file defining the type.
 
@@ -323,7 +323,7 @@ Installed files do not need to import the module of which they are a part, as th
 to the other QML files in the module as relative (local) files, but
 if the module is imported from a remote location, those files must nevertheless be listed in
 the \c qmldir file. Types which you do not wish to export to users of your module
-may be marked with the \c internal keyword: \bold {internal <TypeName> <File>}.
+may be marked with the \c internal keyword: \b {internal <TypeName> <File>}.
 
 The same type can be provided by different files in different versions, in which
 case later versions (e.g. 1.2) must precede earlier versions (e.g. 1.0),
@@ -342,7 +342,7 @@ of installed software, since a versioned import \e only imports types for that v
 leaving other identifiers available, even if the actual installed version might otherwise
 provide those identifiers.
 
-\bold {plugin <Name> [<Path>]} lines are used to add \l{QDeclarativeExtensionPlugin}{QML C++ plugins} to the module. <Name> is the name of the library.  It is usually not the same as the file name
+\b {plugin <Name> [<Path>]} lines are used to add \l{QDeclarativeExtensionPlugin}{QML C++ plugins} to the module. <Name> is the name of the library.  It is usually not the same as the file name
 of the plugin binary, which is platform dependent; e.g. the library \c MyAppTypes would produce
 \c libMyAppTypes.so on Linux and \c MyAppTypes.dll on Windows.
 
@@ -351,7 +351,7 @@ plugin file, or a relative path from the directory containing the \c qmldir file
 containing the plugin file. By default the engine searches for the plugin library in the directory that contains the \c qmldir
 file. The plugin search path can be queried with QDeclarativeEngine::pluginPathList() and modified using QDeclarativeEngine::addPluginPath(). When running the \l {QML Viewer}, use the \c -P option to add paths to the plugin search path.
 
-\bold {typeinfo <File>} lines add \l{Writing a qmltypes file}{type description files} to
+\b {typeinfo <File>} lines add \l{Writing a qmltypes file}{type description files} to
 the module that can be read by QML tools such as Qt Creator to get information about the
 types defined by the module's plugins. <File> is the (relative) file name of a .qmltypes
 file.
@@ -396,9 +396,9 @@ to \c /tmp/imports/My/Module/qmldir to register it.
 
 While the qmldump tool covers most cases, it does not work if:
 \list
-\o The plugin uses a \l{QDeclarativeCustomParser}. The component that uses
+\li The plugin uses a \l{QDeclarativeCustomParser}. The component that uses
    the custom parser will not get its members documented.
-\o The plugin can not be loaded. In particular if you cross-compiled
+\li The plugin can not be loaded. In particular if you cross-compiled
    the plugin for a different architecture, qmldump will not be able to
    load it.
 \endlist
diff --git a/doc/src/declarative/mouseevents.qdoc b/doc/src/declarative/mouseevents.qdoc
index c267855..50b321c 100644
--- a/doc/src/declarative/mouseevents.qdoc
+++ b/doc/src/declarative/mouseevents.qdoc
@@ -38,8 +38,8 @@
 \section1 Mouse Elements
 
 \list
-\o \l{MouseArea} Element
-\o \l{MouseEvent} Object
+\li \l{MouseArea} Element
+\li \l{MouseEvent} Object
 \endlist
 
 \section1 Mouse Event Handling
@@ -67,15 +67,15 @@ mouse events. The \l MouseArea element documentation describes these
 gestures in greater detail:
 
 \list
-\o canceled
-\o clicked
-\o doubleClicked
-\o entered
-\o exited
-\o positionChanged
-\o pressAndHold
-\o pressed
-\o released
+\li canceled
+\li clicked
+\li doubleClicked
+\li entered
+\li exited
+\li positionChanged
+\li pressAndHold
+\li pressed
+\li released
 \endlist
 
 These signals have signal handlers that are invoked when the signals are emitted.
diff --git a/doc/src/declarative/network.qdoc b/doc/src/declarative/network.qdoc
index f8a7666..0ccb3a8 100644
--- a/doc/src/declarative/network.qdoc
+++ b/doc/src/declarative/network.qdoc
@@ -54,8 +54,8 @@ Image {
 Network transparency is supported throughout QML, for example:
 
 \list
-\o Fonts - the \c source property of FontLoader is a URL
-\o WebViews - the \c url property of WebView (obviously!)
+\li Fonts - the \c source property of FontLoader is a URL
+\li WebViews - the \c url property of WebView (obviously!)
 \endlist
 
 Even QML types themselves can be on the network - if the \l {QML Viewer} is used to load
@@ -148,10 +148,10 @@ The \c import statement is only network transparent if it has an "as" clause.
 
 More specifically:
 \list
-\o \c{import "dir"} only works on local file systems
-\o \c{import libraryUri} only works on local file systems
-\o \c{import "dir" as D} works network transparently
-\o \c{import libraryUrl as U} works network transparently
+\li \c{import "dir"} only works on local file systems
+\li \c{import libraryUri} only works on local file systems
+\li \c{import "dir" as D} works network transparently
+\li \c{import libraryUrl as U} works network transparently
 \endlist
 
 
diff --git a/doc/src/declarative/positioners.qdoc b/doc/src/declarative/positioners.qdoc
index e9b60a3..199f32f 100644
--- a/doc/src/declarative/positioners.qdoc
+++ b/doc/src/declarative/positioners.qdoc
@@ -48,10 +48,10 @@ A set of standard positioners are provided in the basic set of Qt Quick
 graphical elements:
 
 \list
-\o \l{#Column}{Column} arranges its children in a column
-\o \l{#Row}{Row} arranges its children in a row
-\o \l{#Grid}{Grid} arranges its children in a grid
-\o \l{#Flow}{Flow} arranges its children like words on a page
+\li \l{#Column}{Column} arranges its children in a column
+\li \l{#Row}{Row} arranges its children in a row
+\li \l{#Grid}{Grid} arranges its children in a grid
+\li \l{#Flow}{Flow} arranges its children like words on a page
 \endlist
 
 \section2 Column
diff --git a/doc/src/declarative/qdeclarativedocument.qdoc b/doc/src/declarative/qdeclarativedocument.qdoc
index 8cd400a..993fed7 100644
--- a/doc/src/declarative/qdeclarativedocument.qdoc
+++ b/doc/src/declarative/qdeclarativedocument.qdoc
@@ -73,12 +73,12 @@ Each instance is created with a different value for its \c text property:
 
 \table
 \row
-\o Button.qml
-\o application.qml
+\li Button.qml
+\li application.qml
 
 \row
-\o \snippet doc/src/snippets/declarative/qml-documents/qmldocuments.qml document
-\o
+\li \snippet doc/src/snippets/declarative/qml-documents/qmldocuments.qml document
+\li
 \qml
 import QtQuick 1.0
 
@@ -97,7 +97,7 @@ Column {
 \endtable
 
 Any snippet of QML code can become a component, just by placing it in the file "<Name>.qml"
-where <Name> is the new element name, and begins with an \bold uppercase letter.  Note that
+where <Name> is the new element name, and begins with an \b uppercase letter.  Note that
 the case of all characters in the <Name> are significant on some filesystems, notably
 UNIX filesystems.  It is recommended that the case of the filename matches the case of
 the component name in QML exactly, regardless of the platform the QML will be deployed to.
@@ -133,9 +133,9 @@ These final two examples are behaviorally identical to the original document.
 
 \table
 \row
-\o
+\li
 \snippet doc/src/snippets/declarative/qml-documents/inline-component.qml document
-\o
+\li
 \snippet doc/src/snippets/declarative/qml-documents/inline-text-component.qml document
 \endtable
 
diff --git a/doc/src/declarative/qdeclarativei18n.qdoc b/doc/src/declarative/qdeclarativei18n.qdoc
index f53502f..b98cfcc 100644
--- a/doc/src/declarative/qdeclarativei18n.qdoc
+++ b/doc/src/declarative/qdeclarativei18n.qdoc
@@ -48,8 +48,8 @@ QScriptEngine::installTranslatorFunctions().
 QML relies on the core internationalization capabilities provided by Qt. These
 capabilities are described more fully in:
 \list
-\o \l {Internationalization with Qt}
-\o \l {Qt Linguist Manual}
+\li \l {Internationalization with Qt}
+\li \l {Qt Linguist Manual}
 \endlist
 
 You can test a translation with the \l {QML Viewer} using the -translation option.
diff --git a/doc/src/declarative/qdeclarativeintro.qdoc b/doc/src/declarative/qdeclarativeintro.qdoc
index 3908c79..6b41088 100644
--- a/doc/src/declarative/qdeclarativeintro.qdoc
+++ b/doc/src/declarative/qdeclarativeintro.qdoc
@@ -96,8 +96,8 @@ and \l Image elements would not be available.
 
 Commenting in QML is similar to JavaScript.
 \list
-\o Single line comments start with // and finish at the end of the line.
-\o Multiline comments start with /* and finish with *\/
+\li Single line comments start with // and finish at the end of the line.
+\li Multiline comments start with /* and finish with *\/
 \endlist
 
 \snippet doc/src/snippets/declarative/comments.qml 0
diff --git a/doc/src/declarative/qdeclarativemodels.qdoc b/doc/src/declarative/qdeclarativemodels.qdoc
index ac18469..ce495a4 100644
--- a/doc/src/declarative/qdeclarativemodels.qdoc
+++ b/doc/src/declarative/qdeclarativemodels.qdoc
@@ -223,14 +223,14 @@ QAbstractItemModel::setRoleNames(). The default role names set by Qt are:
 
 \table
 \header
-\o Qt Role
-\o QML Role Name
+\li Qt Role
+\li QML Role Name
 \row
-\o Qt::DisplayRole
-\o display
+\li Qt::DisplayRole
+\li display
 \row
-\o Qt::DecorationRole
-\o decoration
+\li Qt::DecorationRole
+\li decoration
 \endtable
 
 Here is an application with a QAbstractListModel subclass named \c AnimalModel
@@ -268,10 +268,10 @@ the VisualDataModel element provides several properties and functions for use
 with models of type QAbstractItemModel:
 
 \list
-\o \e hasModelChildren role property to determine whether a node has child nodes.
-\o \l VisualDataModel::rootIndex allows the root node to be specifed
-\o \l VisualDataModel::modelIndex() returns a QModelIndex which can be assigned to VisualDataModel::rootIndex
-\o \l VisualDataModel::parentModelIndex() returns a QModelIndex which can be assigned to VisualDataModel::rootIndex
+\li \e hasModelChildren role property to determine whether a node has child nodes.
+\li \l VisualDataModel::rootIndex allows the root node to be specifed
+\li \l VisualDataModel::modelIndex() returns a QModelIndex which can be assigned to VisualDataModel::rootIndex
+\li \l VisualDataModel::parentModelIndex() returns a QModelIndex which can be assigned to VisualDataModel::rootIndex
 \endlist
 
 
@@ -286,7 +286,7 @@ created directly as elements within QML:
 \table
 \row
 
-\o
+\li
 \code
 class MyModelPlugin : public QDeclarativeExtensionPlugin
 {
@@ -301,7 +301,7 @@ public:
 Q_EXPORT_PLUGIN2(mymodelplugin, MyModelPlugin);
 \endcode
 
-\o
+\li
 \qml
 MyModel {
     id: myModel
@@ -449,9 +449,9 @@ A set of standard views are provided in the basic set of Qt Quick
 graphical elements:
 
 \list
-\o \l{#ListView}{ListView} arranges items in a horizontal or vertical list
-\o \l{#GridView}{GridView} arranges items in a grid within the available space
-\o \l{#PathView}{PathView} arranges items on a path
+\li \l{#ListView}{ListView} arranges items in a horizontal or vertical list
+\li \l{#GridView}{GridView} arranges items in a grid within the available space
+\li \l{#PathView}{PathView} arranges items on a path
 \endlist
 
 Unlike these items, \l WebView is not a fully-featured view item, and needs
diff --git a/doc/src/declarative/qdeclarativeperformance.qdoc b/doc/src/declarative/qdeclarativeperformance.qdoc
index 3322974..2fc8b2d 100644
--- a/doc/src/declarative/qdeclarativeperformance.qdoc
+++ b/doc/src/declarative/qdeclarativeperformance.qdoc
@@ -96,11 +96,11 @@ Delegates must be created quickly as the view is flicked.  There are two importa
 aspects to maintaining a smooth view:
 
 \list
-\o Small delegates - keep the amount of QML to a minimum.  Have just enough
+\li Small delegates - keep the amount of QML to a minimum.  Have just enough
 QML in the delegate to display the necessary information.  Any additional functionality
 that is only needed when the delegate is clicked, for example, should be created by
 a Loader as needed.
-\o Fast data access - ensure the data model is as fast as possible.
+\li Fast data access - ensure the data model is as fast as possible.
 \endlist
 
 \section1 Image resources over composition
@@ -127,8 +127,8 @@ QGLWidget as the viewport of your QDeclarativeView.
 
 You may need to try various options to find what works the best for your application.
 For embedded X11-based devices one recommended combination is to use the raster graphics
-system with a QGLWidget for the viewport. While this doesn't guarantee the \bold fastest
-performance for all use-cases, it typically has \bold{consistently good} performance for
+system with a QGLWidget for the viewport. While this doesn't guarantee the \b fastest
+performance for all use-cases, it typically has \b{consistently good} performance for
 all use-cases. In contrast, only using the raster paint engine may result in very good
 performance for parts of your application and very poor performance elsewhere.
 
diff --git a/doc/src/declarative/qdeclarativesecurity.qdoc b/doc/src/declarative/qdeclarativesecurity.qdoc
index f6246f2..468d627 100644
--- a/doc/src/declarative/qdeclarativesecurity.qdoc
+++ b/doc/src/declarative/qdeclarativesecurity.qdoc
@@ -60,18 +60,18 @@ perform appropriate checks on untrusted data it loads.
 A non-exhaustive list of the ways you could shoot yourself in the foot is:
 
 \list
-    \i Using \c import to import QML or JavaScript you do not control. BAD
-    \i Using \l Loader to import QML you do not control. BAD
-    \i Using \l{XMLHttpRequest}{XMLHttpRequest} to load data you do not control and executing it. BAD
+    \li Using \c import to import QML or JavaScript you do not control. BAD
+    \li Using \l Loader to import QML you do not control. BAD
+    \li Using \l{XMLHttpRequest}{XMLHttpRequest} to load data you do not control and executing it. BAD
 \endlist
 
 However, the above does not mean that you have no use for the network transparency of QML.
 There are many good and useful things you \e can do:
 
 \list
-    \i Create \l Image elements with source URLs of any online images. GOOD
-    \i Use XmlListModel to present online content. GOOD
-    \i Use \l{XMLHttpRequest}{XMLHttpRequest} to interact with online services. GOOD
+    \li Create \l Image elements with source URLs of any online images. GOOD
+    \li Use XmlListModel to present online content. GOOD
+    \li Use \l{XMLHttpRequest}{XMLHttpRequest} to interact with online services. GOOD
 \endlist
 
 The only reason this page is necessary at all is that JavaScript, when run in a \e{web browser},
diff --git a/doc/src/declarative/qdeclarativestates.qdoc b/doc/src/declarative/qdeclarativestates.qdoc
index a4204c5..ee5e387 100644
--- a/doc/src/declarative/qdeclarativestates.qdoc
+++ b/doc/src/declarative/qdeclarativestates.qdoc
@@ -36,12 +36,12 @@
 
 \section1 States Elements
 \list
-\o \l State
-\o \l PropertyChanges
-\o \l StateGroup
-\o \l StateChangeScript
-\o \l ParentChange
-\o \l AnchorChanges
+\li \l State
+\li \l PropertyChanges
+\li \l StateGroup
+\li \l StateChangeScript
+\li \l ParentChange
+\li \l AnchorChanges
 \endlist
 
 Many user interface designs are \e state driven; interfaces have configurations
@@ -55,12 +55,12 @@ In QML, \e states are a set of property configurations defined in a \l State
 element. Different configurations could, for example:
 
 \list
-\o Show some UI elements and hide others
-\o Present different available actions to the user
-\o Start, stop, or pause animations
-\o Execute some script required in the new state
-\o Change a property value for a particular item
-\o Show a different view or screen
+\li Show some UI elements and hide others
+\li Present different available actions to the user
+\li Start, stop, or pause animations
+\li Execute some script required in the new state
+\li Change a property value for a particular item
+\li Show a different view or screen
 \endlist
 
 All \l {Item}-based objects have a \c state property, and can specify additional
@@ -96,10 +96,10 @@ assigning a different state whenever the signal receives a mouse click.
 The State element is not limited to performing modifications on property values.
 It can also:
 \list
-\o Run some script using \l StateChangeScript
-\o Override an existing signal handler for an object using \l PropertyChanges
-\o Re-parent an \l Item using \l ParentChange
-\o Modify anchor values using \l AnchorChanges
+\li Run some script using \l StateChangeScript
+\li Override an existing signal handler for an object using \l PropertyChanges
+\li Re-parent an \l Item using \l ParentChange
+\li Modify anchor values using \l AnchorChanges
 \endlist
 
 \section1 The Default State
@@ -143,13 +143,13 @@ for the engine to fast forward and rewind a state (that is, internally set and u
 before it is finally applied. The process is as follows:
 
 \list 1
-\o The state is fast forwarded to determine the complete set of end values.
-\o The state is rewound.
-\o The state is fully applied, with transitions.
+\li The state is fast forwarded to determine the complete set of end values.
+\li The state is rewound.
+\li The state is fully applied, with transitions.
 \endlist
 
 In some cases this may cause unintended behavior. For example, a state that changes
-a view's \i model or a Loader's \i sourceComponent will set these properties
+a view's \e model or a Loader's \e sourceComponent will set these properties
 multiple times (to apply, rewind, and then reapply), which can be relatively expensive.
 
 State fast forwarding should be considered an implementation detail,
diff --git a/doc/src/declarative/qmlruntime.qdoc b/doc/src/declarative/qmlruntime.qdoc
index 2215a0b..b9d0ae3 100644
--- a/doc/src/declarative/qmlruntime.qdoc
+++ b/doc/src/declarative/qmlruntime.qdoc
@@ -49,8 +49,8 @@ the application. This is done by writing a Qt C++ application that loads the
 QDeclarativeEngine by either:
 
 \list
-\o Loading the QML file through a QDeclarativeView instance, or
-\o Creating a QDeclarativeEngine instance and loading QML files with QDeclarativeComponent
+\li Loading the QML file through a QDeclarativeView instance, or
+\li Creating a QDeclarativeEngine instance and loading QML files with QDeclarativeComponent
 \endlist
 
 
diff --git a/doc/src/declarative/qmlsyntax.qdoc b/doc/src/declarative/qmlsyntax.qdoc
index 24ac1da..8914e1c 100644
--- a/doc/src/declarative/qmlsyntax.qdoc
+++ b/doc/src/declarative/qmlsyntax.qdoc
@@ -129,8 +129,8 @@ information on the \e id property.)
 
 Commenting in QML is similar to JavaScript.
 \list
-\o Single line comments start with // and finish at the end of the line.
-\o Multiline comments start with /* and finish with *\/
+\li Single line comments start with // and finish at the end of the line.
+\li Multiline comments start with /* and finish with *\/
 \endlist
 
 \snippet doc/src/snippets/declarative/comments.qml 0
diff --git a/doc/src/declarative/qmltexthandling.qdoc b/doc/src/declarative/qmltexthandling.qdoc
index d0df264..8e805eb 100644
--- a/doc/src/declarative/qmltexthandling.qdoc
+++ b/doc/src/declarative/qmltexthandling.qdoc
@@ -38,16 +38,16 @@
 \section1 Text Elements
 
 \list
-\o \l{Text}
-\o \l{TextInput}
-\o \l{TextEdit}
+\li \l{Text}
+\li \l{TextInput}
+\li \l{TextEdit}
 \endlist
 
 \section1 Validators
 \list
-\o \l{IntValidator}
-\o \l{DoubleValidator}
-\o \l{RegExpValidator}
+\li \l{IntValidator}
+\li \l{DoubleValidator}
+\li \l{RegExpValidator}
 \endlist
 
 \section1 Displaying Text in QML
diff --git a/doc/src/declarative/qmlviewer.qdoc b/doc/src/declarative/qmlviewer.qdoc
index 10cd6ed..3a76771 100644
--- a/doc/src/declarative/qmlviewer.qdoc
+++ b/doc/src/declarative/qmlviewer.qdoc
@@ -171,9 +171,9 @@ information about the application's runtime environment through the following pr
 \table
 \row
 
-\o \c runtime.isActiveWindow
+\li \c runtime.isActiveWindow
 
-\o This property indicates whether the QML Viewer window is the current active
+\li This property indicates whether the QML Viewer window is the current active
 window on the system. It is useful for "pausing" an application, particularly
 animations, when the QML Viewer loses focus or moves to the background.
 
@@ -197,19 +197,19 @@ through the \c active property of the \l {QML:Qt::application}{Qt.application} o
 
 \row
 
-\o \c runtime.orientation
+\li \c runtime.orientation
 
-\o This property indicates the current orientation of the QML Viewer. On the
+\li This property indicates the current orientation of the QML Viewer. On the
 N900 platform and most S60 5.0-based or newer Symbian devices, this property
 automatically updates to reflect the device's actual orientation; on other platforms,
 this indicates the orientation currently selected in the QML Viewer's
 \e {Settings -> Properties} menu. The \c orientation value can be one of the following:
 
 \list
-\o \c Orientation.Portrait
-\o \c Orientation.Landscape
-\o \c Orientation.PortraitInverted (Portrait orientation, upside-down)
-\o \c Orientation.LandscapeInverted (Landscape orientation, upside-down)
+\li \c Orientation.Portrait
+\li \c Orientation.Landscape
+\li \c Orientation.PortraitInverted (Portrait orientation, upside-down)
+\li \c Orientation.LandscapeInverted (Landscape orientation, upside-down)
 \endlist
 
 When the viewer's orientation changes, the appearance of the loaded QML document
diff --git a/doc/src/declarative/qmlviews.qdoc b/doc/src/declarative/qmlviews.qdoc
index 2ab957e..145bc6c 100644
--- a/doc/src/declarative/qmlviews.qdoc
+++ b/doc/src/declarative/qmlviews.qdoc
@@ -41,10 +41,10 @@ A set of standard views are provided in the basic set of Qt Quick
 graphical elements:
 
 \list
-\o \l{ListView} arranges items in a horizontal or vertical list
-\o \l{GridView} arranges items in a grid within the available space
-\o \l{PathView} arranges items on a path
-\o \l{WebView}{WebView} - available from the \l {QtWebKit QML Module}.
+\li \l{ListView} arranges items in a horizontal or vertical list
+\li \l{GridView} arranges items in a grid within the available space
+\li \l{PathView} arranges items on a path
+\li \l{WebView}{WebView} - available from the \l {QtWebKit QML Module}.
 \endlist
 Unlike other views, \l WebView is not a fully-featured view item, and needs
 to be combined with a \l Flickable item to create a view that performs like
diff --git a/doc/src/declarative/qmlwebkit.qdoc b/doc/src/declarative/qmlwebkit.qdoc
index 776d4b5..6b726ae 100644
--- a/doc/src/declarative/qmlwebkit.qdoc
+++ b/doc/src/declarative/qmlwebkit.qdoc
@@ -34,7 +34,7 @@ Qt WebKit QML
 
 \section1 WebKit QML Elements
 \list
-\o \l WebView
+\li \l WebView
 \endlist
 
 \section1 QtWebKit Module
diff --git a/doc/src/declarative/qtbinding.qdoc b/doc/src/declarative/qtbinding.qdoc
index b22e40c..07b5d92 100644
--- a/doc/src/declarative/qtbinding.qdoc
+++ b/doc/src/declarative/qtbinding.qdoc
@@ -42,11 +42,11 @@ reusable QML components for distribution.
 You may want to mix QML and C++ for a number of reasons. For example:
 
 \list
-\o To use functionality defined in a C++ source (for example, when using a C++ Qt-based data model, or
+\li To use functionality defined in a C++ source (for example, when using a C++ Qt-based data model, or
 calling functions in a third-party C++ library)
-\o To access functionality in the Qt Declarative module (for example, to dynamically generate
+\li To access functionality in the Qt Declarative module (for example, to dynamically generate
 images using QDeclarativeImageProvider)
-\o To write your own QML elements (whether for your applications, or for distribution to others)
+\li To write your own QML elements (whether for your applications, or for distribution to others)
 \endlist
 
 To use the Qt Declarative module, you must include and link to the module appropriately, as shown on
@@ -61,10 +61,10 @@ embedding QML into C++ applications. There are several core classes in the Qt De
 that provide the essential capabilities for doing this. These are:
 
 \list
-\o QDeclarativeEngine: A QML engine provides the environment for executing QML code. Every
+\li QDeclarativeEngine: A QML engine provides the environment for executing QML code. Every
 application requires at least one engine instance.
-\o QDeclarativeComponent: A component encapsulates a \l{QML Documents}{QML document}.
-\o QDeclarativeContext: A context allows an application to expose data to the QML components
+\li QDeclarativeComponent: A component encapsulates a \l{QML Documents}{QML document}.
+\li QDeclarativeContext: A context allows an application to expose data to the QML components
 created by an engine.
 \endlist
 
@@ -97,10 +97,10 @@ UI code}.)
 There are a number of ways to extend your QML application through C++. For example, you could:
 
 \list
-\o Load a QML component and manipulate it (or its children) from C++
-\o Embed a C++ object and its properties directly into a QML component (for example, to make a
+\li Load a QML component and manipulate it (or its children) from C++
+\li Embed a C++ object and its properties directly into a QML component (for example, to make a
 particular C++ object callable from QML, or to replace a dummy list model with a real data set)
-\o Define new QML elements (through QObject-based C++ classes) and create them directly from your
+\li Define new QML elements (through QObject-based C++ classes) and create them directly from your
 QML code
 \endlist
 
@@ -127,11 +127,11 @@ component, which is accessible via QDeclarativeView::rootObject():
 
 \table
 \row
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/loading/main.cpp QDeclarativeComponent-a
 \dots 0
 \snippet doc/src/snippets/declarative/qtbinding/loading/main.cpp QDeclarativeComponent-b
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/loading/main.cpp QDeclarativeView
 \endtable
 
@@ -203,11 +203,11 @@ invokes a method on the object instance:
 
 \table
 \row
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/context-advanced/applicationdata.h 0
 \codeline
 \snippet doc/src/snippets/declarative/qtbinding/context-advanced/main.cpp 0
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/context-advanced/MyItem.qml 0
 \endtable
 
@@ -288,8 +288,8 @@ QMetaObject::invokeMethod(). Here is a C++ application that uses this to call a
 
 \table
 \row
-\o \snippet doc/src/snippets/declarative/qtbinding/functions-qml/MyItem.qml 0
-\o \snippet doc/src/snippets/declarative/qtbinding/functions-qml/main.cpp 0
+\li \snippet doc/src/snippets/declarative/qtbinding/functions-qml/MyItem.qml 0
+\li \snippet doc/src/snippets/declarative/qtbinding/functions-qml/main.cpp 0
 \endtable
 
 Notice the Q_RETURN_ARG() and Q_ARG() arguments for QMetaObject::invokeMethod() must be specified as
@@ -301,9 +301,9 @@ methods on the \c myObject object, which has been set using QDeclarativeContext:
 
 \table
 \row
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/functions-cpp/MyItem.qml 0
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/functions-cpp/myclass.h 0
 \codeline
 \snippet doc/src/snippets/declarative/qtbinding/functions-cpp/main.cpp 0
@@ -326,9 +326,9 @@ is emitted:
 
 \table
 \row
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/signals-qml/MyItem.qml 0
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/signals-qml/myclass.h 0
 \codeline
 \snippet doc/src/snippets/declarative/qtbinding/signals-qml/main.cpp 0
@@ -342,13 +342,13 @@ C++ object are connected to through \c onImagedChanged and \c onLoadingError sig
 
 \table
 \row
-\o
+\li
 
 \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/imageviewer.h start
 \dots 4
 \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/imageviewer.h end
 
-\o
+\li
 \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/standalone.qml 0
 \endtable
 
@@ -364,8 +364,8 @@ instead to create the signal handler:
 
 \table
 \row
-\o \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/main.cpp connections
-\o \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/MyItem.qml 0
+\li \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/main.cpp connections
+\li \snippet doc/src/snippets/declarative/qtbinding/signals-cpp/MyItem.qml 0
 \endtable
 
 C++ signals can use enum values as parameters provided that the enum is declared in the
@@ -412,8 +412,8 @@ property. This property can be written to and read from QML:
 
 \table
 \row
-\o \snippet doc/src/snippets/declarative/qtbinding/properties-cpp/applicationdata.h 0
-\o \snippet doc/src/snippets/declarative/qtbinding/properties-cpp/MyItem.qml 0
+\li \snippet doc/src/snippets/declarative/qtbinding/properties-cpp/applicationdata.h 0
+\li \snippet doc/src/snippets/declarative/qtbinding/properties-cpp/MyItem.qml 0
 \endtable
 
 Notice the \c backgroundColorChanged signal is declared as the NOTIFY signal for the
@@ -434,20 +434,20 @@ functions - must be of a type that is recognizable by QML.
 By default, QML recognizes the following data types:
 
 \list
-\o bool
-\o unsigned int, int
-\o float, double, qreal
-\o QString
-\o QUrl
-\o QColor
-\o QDate, QTime, QDateTime
-\o QPoint, QPointF
-\o QSize, QSizeF
-\o QRect, QRectF
-\o QVariant
-\o QVariantList, QVariantMap
-\o QObject*
-\o Enumerations declared with Q_ENUMS()
+\li bool
+\li unsigned int, int
+\li float, double, qreal
+\li QString
+\li QUrl
+\li QColor
+\li QDate, QTime, QDateTime
+\li QPoint, QPointF
+\li QSize, QSizeF
+\li QRect, QRectF
+\li QVariant
+\li QVariantList, QVariantMap
+\li QObject*
+\li Enumerations declared with Q_ENUMS()
 \endlist
 
 To allow a custom C++ type to be created or used in QML, the C++ class must be registered as a QML
@@ -466,12 +466,12 @@ converted to JavaScript array and object values, repectively:
 
 \table
 \header
-\o Type
-\o String format
-\o Example
+\li Type
+\li String format
+\li Example
 \row
-\o \snippet doc/src/snippets/declarative/qtbinding/variantlistmap/MyItem.qml 0
-\o \snippet doc/src/snippets/declarative/qtbinding/variantlistmap/main.cpp 0
+\li \snippet doc/src/snippets/declarative/qtbinding/variantlistmap/MyItem.qml 0
+\li \snippet doc/src/snippets/declarative/qtbinding/variantlistmap/main.cpp 0
 \endtable
 
 This produces output like:
@@ -537,45 +537,45 @@ pass simple values from QML to C++.
 
 \table
 \header
-\o Type
-\o String format
-\o Example
+\li Type
+\li String format
+\li Example
 \row
-\o QColor
-\o Color name, "#RRGGBB", "#RRGGBBAA"
-\o "red", "#ff0000", "#ff000000"
+\li QColor
+\li Color name, "#RRGGBB", "#RRGGBBAA"
+\li "red", "#ff0000", "#ff000000"
 \row
-\o QDate
-\o "YYYY-MM-DD"
-\o "2010-05-31"
+\li QDate
+\li "YYYY-MM-DD"
+\li "2010-05-31"
 \row
-\o QPoint
-\o "x,y"
-\o "10,20"
+\li QPoint
+\li "x,y"
+\li "10,20"
 \row
-\o QRect
-\o "x,y,WidthxHeight"
-\o "50,50,100x100"
+\li QRect
+\li "x,y,WidthxHeight"
+\li "50,50,100x100"
 \row
-\o QSize
-\o "WidthxHeight"
-\o "100x200"
+\li QSize
+\li "WidthxHeight"
+\li "100x200"
 \row
-\o QTime
-\o "hh:mm:ss"
-\o "14:22:55"
+\li QTime
+\li "hh:mm:ss"
+\li "14:22:55"
 \row
-\o QUrl
-\o URL string
-\o "http://www.example.com"
+\li QUrl
+\li URL string
+\li "http://www.example.com"
 \row
-\o QVector3D
-\o "x,y,z"
-\o "0,1,0"
+\li QVector3D
+\li "x,y,z"
+\li "0,1,0"
 \row
-\o Enumeration value
-\o Enum value name
-\o "AlignRight"
+\li Enumeration value
+\li Enum value name
+\li "AlignRight"
 \endtable
 
 (More details on these string formats and types can be found in the
@@ -617,9 +617,9 @@ in order to update the resources in the package.
 To use the resource system in a mixed QML/C++ application:
 
 \list
-\o Create a \c .qrc \l {The Qt Resource System}{resource collection file} that lists resource
+\li Create a \c .qrc \l {The Qt Resource System}{resource collection file} that lists resource
    files in XML format
-\o From C++, load the main QML file as a resource using the \c :/ prefix or as a URL with the
+\li From C++, load the main QML file as a resource using the \c :/ prefix or as a URL with the
    \c qrc scheme
 \endlist
 
diff --git a/doc/src/declarative/qtprogrammers.qdoc b/doc/src/declarative/qtprogrammers.qdoc
index 9178572..ef4ad14 100644
--- a/doc/src/declarative/qtprogrammers.qdoc
+++ b/doc/src/declarative/qtprogrammers.qdoc
@@ -39,11 +39,11 @@ an application with a UI defined in QML also uses Qt for all the non-UI logic.
 QML provides direct access to the following concepts from Qt:
 
 \list
- \o QAction - the \l {QML Basic Types}{action} type
- \o QObject signals and slots - available as functions to call in JavaScript
- \o QObject properties - available as variables in JavaScript
- \o QWidget - QDeclarativeView is a QML-displaying widget
- \o Qt models - used directly in data binding (QAbstractItemModel)
+ \li QAction - the \l {QML Basic Types}{action} type
+ \li QObject signals and slots - available as functions to call in JavaScript
+ \li QObject properties - available as variables in JavaScript
+ \li QWidget - QDeclarativeView is a QML-displaying widget
+ \li Qt models - used directly in data binding (QAbstractItemModel)
 \endlist
 
 Qt knowledge is \e required for \l {Extending QML Functionalities using C++},
@@ -57,9 +57,9 @@ haven't traditionally been used to define the look and feel of view delegates, Q
 There are three structurally different types of QWidget:
 
 \list
- \o Simple widgets that are not used as parents (QLabel, QCheckBox, QToolButton, etc.)
- \o Parent widgets that are normally used as parents to other widgets (QGroupBox, QStackedWidget, QTabWidget, etc.)
- \o Compound widgets that are internally composed of child widgets (QComboBox, QSpinBox, QFileDialog, QTabWidget, etc.)
+ \li Simple widgets that are not used as parents (QLabel, QCheckBox, QToolButton, etc.)
+ \li Parent widgets that are normally used as parents to other widgets (QGroupBox, QStackedWidget, QTabWidget, etc.)
+ \li Compound widgets that are internally composed of child widgets (QComboBox, QSpinBox, QFileDialog, QTabWidget, etc.)
 \endlist
 
 QML Items also serve these purposes. Each is considered separately below.
@@ -120,9 +120,9 @@ this where it is needed).
 This difference has rather far-reaching consequences, for example:
 
 \list
-    \o A shadow or highlight around a widget could be a child of that widget.
-    \o Particle effects can flow outside the object where they originate.
-    \o Transitioning animations can "hide" items by visibly moving them beyond the screen bounds.
+    \li A shadow or highlight around a widget could be a child of that widget.
+    \li Particle effects can flow outside the object where they originate.
+    \li Transitioning animations can "hide" items by visibly moving them beyond the screen bounds.
 \endlist
 
 
diff --git a/doc/src/declarative/qtquick-intro.qdoc b/doc/src/declarative/qtquick-intro.qdoc
index 9658ef1..4d60c67 100644
--- a/doc/src/declarative/qtquick-intro.qdoc
+++ b/doc/src/declarative/qtquick-intro.qdoc
@@ -84,24 +84,24 @@ extendibility and openness, while aiming to lower the barrier of entry for
 newcomers to Qt Quick and Qt. The key features of Qt Creator allow UI designers
 and developers to accomplish the following tasks:
 \list
-\o Get started with Qt Quick application development quickly and easily with
+\li Get started with Qt Quick application development quickly and easily with
 examples, tutorials, and project wizards.
-\o Design application user interface with the integrated editor, Qt Quick
+\li Design application user interface with the integrated editor, Qt Quick
 Designer, or use graphics software to design the user interface and use scripts
 to export the design to Qt Quick Designer.
-\o Develop applications with the advanced code editor that provides new powerful
+\li Develop applications with the advanced code editor that provides new powerful
 features for completing code snippets, refactoring code, and viewing the element
 hierarchy of QML files.
-\o Build and deploy Qt Quick applications that target multiple desktop and
+\li Build and deploy Qt Quick applications that target multiple desktop and
 mobile platforms, such as Microsoft Windows, Mac OS X, Linux, Symbian, and
 Maemo.
-\o Debug JavaScript functions and execute JavaScript expressions in the current
+\li Debug JavaScript functions and execute JavaScript expressions in the current
 context, and inspect QML at runtime to explore the object structure, debug
 animations, and inspect colors.
-\o Deploy applications to mobile devices and create application installation
+\li Deploy applications to mobile devices and create application installation
 packages for Symbian and Maemo devices that can be published in the Ovi Store
 and other channels.
-\o Easily access information with the integrated context-sensitive Qt Help
+\li Easily access information with the integrated context-sensitive Qt Help
 system.
 \endlist
 
@@ -116,7 +116,7 @@ The \l {QML Examples and Demos} page has a gallery of QML applications.
 
 \section1 License Information
 \list
-\o \l{Qt Quick Licensing Information}
+\li \l{Qt Quick Licensing Information}
 \endlist
 */
 
diff --git a/doc/src/declarative/tutorial.qdoc b/doc/src/declarative/tutorial.qdoc
index 85f40fb..3a596b4 100644
--- a/doc/src/declarative/tutorial.qdoc
+++ b/doc/src/declarative/tutorial.qdoc
@@ -44,9 +44,9 @@ The tutorial's source code is located in the $QTDIR/examples/declarative/tutoria
 Tutorial chapters:
 
 \list 1
-\o \l {QML Tutorial 1 - Basic Types}{Basic Types}
-\o \l {QML Tutorial 2 - QML Components}{QML Components}
-\o \l {QML Tutorial 3 - States and Transitions}{States and Transitions}
+\li \l {QML Tutorial 1 - Basic Types}{Basic Types}
+\li \l {QML Tutorial 2 - QML Components}{QML Components}
+\li \l {QML Tutorial 3 - States and Transitions}{States and Transitions}
 \endlist
 
 */
diff --git a/doc/src/declarative/whatsnew.qdoc b/doc/src/declarative/whatsnew.qdoc
index ebae4e1..5ec06be 100644
--- a/doc/src/declarative/whatsnew.qdoc
+++ b/doc/src/declarative/whatsnew.qdoc
@@ -48,11 +48,11 @@ different language areas.
 
 Added the following properties:
 \list
-\o \l {Text::}{lineHeight}
-\o \l {Text::}{lineHeightMode}
-\o \l {Text::}{lineCount}
-\o \l {Text::}{maximumLineCount}
-\o \l {Text::}{truncated}
+\li \l {Text::}{lineHeight}
+\li \l {Text::}{lineHeightMode}
+\li \l {Text::}{lineCount}
+\li \l {Text::}{maximumLineCount}
+\li \l {Text::}{truncated}
 \endlist
 
 horizontalAlignment now accepts Text.AlignJustify alignment mode.
@@ -61,103 +61,103 @@ horizontalAlignment now accepts Text.AlignJustify alignment mode.
 
 Added the following properties, methods and signal handlers:
 \list
-\o \l {TextEdit::}{canPaste}
-\o \l {TextEdit::}{lineCount}
-\o \l {TextEdit::}{inputMethodComposing}
-\o \l {TextEdit::}{mouseSelectionMode}
-\o \l {TextEdit::}{deselect()}
-\o \l {TextEdit::}{isRightToLeft()}
-\o \l {TextEdit::}{moveCursorSelection()} to enable selection by word
-\o \l {TextEdit::}{onLinkActivated}
+\li \l {TextEdit::}{canPaste}
+\li \l {TextEdit::}{lineCount}
+\li \l {TextEdit::}{inputMethodComposing}
+\li \l {TextEdit::}{mouseSelectionMode}
+\li \l {TextEdit::}{deselect()}
+\li \l {TextEdit::}{isRightToLeft()}
+\li \l {TextEdit::}{moveCursorSelection()} to enable selection by word
+\li \l {TextEdit::}{onLinkActivated}
 \endlist
 
 \section2 TextInput
 
 Added the following properties and methods:
 \list
-\o \l {TextInput::}{canPaste}
-\o \l {TextInput::}{inputMethodComposing}
-\o \l {TextInput::}{mouseSelectionMode}
-\o \l {TextInput::}{deselect()}
-\o \l {TextInput::}{isRightToLeft()}
-\o \l {TextInput::}{moveCursorSelection()} to enable selection by word
+\li \l {TextInput::}{canPaste}
+\li \l {TextInput::}{inputMethodComposing}
+\li \l {TextInput::}{mouseSelectionMode}
+\li \l {TextInput::}{deselect()}
+\li \l {TextInput::}{isRightToLeft()}
+\li \l {TextInput::}{moveCursorSelection()} to enable selection by word
 \endlist
 
 \section2 Image, BorderImage and AnimatedImage
 
 Added the following properties:
 \list
-\o \l{Image::}{cache}
-\o \l{Image::}{mirror}
+\li \l{Image::}{cache}
+\li \l{Image::}{mirror}
 \endlist
 
 \section2 Item
 
 Added the following properties:
 \list
-\o \l{Item::}{implicitWidth} and \l{Item::}{implicitHeight}
+\li \l{Item::}{implicitWidth} and \l{Item::}{implicitHeight}
 \endlist
 
 \section2 Flickable
 
 Added the following methods:
 \list
-\o \l{Flickable::}{resizeContent()}
-\o \l{Flickable::}{returnToBounds()}
+\li \l{Flickable::}{resizeContent()}
+\li \l{Flickable::}{returnToBounds()}
 \endlist
 
 \section2 MouseArea
 
 Added the following property:
 \list
-\o \l{MouseArea::}{preventStealing}
+\li \l{MouseArea::}{preventStealing}
 \endlist
 
 \section2 ListView and GridView
 
 Added the following properties and methods:
 \list
-\o \l{ListView::}{layoutDirection}
-\o \l{ListView::}{positionViewAtBeginning()}
-\o \l{ListView::}{positionViewAtEnd()}
+\li \l{ListView::}{layoutDirection}
+\li \l{ListView::}{positionViewAtBeginning()}
+\li \l{ListView::}{positionViewAtEnd()}
 \endlist
 
 \section2 Flow, Grid and Row
 
 Added the following property:
 \list
-\o \l{Flow::}{layoutDirection}
+\li \l{Flow::}{layoutDirection}
 \endlist
 
 \section2 Repeater
 
 Added the following methods and signal handlers:
 \list
-\o \l{Repeater::}{onItemAdded}
-\o \l{Repeater::}{onItemRemoved}
-\o \l{Repeater::}{itemAt()}
+\li \l{Repeater::}{onItemAdded}
+\li \l{Repeater::}{onItemRemoved}
+\li \l{Repeater::}{itemAt()}
 \endlist
 
 \section2 Component
 
 \list
-\o The \l{Component::}{createObject()} method now accepts a map of initial
+\li The \l{Component::}{createObject()} method now accepts a map of initial
 property values for the created object.
 \endlist
 
 \section2 Qt
 
 \list
-\o Added the \l {QML:Qt::application}{Qt.application} object to hold generic
+\li Added the \l {QML:Qt::application}{Qt.application} object to hold generic
 global application properties.
 \endlist
 
 \section2 Other changes
 
 \list
-\o Functions can be \l{Property Binding#Property Binding}{assigned to properties from JavaScript}
+\li Functions can be \l{Property Binding#Property Binding}{assigned to properties from JavaScript}
 to create property bindings.
-\o QtQuick now supports Right to Left layout in positioners, views, anchors and text elements.
+\li QtQuick now supports Right to Left layout in positioners, views, anchors and text elements.
 \endlist
 
 
diff --git a/doc/src/examples/qml-examples.qdoc b/doc/src/examples/qml-examples.qdoc
index 8b537cb..57b97b1 100644
--- a/doc/src/examples/qml-examples.qdoc
+++ b/doc/src/examples/qml-examples.qdoc
@@ -34,9 +34,9 @@
 
     \table
     \row
-    \o \image qml-coloranim-example.png
+    \li \image qml-coloranim-example.png
     \row
-    \o color-animation.qml
+    \li color-animation.qml
     \endtable  
 */
 
@@ -49,9 +49,9 @@
 
     \table
     \row
-    \o \image qml-propertyanim-example.png
+    \li \image qml-propertyanim-example.png
     \row
-    \o property-animation.qml
+    \li property-animation.qml
     \endtable
 */
 
@@ -100,16 +100,16 @@
 
     \table
     \row
-    \o \image qml-states-example.png
+    \li \image qml-states-example.png
     \row
-    \o states.qml
+    \li states.qml
     \endtable
 
     \table
     \row
-    \o \image qml-transitions-example.png
+    \li \image qml-transitions-example.png
     \row
-    \o transitions.qml
+    \li transitions.qml
     \endtable
 */
 
@@ -123,9 +123,9 @@
 
     \table
     \row
-    \o \image qml-borderimage-example.png
+    \li \image qml-borderimage-example.png
     \row
-    \o borderimage.qml
+    \li borderimage.qml
     \endtable
 */
 
@@ -138,9 +138,9 @@
 
     \table
     \row
-    \o \image qml-borderimage-shadows-example.png
+    \li \image qml-borderimage-shadows-example.png
     \row
-    \o shadows.qml
+    \li shadows.qml
     \endtable
 */
 
@@ -167,16 +167,16 @@
     Furthermore, here are additional pages that discuss each example in detail:
 
     \list
-    \o \l {declarative/cppextensions/referenceexamples/adding}{Adding Types}
-    \o \l {declarative/cppextensions/referenceexamples/properties}{Object and List Property Types}
-    \o \l {declarative/cppextensions/referenceexamples/coercion}{Inheritance and Coercion}
-    \o \l {declarative/cppextensions/referenceexamples/default}{Default Property}
-    \o \l {declarative/cppextensions/referenceexamples/grouped}{Grouped Properties}
-    \o \l {declarative/cppextensions/referenceexamples/attached}{Attached Properties}
-    \o \l {declarative/cppextensions/referenceexamples/signal}{Signal Support}
-    \o \l {declarative/cppextensions/referenceexamples/methods}{Methods Support}
-    \o \l {declarative/cppextensions/referenceexamples/valuesource}{Property Value Source}
-    \o \l {declarative/cppextensions/referenceexamples/binding}{Binding}
+    \li \l {declarative/cppextensions/referenceexamples/adding}{Adding Types}
+    \li \l {declarative/cppextensions/referenceexamples/properties}{Object and List Property Types}
+    \li \l {declarative/cppextensions/referenceexamples/coercion}{Inheritance and Coercion}
+    \li \l {declarative/cppextensions/referenceexamples/default}{Default Property}
+    \li \l {declarative/cppextensions/referenceexamples/grouped}{Grouped Properties}
+    \li \l {declarative/cppextensions/referenceexamples/attached}{Attached Properties}
+    \li \l {declarative/cppextensions/referenceexamples/signal}{Signal Support}
+    \li \l {declarative/cppextensions/referenceexamples/methods}{Methods Support}
+    \li \l {declarative/cppextensions/referenceexamples/valuesource}{Property Value Source}
+    \li \l {declarative/cppextensions/referenceexamples/binding}{Binding}
     \endlist
 
     \note These examples all print information to the console to demonstrate the concepts presented.
@@ -230,9 +230,9 @@
     layout components with QML:
 
     \list
-    \o \l{declarative/cppextensions/qgraphicslayouts/layoutitem}{LayoutItem}
-    \o \l{declarative/cppextensions/qgraphicslayouts/qgraphicsgridlayout}{QGraphicsGridLayout}
-    \o \l{declarative/cppextensions/qgraphicslayouts/qgraphicslinearlayout}{QGraphicsLinearLayout}
+    \li \l{declarative/cppextensions/qgraphicslayouts/layoutitem}{LayoutItem}
+    \li \l{declarative/cppextensions/qgraphicslayouts/qgraphicsgridlayout}{QGraphicsGridLayout}
+    \li \l{declarative/cppextensions/qgraphicslayouts/qgraphicslinearlayout}{QGraphicsLinearLayout}
     \endlist
 
     Also see \l {Integrating QML Code with Existing Qt UI Code} for information on using QML
@@ -404,11 +404,11 @@
     \page qml-listview-examples.html
 
 	\list
-   \o \l {Models and Views: Dynamic List ListView Example}
-   \o \l {Models and Views: Expanding Delegate ListView Example}
-   \o \l {Models and Views: Highlight ListView Example}
-   \o \l {Models and Views: Highlight Ranges ListView Example}
-   \o  \l {Models and Views: Sections ListView Example}
+   \li \l {Models and Views: Dynamic List ListView Example}
+   \li \l {Models and Views: Expanding Delegate ListView Example}
+   \li \l {Models and Views: Highlight ListView Example}
+   \li \l {Models and Views: Highlight Ranges ListView Example}
+   \li  \l {Models and Views: Sections ListView Example}
 	\endlist
     
 */
@@ -424,9 +424,9 @@
 
     \table
     \row
-    \o \image qml-listview-dynamiclist-example.png
+    \li \image qml-listview-dynamiclist-example.png
     \row
-    \o dynamiclist.qml
+    \li dynamiclist.qml
     \endtable
 */
 
@@ -440,9 +440,9 @@
 
     \table
     \row
-    \o \image qml-listview-expandingdelegates-example.png
+    \li \image qml-listview-expandingdelegates-example.png
     \row
-    \o expandingdelegates.qml
+    \li expandingdelegates.qml
     \endtable
 */
 
@@ -457,9 +457,9 @@
 
     \table
     \row
-    \o \image qml-listview-highlight-example.png
+    \li \image qml-listview-highlight-example.png
     \row
-    \o highlight.qml
+    \li highlight.qml
     \endtable
 */
 
@@ -474,9 +474,9 @@
 
     \table
     \row
-    \o \image qml-listview-highlightranges-example.png
+    \li \image qml-listview-highlightranges-example.png
     \row
-    \o highlightranges.qml
+    \li highlightranges.qml
     \endtable
 */
 
@@ -490,9 +490,9 @@
 
     \table
     \row
-    \o \image qml-listview-sections-example.png
+    \li \image qml-listview-sections-example.png
     \row
-    \o sections.qml
+    \li sections.qml
     \endtable
 */
 
@@ -563,11 +563,11 @@
     \brief These examples show how to use the WebView element.
    
     \list
-    \o \l {Models and Views: Alert WebView Example}
-    \o \l {Models and Views: Autosize WebView Example}
-    \o \l {Models and Views: GoogleMaps WebView Example}
-    \o \l {Models and Views: Inline HTML WebView Example}
-    \o  \l {Models and Views: New Windows WebView Example}
+    \li \l {Models and Views: Alert WebView Example}
+    \li \l {Models and Views: Autosize WebView Example}
+    \li \l {Models and Views: GoogleMaps WebView Example}
+    \li \l {Models and Views: Inline HTML WebView Example}
+    \li  \l {Models and Views: New Windows WebView Example}
 	\endlist
 
     
@@ -581,9 +581,9 @@
 
     \table
     \row
-    \o \image qml-webview-alert-example.png
+    \li \image qml-webview-alert-example.png
     \row
-    \o alert.qml
+    \li alert.qml
     \endtable
 */
 
@@ -596,9 +596,9 @@
 
     \table
     \row
-    \o \image qml-webview-autosize-example.png
+    \li \image qml-webview-autosize-example.png
     \row
-    \o autosize.qml
+    \li autosize.qml
     \endtable
 */
 
@@ -611,9 +611,9 @@
 
     \table
     \row
-    \o \image qml-webview-googlemaps-example.png
+    \li \image qml-webview-googlemaps-example.png
     \row
-    \o googlemaps.qml
+    \li googlemaps.qml
     \endtable
 */
 
@@ -626,9 +626,9 @@
 
     \table
     \row
-    \o \image qml-webview-inlinehtml-example.png
+    \li \image qml-webview-inlinehtml-example.png
     \row
-    \o inlinehtml.qml
+    \li inlinehtml.qml
     \endtable
 */
 
@@ -641,9 +641,9 @@
 
     \table
     \row
-    \o \image qml-webview-newwindows-example.png
+    \li \image qml-webview-newwindows-example.png
     \row
-    \o newwindows.qml
+    \li newwindows.qml
     \endtable
 */
 
@@ -672,9 +672,9 @@
 
     \table
     \row
-    \o \image qml-fonts-availableFonts-example.png
+    \li \image qml-fonts-availableFonts-example.png
     \row
-    \o availableFonts.qml
+    \li availableFonts.qml
     \endtable
 */
 
@@ -687,9 +687,9 @@
 
     \table
     \row
-    \o \image qml-fonts-banner-example.png
+    \li \image qml-fonts-banner-example.png
     \row
-    \o banner.qml
+    \li banner.qml
     \endtable
 */
 
@@ -702,9 +702,9 @@
 
     \table
     \row
-    \o \image qml-fonts-fonts-example.png
+    \li \image qml-fonts-fonts-example.png
     \row
-    \o fonts.qml
+    \li fonts.qml
     \endtable
 */
 
@@ -717,9 +717,9 @@
 
     \table
     \row
-    \o \image qml-fonts-hello-example.png
+    \li \image qml-fonts-hello-example.png
     \row
-    \o hello.qml
+    \li hello.qml
     \endtable
 */
 
diff --git a/doc/src/examples/qml-extending.qdoc b/doc/src/examples/qml-extending.qdoc
index b7e74dc..b479d5a 100644
--- a/doc/src/examples/qml-extending.qdoc
+++ b/doc/src/examples/qml-extending.qdoc
@@ -67,7 +67,7 @@ loads and runs the QML snippet shown at the beginning of this page.
 
 This example builds on:
 \list
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 The Object and List Property Types example shows how to add object and list
@@ -115,8 +115,8 @@ loads and runs the QML snippet shown at the beginning of this page.
 
 This example builds on:
 \list
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 The Inheritance and Coercion Example shows how to use base classes to assign
@@ -178,9 +178,9 @@ loads and runs the QML snippet shown at the beginning of this page.
 
 This example builds on:
 \list
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 The Default Property Example is a minor modification of the 
@@ -214,10 +214,10 @@ loads and runs the QML snippet shown at the beginning of this page.
 
 This example builds on:
 \list
-\o \l {Extending QML - Default Property Example}
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Default Property Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 */
@@ -228,11 +228,11 @@ This example builds on:
 
 This example builds on:
 \list
-\o \l {Extending QML - Grouped Properties Example}
-\o \l {Extending QML - Default Property Example}
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Grouped Properties Example}
+\li \l {Extending QML - Default Property Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 */
@@ -243,12 +243,12 @@ This example builds on:
 
 This example builds on:
 \list
-\o \l {Extending QML - Attached Properties Example}
-\o \l {Extending QML - Grouped Properties Example}
-\o \l {Extending QML - Default Property Example}
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Attached Properties Example}
+\li \l {Extending QML - Grouped Properties Example}
+\li \l {Extending QML - Default Property Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 */
@@ -259,10 +259,10 @@ This example builds on:
 
 This example builds on:
 \list
-\o \l {Extending QML - Default Property Example}
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Default Property Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 */
@@ -273,13 +273,13 @@ This example builds on:
 
 This example builds on:
 \list
-\o \l {Extending QML - Signal Support Example}
-\o \l {Extending QML - Attached Properties Example}
-\o \l {Extending QML - Grouped Properties Example}
-\o \l {Extending QML - Default Property Example}
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Signal Support Example}
+\li \l {Extending QML - Attached Properties Example}
+\li \l {Extending QML - Grouped Properties Example}
+\li \l {Extending QML - Default Property Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 */
@@ -290,14 +290,14 @@ This example builds on:
 
 This example builds on:
 \list
-\o \l {Extending QML - Property Value Source Example}
-\o \l {Extending QML - Signal Support Example}
-\o \l {Extending QML - Attached Properties Example}
-\o \l {Extending QML - Grouped Properties Example}
-\o \l {Extending QML - Default Property Example}
-\o \l {Extending QML - Inheritance and Coercion Example}
-\o \l {Extending QML - Object and List Property Types Example}
-\o \l {Extending QML - Adding Types Example}
+\li \l {Extending QML - Property Value Source Example}
+\li \l {Extending QML - Signal Support Example}
+\li \l {Extending QML - Attached Properties Example}
+\li \l {Extending QML - Grouped Properties Example}
+\li \l {Extending QML - Default Property Example}
+\li \l {Extending QML - Inheritance and Coercion Example}
+\li \l {Extending QML - Object and List Property Types Example}
+\li \l {Extending QML - Adding Types Example}
 \endlist
 
 */
diff --git a/doc/src/getting-started/gettingstartedqml.qdoc b/doc/src/getting-started/gettingstartedqml.qdoc
index 7a79195..923d8ff 100644
--- a/doc/src/getting-started/gettingstartedqml.qdoc
+++ b/doc/src/getting-started/gettingstartedqml.qdoc
@@ -69,11 +69,11 @@
 
     Tutorial chapters:
     \list 1
-        \o \l {Defining a Button and a Menu}{Defining a Button and a Menu}
-        \o \l {Implementing a Menu Bar}{Implementing a Menu Bar}
-        \o \l {Building a Text Editor}{Building a Text Editor}
-        \o \l {Decorating the Text Editor}{Decorating the Text Editor}
-        \o \l {Extending QML using Qt C++}{Extending QML using Qt C++}
+        \li \l {Defining a Button and a Menu}{Defining a Button and a Menu}
+        \li \l {Implementing a Menu Bar}{Implementing a Menu Bar}
+        \li \l {Building a Text Editor}{Building a Text Editor}
+        \li \l {Decorating the Text Editor}{Decorating the Text Editor}
+        \li \l {Extending QML using Qt C++}{Extending QML using Qt C++}
     \endlist
 
     \section1 Defining a Button and a Menu
@@ -645,11 +645,11 @@
 
     For our application, we need to create the following items:
     \list 1
-    \o \c Directory class that will handle directory related operations
-    \o \c File class which is a QObject, simulating the list of files in a directory
-    \o plugin class that will register the class to the QML context
-    \o Qt project file that will compile the plugin
-    \o A \c qmldir file telling the qmlviewer tool where to find the plugin
+    \li \c Directory class that will handle directory related operations
+    \li \c File class which is a QObject, simulating the list of files in a directory
+    \li plugin class that will register the class to the QML context
+    \li Qt project file that will compile the plugin
+    \li A \c qmldir file telling the qmlviewer tool where to find the plugin
     \endlist
 
     \section3 Building a Qt Plugin
diff --git a/doc/src/howtos/qmlbestpractices/qmlbestpractices-coding.qdoc b/doc/src/howtos/qmlbestpractices/qmlbestpractices-coding.qdoc
index 4b90842..2b03366 100644
--- a/doc/src/howtos/qmlbestpractices/qmlbestpractices-coding.qdoc
+++ b/doc/src/howtos/qmlbestpractices/qmlbestpractices-coding.qdoc
@@ -79,8 +79,8 @@ mean the code is confusing.
 
 Similar to JavaScript or C++, there are two ways of commenting QML code:
 \list
-\o Single line comments start with \c{//} and finish at the end of the line
-\o Multiline comments start with \c{/*} and finish with *\/
+\li Single line comments start with \c{//} and finish at the end of the line
+\li Multiline comments start with \c{/*} and finish with *\/
 \endlist
 
 \section1 Group Properties
diff --git a/src/declarative/graphicsitems/qdeclarativeborderimage.cpp b/src/declarative/graphicsitems/qdeclarativeborderimage.cpp
index 019ac08..490330c 100644
--- a/src/declarative/graphicsitems/qdeclarativeborderimage.cpp
+++ b/src/declarative/graphicsitems/qdeclarativeborderimage.cpp
@@ -71,12 +71,12 @@ QT_BEGIN_NAMESPACE
     create the displayed border image in the following way:
 
     \list
-    \i The corners (regions 1, 3, 7, and 9) are not scaled at all.
-    \i Regions 2 and 8 are scaled according to
+    \li The corners (regions 1, 3, 7, and 9) are not scaled at all.
+    \li Regions 2 and 8 are scaled according to
        \l{BorderImage::horizontalTileMode}{horizontalTileMode}.
-    \i Regions 4 and 6 are scaled according to
+    \li Regions 4 and 6 are scaled according to
        \l{BorderImage::verticalTileMode}{verticalTileMode}.
-    \i The middle (region 5) is scaled according to both
+    \li The middle (region 5) is scaled according to both
        \l{BorderImage::horizontalTileMode}{horizontalTileMode} and
        \l{BorderImage::verticalTileMode}{verticalTileMode}.
     \endlist
@@ -181,10 +181,10 @@ QDeclarativeBorderImage::~QDeclarativeBorderImage()
     This property describes the status of image loading.  It can be one of:
 
     \list
-    \o BorderImage.Null - no image has been set
-    \o BorderImage.Ready - the image has been loaded
-    \o BorderImage.Loading - the image is currently being loaded
-    \o BorderImage.Error - an error occurred while loading the image
+    \li BorderImage.Null - no image has been set
+    \li BorderImage.Ready - the image has been loaded
+    \li BorderImage.Loading - the image is currently being loaded
+    \li BorderImage.Error - an error occurred while loading the image
     \endlist
 
     \sa progress
@@ -417,9 +417,9 @@ QDeclarativeScaleGrid *QDeclarativeBorderImage::border()
     This property describes how to repeat or stretch the middle parts of the border image.
 
     \list
-    \o BorderImage.Stretch - Scales the image to fit to the available area.
-    \o BorderImage.Repeat - Tile the image until there is no more space. May crop the last image.
-    \o BorderImage.Round - Like Repeat, but scales the images down to ensure that the last image is not cropped.
+    \li BorderImage.Stretch - Scales the image to fit to the available area.
+    \li BorderImage.Repeat - Tile the image until there is no more space. May crop the last image.
+    \li BorderImage.Round - Like Repeat, but scales the images down to ensure that the last image is not cropped.
     \endlist
 
     The default tile mode for each property is BorderImage.Stretch.
diff --git a/src/declarative/graphicsitems/qdeclarativeevents.cpp b/src/declarative/graphicsitems/qdeclarativeevents.cpp
index 6edc392..6ba97cb 100644
--- a/src/declarative/graphicsitems/qdeclarativeevents.cpp
+++ b/src/declarative/graphicsitems/qdeclarativeevents.cpp
@@ -116,12 +116,12 @@ Item {
 
     It contains a bitwise combination of:
     \list
-    \o Qt.NoModifier - No modifier key is pressed.
-    \o Qt.ShiftModifier - A Shift key on the keyboard is pressed.
-    \o Qt.ControlModifier - A Ctrl key on the keyboard is pressed.
-    \o Qt.AltModifier - An Alt key on the keyboard is pressed.
-    \o Qt.MetaModifier - A Meta key on the keyboard is pressed.
-    \o Qt.KeypadModifier - A keypad button is pressed.
+    \li Qt.NoModifier - No modifier key is pressed.
+    \li Qt.ShiftModifier - A Shift key on the keyboard is pressed.
+    \li Qt.ControlModifier - A Ctrl key on the keyboard is pressed.
+    \li Qt.AltModifier - An Alt key on the keyboard is pressed.
+    \li Qt.MetaModifier - A Meta key on the keyboard is pressed.
+    \li Qt.KeypadModifier - A keypad button is pressed.
     \endlist
 
     For example, to react to a Shift key + Enter key combination:
@@ -178,9 +178,9 @@ Item {
 
     This property holds the button that caused the event.  It can be one of:
     \list
-    \o Qt.LeftButton
-    \o Qt.RightButton
-    \o Qt.MiddleButton
+    \li Qt.LeftButton
+    \li Qt.RightButton
+    \li Qt.MiddleButton
     \endlist
 */
 
@@ -201,9 +201,9 @@ Item {
 
     It contains a bitwise combination of:
     \list
-    \o Qt.LeftButton
-    \o Qt.RightButton
-    \o Qt.MiddleButton
+    \li Qt.LeftButton
+    \li Qt.RightButton
+    \li Qt.MiddleButton
     \endlist
 */
 
@@ -215,12 +215,12 @@ Item {
 
     It contains a bitwise combination of:
     \list
-    \o Qt.NoModifier - No modifier key is pressed.
-    \o Qt.ShiftModifier - A Shift key on the keyboard is pressed.
-    \o Qt.ControlModifier - A Ctrl key on the keyboard is pressed.
-    \o Qt.AltModifier - An Alt key on the keyboard is pressed.
-    \o Qt.MetaModifier - A Meta key on the keyboard is pressed.
-    \o Qt.KeypadModifier - A keypad button is pressed.
+    \li Qt.NoModifier - No modifier key is pressed.
+    \li Qt.ShiftModifier - A Shift key on the keyboard is pressed.
+    \li Qt.ControlModifier - A Ctrl key on the keyboard is pressed.
+    \li Qt.AltModifier - An Alt key on the keyboard is pressed.
+    \li Qt.MetaModifier - A Meta key on the keyboard is pressed.
+    \li Qt.KeypadModifier - A keypad button is pressed.
     \endlist
 
     For example, to react to a Shift key + Left mouse button click:
diff --git a/src/declarative/graphicsitems/qdeclarativeflickable.cpp b/src/declarative/graphicsitems/qdeclarativeflickable.cpp
index d001619..4dd295e 100644
--- a/src/declarative/graphicsitems/qdeclarativeflickable.cpp
+++ b/src/declarative/graphicsitems/qdeclarativeflickable.cpp
@@ -722,13 +722,13 @@ QDeclarativeFlickableVisibleArea *QDeclarativeFlickable::visibleArea()
     This property determines which directions the view can be flicked.
 
     \list
-    \o Flickable.AutoFlickDirection (default) - allows flicking vertically if the
+    \li Flickable.AutoFlickDirection (default) - allows flicking vertically if the
     \e contentHeight is not equal to the \e height of the Flickable.
     Allows flicking horizontally if the \e contentWidth is not equal
     to the \e width of the Flickable.
-    \o Flickable.HorizontalFlick - allows flicking horizontally.
-    \o Flickable.VerticalFlick - allows flicking vertically.
-    \o Flickable.HorizontalAndVerticalFlick - allows flicking in both directions.
+    \li Flickable.HorizontalFlick - allows flicking horizontally.
+    \li Flickable.VerticalFlick - allows flicking vertically.
+    \li Flickable.HorizontalAndVerticalFlick - allows flicking in both directions.
     \endlist
 */
 QDeclarativeFlickable::FlickableDirection QDeclarativeFlickable::flickableDirection() const
@@ -1299,11 +1299,11 @@ QDeclarativeListProperty<QGraphicsObject> QDeclarativeFlickable::flickableChildr
     The \c boundsBehavior can be one of:
 
     \list
-    \o Flickable.StopAtBounds - the contents can not be dragged beyond the boundary
+    \li Flickable.StopAtBounds - the contents can not be dragged beyond the boundary
     of the flickable, and flicks will not overshoot.
-    \o Flickable.DragOverBounds - the contents can be dragged beyond the boundary
+    \li Flickable.DragOverBounds - the contents can be dragged beyond the boundary
     of the Flickable, but flicks will not overshoot.
-    \o Flickable.DragAndOvershootBounds (default) - the contents can be dragged
+    \li Flickable.DragAndOvershootBounds (default) - the contents can be dragged
     beyond the boundary of the Flickable, and can overshoot the
     boundary when flicked.
     \endlist
diff --git a/src/declarative/graphicsitems/qdeclarativegridview.cpp b/src/declarative/graphicsitems/qdeclarativegridview.cpp
index dc399e1..37dc5d4 100644
--- a/src/declarative/graphicsitems/qdeclarativegridview.cpp
+++ b/src/declarative/graphicsitems/qdeclarativegridview.cpp
@@ -1746,13 +1746,13 @@ void QDeclarativeGridView::setHighlightMoveDuration(int duration)
     Valid values for \c highlightRangeMode are:
 
     \list
-    \o GridView.ApplyRange - the view attempts to maintain the highlight within the range.
+    \li GridView.ApplyRange - the view attempts to maintain the highlight within the range.
        However, the highlight can move outside of the range at the ends of the view or due
        to mouse interaction.
-    \o GridView.StrictlyEnforceRange - the highlight never moves outside of the range.
+    \li GridView.StrictlyEnforceRange - the highlight never moves outside of the range.
        The current item changes if a keyboard or mouse action would cause the highlight to move
        outside of the range.
-    \o GridView.NoHighlightRange - this is the default value.
+    \li GridView.NoHighlightRange - this is the default value.
     \endlist
 */
 qreal QDeclarativeGridView::preferredHighlightBegin() const
@@ -1832,9 +1832,9 @@ void QDeclarativeGridView::setHighlightRangeMode(HighlightRangeMode mode)
     Possible values:
 
   \list
-  \o Qt.LeftToRight (default) - Items will be laid out starting in the top, left corner. The flow is
+  \li Qt.LeftToRight (default) - Items will be laid out starting in the top, left corner. The flow is
   dependent on the \l GridView::flow property.
-  \o Qt.RightToLeft - Items will be laid out starting in the top, right corner. The flow is dependent
+  \li Qt.RightToLeft - Items will be laid out starting in the top, right corner. The flow is dependent
   on the \l GridView::flow property.
   \endlist
 
@@ -1878,8 +1878,8 @@ Qt::LayoutDirection QDeclarativeGridView::effectiveLayoutDirection() const
     Possible values:
 
     \list
-    \o GridView.LeftToRight (default) - Items are laid out from left to right, and the view scrolls vertically
-    \o GridView.TopToBottom - Items are laid out from top to bottom, and the view scrolls horizontally
+    \li GridView.LeftToRight (default) - Items are laid out from left to right, and the view scrolls vertically
+    \li GridView.TopToBottom - Items are laid out from top to bottom, and the view scrolls horizontally
     \endlist
 */
 QDeclarativeGridView::Flow QDeclarativeGridView::flow() const
@@ -2016,10 +2016,10 @@ void QDeclarativeGridView::setCellHeight(int cellHeight)
     The possible values are:
 
     \list
-    \o GridView.NoSnap (default) - the view stops anywhere within the visible area.
-    \o GridView.SnapToRow - the view settles with a row (or column for \c GridView.TopToBottom flow)
+    \li GridView.NoSnap (default) - the view stops anywhere within the visible area.
+    \li GridView.SnapToRow - the view settles with a row (or column for \c GridView.TopToBottom flow)
     aligned with the start of the view.
-    \o GridView.SnapOneRow - the view will settle no more than one row (or column for \c GridView.TopToBottom flow)
+    \li GridView.SnapOneRow - the view will settle no more than one row (or column for \c GridView.TopToBottom flow)
     away from the first visible row at the time the mouse button is released.
     This mode is particularly useful for moving one page at a time.
     \endlist
@@ -2361,7 +2361,7 @@ void QDeclarativeGridView::keyPressEvent(QKeyEvent *event)
     The current index will wrap if keyNavigationWraps is true and it
     is currently at the end. This method has no effect if the \l count is zero.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativeGridView::moveCurrentIndexUp()
 {
@@ -2389,7 +2389,7 @@ void QDeclarativeGridView::moveCurrentIndexUp()
     The current index will wrap if keyNavigationWraps is true and it
     is currently at the end. This method has no effect if the \l count is zero.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativeGridView::moveCurrentIndexDown()
 {
@@ -2417,7 +2417,7 @@ void QDeclarativeGridView::moveCurrentIndexDown()
     The current index will wrap if keyNavigationWraps is true and it
     is currently at the end. This method has no effect if the \l count is zero.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativeGridView::moveCurrentIndexLeft()
 {
@@ -2460,7 +2460,7 @@ void QDeclarativeGridView::moveCurrentIndexLeft()
     The current index will wrap if keyNavigationWraps is true and it
     is currently at the end. This method has no effect if the \l count is zero.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativeGridView::moveCurrentIndexRight()
 {
@@ -2588,12 +2588,12 @@ void QDeclarativeGridViewPrivate::positionViewAtIndex(int index, int mode)
     \a mode:
 
     \list
-    \o GridView.Beginning - position item at the top (or left for \c GridView.TopToBottom flow) of the view.
-    \o GridView.Center - position item in the center of the view.
-    \o GridView.End - position item at bottom (or right for horizontal orientation) of the view.
-    \o GridView.Visible - if any part of the item is visible then take no action, otherwise
+    \li GridView.Beginning - position item at the top (or left for \c GridView.TopToBottom flow) of the view.
+    \li GridView.Center - position item in the center of the view.
+    \li GridView.End - position item at bottom (or right for horizontal orientation) of the view.
+    \li GridView.Visible - if any part of the item is visible then take no action, otherwise
     bring the item into view.
-    \o GridView.Contain - ensure the entire item is visible.  If the item is larger than
+    \li GridView.Contain - ensure the entire item is visible.  If the item is larger than
     the view the item is positioned at the top (or left for \c GridView.TopToBottom flow) of the view.
     \endlist
 
@@ -2605,7 +2605,7 @@ void QDeclarativeGridViewPrivate::positionViewAtIndex(int index, int mode)
     of the view does not cause all other items to be repositioned.
     The correct way to bring an item into view is with \c positionViewAtIndex.
 
-    \bold Note: methods should only be called after the Component has completed.  To position
+    \b Note: methods should only be called after the Component has completed.  To position
     the view at startup, this method should be called by Component.onCompleted.  For
     example, to position the view at the end:
 
@@ -2633,7 +2633,7 @@ void QDeclarativeGridView::positionViewAtIndex(int index, int mode)
     of the list does not cause all other items to be repositioned, and because
     the actual start of the view can vary based on the size of the delegates.
 
-    \bold Note: methods should only be called after the Component has completed.  To position
+    \b Note: methods should only be called after the Component has completed.  To position
     the view at startup, this method should be called by Component.onCompleted.  For
     example, to position the view at the end on startup:
 
@@ -2667,7 +2667,7 @@ void QDeclarativeGridView::positionViewAtEnd()
     If the item is outside the visible area, -1 is returned, regardless of
     whether an item will exist at that point when scrolled into view.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 int QDeclarativeGridView::indexAt(qreal x, qreal y) const
 {
diff --git a/src/declarative/graphicsitems/qdeclarativeimage.cpp b/src/declarative/graphicsitems/qdeclarativeimage.cpp
index 90d289f..375b950 100644
--- a/src/declarative/graphicsitems/qdeclarativeimage.cpp
+++ b/src/declarative/graphicsitems/qdeclarativeimage.cpp
@@ -95,7 +95,7 @@ QT_BEGIN_NAMESPACE
     Images are cached and shared internally, so if several Image elements have the same \l source,
     only one copy of the image will be loaded.
 
-    \bold Note: Images are often the greatest user of memory in QML user interfaces.  It is recommended
+    \b Note: Images are often the greatest user of memory in QML user interfaces.  It is recommended
     that images which do not form part of the user interface have their
     size bounded via the \l sourceSize property. This is especially important for content
     that is loaded from external sources or provided by the user.
@@ -149,19 +149,19 @@ void QDeclarativeImagePrivate::setPixmap(const QPixmap &pixmap)
     than the item.
 
     \list
-    \o Image.Stretch - the image is scaled to fit
-    \o Image.PreserveAspectFit - the image is scaled uniformly to fit without cropping
-    \o Image.PreserveAspectCrop - the image is scaled uniformly to fill, cropping if necessary
-    \o Image.Tile - the image is duplicated horizontally and vertically
-    \o Image.TileVertically - the image is stretched horizontally and tiled vertically
-    \o Image.TileHorizontally - the image is stretched vertically and tiled horizontally
+    \li Image.Stretch - the image is scaled to fit
+    \li Image.PreserveAspectFit - the image is scaled uniformly to fit without cropping
+    \li Image.PreserveAspectCrop - the image is scaled uniformly to fill, cropping if necessary
+    \li Image.Tile - the image is duplicated horizontally and vertically
+    \li Image.TileVertically - the image is stretched horizontally and tiled vertically
+    \li Image.TileHorizontally - the image is stretched vertically and tiled horizontally
     \endlist
 
     \table
     
     \row
-    \o \image declarative-qtlogo-stretch.png
-    \o Stretch (default)
+    \li \image declarative-qtlogo-stretch.png
+    \li Stretch (default)
     \qml
     Image {
         width: 130; height: 100
@@ -171,8 +171,8 @@ void QDeclarativeImagePrivate::setPixmap(const QPixmap &pixmap)
     \endqml
 
     \row
-    \o \image declarative-qtlogo-preserveaspectfit.png
-    \o PreserveAspectFit
+    \li \image declarative-qtlogo-preserveaspectfit.png
+    \li PreserveAspectFit
     \qml
     Image {
         width: 130; height: 100
@@ -183,8 +183,8 @@ void QDeclarativeImagePrivate::setPixmap(const QPixmap &pixmap)
     \endqml
 
     \row
-    \o \image declarative-qtlogo-preserveaspectcrop.png
-    \o PreserveAspectCrop
+    \li \image declarative-qtlogo-preserveaspectcrop.png
+    \li PreserveAspectCrop
     \qml
     Image {
         width: 130; height: 100
@@ -196,8 +196,8 @@ void QDeclarativeImagePrivate::setPixmap(const QPixmap &pixmap)
     \endqml
 
     \row
-    \o \image declarative-qtlogo-tile.png
-    \o Tile
+    \li \image declarative-qtlogo-tile.png
+    \li Tile
     \qml
     Image {
         width: 120; height: 120
@@ -207,8 +207,8 @@ void QDeclarativeImagePrivate::setPixmap(const QPixmap &pixmap)
     \endqml
 
     \row
-    \o \image declarative-qtlogo-tilevertically.png
-    \o TileVertically
+    \li \image declarative-qtlogo-tilevertically.png
+    \li TileVertically
     \qml
     Image {
         width: 120; height: 120
@@ -219,8 +219,8 @@ void QDeclarativeImagePrivate::setPixmap(const QPixmap &pixmap)
     \endqml
 
     \row
-    \o \image declarative-qtlogo-tilehorizontally.png
-    \o TileHorizontally
+    \li \image declarative-qtlogo-tilehorizontally.png
+    \li TileHorizontally
     \qml
     Image {
         width: 120; height: 120
@@ -282,22 +282,22 @@ qreal QDeclarativeImage::paintedHeight() const
 
     This property holds the status of image loading.  It can be one of:
     \list
-    \o Image.Null - no image has been set
-    \o Image.Ready - the image has been loaded
-    \o Image.Loading - the image is currently being loaded
-    \o Image.Error - an error occurred while loading the image
+    \li Image.Null - no image has been set
+    \li Image.Ready - the image has been loaded
+    \li Image.Loading - the image is currently being loaded
+    \li Image.Error - an error occurred while loading the image
     \endlist
 
     Use this status to provide an update or respond to the status change in some way.
     For example, you could:
 
     \list
-    \o Trigger a state change:
+    \li Trigger a state change:
     \qml
         State { name: 'loaded'; when: image.status == Image.Ready }
     \endqml
 
-    \o Implement an \c onStatusChanged signal handler:
+    \li Implement an \c onStatusChanged signal handler:
     \qml
         Image {
             id: image
@@ -305,7 +305,7 @@ qreal QDeclarativeImage::paintedHeight() const
         }
     \endqml
 
-    \o Bind to the status value:
+    \li Bind to the status value:
     \qml
         Text { text: image.status == Image.Ready ? 'Loaded' : 'Not loaded' }
     \endqml
diff --git a/src/declarative/graphicsitems/qdeclarativeitem.cpp b/src/declarative/graphicsitems/qdeclarativeitem.cpp
index 4dd72b8..a78f8a6 100644
--- a/src/declarative/graphicsitems/qdeclarativeitem.cpp
+++ b/src/declarative/graphicsitems/qdeclarativeitem.cpp
@@ -77,9 +77,9 @@ QT_BEGIN_NAMESPACE
     The following concrete Transform types are available:
 
     \list
-    \o \l Rotation
-    \o \l Scale
-    \o \l Translate
+    \li \l Rotation
+    \li \l Scale
+    \li \l Translate
     \endlist
 
     The Transform elements let you create and control advanced transformations that can be configured
@@ -583,10 +583,10 @@ void QDeclarativeKeyNavigationAttached::setBacktab(QDeclarativeItem *i)
     or after the attached item's own key handling.
 
     \list
-    \o KeyNavigation.BeforeItem - process the key events before normal
+    \li KeyNavigation.BeforeItem - process the key events before normal
     item key processing.  If the event is used for key navigation, it will be accepted and will not
     be passed on to the item.
-    \o KeyNavigation.AfterItem (default) - process the key events after normal item key
+    \li KeyNavigation.AfterItem (default) - process the key events after normal item key
     handling.  If the item accepts the key event it will not be
     handled by the KeyNavigation attached property handler.
     \endlist
@@ -947,21 +947,21 @@ void QDeclarativeItemPrivate::setLayoutMirror(bool mirror)
     If \l priority is Keys.BeforeItem (default) the order of key event processing is:
 
     \list 1
-    \o Items specified in \c forwardTo
-    \o specific key handlers, e.g. onReturnPressed
-    \o onKeyPress, onKeyRelease handlers
-    \o Item specific key handling, e.g. TextInput key handling
-    \o parent item
+    \li Items specified in \c forwardTo
+    \li specific key handlers, e.g. onReturnPressed
+    \li onKeyPress, onKeyRelease handlers
+    \li Item specific key handling, e.g. TextInput key handling
+    \li parent item
     \endlist
 
     If priority is Keys.AfterItem the order of key event processing is:
 
     \list 1
-    \o Item specific key handling, e.g. TextInput key handling
-    \o Items specified in \c forwardTo
-    \o specific key handlers, e.g. onReturnPressed
-    \o onKeyPress, onKeyRelease handlers
-    \o parent item
+    \li Item specific key handling, e.g. TextInput key handling
+    \li Items specified in \c forwardTo
+    \li specific key handlers, e.g. onReturnPressed
+    \li onKeyPress, onKeyRelease handlers
+    \li parent item
     \endlist
 
     If the event is accepted during any of the above steps, key
@@ -984,10 +984,10 @@ void QDeclarativeItemPrivate::setLayoutMirror(bool mirror)
     or after the attached item's own key handling.
 
     \list
-    \o Keys.BeforeItem (default) - process the key events before normal
+    \li Keys.BeforeItem (default) - process the key events before normal
     item key processing.  If the event is accepted it will not
     be passed on to the item.
-    \o Keys.AfterItem - process the key events after normal item key
+    \li Keys.AfterItem - process the key events after normal item key
     handling.  If the item accepts the key event it will not be
     handled by the Keys attached property handler.
     \endlist
@@ -2033,8 +2033,8 @@ void QDeclarativeItem::setClip(bool c)
 
   \table
   \row
-  \o \image declarative-item_stacking1.png
-  \o Same \c z - later children above earlier children:
+  \li \image declarative-item_stacking1.png
+  \li Same \c z - later children above earlier children:
   \qml
   Item {
       Rectangle {
@@ -2048,8 +2048,8 @@ void QDeclarativeItem::setClip(bool c)
   }
   \endqml
   \row
-  \o \image declarative-item_stacking2.png
-  \o Higher \c z on top:
+  \li \image declarative-item_stacking2.png
+  \li Higher \c z on top:
   \qml
   Item {
       Rectangle {
@@ -2064,8 +2064,8 @@ void QDeclarativeItem::setClip(bool c)
   }
   \endqml
   \row
-  \o \image declarative-item_stacking3.png
-  \o Same \c z - children above parents:
+  \li \image declarative-item_stacking3.png
+  \li Same \c z - children above parents:
   \qml
   Item {
       Rectangle {
@@ -2079,8 +2079,8 @@ void QDeclarativeItem::setClip(bool c)
   }
   \endqml
   \row
-  \o \image declarative-item_stacking4.png
-  \o Lower \c z below:
+  \li \image declarative-item_stacking4.png
+  \li Lower \c z below:
   \qml
   Item {
       Rectangle {
@@ -2349,8 +2349,8 @@ QDeclarativeAnchorLine QDeclarativeItemPrivate::baseline() const
 
   \table
   \row
-  \o \image declarative-anchors_example.png
-  \o Text anchored to Image, horizontally centered and vertically below, with a margin.
+  \li \image declarative-anchors_example.png
+  \li Text anchored to Image, horizontally centered and vertically below, with a margin.
   \qml
   Item {
       Image {
@@ -2367,8 +2367,8 @@ QDeclarativeAnchorLine QDeclarativeItemPrivate::baseline() const
   }
   \endqml
   \row
-  \o \image declarative-anchors_example2.png
-  \o
+  \li \image declarative-anchors_example2.png
+  \li
   Left of Text anchored to right of Image, with a margin. The y
   property of both defaults to 0.
 
@@ -2448,8 +2448,8 @@ void QDeclarativeItem::setBaselineOffset(qreal offset)
 
   \table
   \row
-  \o \image declarative-rotation.png
-  \o
+  \li \image declarative-rotation.png
+  \li
   \qml
   Rectangle {
       color: "blue"
@@ -2482,8 +2482,8 @@ void QDeclarativeItem::setBaselineOffset(qreal offset)
 
   \table
   \row
-  \o \image declarative-scale.png
-  \o
+  \li \image declarative-scale.png
+  \li
   \qml
   Rectangle {
       color: "blue"
@@ -2519,8 +2519,8 @@ void QDeclarativeItem::setBaselineOffset(qreal offset)
 
   \table
   \row
-  \o \image declarative-item_opacity1.png
-  \o
+  \li \image declarative-item_opacity1.png
+  \li
   \qml
     Item {
         Rectangle {
@@ -2534,8 +2534,8 @@ void QDeclarativeItem::setBaselineOffset(qreal offset)
     }
   \endqml
   \row
-  \o \image declarative-item_opacity2.png
-  \o
+  \li \image declarative-item_opacity2.png
+  \li
   \qml
     Item {
         Rectangle {
@@ -3509,7 +3509,7 @@ qreal QDeclarativeItem::implicitHeight() const
     }
     \endqml
 
-    \bold Note: using implicitWidth of Text or TextEdit and setting the width explicitly
+    \b Note: using implicitWidth of Text or TextEdit and setting the width explicitly
     incurs a performance penalty as the text must be laid out twice.
 */
 
diff --git a/src/declarative/graphicsitems/qdeclarativelistview.cpp b/src/declarative/graphicsitems/qdeclarativelistview.cpp
index 2c1b78a..b94ffd6 100644
--- a/src/declarative/graphicsitems/qdeclarativelistview.cpp
+++ b/src/declarative/graphicsitems/qdeclarativelistview.cpp
@@ -2039,13 +2039,13 @@ void QDeclarativeListView::setHighlightFollowsCurrentItem(bool autoHighlight)
     Valid values for \c highlightRangeMode are:
 
     \list
-    \o ListView.ApplyRange - the view attempts to maintain the highlight within the range.
+    \li ListView.ApplyRange - the view attempts to maintain the highlight within the range.
        However, the highlight can move outside of the range at the ends of the list or due
        to mouse interaction.
-    \o ListView.StrictlyEnforceRange - the highlight never moves outside of the range.
+    \li ListView.StrictlyEnforceRange - the highlight never moves outside of the range.
        The current item changes if a keyboard or mouse action would cause the highlight to move
        outside of the range.
-    \o ListView.NoHighlightRange - this is the default value.
+    \li ListView.NoHighlightRange - this is the default value.
     \endlist
 */
 qreal QDeclarativeListView::preferredHighlightBegin() const
@@ -2148,17 +2148,17 @@ void QDeclarativeListView::setSpacing(qreal spacing)
     Possible values:
 
     \list
-    \o ListView.Horizontal - Items are laid out horizontally
-    \o ListView.Vertical (default) - Items are laid out vertically
+    \li ListView.Horizontal - Items are laid out horizontally
+    \li ListView.Vertical (default) - Items are laid out vertically
     \endlist
 
     \table
     \row
-    \o Horizontal orientation:
+    \li Horizontal orientation:
     \image ListViewHorizontal.png
 
     \row
-    \o Vertical orientation:
+    \li Vertical orientation:
     \image listview-highlight.png
     \endtable
 */
@@ -2194,8 +2194,8 @@ void QDeclarativeListView::setOrientation(QDeclarativeListView::Orientation orie
   Possible values:
 
   \list
-  \o Qt.LeftToRight (default) - Items will be laid out from left to right.
-  \o Qt.RightToLeft - Items will be laid out from right to let.
+  \li Qt.LeftToRight (default) - Items will be laid out from left to right.
+  \li Qt.RightToLeft - Items will be laid out from right to let.
   \endlist
 
   When using the attached property \l {LayoutMirroring::enabled} for locale layouts,
@@ -2312,9 +2312,9 @@ void QDeclarativeListView::setCacheBuffer(int b)
     \c section.property. This value can be one of:
 
     \list
-    \o ViewSection.FullString (default) - sections are created based on the 
+    \li ViewSection.FullString (default) - sections are created based on the
     \c section.property value.
-    \o ViewSection.FirstCharacter - sections are created based on the first
+    \li ViewSection.FirstCharacter - sections are created based on the first
     character of the \c section.property value (for example, 'A', 'B', 'C' 
     sections, etc. for an address book)
     \endlist
@@ -2459,10 +2459,10 @@ void QDeclarativeListView::setHighlightResizeDuration(int duration)
     The possible values are:
 
     \list
-    \o ListView.NoSnap (default) - the view stops anywhere within the visible area.
-    \o ListView.SnapToItem - the view settles with an item aligned with the start of
+    \li ListView.NoSnap (default) - the view stops anywhere within the visible area.
+    \li ListView.SnapToItem - the view settles with an item aligned with the start of
     the view.
-    \o ListView.SnapOneItem - the view settles no more than one item away from the first
+    \li ListView.SnapOneItem - the view settles no more than one item away from the first
     visible item at the time the mouse button is released.  This mode is particularly
     useful for moving one page at a time.
     \endlist
@@ -2879,7 +2879,7 @@ void QDeclarativeListView::geometryChanged(const QRectF &newGeometry,
     if keyNavigationWraps is true and it is currently at the end.
     This method has no effect if the \l count is zero.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativeListView::incrementCurrentIndex()
 {
@@ -2899,7 +2899,7 @@ void QDeclarativeListView::incrementCurrentIndex()
     if keyNavigationWraps is true and it is currently at the beginning.
     This method has no effect if the \l count is zero.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativeListView::decrementCurrentIndex()
 {
@@ -3001,12 +3001,12 @@ void QDeclarativeListViewPrivate::positionViewAtIndex(int index, int mode)
     \a mode:
 
     \list
-    \o ListView.Beginning - position item at the top (or left for horizontal orientation) of the view.
-    \o ListView.Center - position item in the center of the view.
-    \o ListView.End - position item at bottom (or right for horizontal orientation) of the view.
-    \o ListView.Visible - if any part of the item is visible then take no action, otherwise
+    \li ListView.Beginning - position item at the top (or left for horizontal orientation) of the view.
+    \li ListView.Center - position item in the center of the view.
+    \li ListView.End - position item at bottom (or right for horizontal orientation) of the view.
+    \li ListView.Visible - if any part of the item is visible then take no action, otherwise
     bring the item into view.
-    \o ListView.Contain - ensure the entire item is visible.  If the item is larger than
+    \li ListView.Contain - ensure the entire item is visible.  If the item is larger than
     the view the item is positioned at the top (or left for horizontal orientation) of the view.
     \endlist
 
@@ -3019,7 +3019,7 @@ void QDeclarativeListViewPrivate::positionViewAtIndex(int index, int mode)
     the actual start of the view can vary based on the size of the delegates.
     The correct way to bring an item into view is with \c positionViewAtIndex.
 
-    \bold Note: methods should only be called after the Component has completed.  To position
+    \b Note: methods should only be called after the Component has completed.  To position
     the view at startup, this method should be called by Component.onCompleted.  For
     example, to position the view at the end:
 
@@ -3047,7 +3047,7 @@ void QDeclarativeListView::positionViewAtIndex(int index, int mode)
     of the list does not cause all other items to be repositioned, and because
     the actual start of the view can vary based on the size of the delegates.
 
-    \bold Note: methods should only be called after the Component has completed.  To position
+    \b Note: methods should only be called after the Component has completed.  To position
     the view at startup, this method should be called by Component.onCompleted.  For
     example, to position the view at the end on startup:
 
@@ -3081,7 +3081,7 @@ void QDeclarativeListView::positionViewAtEnd()
     If the item is outside the visible area, -1 is returned, regardless of
     whether an item will exist at that point when scrolled into view.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 int QDeclarativeListView::indexAt(qreal x, qreal y) const
 {
diff --git a/src/declarative/graphicsitems/qdeclarativeloader.cpp b/src/declarative/graphicsitems/qdeclarativeloader.cpp
index dba95f7..b6cd323 100644
--- a/src/declarative/graphicsitems/qdeclarativeloader.cpp
+++ b/src/declarative/graphicsitems/qdeclarativeloader.cpp
@@ -150,10 +150,10 @@ void QDeclarativeLoaderPrivate::initResize()
     accordingly to become visible.
 
     \list
-    \o If an explicit size is not specified for the Loader, the Loader
+    \li If an explicit size is not specified for the Loader, the Loader
     is automatically resized to the size of the loaded item once the
     component is loaded.
-    \o If the size of the Loader is specified explicitly by setting
+    \li If the size of the Loader is specified explicitly by setting
     the width, height or by anchoring, the loaded item will be resized
     to the size of the Loader.
     \endlist
@@ -164,14 +164,14 @@ void QDeclarativeLoaderPrivate::initResize()
 
     \table
     \row
-    \o sizeloader.qml
-    \o sizeitem.qml
+    \li sizeloader.qml
+    \li sizeitem.qml
     \row
-    \o \snippet doc/src/snippets/declarative/loader/sizeloader.qml 0
-    \o \snippet doc/src/snippets/declarative/loader/sizeitem.qml 0
+    \li \snippet doc/src/snippets/declarative/loader/sizeloader.qml 0
+    \li \snippet doc/src/snippets/declarative/loader/sizeitem.qml 0
     \row
-    \o The red rectangle will be sized to the size of the root item.
-    \o The red rectangle will be 50x50, centered in the root item.
+    \li The red rectangle will be sized to the size of the root item.
+    \li The red rectangle will be 50x50, centered in the root item.
     \endtable
 
 
@@ -184,11 +184,11 @@ void QDeclarativeLoaderPrivate::initResize()
 
     \table
     \row 
-    \o application.qml
-    \o MyItem.qml
+    \li application.qml
+    \li MyItem.qml
     \row
-    \o \snippet doc/src/snippets/declarative/loader/connections.qml 0
-    \o \snippet doc/src/snippets/declarative/loader/MyItem.qml 0
+    \li \snippet doc/src/snippets/declarative/loader/connections.qml 0
+    \li \snippet doc/src/snippets/declarative/loader/MyItem.qml 0
     \endtable
 
     Alternatively, since \c MyItem.qml is loaded within the scope of the
@@ -211,11 +211,11 @@ void QDeclarativeLoaderPrivate::initResize()
 
     \table
     \row 
-    \o application.qml
-    \o KeyReader.qml
+    \li application.qml
+    \li KeyReader.qml
     \row
-    \o \snippet doc/src/snippets/declarative/loader/focus.qml 0
-    \o \snippet doc/src/snippets/declarative/loader/KeyReader.qml 0
+    \li \snippet doc/src/snippets/declarative/loader/focus.qml 0
+    \li \snippet doc/src/snippets/declarative/loader/KeyReader.qml 0
     \endtable
 
     Once \c KeyReader.qml is loaded, it accepts key events and sets 
@@ -429,22 +429,22 @@ void QDeclarativeLoaderPrivate::_q_sourceLoaded()
 
     This property holds the status of QML loading.  It can be one of:
     \list
-    \o Loader.Null - no QML source has been set
-    \o Loader.Ready - the QML source has been loaded
-    \o Loader.Loading - the QML source is currently being loaded
-    \o Loader.Error - an error occurred while loading the QML source
+    \li Loader.Null - no QML source has been set
+    \li Loader.Ready - the QML source has been loaded
+    \li Loader.Loading - the QML source is currently being loaded
+    \li Loader.Error - an error occurred while loading the QML source
     \endlist
 
     Use this status to provide an update or respond to the status change in some way.
     For example, you could:
 
     \list
-    \o Trigger a state change:
+    \li Trigger a state change:
     \qml
         State { name: 'loaded'; when: loader.status == Loader.Ready }
     \endqml
 
-    \o Implement an \c onStatusChanged signal handler:
+    \li Implement an \c onStatusChanged signal handler:
     \qml
         Loader {
             id: loader
@@ -452,7 +452,7 @@ void QDeclarativeLoaderPrivate::_q_sourceLoaded()
         }
     \endqml
 
-    \o Bind to the status value:
+    \li Bind to the status value:
     \qml
         Text { text: loader.status == Loader.Ready ? 'Loaded' : 'Not loaded' }
     \endqml
diff --git a/src/declarative/graphicsitems/qdeclarativemousearea.cpp b/src/declarative/graphicsitems/qdeclarativemousearea.cpp
index 8026f89..ca6ba51 100644
--- a/src/declarative/graphicsitems/qdeclarativemousearea.cpp
+++ b/src/declarative/graphicsitems/qdeclarativemousearea.cpp
@@ -378,8 +378,8 @@ QDeclarativeMouseArea::~QDeclarativeMouseArea()
 
     If hoverEnabled is true then these properties will be valid when:
     \list
-        \i no button is pressed, but the mouse is within the MouseArea (containsMouse is true).
-        \i a button is pressed and held, even if it has since moved out of the area.
+        \li no button is pressed, but the mouse is within the MouseArea (containsMouse is true).
+        \li a button is pressed and held, even if it has since moved out of the area.
     \endlist
 
     The coordinates are relative to the MouseArea.
@@ -456,9 +456,9 @@ void QDeclarativeMouseArea::setPreventStealing(bool prevent)
 
     It contains a bitwise combination of:
     \list
-    \o Qt.LeftButton
-    \o Qt.RightButton
-    \o Qt.MiddleButton
+    \li Qt.LeftButton
+    \li Qt.RightButton
+    \li Qt.MiddleButton
     \endlist
 
     The code below displays "right" when the right mouse buttons is pressed:
@@ -883,9 +883,9 @@ void QDeclarativeMouseArea::setHovered(bool h)
 
     The available buttons are:
     \list
-    \o Qt.LeftButton
-    \o Qt.RightButton
-    \o Qt.MiddleButton
+    \li Qt.LeftButton
+    \li Qt.RightButton
+    \li Qt.MiddleButton
     \endlist
 
     To accept more than one button the flags can be combined with the
@@ -961,10 +961,10 @@ QDeclarativeDrag *QDeclarativeMouseArea::drag()
     \c drag provides a convenient way to make an item draggable.
 
     \list
-    \i \c drag.target specifies the id of the item to drag.
-    \i \c drag.active specifies if the target item is currently being dragged.
-    \i \c drag.axis specifies whether dragging can be done horizontally (\c Drag.XAxis), vertically (\c Drag.YAxis), or both (\c Drag.XandYAxis)
-    \i \c drag.minimum and \c drag.maximum limit how far the target can be dragged along the corresponding axes.
+    \li \c drag.target specifies the id of the item to drag.
+    \li \c drag.active specifies if the target item is currently being dragged.
+    \li \c drag.axis specifies whether dragging can be done horizontally (\c Drag.XAxis), vertically (\c Drag.YAxis), or both (\c Drag.XandYAxis)
+    \li \c drag.minimum and \c drag.maximum limit how far the target can be dragged along the corresponding axes.
     \endlist
 
     The following example displays a \l Rectangle that can be dragged along the X-axis. The opacity
diff --git a/src/declarative/graphicsitems/qdeclarativepath.cpp b/src/declarative/graphicsitems/qdeclarativepath.cpp
index aa781c5..0b7c145 100644
--- a/src/declarative/graphicsitems/qdeclarativepath.cpp
+++ b/src/declarative/graphicsitems/qdeclarativepath.cpp
@@ -144,11 +144,11 @@ bool QDeclarativePath::isClosed() const
 
     A path can contain the following path objects:
     \list
-        \i \l PathLine - a straight line to a given position.
-        \i \l PathQuad - a quadratic Bezier curve to a given position with a control point.
-        \i \l PathCubic - a cubic Bezier curve to a given position with two control points.
-        \i \l PathAttribute - an attribute at a given position in the path.
-        \i \l PathPercent - a way to spread out items along various segments of the path.
+        \li \l PathLine - a straight line to a given position.
+        \li \l PathQuad - a quadratic Bezier curve to a given position with a control point.
+        \li \l PathCubic - a cubic Bezier curve to a given position with two control points.
+        \li \l PathAttribute - an attribute at a given position in the path.
+        \li \l PathPercent - a way to spread out items along various segments of the path.
     \endlist
 
     \snippet doc/src/snippets/declarative/pathview/pathattributes.qml 2
@@ -512,8 +512,8 @@ void QDeclarativeCurve::setY(qreal y)
 
     \table
     \row
-    \o \image declarative-pathattribute.png
-    \o
+    \li \image declarative-pathattribute.png
+    \li
     \snippet doc/src/snippets/declarative/pathview/pathattributes.qml 0
     (see the PathView documentation for the specification of ContactModel.qml
      used for ContactModel above.)
@@ -649,8 +649,8 @@ void QDeclarativePathLine::addToPath(QPainterPath &path)
     The following QML produces the path shown below:
     \table
     \row
-    \o \image declarative-pathquad.png
-    \o
+    \li \image declarative-pathquad.png
+    \li
     \qml
     Path {
         startX: 0; startY: 0
@@ -727,8 +727,8 @@ void QDeclarativePathQuad::addToPath(QPainterPath &path)
     The following QML produces the path shown below:
     \table
     \row
-    \o \image declarative-pathcubic.png
-    \o
+    \li \image declarative-pathcubic.png
+    \li
     \qml
     Path {
         startX: 20; startY: 0
@@ -841,8 +841,8 @@ void QDeclarativePathCubic::addToPath(QPainterPath &path)
     PathLine section of the path.
     \table
     \row
-    \o \image declarative-nopercent.png
-    \o
+    \li \image declarative-nopercent.png
+    \li
     \qml
     PathView {
         // ...
@@ -855,8 +855,8 @@ void QDeclarativePathCubic::addToPath(QPainterPath &path)
     }
     \endqml
     \row
-    \o \image declarative-percent.png
-    \o
+    \li \image declarative-percent.png
+    \li
     \qml
     PathView {
         // ...
diff --git a/src/declarative/graphicsitems/qdeclarativepathview.cpp b/src/declarative/graphicsitems/qdeclarativepathview.cpp
index ba1097c..0d4d1ca 100644
--- a/src/declarative/graphicsitems/qdeclarativepathview.cpp
+++ b/src/declarative/graphicsitems/qdeclarativepathview.cpp
@@ -403,7 +403,7 @@ void QDeclarativePathViewPrivate::regenerate()
 
     \snippet doc/src/snippets/declarative/pathview/pathview.qml 1
 
-    \bold Note that views do not enable \e clip automatically.  If the view
+    \b Note that views do not enable \e clip automatically.  If the view
     is not clipped by another item or the screen, it will be necessary
     to set \e {clip: true} in order to have the out of view items clipped
     nicely.
@@ -628,7 +628,7 @@ void QDeclarativePathView::setCurrentIndex(int idx)
 
     Increments the current index.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativePathView::incrementCurrentIndex()
 {
@@ -643,7 +643,7 @@ void QDeclarativePathView::incrementCurrentIndex()
 
     Decrements the current index.
 
-    \bold Note: methods should only be called after the Component has completed.
+    \b Note: methods should only be called after the Component has completed.
 */
 void QDeclarativePathView::decrementCurrentIndex()
 {
diff --git a/src/declarative/graphicsitems/qdeclarativepincharea.cpp b/src/declarative/graphicsitems/qdeclarativepincharea.cpp
index d33c893..adff025 100644
--- a/src/declarative/graphicsitems/qdeclarativepincharea.cpp
+++ b/src/declarative/graphicsitems/qdeclarativepincharea.cpp
@@ -56,7 +56,7 @@ QT_BEGIN_NAMESPACE
     \ingroup qml-event-elements
     \brief The PinchEvent object provides information about a pinch event.
 
-    \bold {The PinchEvent element was added in QtQuick 1.1}
+    \b {The PinchEvent element was added in QtQuick 1.1}
 
     The \c center, \c startCenter, \c previousCenter properties provide the center position between the two touch points.
 
@@ -80,9 +80,9 @@ QT_BEGIN_NAMESPACE
     These properties hold the position of the center point between the two touch points.
 
     \list
-    \o \c center is the current center point
-    \o \c previousCenter is the center point of the previous event.
-    \o \c startCenter is the center point when the gesture began
+    \li \c center is the current center point
+    \li \c previousCenter is the center point of the previous event.
+    \li \c startCenter is the center point when the gesture began
     \endlist
 */
 
@@ -93,8 +93,8 @@ QT_BEGIN_NAMESPACE
     These properties hold the scale factor determined by the change in distance between the two touch points.
 
     \list
-    \o \c scale is the current scale factor.
-    \o \c previousScale is the scale factor of the previous event.
+    \li \c scale is the current scale factor.
+    \li \c previousScale is the scale factor of the previous event.
     \endlist
 
     When a pinch gesture is started, the scale is 1.0.
@@ -108,9 +108,9 @@ QT_BEGIN_NAMESPACE
     These properties hold the angle between the two touch points.
 
     \list
-    \o \c angle is the current angle between the two points in the range -180 to 180.
-    \o \c previousAngle is the angle of the previous event.
-    \o \c rotation is the total rotation since the pinch gesture started.
+    \li \c angle is the current angle between the two points in the range -180 to 180.
+    \li \c previousAngle is the angle of the previous event.
+    \li \c rotation is the total rotation since the pinch gesture started.
     \endlist
 
     When a pinch gesture is started, the rotation is 0.0.
@@ -125,8 +125,8 @@ QT_BEGIN_NAMESPACE
     These properties provide the actual touch points generating the pinch.
 
     \list
-    \o \c point1 and \c point2 hold the current positions of the points.
-    \o \c startPoint1 and \c startPoint2 hold the positions of the points when the second point was touched.
+    \li \c point1 and \c point2 hold the current positions of the points.
+    \li \c startPoint1 and \c startPoint2 hold the positions of the points when the second point was touched.
     \endlist
 */
 
@@ -164,7 +164,7 @@ QDeclarativePinchAreaPrivate::~QDeclarativePinchAreaPrivate()
     \brief The PinchArea item enables simple pinch gesture handling.
     \inherits Item
 
-    \bold {The PinchArea element was added in QtQuick 1.1}
+    \b {The PinchArea element was added in QtQuick 1.1}
 
     A PinchArea is an invisible item that is typically used in conjunction with
     a visible item in order to provide pinch gesture handling for that item.
@@ -176,8 +176,8 @@ QDeclarativePinchAreaPrivate::~QDeclarativePinchAreaPrivate()
     PinchArea can be used in two ways:
 
     \list
-    \o setting a \c pinch.target to provide automatic interaction with an element
-    \o using the onPinchStarted, onPinchUpdated and onPinchFinished handlers
+    \li setting a \c pinch.target to provide automatic interaction with an element
+    \li using the onPinchStarted, onPinchUpdated and onPinchFinished handlers
     \endlist
 
     \sa PinchEvent
@@ -230,12 +230,12 @@ QDeclarativePinchAreaPrivate::~QDeclarativePinchAreaPrivate()
     \c pinch provides a convenient way to make an item react to pinch gestures.
 
     \list
-    \i \c pinch.target specifies the id of the item to drag.
-    \i \c pinch.active specifies if the target item is currently being dragged.
-    \i \c pinch.minimumScale and \c pinch.maximumScale limit the range of the Item::scale property.
-    \i \c pinch.minimumRotation and \c pinch.maximumRotation limit the range of the Item::rotation property.
-    \i \c pinch.dragAxis specifies whether dragging in not allowed (\c Pinch.NoDrag), can be done horizontally (\c Pinch.XAxis), vertically (\c Pinch.YAxis), or both (\c Pinch.XandYAxis)
-    \i \c pinch.minimum and \c pinch.maximum limit how far the target can be dragged along the corresponding axes.
+    \li \c pinch.target specifies the id of the item to drag.
+    \li \c pinch.active specifies if the target item is currently being dragged.
+    \li \c pinch.minimumScale and \c pinch.maximumScale limit the range of the Item::scale property.
+    \li \c pinch.minimumRotation and \c pinch.maximumRotation limit the range of the Item::rotation property.
+    \li \c pinch.dragAxis specifies whether dragging in not allowed (\c Pinch.NoDrag), can be done horizontally (\c Pinch.XAxis), vertically (\c Pinch.YAxis), or both (\c Pinch.XandYAxis)
+    \li \c pinch.minimum and \c pinch.maximum limit how far the target can be dragged along the corresponding axes.
     \endlist
 */
 
diff --git a/src/declarative/graphicsitems/qdeclarativepositioners.cpp b/src/declarative/graphicsitems/qdeclarativepositioners.cpp
index 6ee0db0..41605b8 100644
--- a/src/declarative/graphicsitems/qdeclarativepositioners.cpp
+++ b/src/declarative/graphicsitems/qdeclarativepositioners.cpp
@@ -591,9 +591,9 @@ QDeclarativeRow::QDeclarativeRow(QDeclarativeItem *parent)
     Possible values:
 
     \list
-    \o Qt.LeftToRight (default) - Items are laid out from left to right. If the width of the row is explicitly set,
+    \li Qt.LeftToRight (default) - Items are laid out from left to right. If the width of the row is explicitly set,
     the left anchor remains to the left of the row.
-    \o Qt.RightToLeft - Items are laid out from right to left. If the width of the row is explicitly set,
+    \li Qt.RightToLeft - Items are laid out from right to left. If the width of the row is explicitly set,
     the right anchor remains to the right of the row.
     \endlist
 
@@ -856,9 +856,9 @@ void QDeclarativeGrid::setRows(const int rows)
     Possible values are:
 
     \list
-    \o Grid.LeftToRight (default) - Items are positioned next to
+    \li Grid.LeftToRight (default) - Items are positioned next to
        each other in the \l layoutDirection, then wrapped to the next line.
-    \o Grid.TopToBottom - Items are positioned next to each
+    \li Grid.TopToBottom - Items are positioned next to each
        other from top to bottom, then wrapped to the next column.
     \endlist
 */
@@ -885,10 +885,10 @@ void QDeclarativeGrid::setFlow(Flow flow)
     Possible values are:
 
     \list
-    \o Qt.LeftToRight (default) - Items are positioned from the top to bottom,
+    \li Qt.LeftToRight (default) - Items are positioned from the top to bottom,
     and left to right. The flow direction is dependent on the
     \l Grid::flow property.
-    \o Qt.RightToLeft - Items are positioned from the top to bottom,
+    \li Qt.RightToLeft - Items are positioned from the top to bottom,
     and right to left. The flow direction is dependent on the
     \l Grid::flow property.
     \endlist
@@ -1210,10 +1210,10 @@ QDeclarativeFlow::QDeclarativeFlow(QDeclarativeItem *parent)
     Possible values are:
 
     \list
-    \o Flow.LeftToRight (default) - Items are positioned next to
+    \li Flow.LeftToRight (default) - Items are positioned next to
     to each other according to the \l layoutDirection until the width of the Flow
     is exceeded, then wrapped to the next line.
-    \o Flow.TopToBottom - Items are positioned next to each
+    \li Flow.TopToBottom - Items are positioned next to each
     other from top to bottom until the height of the Flow is exceeded,
     then wrapped to the next column.
     \endlist
@@ -1243,10 +1243,10 @@ void QDeclarativeFlow::setFlow(Flow flow)
     Possible values are:
 
     \list
-    \o Qt.LeftToRight (default) - Items are positioned from the top to bottom,
+    \li Qt.LeftToRight (default) - Items are positioned from the top to bottom,
     and left to right. The flow direction is dependent on the
     \l Flow::flow property.
-    \o Qt.RightToLeft - Items are positioned from the top to bottom,
+    \li Qt.RightToLeft - Items are positioned from the top to bottom,
     and right to left. The flow direction is dependent on the
     \l Flow::flow property.
     \endlist
diff --git a/src/declarative/graphicsitems/qdeclarativerepeater.cpp b/src/declarative/graphicsitems/qdeclarativerepeater.cpp
index 8a07a2a..07950fb 100644
--- a/src/declarative/graphicsitems/qdeclarativerepeater.cpp
+++ b/src/declarative/graphicsitems/qdeclarativerepeater.cpp
@@ -164,10 +164,10 @@ QDeclarativeRepeater::~QDeclarativeRepeater()
     This property can be set to any of the supported \l {qmlmodels}{data models}:
 
     \list
-    \o A number that indicates the number of delegates to be created by the repeater
-    \o A model (e.g. a ListModel item, or a QAbstractItemModel subclass)
-    \o A string list
-    \o An object list
+    \li A number that indicates the number of delegates to be created by the repeater
+    \li A model (e.g. a ListModel item, or a QAbstractItemModel subclass)
+    \li A string list
+    \li An object list
     \endlist
 
     The type of model affects the properties that are exposed to the \l delegate.
@@ -241,8 +241,8 @@ void QDeclarativeRepeater::setModel(const QVariant &model)
 
     \table
     \row
-    \o \snippet doc/src/snippets/declarative/repeaters/repeater.qml index
-    \o \image repeater-index.png
+    \li \snippet doc/src/snippets/declarative/repeaters/repeater.qml index
+    \li \image repeater-index.png
     \endtable
 
     If the \l model is a \l{QStringList-based model}{string list} or
@@ -252,8 +252,8 @@ void QDeclarativeRepeater::setModel(const QVariant &model)
 
     \table
     \row
-    \o \snippet doc/src/snippets/declarative/repeaters/repeater.qml modeldata
-    \o \image repeater-modeldata.png
+    \li \snippet doc/src/snippets/declarative/repeaters/repeater.qml modeldata
+    \li \image repeater-modeldata.png
     \endtable
 
     If the \l model is a model object (such as a \l ListModel) the delegate
diff --git a/src/declarative/graphicsitems/qdeclarativetext.cpp b/src/declarative/graphicsitems/qdeclarativetext.cpp
index 689a75e..a94cb14 100644
--- a/src/declarative/graphicsitems/qdeclarativetext.cpp
+++ b/src/declarative/graphicsitems/qdeclarativetext.cpp
@@ -777,11 +777,11 @@ QDeclarativeText::~QDeclarativeText()
 
     The weight can be one of:
     \list
-    \o Font.Light
-    \o Font.Normal - the default
-    \o Font.DemiBold
-    \o Font.Bold
-    \o Font.Black
+    \li Font.Light
+    \li Font.Normal - the default
+    \li Font.DemiBold
+    \li Font.Bold
+    \li Font.Black
     \endlist
 
     \qml
@@ -847,11 +847,11 @@ QDeclarativeText::~QDeclarativeText()
     Sets the capitalization for the text.
 
     \list
-    \o Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.
-    \o Font.AllUppercase - This alters the text to be rendered in all uppercase type.
-    \o Font.AllLowercase	 - This alters the text to be rendered in all lowercase type.
-    \o Font.SmallCaps -	This alters the text to be rendered in small-caps type.
-    \o Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.
+    \li Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.
+    \li Font.AllUppercase - This alters the text to be rendered in all uppercase type.
+    \li Font.AllLowercase - This alters the text to be rendered in all lowercase type.
+    \li Font.SmallCaps - This alters the text to be rendered in small-caps type.
+    \li Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.
     \endlist
 
     \qml
@@ -967,10 +967,10 @@ void QDeclarativeText::setColor(const QColor &color)
 
     Supported text styles are:
     \list
-    \o Text.Normal - the default
-    \o Text.Outline
-    \o Text.Raised
-    \o Text.Sunken
+    \li Text.Normal - the default
+    \li Text.Outline
+    \li Text.Raised
+    \li Text.Sunken
     \endlist
 
     \qml
@@ -1163,10 +1163,10 @@ void QDeclarativeText::setVAlign(VAlignment align)
     wrap if an explicit width has been set.  wrapMode can be one of:
 
     \list
-    \o Text.NoWrap (default) - no wrapping will be performed. If the text contains insufficient newlines, then \l paintedWidth will exceed a set width.
-    \o Text.WordWrap - wrapping is done on word boundaries only. If a word is too long, \l paintedWidth will exceed a set width.
-    \o Text.WrapAnywhere - wrapping is done at any point on a line, even if it occurs in the middle of a word.
-    \o Text.Wrap - if possible, wrapping occurs at a word boundary; otherwise it will occur at the appropriate point on the line, even in the middle of a word.
+    \li Text.NoWrap (default) - no wrapping will be performed. If the text contains insufficient newlines, then \l paintedWidth will exceed a set width.
+    \li Text.WordWrap - wrapping is done on word boundaries only. If a word is too long, \l paintedWidth will exceed a set width.
+    \li Text.WrapAnywhere - wrapping is done at any point on a line, even if it occurs in the middle of a word.
+    \li Text.Wrap - if possible, wrapping occurs at a word boundary; otherwise it will occur at the appropriate point on the line, even in the middle of a word.
     \endlist
 */
 QDeclarativeText::WrapMode QDeclarativeText::wrapMode() const
@@ -1269,10 +1269,10 @@ void QDeclarativeText::resetMaximumLineCount()
     Supported text formats are:
     
     \list
-    \o Text.AutoText (default)
-    \o Text.PlainText
-    \o Text.RichText
-    \o Text.StyledText
+    \li Text.AutoText (default)
+    \li Text.PlainText
+    \li Text.RichText
+    \li Text.StyledText
     \endlist
 
     If the text format is \c Text.AutoText the text element
@@ -1294,7 +1294,7 @@ void QDeclarativeText::resetMaximumLineCount()
 
     \table
     \row
-    \o
+    \li
     \qml
 Column {
     Text {
@@ -1313,7 +1313,7 @@ Column {
     }
 }
     \endqml
-    \o \image declarative-textformat.png
+    \li \image declarative-textformat.png
     \endtable
 */
 QDeclarativeText::TextFormat QDeclarativeText::textFormat() const
@@ -1351,10 +1351,10 @@ void QDeclarativeText::setTextFormat(TextFormat format)
 
     Eliding can be:
     \list
-    \o Text.ElideNone  - the default
-    \o Text.ElideLeft
-    \o Text.ElideMiddle
-    \o Text.ElideRight
+    \li Text.ElideNone  - the default
+    \li Text.ElideLeft
+    \li Text.ElideMiddle
+    \li Text.ElideRight
     \endlist
 
     If this property is set to Text.ElideRight, it can be used with multiline
@@ -1489,9 +1489,9 @@ void QDeclarativeText::setLineHeight(qreal lineHeight)
     The possible values are:
 
     \list
-    \o Text.ProportionalHeight (default) - this sets the spacing proportional to the
+    \li Text.ProportionalHeight (default) - this sets the spacing proportional to the
        line (as a multiplier). For example, set to 2 for double spacing.
-    \o Text.FixedHeight - this sets the line height to a fixed line height (in pixels).
+    \li Text.FixedHeight - this sets the line height to a fixed line height (in pixels).
     \endlist
 */
 QDeclarativeText::LineHeightMode QDeclarativeText::lineHeightMode() const
diff --git a/src/declarative/graphicsitems/qdeclarativetextedit.cpp b/src/declarative/graphicsitems/qdeclarativetextedit.cpp
index 38bc453..978e25d 100644
--- a/src/declarative/graphicsitems/qdeclarativetextedit.cpp
+++ b/src/declarative/graphicsitems/qdeclarativetextedit.cpp
@@ -156,11 +156,11 @@ QString QDeclarativeTextEdit::text() const
 
     The weight can be one of:
     \list
-    \o Font.Light
-    \o Font.Normal - the default
-    \o Font.DemiBold
-    \o Font.Bold
-    \o Font.Black
+    \li Font.Light
+    \li Font.Normal - the default
+    \li Font.DemiBold
+    \li Font.Bold
+    \li Font.Black
     \endlist
 
     \qml
@@ -227,11 +227,11 @@ QString QDeclarativeTextEdit::text() const
     Sets the capitalization for the text.
 
     \list
-    \o Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.
-    \o Font.AllUppercase - This alters the text to be rendered in all uppercase type.
-    \o Font.AllLowercase	 - This alters the text to be rendered in all lowercase type.
-    \o Font.SmallCaps -	This alters the text to be rendered in small-caps type.
-    \o Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.
+    \li Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.
+    \li Font.AllUppercase - This alters the text to be rendered in all uppercase type.
+    \li Font.AllLowercase - This alters the text to be rendered in all lowercase type.
+    \li Font.SmallCaps - This alters the text to be rendered in small-caps type.
+    \li Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.
     \endlist
 
     \qml
@@ -271,9 +271,9 @@ void QDeclarativeTextEdit::setText(const QString &text)
     The way the text property should be displayed.
 
     \list
-    \o TextEdit.AutoText
-    \o TextEdit.PlainText
-    \o TextEdit.RichText
+    \li TextEdit.AutoText
+    \li TextEdit.PlainText
+    \li TextEdit.RichText
     \endlist
 
     The default is TextEdit.AutoText.  If the text format is TextEdit.AutoText the text edit
@@ -282,7 +282,7 @@ void QDeclarativeTextEdit::setText(const QString &text)
 
     \table
     \row
-    \o
+    \li
     \qml
 Column {
     TextEdit {
@@ -301,7 +301,7 @@ Column {
     }
 }
     \endqml
-    \o \image declarative-textformat.png
+    \li \image declarative-textformat.png
     \endtable
 */
 QDeclarativeTextEdit::TextFormat QDeclarativeTextEdit::textFormat() const
@@ -467,17 +467,17 @@ void QDeclarativeTextEdit::setSelectedTextColor(const QColor &color)
 
     Valid values for \c horizontalAlignment are:
     \list
-    \o TextEdit.AlignLeft (default)
-    \o TextEdit.AlignRight 
-    \o TextEdit.AlignHCenter
-    \o TextEdit.AlignJustify
+    \li TextEdit.AlignLeft (default)
+    \li TextEdit.AlignRight
+    \li TextEdit.AlignHCenter
+    \li TextEdit.AlignJustify
     \endlist
     
     Valid values for \c verticalAlignment are:
     \list
-    \o TextEdit.AlignTop (default)
-    \o TextEdit.AlignBottom
-    \o TextEdit.AlignVCenter
+    \li TextEdit.AlignTop (default)
+    \li TextEdit.AlignBottom
+    \li TextEdit.AlignVCenter
     \endlist
 
     When using the attached property \l {LayoutMirroring::enabled} to mirror application
@@ -599,10 +599,10 @@ void QDeclarativeTextEdit::setVAlign(QDeclarativeTextEdit::VAlignment alignment)
     The text will only wrap if an explicit width has been set.
 
     \list
-    \o TextEdit.NoWrap - no wrapping will be performed. If the text contains insufficient newlines, then implicitWidth will exceed a set width.
-    \o TextEdit.WordWrap - wrapping is done on word boundaries only. If a word is too long, implicitWidth will exceed a set width.
-    \o TextEdit.WrapAnywhere - wrapping is done at any point on a line, even if it occurs in the middle of a word.
-    \o TextEdit.Wrap - if possible, wrapping occurs at a word boundary; otherwise it will occur at the appropriate point on the line, even in the middle of a word.
+    \li TextEdit.NoWrap - no wrapping will be performed. If the text contains insufficient newlines, then implicitWidth will exceed a set width.
+    \li TextEdit.WordWrap - wrapping is done on word boundaries only. If a word is too long, implicitWidth will exceed a set width.
+    \li TextEdit.WrapAnywhere - wrapping is done at any point on a line, even if it occurs in the middle of a word.
+    \li TextEdit.Wrap - if possible, wrapping occurs at a word boundary; otherwise it will occur at the appropriate point on the line, even in the middle of a word.
     \endlist
 
     The default is TextEdit.NoWrap. If you set a width, consider using TextEdit.Wrap.
@@ -734,9 +734,9 @@ void QDeclarativeTextEdit::moveCursorSelection(int pos)
     basis.  If not specified the selection mode will default to TextEdit.SelectCharacters.
 
     \list
-    \o TextEdit.SelectCharacters - Sets either the selectionStart or selectionEnd (whichever was at
+    \li TextEdit.SelectCharacters - Sets either the selectionStart or selectionEnd (whichever was at
     the previous cursor position) to the specified position.
-    \o TextEdit.SelectWords - Sets the selectionStart and selectionEnd to include all
+    \li TextEdit.SelectWords - Sets the selectionStart and selectionEnd to include all
     words between the specified postion and the previous cursor position.  Words partially in the
     range are included.
     \endlist
@@ -1090,8 +1090,8 @@ void QDeclarativeTextEdit::setSelectByMouse(bool on)
     Specifies how text should be selected using a mouse.
 
     \list
-    \o TextEdit.SelectCharacters - The selection is updated with individual characters. (Default)
-    \o TextEdit.SelectWords - The selection is updated with whole words.
+    \li TextEdit.SelectCharacters - The selection is updated with individual characters. (Default)
+    \li TextEdit.SelectWords - The selection is updated with whole words.
     \endlist
 
     This property only applies when \l selectByMouse is true.
diff --git a/src/declarative/graphicsitems/qdeclarativetextinput.cpp b/src/declarative/graphicsitems/qdeclarativetextinput.cpp
index ad43cd4..ce75617 100644
--- a/src/declarative/graphicsitems/qdeclarativetextinput.cpp
+++ b/src/declarative/graphicsitems/qdeclarativetextinput.cpp
@@ -133,11 +133,11 @@ void QDeclarativeTextInput::setText(const QString &s)
 
     The weight can be one of:
     \list
-    \o Font.Light
-    \o Font.Normal - the default
-    \o Font.DemiBold
-    \o Font.Bold
-    \o Font.Black
+    \li Font.Light
+    \li Font.Normal - the default
+    \li Font.DemiBold
+    \li Font.Bold
+    \li Font.Black
     \endlist
 
     \qml
@@ -203,11 +203,11 @@ void QDeclarativeTextInput::setText(const QString &s)
     Sets the capitalization for the text.
 
     \list
-    \o Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.
-    \o Font.AllUppercase - This alters the text to be rendered in all uppercase type.
-    \o Font.AllLowercase	 - This alters the text to be rendered in all lowercase type.
-    \o Font.SmallCaps -	This alters the text to be rendered in small-caps type.
-    \o Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.
+    \li Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.
+    \li Font.AllUppercase - This alters the text to be rendered in all uppercase type.
+    \li Font.AllLowercase - This alters the text to be rendered in all lowercase type.
+    \li Font.SmallCaps - This alters the text to be rendered in small-caps type.
+    \li Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.
     \endlist
 
     \qml
@@ -737,8 +737,8 @@ void QDeclarativeTextInput::setAutoScroll(bool b)
     The possible values for this property are:
     
     \list
-    \o DoubleValidator.StandardNotation 
-    \o DoubleValidator.ScientificNotation (default)
+    \li DoubleValidator.StandardNotation
+    \li DoubleValidator.ScientificNotation (default)
     \endlist
 
     If this property is set to DoubleValidator.ScientificNotation, the written number may have an exponent part (e.g. 1.5E-2).
@@ -877,10 +877,10 @@ void QDeclarativeTextInputPrivate::updateInputMethodHints()
 
     Specifies how the text should be displayed in the TextInput.
     \list
-    \o TextInput.Normal - Displays the text as it is. (Default)
-    \o TextInput.Password - Displays asterixes instead of characters.
-    \o TextInput.NoEcho - Displays nothing.
-    \o TextInput.PasswordEchoOnEdit - Displays characters as they are entered
+    \li TextInput.Normal - Displays the text as it is. (Default)
+    \li TextInput.Password - Displays asterixes instead of characters.
+    \li TextInput.NoEcho - Displays nothing.
+    \li TextInput.PasswordEchoOnEdit - Displays characters as they are entered
     while editing, otherwise displays asterisks.
     \endlist
 */
@@ -1030,8 +1030,8 @@ int QDeclarativeTextInput::positionAt(int x) const
     The cursor position type specifies how the cursor position should be resolved.
 
     \list
-    \o TextInput.CursorBetweenCharacters - Returns the position between characters that is nearest x.
-    \o TextInput.CursorOnCharacter - Returns the position before the character that is nearest x.
+    \li TextInput.CursorBetweenCharacters - Returns the position between characters that is nearest x.
+    \li TextInput.CursorOnCharacter - Returns the position before the character that is nearest x.
     \endlist
 */
 int QDeclarativeTextInput::positionAt(int x, CursorPosition position) const
@@ -1579,8 +1579,8 @@ void QDeclarativeTextInput::setSelectByMouse(bool on)
     Specifies how text should be selected using a mouse.
 
     \list
-    \o TextInput.SelectCharacters - The selection is updated with individual characters. (Default)
-    \o TextInput.SelectWords - The selection is updated with whole words.
+    \li TextInput.SelectCharacters - The selection is updated with individual characters. (Default)
+    \li TextInput.SelectWords - The selection is updated with whole words.
     \endlist
 
     This property only applies when \l selectByMouse is true.
@@ -1636,9 +1636,9 @@ void QDeclarativeTextInput::moveCursorSelection(int position)
     basis.  If not specified the selection mode will default to TextInput.SelectCharacters.
 
     \list
-    \o TextEdit.SelectCharacters - Sets either the selectionStart or selectionEnd (whichever was at
+    \li TextEdit.SelectCharacters - Sets either the selectionStart or selectionEnd (whichever was at
     the previous cursor position) to the specified position.
-    \o TextEdit.SelectWords - Sets the selectionStart and selectionEnd to include all
+    \li TextEdit.SelectWords - Sets the selectionStart and selectionEnd to include all
     words between the specified postion and the previous cursor position.  Words partially in the
     range are included.
     \endlist
diff --git a/src/declarative/qml/qdeclarativecomponent.cpp b/src/declarative/qml/qdeclarativecomponent.cpp
index ffd5dfb..3a219be 100644
--- a/src/declarative/qml/qdeclarativecomponent.cpp
+++ b/src/declarative/qml/qdeclarativecomponent.cpp
@@ -320,10 +320,10 @@ QDeclarativeComponent::~QDeclarativeComponent()
     \qmlproperty enumeration Component::status
     This property holds the status of component loading.  It can be one of:
     \list
-    \o Component.Null - no data is available for the component
-    \o Component.Ready - the component has been loaded, and can be used to create instances.
-    \o Component.Loading - the component is currently being loaded
-    \o Component.Error - an error occurred while loading the component.
+    \li Component.Null - no data is available for the component
+    \li Component.Ready - the component has been loaded, and can be used to create instances.
+    \li Component.Loading - the component is currently being loaded
+    \li Component.Error - an error occurred while loading the component.
                Calling errorString() will provide a human-readable description of any errors.
     \endlist
  */
@@ -780,9 +780,9 @@ QObject *QDeclarativeComponent::create(QDeclarativeContext *context)
 
     When QDeclarativeComponent constructs an instance, it occurs in three steps:
     \list 1
-    \i The object hierarchy is created, and constant values are assigned.
-    \i Property bindings are evaluated for the the first time.
-    \i If applicable, QDeclarativeParserStatus::componentComplete() is called on objects.
+    \li The object hierarchy is created, and constant values are assigned.
+    \li Property bindings are evaluated for the the first time.
+    \li If applicable, QDeclarativeParserStatus::componentComplete() is called on objects.
     \endlist 
     QDeclarativeComponent::beginCreate() differs from QDeclarativeComponent::create() in that it
     only performs step 1.  QDeclarativeComponent::completeCreate() must be called to 
diff --git a/src/declarative/qml/qdeclarativecontext.cpp b/src/declarative/qml/qdeclarativecontext.cpp
index 1dee77a..7729e51 100644
--- a/src/declarative/qml/qdeclarativecontext.cpp
+++ b/src/declarative/qml/qdeclarativecontext.cpp
@@ -330,7 +330,7 @@ void QDeclarativeContext::setContextProperty(const QString &name, const QVariant
 /*!
     Set the \a value of the \a name property on this context.
 
-    QDeclarativeContext does \bold not take ownership of \a value.
+    QDeclarativeContext does \b not take ownership of \a value.
 */
 void QDeclarativeContext::setContextProperty(const QString &name, QObject *value)
 {
diff --git a/src/declarative/qml/qdeclarativeengine.cpp b/src/declarative/qml/qdeclarativeengine.cpp
index bee2781..3b77c18 100644
--- a/src/declarative/qml/qdeclarativeengine.cpp
+++ b/src/declarative/qml/qdeclarativeengine.cpp
@@ -231,11 +231,11 @@ data types. This is primarily useful when setting the properties of an item
 when the property has one of the following types:
 
 \list
-\o \c color - use \l{QML:Qt::rgba()}{Qt.rgba()}, \l{QML:Qt::hsla()}{Qt.hsla()}, \l{QML:Qt::darker()}{Qt.darker()}, \l{QML:Qt::lighter()}{Qt.lighter()} or \l{QML:Qt::tint()}{Qt.tint()}
-\o \c rect - use \l{QML:Qt::rect()}{Qt.rect()}
-\o \c point - use \l{QML:Qt::point()}{Qt.point()}
-\o \c size - use \l{QML:Qt::size()}{Qt.size()}
-\o \c vector3d - use \l{QML:Qt::vector3d()}{Qt.vector3d()}
+\li \c color - use \l{QML:Qt::rgba()}{Qt.rgba()}, \l{QML:Qt::hsla()}{Qt.hsla()}, \l{QML:Qt::darker()}{Qt.darker()}, \l{QML:Qt::lighter()}{Qt.lighter()} or \l{QML:Qt::tint()}{Qt.tint()}
+\li \c rect - use \l{QML:Qt::rect()}{Qt.rect()}
+\li \c point - use \l{QML:Qt::point()}{Qt.point()}
+\li \c size - use \l{QML:Qt::size()}{Qt.size()}
+\li \c vector3d - use \l{QML:Qt::vector3d()}{Qt.vector3d()}
 \endlist
 
 There are also string based constructors for these types. See \l{qdeclarativebasictypes.html}{QML Basic Types} for more information.
@@ -245,9 +245,9 @@ There are also string based constructors for these types. See \l{qdeclarativebas
 The Qt object contains several functions for formatting QDateTime, QDate and QTime values.
 
 \list
-    \o \l{QML:Qt::formatDateTime}{string Qt.formatDateTime(datetime date, variant format)}
-    \o \l{QML:Qt::formatDate}{string Qt.formatDate(datetime date, variant format)}
-    \o \l{QML:Qt::formatTime}{string Qt.formatTime(datetime date, variant format)}
+    \li \l{QML:Qt::formatDateTime}{string Qt.formatDateTime(datetime date, variant format)}
+    \li \l{QML:Qt::formatDate}{string Qt.formatDate(datetime date, variant format)}
+    \li \l{QML:Qt::formatTime}{string Qt.formatTime(datetime date, variant format)}
 \endlist
 
 The format specification is described at \l{QML:Qt::formatDateTime}{Qt.formatDateTime}.
@@ -259,8 +259,8 @@ items from files or strings. See \l{Dynamic Object Management in QML} for an ove
 of their use.
 
 \list
-    \o \l{QML:Qt::createComponent()}{object Qt.createComponent(url)}
-    \o \l{QML:Qt::createQmlObject()}{object Qt.createQmlObject(string qml, object parent, string filepath)}
+    \li \l{QML:Qt::createComponent()}{object Qt.createComponent(url)}
+    \li \l{QML:Qt::createQmlObject()}{object Qt.createQmlObject(string qml, object parent, string filepath)}
 \endlist
 */
 
@@ -276,8 +276,8 @@ of their use.
 
     \table
     \row
-    \o \c application.active
-    \o
+    \li \c application.active
+    \li
     This read-only property indicates whether the application is the top-most and focused
     application, and the user is able to interact with the application. The property
     is false when the application is in the background, the device keylock or screen
@@ -288,8 +288,8 @@ of their use.
     active.
 
     \row
-    \o \c application.layoutDirection
-    \o
+    \li \c application.layoutDirection
+    \li
     This read-only property can be used to query the default layout direction of the
     application. On system start-up, the default layout direction depends on the
     application's language. The property has a value of \c Qt.RightToLeft in locales
@@ -300,9 +300,9 @@ of their use.
     Possible values are:
 
     \list
-    \o Qt.LeftToRight - Text and graphics elements should be positioned
+    \li Qt.LeftToRight - Text and graphics elements should be positioned
                         from left to right.
-    \o Qt.RightToLeft - Text and graphics elements should be positioned
+    \li Qt.RightToLeft - Text and graphics elements should be positioned
                         from right to left.
     \endlist
     \endtable
@@ -327,11 +327,11 @@ Qt.include() returns an object that describes the status of the operation.  The
 a single property, \c {status}, that is set to one of the following values:
 
 \table
-\header \o Symbol \o Value \o Description
-\row \o result.OK \o 0 \o The include completed successfully.
-\row \o result.LOADING \o 1 \o Data is being loaded from the network.
-\row \o result.NETWORK_ERROR \o 2 \o A network error occurred while fetching the url.
-\row \o result.EXCEPTION \o 3 \o A JavaScript exception occurred while executing the included code.
+\header \li Symbol \li Value \li Description
+\row \li result.OK \li 0 \li The include completed successfully.
+\row \li result.LOADING \li 1 \li Data is being loaded from the network.
+\row \li result.NETWORK_ERROR \li 2 \li A network error occurred while fetching the url.
+\row \li result.EXCEPTION \li 3 \li A JavaScript exception occurred while executing the included code.
 An additional \c exception property will be set in this case.
 \endtable
 
@@ -1539,54 +1539,54 @@ If \a format is not provided, \a dateTime is formatted using
 \a format should be either.
 
 \list
-\o One of the Qt::DateFormat enumeration values, such as
+\li One of the Qt::DateFormat enumeration values, such as
    \c Qt.DefaultLocaleShortDate or \c Qt.ISODate
-\o A string that specifies the format of the returned string, as detailed below.
+\li A string that specifies the format of the returned string, as detailed below.
 \endlist
 
 If \a format specifies a format string, it should use the following expressions
 to specify the date:
 
     \table
-    \header \i Expression \i Output
-    \row \i d \i the day as number without a leading zero (1 to 31)
-    \row \i dd \i the day as number with a leading zero (01 to 31)
-    \row \i ddd
-            \i the abbreviated localized day name (e.g. 'Mon' to 'Sun').
+    \header \li Expression \li Output
+    \row \li d \li the day as number without a leading zero (1 to 31)
+    \row \li dd \li the day as number with a leading zero (01 to 31)
+    \row \li ddd
+            \li the abbreviated localized day name (e.g. 'Mon' to 'Sun').
             Uses QDate::shortDayName().
-    \row \i dddd
-            \i the long localized day name (e.g. 'Monday' to 'Qt::Sunday').
+    \row \li dddd
+            \li the long localized day name (e.g. 'Monday' to 'Qt::Sunday').
             Uses QDate::longDayName().
-    \row \i M \i the month as number without a leading zero (1-12)
-    \row \i MM \i the month as number with a leading zero (01-12)
-    \row \i MMM
-            \i the abbreviated localized month name (e.g. 'Jan' to 'Dec').
+    \row \li M \li the month as number without a leading zero (1-12)
+    \row \li MM \li the month as number with a leading zero (01-12)
+    \row \li MMM
+            \li the abbreviated localized month name (e.g. 'Jan' to 'Dec').
             Uses QDate::shortMonthName().
-    \row \i MMMM
-            \i the long localized month name (e.g. 'January' to 'December').
+    \row \li MMMM
+            \li the long localized month name (e.g. 'January' to 'December').
             Uses QDate::longMonthName().
-    \row \i yy \i the year as two digit number (00-99)
-    \row \i yyyy \i the year as four digit number
+    \row \li yy \li the year as two digit number (00-99)
+    \row \li yyyy \li the year as four digit number
     \endtable
 
 In addition the following expressions can be used to specify the time:
 
     \table
-    \header \i Expression \i Output
-    \row \i h
-         \i the hour without a leading zero (0 to 23 or 1 to 12 if AM/PM display)
-    \row \i hh
-         \i the hour with a leading zero (00 to 23 or 01 to 12 if AM/PM display)
-    \row \i m \i the minute without a leading zero (0 to 59)
-    \row \i mm \i the minute with a leading zero (00 to 59)
-    \row \i s \i the second without a leading zero (0 to 59)
-    \row \i ss \i the second with a leading zero (00 to 59)
-    \row \i z \i the milliseconds without leading zeroes (0 to 999)
-    \row \i zzz \i the milliseconds with leading zeroes (000 to 999)
-    \row \i AP
-            \i use AM/PM display. \e AP will be replaced by either "AM" or "PM".
-    \row \i ap
-            \i use am/pm display. \e ap will be replaced by either "am" or "pm".
+    \header \li Expression \li Output
+    \row \li h
+         \li the hour without a leading zero (0 to 23 or 1 to 12 if AM/PM display)
+    \row \li hh
+         \li the hour with a leading zero (00 to 23 or 01 to 12 if AM/PM display)
+    \row \li m \li the minute without a leading zero (0 to 59)
+    \row \li mm \li the minute with a leading zero (00 to 59)
+    \row \li s \li the second without a leading zero (0 to 59)
+    \row \li ss \li the second with a leading zero (00 to 59)
+    \row \li z \li the milliseconds without leading zeroes (0 to 999)
+    \row \li zzz \li the milliseconds with leading zeroes (000 to 999)
+    \row \li AP
+            \li use AM/PM display. \e AP will be replaced by either "AM" or "PM".
+    \row \li ap
+            \li use am/pm display. \e ap will be replaced by either "am" or "pm".
     \endtable
 
     All other input characters will be ignored. Any sequence of characters that
@@ -1606,11 +1606,11 @@ This \a dateTime value could be passed to \c Qt.formatDateTime(),
 with the \a format values below to produce the following results:
 
     \table
-    \header \i Format \i Result
-    \row \i "dd.MM.yyyy"      \i 21.05.2001
-    \row \i "ddd MMMM d yy"   \i Tue May 21 01
-    \row \i "hh:mm:ss.zzz"    \i 14:13:09.042
-    \row \i "h:m:s ap"        \i 2:13:9 pm
+    \header \li Format \li Result
+    \row \li "dd.MM.yyyy"      \li 21.05.2001
+    \row \li "ddd MMMM d yy"   \li Tue May 21 01
+    \row \li "hh:mm:ss.zzz"    \li 14:13:09.042
+    \row \li "h:m:s ap"        \li 2:13:9 pm
     \endtable
 */
 QScriptValue QDeclarativeEnginePrivate::formatDateTime(QScriptContext*ctxt, QScriptEngine*engine)
diff --git a/src/declarative/qml/qdeclarativeextensionplugin.cpp b/src/declarative/qml/qdeclarativeextensionplugin.cpp
index 48c08e1..1634588 100644
--- a/src/declarative/qml/qdeclarativeextensionplugin.cpp
+++ b/src/declarative/qml/qdeclarativeextensionplugin.cpp
@@ -57,10 +57,10 @@ QT_BEGIN_NAMESPACE
     To write a QML extension plugin:
     
     \list
-    \o Subclass QDeclarativeExtensionPlugin, implement registerTypes() method
+    \li Subclass QDeclarativeExtensionPlugin, implement registerTypes() method
     to register types using qmlRegisterType(), and export the class using the Q_EXPORT_PLUGIN2() macro
-    \o Write an appropriate project file for the plugin
-    \o Create a \l{Writing a qmldir file}{qmldir file} to describe the plugin
+    \li Write an appropriate project file for the plugin
+    \li Create a \l{Writing a qmldir file}{qmldir file} to describe the plugin
     \endlist
 
     QML extension plugins can be used to provide either application-specific or
diff --git a/src/declarative/qml/qdeclarativeimageprovider.cpp b/src/declarative/qml/qdeclarativeimageprovider.cpp
index 17eae18..20f5fb6 100644
--- a/src/declarative/qml/qdeclarativeimageprovider.cpp
+++ b/src/declarative/qml/qdeclarativeimageprovider.cpp
@@ -58,12 +58,12 @@ public:
     in QML applications. It allows images in QML to be:
 
     \list
-    \o Loaded using QPixmaps rather than actual image files
-    \o Loaded asynchronously in a separate thread, if imageType() is \l{QDeclarativeImageProvider::ImageType}{ImageType::Image}
+    \li Loaded using QPixmaps rather than actual image files
+    \li Loaded asynchronously in a separate thread, if imageType() is \l{QDeclarativeImageProvider::ImageType}{ImageType::Image}
     \endlist
 
     To specify that an image should be loaded by an image provider, use the
-    \bold {"image:"} scheme for the URL source of the image, followed by the 
+    \b {"image:"} scheme for the URL source of the image, followed by the
     identifiers of the image provider and the requested image. For example:
 
     \qml
diff --git a/src/declarative/qml/qdeclarativeimport.cpp b/src/declarative/qml/qdeclarativeimport.cpp
index 58e05b0..25e3b83 100644
--- a/src/declarative/qml/qdeclarativeimport.cpp
+++ b/src/declarative/qml/qdeclarativeimport.cpp
@@ -221,9 +221,9 @@ void QDeclarativeImports::populateCache(QDeclarativeTypeNameCache *cache, QDecla
 
   The given (namespace qualified) \a type is resolved to either
   \list
-  \o a QDeclarativeImportedNamespace stored at \a ns_return,
-  \o a QDeclarativeType stored at \a type_return, or
-  \o a component located at \a url_return.
+  \li a QDeclarativeImportedNamespace stored at \a ns_return,
+  \li a QDeclarativeType stored at \a type_return, or
+  \li a component located at \a url_return.
   \endlist
 
   If any return pointer is 0, the corresponding search is not done.
@@ -866,13 +866,13 @@ QString QDeclarativeImportDatabase::resolvePlugin(const QDir &qmldirPath, const
   Returns the result of the merge of \a baseName with \a dir and the platform suffix.
 
   \table
-  \header \i Platform \i Valid suffixes
-  \row \i Windows     \i \c .dll
-  \row \i Unix/Linux  \i \c .so
-  \row \i AIX  \i \c .a
-  \row \i HP-UX       \i \c .sl, \c .so (HP-UXi)
-  \row \i Mac OS X    \i \c .dylib, \c .bundle, \c .so
-  \row \i Symbian     \i \c .dll
+  \header \li Platform \li Valid suffixes
+  \row \li Windows     \li \c .dll
+  \row \li Unix/Linux  \li \c .so
+  \row \li AIX  \li \c .a
+  \row \li HP-UX       \li \c .sl, \c .so (HP-UXi)
+  \row \li Mac OS X    \li \c .dylib, \c .bundle, \c .so
+  \row \li Symbian     \li \c .dll
   \endtable
 
   Version number on unix are ignored.
diff --git a/src/declarative/qml/qdeclarativenetworkaccessmanagerfactory.cpp b/src/declarative/qml/qdeclarativenetworkaccessmanagerfactory.cpp
index 2668b99..ea761be 100644
--- a/src/declarative/qml/qdeclarativenetworkaccessmanagerfactory.cpp
+++ b/src/declarative/qml/qdeclarativenetworkaccessmanagerfactory.cpp
@@ -65,12 +65,12 @@ QT_BEGIN_NAMESPACE
     be created in a different thread:
 
     \list
-    \o The QML engine internally handles all requests, and cleans up any
+    \li The QML engine internally handles all requests, and cleans up any
        QNetworkReply objects it creates. Receiving the
        QNetworkAccessManager::finished() signal in another thread may not
        provide the receiver with a valid reply object if it has already
        been deleted.
-    \o Authentication details provided to QNetworkAccessManager::authenticationRequired()
+    \li Authentication details provided to QNetworkAccessManager::authenticationRequired()
        must be provided immediately, so this signal cannot be connected as a
        Qt::QueuedConnection (or as the default Qt::AutoConnection from another
        thread).
diff --git a/src/declarative/qml/qdeclarativetypeloader.cpp b/src/declarative/qml/qdeclarativetypeloader.cpp
index 7b450ec..1c62422 100644
--- a/src/declarative/qml/qdeclarativetypeloader.cpp
+++ b/src/declarative/qml/qdeclarativetypeloader.cpp
@@ -102,14 +102,14 @@ The QDeclarativeDataLoader invokes callbacks on the QDeclarativeDataBlob as data
 This enum describes the status of the data blob.
 
 \list
-\o Null The blob has not yet been loaded by a QDeclarativeDataLoader
-\o Loading The blob is loading network data.  The QDeclarativeDataBlob::setData() callback has not yet been
+\li Null The blob has not yet been loaded by a QDeclarativeDataLoader
+\li Loading The blob is loading network data.  The QDeclarativeDataBlob::setData() callback has not yet been
 invoked or has not yet returned.
-\o WaitingForDependencies The blob is waiting for dependencies to be done before continueing.  This status
+\li WaitingForDependencies The blob is waiting for dependencies to be done before continueing.  This status
 only occurs after the QDeclarativeDataBlob::setData() callback has been made, and when the blob has outstanding
 dependencies.
-\o Complete The blob's data has been loaded and all dependencies are done.
-\o Error An error has been set on this blob.
+\li Complete The blob's data has been loaded and all dependencies are done.
+\li Error An error has been set on this blob.
 \endlist
 */
 
@@ -119,9 +119,9 @@ dependencies.
 This enum describes the type of the data blob.
 
 \list
-\o QmlFile This is a QDeclarativeTypeData
-\o JavaScriptFile This is a QDeclarativeScriptData
-\o QmldirFile This is a QDeclarativeQmldirData
+\li QmlFile This is a QDeclarativeTypeData
+\li JavaScriptFile This is a QDeclarativeScriptData
+\li QmldirFile This is a QDeclarativeQmldirData
 \endlist
 */
 
@@ -486,9 +486,9 @@ To complete processing, the QDeclarativeDataBlob::done() callback is invoked.  d
 one of these three preconditions are met.
 
 \list 1
-\o The QDeclarativeDataBlob has no dependencies.
-\o The QDeclarativeDataBlob has an error set.
-\o All the QDeclarativeDataBlob's dependencies are themselves "done()".
+\li The QDeclarativeDataBlob has no dependencies.
+\li The QDeclarativeDataBlob has an error set.
+\li All the QDeclarativeDataBlob's dependencies are themselves "done()".
 \endlist
 
 Thus QDeclarativeDataBlob::done() will always eventually be called, even if the blob has an error set.
diff --git a/src/declarative/qml/qdeclarativeworkerscript.cpp b/src/declarative/qml/qdeclarativeworkerscript.cpp
index 30b0c99..0cc4730 100644
--- a/src/declarative/qml/qdeclarativeworkerscript.cpp
+++ b/src/declarative/qml/qdeclarativeworkerscript.cpp
@@ -668,9 +668,9 @@ void QDeclarativeWorkerScript::setSource(const QUrl &source)
     types:
 
     \list
-    \o boolean, number, string
-    \o JavaScript objects and arrays
-    \o ListModel objects (any other type of QObject* is not allowed)
+    \li boolean, number, string
+    \li JavaScript objects and arrays
+    \li ListModel objects (any other type of QObject* is not allowed)
     \endlist
 
     All objects and arrays are copied to the \c message. With the exception
diff --git a/src/declarative/util/qdeclarativeanimation.cpp b/src/declarative/util/qdeclarativeanimation.cpp
index f864757..f697a49 100644
--- a/src/declarative/util/qdeclarativeanimation.cpp
+++ b/src/declarative/util/qdeclarativeanimation.cpp
@@ -1466,11 +1466,11 @@ void QDeclarativeRotationAnimation::setTo(qreal t)
     Possible values are:
 
     \list
-    \o RotationAnimation.Numerical (default) - Rotate by linearly interpolating between the two numbers.
+    \li RotationAnimation.Numerical (default) - Rotate by linearly interpolating between the two numbers.
            A rotation from 10 to 350 will rotate 340 degrees clockwise.
-    \o RotationAnimation.Clockwise - Rotate clockwise between the two values
-    \o RotationAnimation.Counterclockwise - Rotate counterclockwise between the two values
-    \o RotationAnimation.Shortest - Rotate in the direction that produces the shortest animation path.
+    \li RotationAnimation.Clockwise - Rotate clockwise between the two values
+    \li RotationAnimation.Counterclockwise - Rotate counterclockwise between the two values
+    \li RotationAnimation.Shortest - Rotate in the direction that produces the shortest animation path.
            A rotation from 10 to 350 will rotate 20 degrees counterclockwise.
     \endlist
 */
@@ -1754,7 +1754,7 @@ void QDeclarativePropertyAnimationPrivate::convertVariant(QVariant &variant, int
     It can be used to define animations in a number of ways:
 
     \list
-    \o In a \l Transition
+    \li In a \l Transition
 
     For example, to animate any objects that have changed their \c x or \c y properties
     as a result of a state change, using an \c InOutQuad easing curve:
@@ -1762,21 +1762,21 @@ void QDeclarativePropertyAnimationPrivate::convertVariant(QVariant &variant, int
     \snippet doc/src/snippets/declarative/propertyanimation.qml transition
 
 
-    \o In a \l Behavior
+    \li In a \l Behavior
 
     For example, to animate all changes to a rectangle's \c x property:
 
     \snippet doc/src/snippets/declarative/propertyanimation.qml behavior
 
 
-    \o As a property value source
+    \li As a property value source
 
     For example, to repeatedly animate the rectangle's \c x property:
 
     \snippet doc/src/snippets/declarative/propertyanimation.qml propertyvaluesource
 
 
-    \o In a signal handler
+    \li In a signal handler
 
     For example, to fade out \c theObject when clicked:
     \qml
@@ -1786,7 +1786,7 @@ void QDeclarativePropertyAnimationPrivate::convertVariant(QVariant &variant, int
     }
     \endqml
 
-    \o Standalone
+    \li Standalone
 
     For example, to animate \c rect's \c width property over 500ms, from its current width to 30:
 
@@ -1928,171 +1928,171 @@ void QDeclarativePropertyAnimation::setTo(const QVariant &t)
 
     \table
     \row
-        \o \c Easing.Linear
-        \o Easing curve for a linear (t) function: velocity is constant.
-        \o \inlineimage qeasingcurve-linear.png
+        \li \c Easing.Linear
+        \li Easing curve for a linear (t) function: velocity is constant.
+        \li \inlineimage qeasingcurve-linear.png
     \row
-        \o \c Easing.InQuad
-        \o Easing curve for a quadratic (t^2) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-inquad.png
+        \li \c Easing.InQuad
+        \li Easing curve for a quadratic (t^2) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-inquad.png
     \row
-        \o \c Easing.OutQuad
-        \o Easing curve for a quadratic (t^2) function: decelerating to zero velocity.
-        \o \inlineimage qeasingcurve-outquad.png
+        \li \c Easing.OutQuad
+        \li Easing curve for a quadratic (t^2) function: decelerating to zero velocity.
+        \li \inlineimage qeasingcurve-outquad.png
     \row
-        \o \c Easing.InOutQuad
-        \o Easing curve for a quadratic (t^2) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutquad.png
+        \li \c Easing.InOutQuad
+        \li Easing curve for a quadratic (t^2) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutquad.png
     \row
-        \o \c Easing.OutInQuad
-        \o Easing curve for a quadratic (t^2) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinquad.png
+        \li \c Easing.OutInQuad
+        \li Easing curve for a quadratic (t^2) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinquad.png
     \row
-        \o \c Easing.InCubic
-        \o Easing curve for a cubic (t^3) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-incubic.png
+        \li \c Easing.InCubic
+        \li Easing curve for a cubic (t^3) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-incubic.png
     \row
-        \o \c Easing.OutCubic
-        \o Easing curve for a cubic (t^3) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outcubic.png
+        \li \c Easing.OutCubic
+        \li Easing curve for a cubic (t^3) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outcubic.png
     \row
-        \o \c Easing.InOutCubic
-        \o Easing curve for a cubic (t^3) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutcubic.png
+        \li \c Easing.InOutCubic
+        \li Easing curve for a cubic (t^3) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutcubic.png
     \row
-        \o \c Easing.OutInCubic
-        \o Easing curve for a cubic (t^3) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outincubic.png
+        \li \c Easing.OutInCubic
+        \li Easing curve for a cubic (t^3) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outincubic.png
     \row
-        \o \c Easing.InQuart
-        \o Easing curve for a quartic (t^4) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-inquart.png
+        \li \c Easing.InQuart
+        \li Easing curve for a quartic (t^4) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-inquart.png
     \row
-        \o \c Easing.OutQuart
-        \o Easing curve for a quartic (t^4) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outquart.png
+        \li \c Easing.OutQuart
+        \li Easing curve for a quartic (t^4) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outquart.png
     \row
-        \o \c Easing.InOutQuart
-        \o Easing curve for a quartic (t^4) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutquart.png
+        \li \c Easing.InOutQuart
+        \li Easing curve for a quartic (t^4) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutquart.png
     \row
-        \o \c Easing.OutInQuart
-        \o Easing curve for a quartic (t^4) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinquart.png
+        \li \c Easing.OutInQuart
+        \li Easing curve for a quartic (t^4) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinquart.png
     \row
-        \o \c Easing.InQuint
-        \o Easing curve for a quintic (t^5) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-inquint.png
+        \li \c Easing.InQuint
+        \li Easing curve for a quintic (t^5) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-inquint.png
     \row
-        \o \c Easing.OutQuint
-        \o Easing curve for a quintic (t^5) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outquint.png
+        \li \c Easing.OutQuint
+        \li Easing curve for a quintic (t^5) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outquint.png
     \row
-        \o \c Easing.InOutQuint
-        \o Easing curve for a quintic (t^5) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutquint.png
+        \li \c Easing.InOutQuint
+        \li Easing curve for a quintic (t^5) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutquint.png
     \row
-        \o \c Easing.OutInQuint
-        \o Easing curve for a quintic (t^5) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinquint.png
+        \li \c Easing.OutInQuint
+        \li Easing curve for a quintic (t^5) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinquint.png
     \row
-        \o \c Easing.InSine
-        \o Easing curve for a sinusoidal (sin(t)) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-insine.png
+        \li \c Easing.InSine
+        \li Easing curve for a sinusoidal (sin(t)) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-insine.png
     \row
-        \o \c Easing.OutSine
-        \o Easing curve for a sinusoidal (sin(t)) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outsine.png
+        \li \c Easing.OutSine
+        \li Easing curve for a sinusoidal (sin(t)) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outsine.png
     \row
-        \o \c Easing.InOutSine
-        \o Easing curve for a sinusoidal (sin(t)) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutsine.png
+        \li \c Easing.InOutSine
+        \li Easing curve for a sinusoidal (sin(t)) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutsine.png
     \row
-        \o \c Easing.OutInSine
-        \o Easing curve for a sinusoidal (sin(t)) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinsine.png
+        \li \c Easing.OutInSine
+        \li Easing curve for a sinusoidal (sin(t)) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinsine.png
     \row
-        \o \c Easing.InExpo
-        \o Easing curve for an exponential (2^t) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-inexpo.png
+        \li \c Easing.InExpo
+        \li Easing curve for an exponential (2^t) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-inexpo.png
     \row
-        \o \c Easing.OutExpo
-        \o Easing curve for an exponential (2^t) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outexpo.png
+        \li \c Easing.OutExpo
+        \li Easing curve for an exponential (2^t) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outexpo.png
     \row
-        \o \c Easing.InOutExpo
-        \o Easing curve for an exponential (2^t) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutexpo.png
+        \li \c Easing.InOutExpo
+        \li Easing curve for an exponential (2^t) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutexpo.png
     \row
-        \o \c Easing.OutInExpo
-        \o Easing curve for an exponential (2^t) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinexpo.png
+        \li \c Easing.OutInExpo
+        \li Easing curve for an exponential (2^t) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinexpo.png
     \row
-        \o \c Easing.InCirc
-        \o Easing curve for a circular (sqrt(1-t^2)) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-incirc.png
+        \li \c Easing.InCirc
+        \li Easing curve for a circular (sqrt(1-t^2)) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-incirc.png
     \row
-        \o \c Easing.OutCirc
-        \o Easing curve for a circular (sqrt(1-t^2)) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outcirc.png
+        \li \c Easing.OutCirc
+        \li Easing curve for a circular (sqrt(1-t^2)) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outcirc.png
     \row
-        \o \c Easing.InOutCirc
-        \o Easing curve for a circular (sqrt(1-t^2)) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutcirc.png
+        \li \c Easing.InOutCirc
+        \li Easing curve for a circular (sqrt(1-t^2)) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutcirc.png
     \row
-        \o \c Easing.OutInCirc
-        \o Easing curve for a circular (sqrt(1-t^2)) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outincirc.png
+        \li \c Easing.OutInCirc
+        \li Easing curve for a circular (sqrt(1-t^2)) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outincirc.png
     \row
-        \o \c Easing.InElastic
-        \o Easing curve for an elastic (exponentially decaying sine wave) function: accelerating from zero velocity.
+        \li \c Easing.InElastic
+        \li Easing curve for an elastic (exponentially decaying sine wave) function: accelerating from zero velocity.
         \br The peak amplitude can be set with the \e amplitude parameter, and the period of decay by the \e period parameter.
-        \o \inlineimage qeasingcurve-inelastic.png
+        \li \inlineimage qeasingcurve-inelastic.png
     \row
-        \o \c Easing.OutElastic
-        \o Easing curve for an elastic (exponentially decaying sine wave) function: decelerating from zero velocity.
+        \li \c Easing.OutElastic
+        \li Easing curve for an elastic (exponentially decaying sine wave) function: decelerating from zero velocity.
         \br The peak amplitude can be set with the \e amplitude parameter, and the period of decay by the \e period parameter.
-        \o \inlineimage qeasingcurve-outelastic.png
+        \li \inlineimage qeasingcurve-outelastic.png
     \row
-        \o \c Easing.InOutElastic
-        \o Easing curve for an elastic (exponentially decaying sine wave) function: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutelastic.png
+        \li \c Easing.InOutElastic
+        \li Easing curve for an elastic (exponentially decaying sine wave) function: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutelastic.png
     \row
-        \o \c Easing.OutInElastic
-        \o Easing curve for an elastic (exponentially decaying sine wave) function: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinelastic.png
+        \li \c Easing.OutInElastic
+        \li Easing curve for an elastic (exponentially decaying sine wave) function: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinelastic.png
     \row
-        \o \c Easing.InBack
-        \o Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing in: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-inback.png
+        \li \c Easing.InBack
+        \li Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing in: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-inback.png
     \row
-        \o \c Easing.OutBack
-        \o Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing out: decelerating to zero velocity.
-        \o \inlineimage qeasingcurve-outback.png
+        \li \c Easing.OutBack
+        \li Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing out: decelerating to zero velocity.
+        \li \inlineimage qeasingcurve-outback.png
     \row
-        \o \c Easing.InOutBack
-        \o Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing in/out: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutback.png
+        \li \c Easing.InOutBack
+        \li Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing in/out: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutback.png
     \row
-        \o \c Easing.OutInBack
-        \o Easing curve for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out/in: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinback.png
+        \li \c Easing.OutInBack
+        \li Easing curve for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out/in: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinback.png
     \row
-        \o \c Easing.InBounce
-        \o Easing curve for a bounce (exponentially decaying parabolic bounce) function: accelerating from zero velocity.
-        \o \inlineimage qeasingcurve-inbounce.png
+        \li \c Easing.InBounce
+        \li Easing curve for a bounce (exponentially decaying parabolic bounce) function: accelerating from zero velocity.
+        \li \inlineimage qeasingcurve-inbounce.png
     \row
-        \o \c Easing.OutBounce
-        \o Easing curve for a bounce (exponentially decaying parabolic bounce) function: decelerating from zero velocity.
-        \o \inlineimage qeasingcurve-outbounce.png
+        \li \c Easing.OutBounce
+        \li Easing curve for a bounce (exponentially decaying parabolic bounce) function: decelerating from zero velocity.
+        \li \inlineimage qeasingcurve-outbounce.png
     \row
-        \o \c Easing.InOutBounce
-        \o Easing curve for a bounce (exponentially decaying parabolic bounce) function easing in/out: acceleration until halfway, then deceleration.
-        \o \inlineimage qeasingcurve-inoutbounce.png
+        \li \c Easing.InOutBounce
+        \li Easing curve for a bounce (exponentially decaying parabolic bounce) function easing in/out: acceleration until halfway, then deceleration.
+        \li \inlineimage qeasingcurve-inoutbounce.png
     \row
-        \o \c Easing.OutInBounce
-        \o Easing curve for a bounce (exponentially decaying parabolic bounce) function easing out/in: deceleration until halfway, then acceleration.
-        \o \inlineimage qeasingcurve-outinbounce.png
+        \li \c Easing.OutInBounce
+        \li Easing curve for a bounce (exponentially decaying parabolic bounce) function easing out/in: deceleration until halfway, then acceleration.
+        \li \inlineimage qeasingcurve-outinbounce.png
     \endtable
 
     \c easing.amplitude is only applicable for bounce and elastic curves (curves of type
@@ -2200,8 +2200,8 @@ void QDeclarativePropertyAnimation::setProperties(const QString &prop)
 
     \table 80%
     \row
-    \o Value Source / Behavior
-    \o When an animation is used as a value source or in a Behavior, the default target and property
+    \li Value Source / Behavior
+    \li When an animation is used as a value source or in a Behavior, the default target and property
        name to be animated can both be inferred.
        \qml
        Rectangle {
@@ -2213,8 +2213,8 @@ void QDeclarativePropertyAnimation::setProperties(const QString &prop)
        }
        \endqml
     \row
-    \o Transition
-    \o When used in a transition, a property animation is assumed to match \e all targets
+    \li Transition
+    \li When used in a transition, a property animation is assumed to match \e all targets
        but \e no properties. In practice, that means you need to specify at least the properties
        in order for the animation to do anything.
        \qml
@@ -2238,8 +2238,8 @@ void QDeclarativePropertyAnimation::setProperties(const QString &prop)
        }
        \endqml
     \row
-    \o Standalone
-    \o When an animation is used standalone, both the target and property need to be
+    \li Standalone
+    \li When an animation is used standalone, both the target and property need to be
        explicitly specified.
        \qml
        Rectangle {
diff --git a/src/declarative/util/qdeclarativeconnections.cpp b/src/declarative/util/qdeclarativeconnections.cpp
index 4197adf..866fa04 100644
--- a/src/declarative/util/qdeclarativeconnections.cpp
+++ b/src/declarative/util/qdeclarativeconnections.cpp
@@ -91,9 +91,9 @@ public:
     cases, such as when:
 
     \list
-        \i Multiple connections to the same signal are required
-        \i Creating connections outside the scope of the signal sender
-        \i Connecting to targets not defined in QML
+        \li Multiple connections to the same signal are required
+        \li Creating connections outside the scope of the signal sender
+        \li Connecting to targets not defined in QML
     \endlist
 
     When any of these are needed, the Connections element can be used instead.
diff --git a/src/declarative/util/qdeclarativefontloader.cpp b/src/declarative/util/qdeclarativefontloader.cpp
index 13b3f02..b1baea5 100644
--- a/src/declarative/util/qdeclarativefontloader.cpp
+++ b/src/declarative/util/qdeclarativefontloader.cpp
@@ -298,22 +298,22 @@ void QDeclarativeFontLoader::setName(const QString &name)
 
     This property holds the status of font loading.  It can be one of:
     \list
-    \o FontLoader.Null - no font has been set
-    \o FontLoader.Ready - the font has been loaded
-    \o FontLoader.Loading - the font is currently being loaded
-    \o FontLoader.Error - an error occurred while loading the font
+    \li FontLoader.Null - no font has been set
+    \li FontLoader.Ready - the font has been loaded
+    \li FontLoader.Loading - the font is currently being loaded
+    \li FontLoader.Error - an error occurred while loading the font
     \endlist
 
     Use this status to provide an update or respond to the status change in some way.
     For example, you could:
 
     \list
-    \o Trigger a state change:
+    \li Trigger a state change:
     \qml
         State { name: 'loaded'; when: loader.status == FontLoader.Ready }
     \endqml
 
-    \o Implement an \c onStatusChanged signal handler:
+    \li Implement an \c onStatusChanged signal handler:
     \qml
         FontLoader {
             id: loader
@@ -321,7 +321,7 @@ void QDeclarativeFontLoader::setName(const QString &name)
         }
     \endqml
 
-    \o Bind to the status value:
+    \li Bind to the status value:
     \qml
         Text { text: loader.status == FontLoader.Ready ? 'Loaded' : 'Not loaded' }
     \endqml
diff --git a/src/declarative/util/qdeclarativepropertymap.cpp b/src/declarative/util/qdeclarativepropertymap.cpp
index 40601b7..29b3863 100644
--- a/src/declarative/util/qdeclarativepropertymap.cpp
+++ b/src/declarative/util/qdeclarativepropertymap.cpp
@@ -129,7 +129,7 @@ void QDeclarativePropertyMapMetaObject::propertyCreated(int, QMetaPropertyBuilde
     key will be updated as well.
 
     To detect value changes made in the UI layer you can connect to the valueChanged() signal.
-    However, note that valueChanged() is \bold NOT emitted when changes are made by calling insert()
+    However, note that valueChanged() is \b NOT emitted when changes are made by calling insert()
     or clear() - it is only emitted when a value is updated from QML.
 
     \note It is not possible to remove keys from the map; once a key has been added, you can only
@@ -289,7 +289,7 @@ QVariant QDeclarativePropertyMap::operator[](const QString &key) const
     This signal is emitted whenever one of the values in the map is changed. \a key
     is the key corresponding to the \a value that was changed.
 
-    \note valueChanged() is \bold NOT emitted when changes are made by calling insert()
+    \note valueChanged() is \b NOT emitted when changes are made by calling insert()
     or clear() - it is only emitted when a value is updated from QML.
 */
 
diff --git a/src/declarative/util/qdeclarativesmoothedanimation.cpp b/src/declarative/util/qdeclarativesmoothedanimation.cpp
index db2e9be..36402fb 100644
--- a/src/declarative/util/qdeclarativesmoothedanimation.cpp
+++ b/src/declarative/util/qdeclarativesmoothedanimation.cpp
@@ -386,9 +386,9 @@ void QDeclarativeSmoothedAnimation::transition(QDeclarativeStateActions &actions
     Possible values are:
 
     \list
-    \o SmoothedAnimation.Eased (default) - the animation will smoothly decelerate, and then reverse direction
-    \o SmoothedAnimation.Immediate - the animation will immediately begin accelerating in the reverse direction, beginning with a velocity of 0
-    \o SmoothedAnimation.Sync - the property is immediately set to the target value
+    \li SmoothedAnimation.Eased (default) - the animation will smoothly decelerate, and then reverse direction
+    \li SmoothedAnimation.Immediate - the animation will immediately begin accelerating in the reverse direction, beginning with a velocity of 0
+    \li SmoothedAnimation.Sync - the property is immediately set to the target value
     \endlist
 */
 QDeclarativeSmoothedAnimation::ReversingMode QDeclarativeSmoothedAnimation::reversingMode() const
diff --git a/src/declarative/util/qdeclarativesystempalette.cpp b/src/declarative/util/qdeclarativesystempalette.cpp
index f78b69a..134137f 100644
--- a/src/declarative/util/qdeclarativesystempalette.cpp
+++ b/src/declarative/util/qdeclarativesystempalette.cpp
@@ -267,9 +267,9 @@ QColor QDeclarativeSystemPalette::highlightedText() const
     The color group of the palette. This can be one of:
 
     \list
-    \o SystemPalette.Active (default)
-    \o SystemPalette.Inactive
-    \o SystemPalette.Disabled
+    \li SystemPalette.Active (default)
+    \li SystemPalette.Inactive
+    \li SystemPalette.Disabled
     \endlist
 
     \sa QPalette::ColorGroup
diff --git a/src/declarative/util/qdeclarativetimeline.cpp b/src/declarative/util/qdeclarativetimeline.cpp
index 884953d..8eb3a96 100644
--- a/src/declarative/util/qdeclarativetimeline.cpp
+++ b/src/declarative/util/qdeclarativetimeline.cpp
@@ -259,7 +259,7 @@ qreal QDeclarativeTimeLinePrivate::value(const Op &op, int time, qreal base, boo
 
     QDeclarativeTimeLine is similar to QTimeLine except:
     \list
-    \i It updates QDeclarativeTimeLineValue instances directly, rather than maintaining a single
+    \li It updates QDeclarativeTimeLineValue instances directly, rather than maintaining a single
     current value.
 
     For example, the following animates a simple value over 200 milliseconds:
@@ -274,7 +274,7 @@ qreal QDeclarativeTimeLinePrivate::value(const Op &op, int time, qreal base, boo
     connect to the QDeclarativeTimeLine's updated() signal, or inherit from QDeclarativeTimeLineValue
     and reimplement the QDeclarativeTimeLineValue::setValue() method.
 
-    \i Supports multiple QDeclarativeTimeLineValue, arbitrary start and end values and allows
+    \li Supports multiple QDeclarativeTimeLineValue, arbitrary start and end values and allows
     animations to be strung together for more complex effects.
 
     For example, the following animation moves the x and y coordinates of
@@ -294,7 +294,7 @@ qreal QDeclarativeTimeLinePrivate::value(const Op &op, int time, qreal base, boo
     tl.move(y, 200., 50);
     \endcode
 
-    \i All QDeclarativeTimeLine instances share a single, synchronized clock.
+    \li All QDeclarativeTimeLine instances share a single, synchronized clock.
 
     Actions scheduled within the same event loop tick are scheduled
     synchronously against each other, regardless of the wall time between the
@@ -585,10 +585,10 @@ void QDeclarativeTimeLine::sync(QDeclarativeTimeLineValue &timeLineValue)
     will result in:
 
     \table
-    \header \o \o 0ms \o 50ms \o 100ms \o 150ms \o 200ms \o 250ms \o 300ms
-    \row \o value1 \o 0 \o 2.5 \o 5.0 \o 7.5 \o 10 \o 10 \o 10
-    \row \o value2 \o 0 \o 5.0 \o 10.0 \o 10.0 \o 10.0 \o 15.0 \o 20.0
-    \row \o value2 \o 0 \o 0 \o 0 \o 0 \o 0 \o 10.0 \o 20.0
+    \header \li \li 0ms \li 50ms \li 100ms \li 150ms \li 200ms \li 250ms \li 300ms
+    \row \li value1 \li 0 \li 2.5 \li 5.0 \li 7.5 \li 10 \li 10 \li 10
+    \row \li value2 \li 0 \li 5.0 \li 10.0 \li 10.0 \li 10.0 \li 15.0 \li 20.0
+    \row \li value2 \li 0 \li 0 \li 0 \li 0 \li 0 \li 10.0 \li 20.0
     \endtable
 */
 
diff --git a/src/declarative/util/qdeclarativeview.cpp b/src/declarative/util/qdeclarativeview.cpp
index 7bd6bd1..f81d991 100644
--- a/src/declarative/util/qdeclarativeview.cpp
+++ b/src/declarative/util/qdeclarativeview.cpp
@@ -202,18 +202,18 @@ void QDeclarativeViewPrivate::itemGeometryChanged(QDeclarativeItem *resizeItem,
     QDeclarativeView provides:
 
     \list
-    \o Management of QDeclarativeComponent loading and object creation
-    \o Initialization of QGraphicsView for optimal performance with QML using these settings:
+    \li Management of QDeclarativeComponent loading and object creation
+    \li Initialization of QGraphicsView for optimal performance with QML using these settings:
         \list
-        \o QGraphicsView::setOptimizationFlags(QGraphicsView::DontSavePainterState)
-        \o QGraphicsView::setViewportUpdateMode(QGraphicsView::BoundingRectViewportUpdate)
-        \o QGraphicsScene::setItemIndexMethod(QGraphicsScene::NoIndex)
+        \li QGraphicsView::setOptimizationFlags(QGraphicsView::DontSavePainterState)
+        \li QGraphicsView::setViewportUpdateMode(QGraphicsView::BoundingRectViewportUpdate)
+        \li QGraphicsScene::setItemIndexMethod(QGraphicsScene::NoIndex)
         \endlist
-    \o Initialization of QGraphicsView for QML key handling using these settings:
+    \li Initialization of QGraphicsView for QML key handling using these settings:
         \list
-        \o QGraphicsView::viewport()->setFocusPolicy(Qt::NoFocus)
-        \o QGraphicsView::setFocusPolicy(Qt::StrongFocus)
-        \o QGraphicsScene::setStickyFocus(true)
+        \li QGraphicsView::viewport()->setFocusPolicy(Qt::NoFocus)
+        \li QGraphicsView::setFocusPolicy(Qt::StrongFocus)
+        \li QGraphicsScene::setStickyFocus(true)
         \endlist
     \endlist
 
diff --git a/src/declarative/util/qdeclarativexmllistmodel.cpp b/src/declarative/util/qdeclarativexmllistmodel.cpp
index cb10689..35cc1a4 100644
--- a/src/declarative/util/qdeclarativexmllistmodel.cpp
+++ b/src/declarative/util/qdeclarativexmllistmodel.cpp
@@ -909,10 +909,10 @@ QScriptValue QDeclarativeXmlListModel::get(int index) const
     Specifies the model loading status, which can be one of the following:
 
     \list
-    \o XmlListModel.Null - No XML data has been set for this model.
-    \o XmlListModel.Ready - The XML data has been loaded into the model.
-    \o XmlListModel.Loading - The model is in the process of reading and loading XML data.
-    \o XmlListModel.Error - An error occurred while the model was loading. See errorString() for details
+    \li XmlListModel.Null - No XML data has been set for this model.
+    \li XmlListModel.Ready - The XML data has been loaded into the model.
+    \li XmlListModel.Loading - The model is in the process of reading and loading XML data.
+    \li XmlListModel.Error - An error occurred while the model was loading. See errorString() for details
        about the error.
     \endlist
 
diff --git a/src/imports/folderlistmodel/qdeclarativefolderlistmodel.cpp b/src/imports/folderlistmodel/qdeclarativefolderlistmodel.cpp
index a16deb7..6f5ddee 100644
--- a/src/imports/folderlistmodel/qdeclarativefolderlistmodel.cpp
+++ b/src/imports/folderlistmodel/qdeclarativefolderlistmodel.cpp
@@ -104,15 +104,15 @@ public:
     \e{Elements in the Qt.labs module are not guaranteed to remain compatible
     in future versions.}
 
-    \bold{import Qt.labs.folderlistmodel 1.0}
+    \b{import Qt.labs.folderlistmodel 1.0}
 
     The \l folder property specifies the folder to access. Information about the
     files and directories in the folder is supplied via the model's interface.
     Components access names and paths via the following roles:
 
     \list
-    \o fileName
-    \o filePath
+    \li fileName
+    \li filePath
     \endlist
 
     Additionally a file entry can be differentiated from a folder entry via the
@@ -303,11 +303,11 @@ void QDeclarativeFolderListModel::componentComplete()
     The \a sortField property contains field to use for sorting.  sortField
     may be one of:
     \list
-    \o Unsorted - no sorting is applied.  The order is system default.
-    \o Name - sort by filename
-    \o Time - sort by time modified
-    \o Size - sort by file size
-    \o Type - sort by file type (extension)
+    \li Unsorted - no sorting is applied.  The order is system default.
+    \li Name - sort by filename
+    \li Time - sort by time modified
+    \li Size - sort by file size
+    \li Type - sort by file type (extension)
     \endlist
 
     \sa sortReversed
diff --git a/src/imports/gestures/qdeclarativegesturearea.cpp b/src/imports/gestures/qdeclarativegesturearea.cpp
index afddba6..46d6db2 100644
--- a/src/imports/gestures/qdeclarativegesturearea.cpp
+++ b/src/imports/gestures/qdeclarativegesturearea.cpp
@@ -113,23 +113,23 @@ public:
     properties of the gesture.
 
     \table
-    \header \o Signal \o Type \o Property \o Description
-    \row \o onTap \o point \o position \o the position of the tap
-    \row \o onTapAndHold \o point \o position \o the position of the tap
-    \row \o onPan \o real \o acceleration \o the acceleration of the pan
-    \row \o onPan \o point \o delta \o the offset from the previous input position to the current input
-    \row \o onPan \o point \o offset \o the total offset from the first input position to the current input position
-    \row \o onPan \o point \o lastOffset \o the previous value of offset
-    \row \o onPinch \o point \o centerPoint \o the midpoint between the two input points
-    \row \o onPinch \o point \o lastCenterPoint \o the previous value of centerPoint
-    \row \o onPinch \o point \o startCenterPoint \o the first value of centerPoint
-    \row \o onPinch \o real \o rotationAngle \o the angle covered by the gesture motion
-    \row \o onPinch \o real \o lastRotationAngle \o the previous value of rotationAngle
-    \row \o onPinch \o real \o totalRotationAngle \o the complete angle covered by the gesture
-    \row \o onPinch \o real \o scaleFactor \o the change in distance between the two input points
-    \row \o onPinch \o real \o lastScaleFactor \o the previous value of scaleFactor
-    \row \o onPinch \o real \o totalScaleFactor \o the complete scale factor of the gesture
-    \row \o onSwipe \o real \o swipeAngle \o the angle of the swipe
+    \header \li Signal \li Type \li Property \li Description
+    \row \li onTap \li point \li position \li the position of the tap
+    \row \li onTapAndHold \li point \li position \li the position of the tap
+    \row \li onPan \li real \li acceleration \li the acceleration of the pan
+    \row \li onPan \li point \li delta \li the offset from the previous input position to the current input
+    \row \li onPan \li point \li offset \li the total offset from the first input position to the current input position
+    \row \li onPan \li point \li lastOffset \li the previous value of offset
+    \row \li onPinch \li point \li centerPoint \li the midpoint between the two input points
+    \row \li onPinch \li point \li lastCenterPoint \li the previous value of centerPoint
+    \row \li onPinch \li point \li startCenterPoint \li the first value of centerPoint
+    \row \li onPinch \li real \li rotationAngle \li the angle covered by the gesture motion
+    \row \li onPinch \li real \li lastRotationAngle \li the previous value of rotationAngle
+    \row \li onPinch \li real \li totalRotationAngle \li the complete angle covered by the gesture
+    \row \li onPinch \li real \li scaleFactor \li the change in distance between the two input points
+    \row \li onPinch \li real \li lastScaleFactor \li the previous value of scaleFactor
+    \row \li onPinch \li real \li totalScaleFactor \li the complete scale factor of the gesture
+    \row \li onSwipe \li real \li swipeAngle \li the angle of the swipe
     \endtable
 
     Custom gestures, handled by onGesture, will have custom properties.
diff --git a/src/imports/particles/qdeclarativeparticles.cpp b/src/imports/particles/qdeclarativeparticles.cpp
index f66a972..87b97d3 100644
--- a/src/imports/particles/qdeclarativeparticles.cpp
+++ b/src/imports/particles/qdeclarativeparticles.cpp
@@ -616,7 +616,7 @@ void QDeclarativeParticlesPrivate::updateOpacity(QDeclarativeParticle &p, int ag
     \brief The Particles object generates and moves particles.
     \inherits Item
 
-    Particles are available in the \bold{Qt.labs.particles 1.0} module.
+    Particles are available in the \b{Qt.labs.particles 1.0} module.
     \e {Elements in the Qt.labs module are not guaranteed to remain compatible
     in future versions.}
 
diff --git a/src/imports/shaders/shadereffectitem.cpp b/src/imports/shaders/shadereffectitem.cpp
index ac5a985..9c25aa7 100644
--- a/src/imports/shaders/shadereffectitem.cpp
+++ b/src/imports/shaders/shadereffectitem.cpp
@@ -76,7 +76,7 @@ static const char qt_emptyAttributeName[] = "";
     \brief The ShaderEffectItem object alters the output of given item with OpenGL shaders.
     \inherits Item
 
-    ShaderEffectItem is available in the \bold{Qt.labs.shaders 1.0} module.
+    ShaderEffectItem is available in the \b{Qt.labs.shaders 1.0} module.
     \e {Elements in the Qt.labs module are not guaranteed to remain compatible
     in future versions.}
 
@@ -99,15 +99,15 @@ static const char qt_emptyAttributeName[] = "";
     A standard set of vertex attributes are provided for the shaders:
 
     \list
-    \o qt_Vertex - The primary position of the vertex.
-    \o qt_MultiTexCoord0 - The texture co-ordinate at each vertex for texture unit 0.
+    \li qt_Vertex - The primary position of the vertex.
+    \li qt_MultiTexCoord0 - The texture co-ordinate at each vertex for texture unit 0.
     \endlist
 
     Additionally following uniforms are available for shaders:
 
     \list
-    \o qt_Opacity - Effective opacity of the item.
-    \o qt_ModelViewProjectionMatrix - current 4x4 transformation matrix of the item.
+    \li qt_Opacity - Effective opacity of the item.
+    \li qt_ModelViewProjectionMatrix - current 4x4 transformation matrix of the item.
     \endlist
 
     Furthermore, it is possible to utilize automatic QML propertybinding into vertex- and fragment shader
@@ -115,38 +115,38 @@ static const char qt_emptyAttributeName[] = "";
 
     \table
     \header
-        \o QML property
-        \o GLSL uniform
+        \li QML property
+        \li GLSL uniform
     \row
-        \o property double foo: 1.0
-        \o uniform highp float foo
+        \li property double foo: 1.0
+        \li uniform highp float foo
     \row
-        \o property real foo: 1.0
-        \o uniform highp float foo
+        \li property real foo: 1.0
+        \li uniform highp float foo
     \row
-        \o property bool foo: true
-        \o uniform bool foo
+        \li property bool foo: true
+        \li uniform bool foo
     \row
-        \o property int foo: 1
-        \o uniform int foo
+        \li property int foo: 1
+        \li uniform int foo
     \row
-        \o property variant foo: Qt.point(1,1)
-        \o uniform highp vec2 foo
+        \li property variant foo: Qt.point(1,1)
+        \li uniform highp vec2 foo
     \row
-        \o property variant foo: Qt.size(1, 1)
-        \o uniform highp vec2 foo
+        \li property variant foo: Qt.size(1, 1)
+        \li uniform highp vec2 foo
     \row
-        \o property variant foo: Qt.rect(1, 1, 2, 2)
-        \o uniform highp vec4 foo
+        \li property variant foo: Qt.rect(1, 1, 2, 2)
+        \li uniform highp vec4 foo
     \row
-        \o property color foo: "#00000000"
-        \o uniform lowp vec4 foo
+        \li property color foo: "#00000000"
+        \li uniform lowp vec4 foo
     \row
-        \o property variant foo: Qt.vector3d(1.0, 2.0, 0.0)
-        \o uniform highp vec3 foo
+        \li property variant foo: Qt.vector3d(1.0, 2.0, 0.0)
+        \li uniform highp vec3 foo
     \row
-        \o property variant foo: ShaderEffectSource { SourceItem: bar }
-        \o uniform lowp sampler2D foo
+        \li property variant foo: ShaderEffectSource { SourceItem: bar }
+        \li uniform lowp sampler2D foo
     \endtable
     \note
     The uniform precision definitions in the above table are not strict, it is possible to choose the uniform
diff --git a/src/imports/shaders/shadereffectsource.cpp b/src/imports/shaders/shadereffectsource.cpp
index fb33318..57e0f43 100644
--- a/src/imports/shaders/shadereffectsource.cpp
+++ b/src/imports/shaders/shadereffectsource.cpp
@@ -51,7 +51,7 @@
     \ingroup qml-shader-elements
     \brief The ShaderEffectSource object encapsulates the source content for the ShaderEffectItem.
 
-    ShaderEffectSource is available in the \bold{Qt.labs.shaders 1.0} module.
+    ShaderEffectSource is available in the \b{Qt.labs.shaders 1.0} module.
     \e {Elements in the Qt.labs module are not guaranteed to remain compatible
     in future versions.}
 
@@ -241,10 +241,10 @@ void ShaderEffectSource::setHideSource(bool hide)
     This property defines the wrap parameter for the source after it has been mapped as a texture.
 
     \list
-    \o ShaderEffectSource.ClampToEdge - Causes texturecoordinates to be clamped to the range [ 1/2*N , 1 - 1/2*N ], where N is the texture width.
-    \o ShaderEffectSource.RepeatHorizontally - Causes the integer part of the horizontal texturecoordinate to be ignored; the GL uses only the fractional part, thereby creating a horizontal repeating pattern.
-    \o ShaderEffectSource.RepeatVertically - Causes the integer part of the vertical texturecoordinate to be ignored; the GL uses only the fractional part, thereby creating a vertical repeating pattern.
-    \o ShaderEffectSource.Repeat - Causes the integer part of both the horizontal and vertical texturecoordinates to be ignored; the GL uses only the fractional part, thereby creating a repeating pattern.
+    \li ShaderEffectSource.ClampToEdge - Causes texturecoordinates to be clamped to the range [ 1/2*N , 1 - 1/2*N ], where N is the texture width.
+    \li ShaderEffectSource.RepeatHorizontally - Causes the integer part of the horizontal texturecoordinate to be ignored; the GL uses only the fractional part, thereby creating a horizontal repeating pattern.
+    \li ShaderEffectSource.RepeatVertically - Causes the integer part of the vertical texturecoordinate to be ignored; the GL uses only the fractional part, thereby creating a vertical repeating pattern.
+    \li ShaderEffectSource.Repeat - Causes the integer part of both the horizontal and vertical texturecoordinates to be ignored; the GL uses only the fractional part, thereby creating a repeating pattern.
     \endlist
 
     The default value is ClampToEdge.
diff --git a/tests/auto/declarative/shared/testhttpserver.cpp b/tests/auto/declarative/shared/testhttpserver.cpp
index b4b0482..335fee0 100644
--- a/tests/auto/declarative/shared/testhttpserver.cpp
+++ b/tests/auto/declarative/shared/testhttpserver.cpp
@@ -79,12 +79,12 @@ server.serveDirectory("slowFiles", TestHTTPServer::Delay);
 
 The following request urls will then result in the appropriate action:
 \table
-\header \o URL \o Action
-\row \o http://localhost:14445/disconnectTest.qml \o Disconnection
-\row \o http://localhost:14445/main.qml \o main.qml returned immediately
-\row \o http://localhost:14445/Button.qml \o Button.qml returned immediately
-\row \o http://localhost:14445/content/WebView.qml \o content/WebView.qml returned immediately
-\row \o http://localhost:14445/slowMain.qml \o slowMain.qml returned after 500ms
+\header \li URL \li Action
+\row \li http://localhost:14445/disconnectTest.qml \li Disconnection
+\row \li http://localhost:14445/main.qml \li main.qml returned immediately
+\row \li http://localhost:14445/Button.qml \li Button.qml returned immediately
+\row \li http://localhost:14445/content/WebView.qml \li content/WebView.qml returned immediately
+\row \li http://localhost:14445/slowMain.qml \li slowMain.qml returned after 500ms
 \endtable
 */
 TestHTTPServer::TestHTTPServer(quint16 port)