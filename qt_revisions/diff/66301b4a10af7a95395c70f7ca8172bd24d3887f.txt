diff --git a/examples/Gallery.qml b/examples/Gallery.qml
index 59a6454..99e8716 100644
--- a/examples/Gallery.qml
+++ b/examples/Gallery.qml
@@ -62,7 +62,7 @@ Rectangle {
             id: fileDialogSave
             folder: "/tmp"
             title: "Save as..."
-            modal: true
+            modality: Qt.WindowModal
             selectExisting: false
 
             onAccepted: { console.log("Accepted: " + filePath) }
@@ -76,7 +76,7 @@ Rectangle {
             minimumWidth: 400
             minimumHeight: 400
             windowDecoration: true
-            modal: modalCheck.checked
+            modality: modalCheck.checked ? Qt.ApplicationModal : Qt.NonModal
             title: "child window"
 
             MenuBar {
diff --git a/src/qfiledialogitem.cpp b/src/qfiledialogitem.cpp
index 23360b7..14c02c3 100644
--- a/src/qfiledialogitem.cpp
+++ b/src/qfiledialogitem.cpp
@@ -101,11 +101,14 @@ void QFileDialogItem::setTitle(QString title)
 }
 
 /* Intentionally left undocumented, as we might decide to remove it later */
-void QFileDialogItem::setModal(bool modal)
+void QFileDialogItem::setModality(Qt::WindowModality modality)
 {
+    if (modality == _dialog->windowModality())
+        return;
+
     bool visible = _dialog->isVisible();
     _dialog->hide();
-    _dialog->setWindowModality(modal ? Qt::WindowModal : Qt::NonModal);
+    _dialog->setWindowModality(modality);
 
     if (visible)
         _dialog->show();
diff --git a/src/qfiledialogitem.h b/src/qfiledialogitem.h
index 01af200..5d9822e 100644
--- a/src/qfiledialogitem.h
+++ b/src/qfiledialogitem.h
@@ -48,7 +48,8 @@
 class QFileDialogItem: public QDeclarativeItem
 {
     Q_OBJECT
-    Q_PROPERTY(bool modal READ modal WRITE setModal NOTIFY modalityChanged)
+    Q_PROPERTY(Qt::WindowModality modality READ modality \
+               WRITE setModality NOTIFY modalityChanged)
     Q_PROPERTY(QString title READ title WRITE setTitle NOTIFY titleChanged)
     Q_PROPERTY(bool selectExisting READ selectExisting \
                WRITE setSelectExisting NOTIFY selectExistingChanged)
@@ -67,7 +68,7 @@ public:
     ~QFileDialogItem();
 
     QString title() const { return _dialog->windowTitle(); }
-    bool modal() const { return _dialog->isModal(); }
+    Qt::WindowModality modality() const { return _dialog->windowModality(); }
     bool selectExisting() const { return _selectExisting; }
     bool selectMultiple() const { return _selectMultiple; }
     bool selectFolder() const { return _selectFolder; }
@@ -77,7 +78,7 @@ public:
     QStringList filePaths() const;
 
     void setTitle(QString title);
-    void setModal(bool modal);
+    void setModality(Qt::WindowModality modality);
     void setSelectExisting(bool selectExisting);
     void setSelectMultiple(bool selectMultiple);
     void setSelectFolder(bool selectFolder);
diff --git a/src/qwindowitem.cpp b/src/qwindowitem.cpp
index cc9d7d2..b4f574b 100644
--- a/src/qwindowitem.cpp
+++ b/src/qwindowitem.cpp
@@ -207,11 +207,14 @@ void QWindowItem::setWindowDecoration(bool s)
     emit windowDecorationChanged();
 }
 
-void QWindowItem::setModal(bool modal)
+void QWindowItem::setModality(Qt::WindowModality modality)
 {
+    if (modality == _window->windowModality())
+        return;
+
     bool visible = _window->isVisible();
     _window->hide();
-    _window->setWindowModality(modal ? Qt::WindowModal : Qt::NonModal);
+    _window->setWindowModality(modality);
 
     if (visible)
         _window->show();
diff --git a/src/qwindowitem.h b/src/qwindowitem.h
index b8f3999..5e6341f 100644
--- a/src/qwindowitem.h
+++ b/src/qwindowitem.h
@@ -62,7 +62,8 @@ class QWindowItem : public QDeclarativeItem
     Q_PROPERTY(int maximumWidth READ maximumWidth WRITE setMaximumWidth NOTIFY maximumWidthChanged)
     Q_PROPERTY(bool visible READ isVisible WRITE setVisible NOTIFY visibleChanged)
     Q_PROPERTY(bool windowDecoration READ windowDecoration WRITE setWindowDecoration NOTIFY windowDecorationChanged)
-    Q_PROPERTY(bool modal READ modal WRITE setModal NOTIFY modalityChanged)
+    Q_PROPERTY(Qt::WindowModality modality READ modality \
+               WRITE setModality NOTIFY modalityChanged)
     Q_PROPERTY(bool deleteOnClose READ deleteOnClose WRITE setDeleteOnClose NOTIFY deleteOnCloseChanged)
     Q_PROPERTY(Qt::WindowState windowState READ windowState WRITE setWindowState NOTIFY windowStateChanged)
     Q_PROPERTY(QString title READ title WRITE setTitle NOTIFY titleChanged)
@@ -86,7 +87,7 @@ public:
     Qt::WindowState windowState() const { return static_cast<Qt::WindowState>(static_cast<int>(_window->windowState()) & ~Qt::WindowActive); }
     QString title() const { return _window->windowTitle(); }
     bool deleteOnClose() const { return _deleteOnClose; }
-    bool modal() const { return _window->isModal(); }
+    Qt::WindowModality modality() const { return _window->windowModality(); }
 
     void setX(int x);
     void setY(int y);
@@ -100,7 +101,7 @@ public:
     void setWindowDecoration(bool s);
     void setWindowState(Qt::WindowState state) { _window->setWindowState(state); }
     void setTitle(QString title);
-    void setModal(bool modal);
+    void setModality(Qt::WindowModality modality);
     void setDeleteOnClose(bool close);
 
 public Q_SLOTS: