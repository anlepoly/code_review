diff --git a/doc/src/development/qmake-manual.qdoc b/doc/src/development/qmake-manual.qdoc
index 889d949..efb0270 100644
--- a/doc/src/development/qmake-manual.qdoc
+++ b/doc/src/development/qmake-manual.qdoc
@@ -823,24 +823,6 @@
     See \l{Deploying an Application on Mac OS X} for more information about
     deploying applications and libraries.
 
-    \section2 Creating Universal Binaries
-
-    To create a universal binary for your application, you need to be using
-    a version of Qt that has been configured with the \c{-universal} option.
-
-    The architectures to be supported in the binary are specified with the
-    \l{qmake Variable Reference#CONFIG}{CONFIG} variable. For example, the
-    following assignment causes \l{qmake Manual#qmake}{\c qmake} to generate
-    build rules to create a universal binary for both PowerPC and x86
-    architectures:
-
-    \snippet doc/src/snippets/code/doc_src_qmake-manual.pro 18
-
-    Additionally, developers using a PowerPC-based platform need to set the
-    \l{qmake Variable Reference#QMAKE_MAC_SDK}{QMAKE_MAC_SDK} variable.
-    This process is discussed in more detail in the
-    \l{Deploying an Application on Mac OS X#Architecture Dependencies}{deployment guide for Mac OS X}.
-
     \section2 Creating and Moving Xcode Projects
 
     Developers on Mac OS X can take advantage of \c{qmake}'s support for Xcode
@@ -936,7 +918,7 @@
     \snippet doc/src/snippets/code/doc_src_qmake-manual.pro 23
 
     This is discussed in more detail in the
-    \l{Deploying an Application on Windows#Visual Studio 2005 Onwards}
+    \l{Deploying an Application on Windows#Manifest files}
     {deployment guide for Windows}.
 */
 
@@ -976,7 +958,6 @@
     \li \l{qmake Variable Reference#DISTFILES}{DISTFILES}
     \li \l{qmake Variable Reference#DLLDESTDIR}{DLLDESTDIR}
     \li \l{qmake Variable Reference#FORMS}{FORMS}
-    \li \l{qmake Variable Reference#FORMS3}{FORMS3}
     \li \l{qmake Variable Reference#GUID}{GUID}
     \li \l{qmake Variable Reference#HEADERS}{HEADERS}
     \li \l{qmake Variable Reference#INCLUDEPATH}{INCLUDEPATH}
@@ -1152,8 +1133,6 @@
     \row \li staticlib \li
     \row \li plugin \li The target is a plugin (lib only). This enables dll as well.
     \row \li designer \li The target is a plugin for \QD.
-    \row \li uic3 \li Configures qmake to run uic3 on the content of \c FORMS3 if
-         defined; otherwise the contents of \c FORMS will be processed instead.
     \row \li no_lflags_merge \li Ensures that the list of libraries stored in the
          \c LIBS variable is not reduced to a list of unique values before it is used.
     \row \li resources \li Configures qmake to run rcc on the content of \c RESOURCES
@@ -1256,7 +1235,7 @@
     emulator.
 
     Files can be deployed by either creating a Visual Studio project or using
-    the \l {Using QTestLib remotely on Windows CE}{cetest} executable.
+    the \l {Using Qt Test remotely on Windows CE}{cetest} executable.
 
     For example:
 
@@ -1336,8 +1315,8 @@
     \target FORMS
     \section1 FORMS
 
-    This variable specifies the UI files (see \link
-    designer-manual.html Qt Designer \endlink) to be processed through \c uic
+    This variable specifies the UI files (see \l{Qt Designer Manual}) to be
+    processed through \c uic
     before compiling.  All dependencies, headers and source files required
     to build these UI files will automatically be added to the project.
 
@@ -1345,10 +1324,6 @@
 
     \snippet doc/src/snippets/code/doc_src_qmake-manual.pro 32
 
-    If FORMS3 is defined in your project, then this variable must contain
-    forms for uic, and not uic3. If CONFIG contains uic3, and FORMS3 is not
-    defined, the this variable must contain only uic3 type forms.
-
     \target GUID
     \section1 GUID
 
@@ -1819,9 +1794,6 @@
     adjusted by modifying the \c QMAKE_CXXFLAGS_DEBUG and
     \c QMAKE_CXXFLAGS_RELEASE variables, respectively.
 
-    For more information, see
-    \l{qmake Platform Notes#Compiler specific options}{qmake Platform Notes}.
-
     \target QMAKE_CXXFLAGS_DEBUG
     \section1 QMAKE_CXXFLAGS_DEBUG
 
@@ -2448,9 +2420,6 @@
     \section1 QMAKE_MAC_SDK
 
     This variable is used on Mac OS X when building universal binaries.
-    This process is described in more detail in the
-    \l{Deploying an Application on Mac OS X#Architecture Dependencies}{Deploying
-    an Application on Mac OS X} document.
 
     \section1 QMAKE_MACOSX_DEPLOYMENT_TARGET
     This variable only has an effect when building on Mac OS X. On that
@@ -4116,8 +4085,10 @@
 
     \section2 \c mydialog.ui
 
-    \quotefromfile examples/qmake/precompile/mydialog.ui
-    \printuntil
+    The following image displays the mydialog.ui file in Qt Creator Design mode.
+    You can view the code in the Edit mode.
+
+    \image qmake-precompile-ui.png
 
     \section2 \c stable.h
 
@@ -4335,14 +4306,9 @@
     Although all kinds of projects use many of the same variables, each of
     them use project-specific variables to customize output files.
 
-    Platform-specific variables are not described here; we refer the reader to
-    the \l{Deploying Qt Applications} document for information on issues such as
-    \l{Deploying an Application on Mac OS X#Architecture Dependencies}{building
-    universal binaries for Mac OS X} and
-    \l{Deploying an Application on Windows#Visual Studio 2005 Onwards}
-    {handling Visual Studio manifest files}.
-
-    \tableofcontents
+    Platform-specific variables are not described here. For more information,
+    see  \l{Deploying an Application on Windows} and
+    \l{Developing Qt Applications for Mac OS X}.
 
     \target Application
     \section1 Building an Application
@@ -4457,7 +4423,7 @@
         \li The exit code of the test will be ignored during \c{make check}.
     \endtable
 
-    Testcases will often be written with \l{QTestLib} or \l{QtQuickTest}, but
+    Testcases will often be written with \l{QTest} or \l{TestCase}, but
     that is not a requirement to make use of \c{CONFIG+=testcase} and \c{make check}.
     The primary requirement is only that the test program exit with a zero exit code
     on success, and a non-zero exit code on failure.
@@ -4514,7 +4480,9 @@
     settings can be enabled by adding \c designer to the project's \c CONFIG
     variable. For example:
 
-    \snippet examples/designer/worldtimeclockplugin/worldtimeclockplugin.pro 0
+    \code
+    QT          += widgets designer
+    \endcode
 
     See the \l{Qt Designer Examples} for more examples of plugin-based projects.
 
diff --git a/doc/src/images/qmake-precompile-ui.png b/doc/src/images/qmake-precompile-ui.png
new file mode 100644
index 0000000..8c7b936
Binary files /dev/null and b/doc/src/images/qmake-precompile-ui.png differ
diff --git a/doc/src/snippets/code/doc_src_qmake-manual.pro b/doc/src/snippets/code/doc_src_qmake-manual.pro
index 56ab986..e82c471 100644
--- a/doc/src/snippets/code/doc_src_qmake-manual.pro
+++ b/doc/src/snippets/code/doc_src_qmake-manual.pro
@@ -133,11 +133,6 @@ QMAKE_BUNDLE_DATA += FRAMEWORK_HEADERS
 #! [17]
 
 
-#! [18]
-CONFIG += x86 ppc
-#! [18]
-
-
 #! [19]
 qmake -spec macx-xcode project.pro
 #! [19]
diff --git a/doc/src/snippets/qmake/precompile-stable.h b/doc/src/snippets/qmake/precompile-stable.h
new file mode 100644
index 0000000..5fc4624
--- /dev/null
+++ b/doc/src/snippets/qmake/precompile-stable.h
@@ -0,0 +1,52 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/legal
+**
+** This file is part of the examples of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:BSD$
+** You may use this file under the terms of the BSD license as follows:
+**
+** "Redistribution and use in source and binary forms, with or without
+** modification, are permitted provided that the following conditions are
+** met:
+**   * Redistributions of source code must retain the above copyright
+**     notice, this list of conditions and the following disclaimer.
+**   * Redistributions in binary form must reproduce the above copyright
+**     notice, this list of conditions and the following disclaimer in
+**     the documentation and/or other materials provided with the
+**     distribution.
+**   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names
+**     of its contributors may be used to endorse or promote products derived
+**     from this software without specific prior written permission.
+**
+**
+** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+//! [0]
+/* Add C includes here */
+
+#if defined __cplusplus
+/* Add C++ includes here */
+
+# include <iostream>
+# include <QApplication>
+# include <QPushButton>
+# include <QLabel>
+#endif
+//! [0]