diff --git a/configure b/configure
index 89bd2f1..a5e1f39 100755
--- a/configure
+++ b/configure
@@ -229,7 +229,6 @@ fi
 #-------------------------------------------------------------------------------
 COMMERCIAL_USER=ask
 CFG_DEV=no
-CFG_NOKIA=no
 CFG_EMBEDDED=no
 CFG_RTOS_ENABLED=yes
 EditionString=Commercial
@@ -346,11 +345,6 @@ earlyArgParse()
         developer-build)
             CFG_DEV="yes"
             ;;
-        nokia-developer)
-            CFG_DEV="yes"
-            CFG_NOKIA="yes"
-            COMMERCIAL_USER="no"
-            ;;
         commercial)
             COMMERCIAL_USER="yes"
             ;;
@@ -385,13 +379,7 @@ if [ "$COMMERCIAL_USER" = "ask" ]; then
     done
 fi
 
-if [ "$CFG_NOKIA" = "yes" ]; then
-    Licensee="Nokia"
-    Edition="NokiaInternalBuild"
-    EditionString="Nokia Internal Build"
-    QT_EDITION="QT_EDITION_OPENSOURCE"
-    [ "$PLATFORM_MAC" = "maybe" ] && PLATFORM_MAC=yes
-elif [ -f "$relpath"/LICENSE.PREVIEW.COMMERCIAL ] && [ $COMMERCIAL_USER = "yes" ]; then
+if [ -f "$relpath"/LICENSE.PREVIEW.COMMERCIAL ] && [ $COMMERCIAL_USER = "yes" ]; then
     # Commercial preview release
     [ "$PLATFORM_MAC" = "maybe" ] && PLATFORM_MAC=yes
     Licensee="Preview"
@@ -1586,7 +1574,7 @@ while [ "$#" -gt 0 ]; do
     debug)
         CFG_DEBUG="$VAL"
         ;;
-    developer-build|commercial|opensource|nokia-developer)
+    developer-build|commercial|opensource)
         # These switches have been dealt with already
         ;;
     static)
@@ -4370,11 +4358,7 @@ echo
 echo "This is the $Platform ${EditionString} Edition."
 echo
 
-if [ "$Edition" = "NokiaInternalBuild" ]; then
-    echo "Detected -nokia-developer option"
-    echo "Nokia employees and agents are allowed to use this software under"
-    echo "the authority of Nokia Corporation and/or its subsidiary(-ies)"
-elif [ "$Edition" = "OpenSource" ]; then
+if [ "$Edition" = "OpenSource" ]; then
     while true; do
         echo "You are licensed to use this software under the terms of"
         echo "the Lesser GNU General Public License (LGPL) versions 2.1."
diff --git a/tools/configure/configureapp.cpp b/tools/configure/configureapp.cpp
index 3251abc..92cc2af 100644
--- a/tools/configure/configureapp.cpp
+++ b/tools/configure/configureapp.cpp
@@ -300,7 +300,6 @@ Configure::Configure(int& argc, char** argv)
     dictionary[ "BUILDTYPE" ]      = "none";
 
     dictionary[ "BUILDDEV" ]        = "no";
-    dictionary[ "BUILDNOKIA" ]      = "no";
 
     dictionary[ "SHARED" ]          = "yes";
 
@@ -481,14 +480,6 @@ void Configure::parseCmdLine()
             dictionary[ "SHARED" ] = "no";
         else if (configCmdLine.at(i) == "-developer-build")
             dictionary[ "BUILDDEV" ] = "yes";
-        else if (configCmdLine.at(i) == "-nokia-developer") {
-            cout << "Detected -nokia-developer option" << endl;
-            cout << "Nokia employees and agents are allowed to use this software under" << endl;
-            cout << "the authority of Nokia Corporation and/or its subsidiary(-ies)" << endl;
-            dictionary[ "BUILDNOKIA" ] = "yes";
-            dictionary[ "BUILDDEV" ] = "yes";
-            dictionary["LICENSE_CONFIRMED"] = "yes";
-        }
         else if (configCmdLine.at(i) == "-opensource") {
             dictionary[ "BUILDTYPE" ] = "opensource";
         }
@@ -3788,7 +3779,7 @@ void Configure::readLicense()
 
     bool openSource = false;
     bool hasOpenSource = QFile::exists(dictionary["LICENSE FILE"] + "/LICENSE.GPL3") || QFile::exists(dictionary["LICENSE FILE"] + "/LICENSE.LGPL");
-    if (dictionary["BUILDNOKIA"] == "yes" || dictionary["BUILDTYPE"] == "commercial") {
+    if (dictionary["BUILDTYPE"] == "commercial") {
         openSource = false;
     } else if (dictionary["BUILDTYPE"] == "opensource") {
         openSource = true;
@@ -3828,7 +3819,7 @@ void Configure::readLicense()
 #ifdef COMMERCIAL_VERSION
     else {
         Tools::checkLicense(dictionary, licenseInfo, firstLicensePath());
-        if (dictionary["DONE"] != "error" && dictionary["BUILDNOKIA"] != "yes") {
+        if (dictionary["DONE"] != "error") {
             // give the user some feedback, and prompt for license acceptance
             cout << endl << "This is the " << dictionary["PLATFORM NAME"] << " " << dictionary["EDITION"] << " Edition."<< endl << endl;
             if (!showLicense(dictionary["LICENSE FILE"])) {