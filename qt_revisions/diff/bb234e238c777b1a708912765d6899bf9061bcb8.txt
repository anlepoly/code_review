diff --git a/src/network/socket/qabstractsocket.cpp b/src/network/socket/qabstractsocket.cpp
index 0c4eed8..a6eb362 100644
--- a/src/network/socket/qabstractsocket.cpp
+++ b/src/network/socket/qabstractsocket.cpp
@@ -434,12 +434,12 @@
 
     This enum describes the behavior of when the socket should hold
     back with continuing data transfer.
+    The only notification currently supported is QSslSocket::sslErrors().
 
     \value PauseNever Do not pause data transfer on the socket. This is the
     default and matches the behaviour of Qt 4.
-    \value PauseOnNotify Pause data transfer on the socket upon receiving a
-    notification. The only notification currently supported is
-    QSslSocket::sslErrors().
+    \value PauseOnSslErrors Pause data transfer on the socket upon receiving an
+    SSL error notification. I.E. QSslSocket::sslErrors().
 */
 
 #include "qabstractsocket.h"
@@ -1404,7 +1404,7 @@ QAbstractSocket::PauseModes QAbstractSocket::pauseMode() const
     \since 5.0
 
     Controls whether to pause upon receiving a notification. The only notification
-    currently supported is QSslSocket::sslErrors(). If set to PauseOnNotify,
+    currently supported is QSslSocket::sslErrors(). If set to PauseOnSslErrors,
     data transfer on the socket will be paused and needs to be enabled explicitly
     again by calling resume().
     By default this option is set to PauseNever.
diff --git a/src/network/socket/qabstractsocket.h b/src/network/socket/qabstractsocket.h
index 7a9f70b..dedde96 100644
--- a/src/network/socket/qabstractsocket.h
+++ b/src/network/socket/qabstractsocket.h
@@ -127,7 +127,7 @@ public:
     Q_DECLARE_FLAGS(BindMode, BindFlag)
     enum PauseMode {
         PauseNever = 0x0,
-        PauseOnNotify = 0x1
+        PauseOnSslErrors = 0x1
     };
     Q_DECLARE_FLAGS(PauseModes, PauseMode)
 
diff --git a/src/network/ssl/qsslsocket.cpp b/src/network/ssl/qsslsocket.cpp
index cfc59fd..3445f13 100644
--- a/src/network/ssl/qsslsocket.cpp
+++ b/src/network/ssl/qsslsocket.cpp
@@ -361,7 +361,7 @@ QSslSocket::~QSslSocket()
     \since 5.0
 
     Continues data transfer on the socket after it has been paused. If
-    "setPauseMode(QAbstractSocket::PauseOnNotify);" has been called on
+    "setPauseMode(QAbstractSocket::PauseOnSslErrors);" has been called on
     this socket and a sslErrors() signal is received, calling this method
     is necessary for the socket to continue.
 
diff --git a/src/network/ssl/qsslsocket_openssl.cpp b/src/network/ssl/qsslsocket_openssl.cpp
index eddedac..d193449 100644
--- a/src/network/ssl/qsslsocket_openssl.cpp
+++ b/src/network/ssl/qsslsocket_openssl.cpp
@@ -1299,7 +1299,7 @@ bool QSslSocketBackendPrivate::checkSslErrors()
     bool doEmitSslError = !verifyErrorsHaveBeenIgnored();
     // check whether we need to emit an SSL handshake error
     if (doVerifyPeer && doEmitSslError) {
-        if (q->pauseMode() & QAbstractSocket::PauseOnNotify) {
+        if (q->pauseMode() & QAbstractSocket::PauseOnSslErrors) {
             pauseSocketNotifiers(q);
             paused = true;
         } else {
diff --git a/tests/auto/network/ssl/qsslsocket/tst_qsslsocket.cpp b/tests/auto/network/ssl/qsslsocket/tst_qsslsocket.cpp
index 34bc361..e134f34 100644
--- a/tests/auto/network/ssl/qsslsocket/tst_qsslsocket.cpp
+++ b/tests/auto/network/ssl/qsslsocket/tst_qsslsocket.cpp
@@ -2158,7 +2158,7 @@ void tst_QSslSocket::resume()
     QFETCH(bool, expectSuccess);
 
     QSslSocket socket;
-    socket.setPauseMode(QAbstractSocket::PauseOnNotify);
+    socket.setPauseMode(QAbstractSocket::PauseOnSslErrors);
 
     QSignalSpy sslErrorSpy(&socket, SIGNAL(sslErrors(QList<QSslError>)));
     QSignalSpy encryptedSpy(&socket, SIGNAL(encrypted()));