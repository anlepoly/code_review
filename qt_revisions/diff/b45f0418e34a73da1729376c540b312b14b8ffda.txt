diff --git a/src/plugins/bearer/nativewifi/platformdefs.h b/src/plugins/bearer/nativewifi/platformdefs.h
index 7614bdb..bd6385d 100644
--- a/src/plugins/bearer/nativewifi/platformdefs.h
+++ b/src/plugins/bearer/nativewifi/platformdefs.h
@@ -45,8 +45,11 @@
 #include <wtypes.h>
 #undef interface
 
+//proper header is wlanapi.h, but that is not included in windows XP
+
 #define WLAN_MAX_NAME_LENGTH 256
 #define WLAN_MAX_PHY_TYPE_NUMBER 8
+#define WLAN_NOTIFICATION_SOURCE_ACM 0x00000008
 #define WLAN_NOTIFICATION_SOURCE_ALL 0x0000ffff
 #define WLAN_AVAILABLE_NETWORK_CONNECTED 1
 #define WLAN_AVAILABLE_NETWORK_HAS_PROFILE 2
diff --git a/src/plugins/bearer/nativewifi/qnativewifiengine.cpp b/src/plugins/bearer/nativewifi/qnativewifiengine.cpp
index 90230bb..f9cd6eb 100644
--- a/src/plugins/bearer/nativewifi/qnativewifiengine.cpp
+++ b/src/plugins/bearer/nativewifi/qnativewifiengine.cpp
@@ -69,13 +69,24 @@ void qNotificationCallback(WLAN_NOTIFICATION_DATA *data, QNativeWifiEngine *d)
 {
     Q_UNUSED(d);
 
-    switch (data->NotificationCode) {
-    case wlan_notification_acm_connection_complete:
-    case wlan_notification_acm_disconnected:
-        QMetaObject::invokeMethod(d, "scanComplete", Qt::QueuedConnection);
-        break;
-    default:
-        ;
+    if (data->NotificationSource == WLAN_NOTIFICATION_SOURCE_ACM) {
+        switch (data->NotificationCode) {
+        case wlan_notification_acm_connection_complete:
+        case wlan_notification_acm_disconnected:
+        case wlan_notification_acm_scan_complete:
+        case wlan_notification_acm_scan_fail:
+            QMetaObject::invokeMethod(d, "scanComplete", Qt::QueuedConnection);
+            break;
+        default:
+#ifdef BEARER_MANAGEMENT_DEBUG
+            qDebug() << "wlan acm notification" << (int)data->NotificationCode;
+#endif
+            break;
+        }
+    } else {
+#ifdef BEARER_MANAGEMENT_DEBUG
+            qDebug() << "wlan notification source" << (int)data->NotificationSource << "code" << (int)data->NotificationCode;
+#endif
     }
 }