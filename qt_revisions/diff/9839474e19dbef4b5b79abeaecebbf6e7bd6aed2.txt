diff --git a/src/widgets/kernel/qwidget_qpa.cpp b/src/widgets/kernel/qwidget_qpa.cpp
index 3d23b04..4fe7ad6 100644
--- a/src/widgets/kernel/qwidget_qpa.cpp
+++ b/src/widgets/kernel/qwidget_qpa.cpp
@@ -441,8 +441,15 @@ void QWidgetPrivate::show_sys()
 {
     Q_Q(QWidget);
     q->setAttribute(Qt::WA_Mapped);
+
+    QWindow *window = q->windowHandle();
+
     if (q->testAttribute(Qt::WA_DontShowOnScreen)) {
         invalidateBuffer(q->rect());
+        if (q->isWindow() && q->windowModality() != Qt::NonModal && window) {
+            // add our window to the modal window list
+            QGuiApplicationPrivate::showModalWindow(window);
+        }
         return;
     }
 
@@ -451,7 +458,6 @@ void QWidgetPrivate::show_sys()
     if (!q->isWindow() && !q->testAttribute(Qt::WA_NativeWindow))
         return;
 
-    QWindow *window = q->windowHandle();
     if (window) {
         QRect geomRect = q->geometry();
         if (q->isWindow()) {
@@ -473,9 +479,7 @@ void QWidgetPrivate::show_sys()
         }
 
         invalidateBuffer(q->rect());
-
-        if (window)
-            window->setVisible(true);
+        window->setVisible(true);
     }
 }
 
@@ -484,6 +488,17 @@ void QWidgetPrivate::hide_sys()
 {
     Q_Q(QWidget);
     q->setAttribute(Qt::WA_Mapped, false);
+
+    QWindow *window = q->windowHandle();
+
+    if (q->testAttribute(Qt::WA_DontShowOnScreen)
+        && q->isWindow()
+        && q->windowModality() != Qt::NonModal
+        && window) {
+        // remove our window from the modal window list
+        QGuiApplicationPrivate::hideModalWindow(window);
+    }
+
     deactivateWidgetCleanup();
     if (!q->isWindow()) {
         QWidget *p = q->parentWidget();
@@ -492,9 +507,9 @@ void QWidgetPrivate::hide_sys()
         }
         return;
     }
-    if (QWindow *window = q->windowHandle()) {
-         window->setVisible(false);
-    }
+
+    if (window)
+        window->setVisible(false);
 }
 
 void QWidgetPrivate::setMaxWindowState_helper()