diff --git a/src/tools/qdoc/qmlparser/qqmljslexer.cpp b/src/tools/qdoc/qmlparser/qqmljslexer.cpp
index 4c75c6e..537e429 100644
--- a/src/tools/qdoc/qmlparser/qqmljslexer.cpp
+++ b/src/tools/qdoc/qmlparser/qqmljslexer.cpp
@@ -58,7 +58,7 @@ QT_END_NAMESPACE
 
 using namespace QQmlJS;
 
-static int regExpFlagFromChar(const QChar &ch)
+static inline int regExpFlagFromChar(QChar ch)
 {
     switch (ch.unicode()) {
     case 'g': return Lexer::RegExp_Global;
diff --git a/tests/auto/corelib/tools/qstring/tst_qstring.cpp b/tests/auto/corelib/tools/qstring/tst_qstring.cpp
index 78a1983..a3c418c 100644
--- a/tests/auto/corelib/tools/qstring/tst_qstring.cpp
+++ b/tests/auto/corelib/tools/qstring/tst_qstring.cpp
@@ -4901,7 +4901,7 @@ void tst_QString::arg_fillChar()
     for (int i=0; i<replaceValues.count(); ++i) {
         const QVariant &var = replaceValues.at(i);
         const int width = widths.at(i);
-        const QChar &fillChar = fillChars.at(i);
+        const QChar fillChar = fillChars.at(i);
         switch (var.type()) {
         case QVariant::String: actual = actual.arg(var.toString(), width, fillChar); break;
         case QVariant::Int: actual = actual.arg(var.toInt(), width, base, fillChar); break;
diff --git a/tests/auto/gui/text/qtextscriptengine/tst_qtextscriptengine.cpp b/tests/auto/gui/text/qtextscriptengine/tst_qtextscriptengine.cpp
index f2ecd5d..f0095c6 100644
--- a/tests/auto/gui/text/qtextscriptengine/tst_qtextscriptengine.cpp
+++ b/tests/auto/gui/text/qtextscriptengine/tst_qtextscriptengine.cpp
@@ -1032,7 +1032,7 @@ void tst_QTextScriptEngine::linearB()
 }
 
 #if defined(Q_WS_X11)
-static bool decomposedShaping( const QFont &f, const QChar &ch)
+static bool decomposedShaping(const QFont &f, QChar ch)
 {
     QString str = QString().append(ch);
     QTextLayout layout(str, f);