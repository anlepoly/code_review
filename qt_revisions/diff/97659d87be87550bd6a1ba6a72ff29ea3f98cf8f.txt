diff --git a/src/plugins/platforms/windows/main.cpp b/src/plugins/platforms/windows/main.cpp
index 5404d91..b552e53 100644
--- a/src/plugins/platforms/windows/main.cpp
+++ b/src/plugins/platforms/windows/main.cpp
@@ -73,11 +73,13 @@ QT_BEGIN_NAMESPACE
        keyword is one of \c integration, \c windows, \c backingstore and
        \c fonts. Level is an integer 0..9.
     \endlist
+    \internal
  */
 
 /*!
     \class QWindowsIntegrationPlugin
     \brief Plugin.
+    \internal
     \ingroup qt-lighthouse-win
  */
 
@@ -85,6 +87,7 @@ QT_BEGIN_NAMESPACE
     \namespace QtWindows
 
     \brief Namespace for enumerations, etc.
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -95,6 +98,7 @@ QT_BEGIN_NAMESPACE
 
     With flags that should help to structure the code.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsbackingstore.cpp b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
index aad115a..9bd3281 100644
--- a/src/plugins/platforms/windows/qwindowsbackingstore.cpp
+++ b/src/plugins/platforms/windows/qwindowsbackingstore.cpp
@@ -53,6 +53,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QWindowsBackingStore
     \brief Backing store for windows.
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsclipboard.cpp b/src/plugins/platforms/windows/qwindowsclipboard.cpp
index 41f22d5..a84e887 100644
--- a/src/plugins/platforms/windows/qwindowsclipboard.cpp
+++ b/src/plugins/platforms/windows/qwindowsclipboard.cpp
@@ -73,6 +73,7 @@ static const char formatTextHtmlC[] = "text/html";
 
     \note The OLE-functions used in this class require OleInitialize().
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -105,6 +106,7 @@ QDebug operator<<(QDebug d, const QMimeData &m)
     IDataObject from the clipboard.
 
     \sa QWindowsInternalMimeDataBase, QWindowsClipboard
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowscontext.cpp b/src/plugins/platforms/windows/qwindowscontext.cpp
index 8601d60..8917532 100644
--- a/src/plugins/platforms/windows/qwindowscontext.cpp
+++ b/src/plugins/platforms/windows/qwindowscontext.cpp
@@ -161,6 +161,7 @@ static inline bool useRTL_Extensions(QSysInfo::WinVersion ver)
 
     \sa QWindowsShell32DLL
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -205,6 +206,7 @@ bool QWindowsUser32DLL::initTouch()
 
     \sa QWindowsUser32DLL
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -230,6 +232,8 @@ QWindowsContext *QWindowsContext::m_instance = 0;
     \brief Singleton container for all relevant information.
 
     Holds state information formerly stored in \c qapplication_win.cpp.
+
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowscursor.cpp b/src/plugins/platforms/windows/qwindowscursor.cpp
index ebcf117..370234e 100644
--- a/src/plugins/platforms/windows/qwindowscursor.cpp
+++ b/src/plugins/platforms/windows/qwindowscursor.cpp
@@ -68,6 +68,7 @@ Q_GUI_EXPORT HBITMAP qt_createIconMask(const QBitmap &bitmap);
     Each Window sets on the global cursor on receiving a Enter-event
     as do the Window manager frames (resize/move handles).
 
+    \internal
     \ingroup qt-lighthouse-win
     \sa QWindowsWindowCursor
 */
@@ -387,6 +388,7 @@ void QWindowsCursor::setPos(const QPoint &pos)
     Based on QSharedDataPointer, so that it can be passed around and
     used as a property of QWindowsBaseWindow.
 
+    \internal
     \ingroup qt-lighthouse-win
     \sa QWindowsCursor
 */
diff --git a/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp b/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp
index 8b8da82..a02ee85 100644
--- a/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp
+++ b/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp
@@ -379,6 +379,7 @@ void eatMouseMove()
        like close() can be called on them from event handlers.
     \endlist
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -415,6 +416,7 @@ protected:
     they support it.
 
     \sa QWindowsDialogThread
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -455,6 +457,7 @@ QWindowsNativeDialogBase *QWindowsDialogHelperBase<BaseClass>::ensureNativeDialo
     \brief Run a non-modal native dialog in a separate thread.
 
     \sa QWindowsDialogHelperBase
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -550,7 +553,7 @@ QVariant QWindowsDialogHelperBase<BaseClass>::styleHint(QPlatformDialogHelper::S
     in QFileDialog are forwarded.
 
     \sa QWindowsNativeFileDialogBase, QWindowsFileDialogHelper
-
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -622,6 +625,7 @@ IFileDialogEvents *QWindowsNativeFileDialogEventHandler::create(QWindowsNativeFi
     Note that only IFileOpenDialog has multi-file functionality.
 
     \sa QWindowsNativeFileDialogEventHandler, QWindowsFileDialogHelper
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -987,6 +991,7 @@ HRESULT QWindowsNativeFileDialogEventHandler::OnTypeChange(IFileDialog *)
 
     Implements single-selection methods.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -1026,6 +1031,7 @@ QStringList QWindowsNativeSaveFileDialog::selectedFiles() const
 
     Implements multi-selection methods.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -1097,6 +1103,7 @@ QWindowsNativeFileDialogBase *QWindowsNativeFileDialogBase::create(QFileDialogOp
     the right parameters from each thread. The problem is though
     that calls to CoInitialize() occur in several places in Qt.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -1229,7 +1236,7 @@ QString QWindowsFileDialogHelper::selectedNameFilter() const
 
     \sa QWindowsColorDialogHelper
     \sa #define USE_NATIVE_COLOR_DIALOG
-
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -1313,7 +1320,7 @@ void QWindowsNativeColorDialog::exec(HWND owner)
 
     \sa #define USE_NATIVE_COLOR_DIALOG
     \sa QWindowsNativeColorDialog
-
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsdrag.cpp b/src/plugins/platforms/windows/qwindowsdrag.cpp
index d377e51..e86fa1e 100644
--- a/src/plugins/platforms/windows/qwindowsdrag.cpp
+++ b/src/plugins/platforms/windows/qwindowsdrag.cpp
@@ -214,6 +214,7 @@ static const char * const ignoreDragCursorXpmC[] = {
     current drop data object from QWindowsDrag.
 
     \sa QWindowsDrag
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -278,6 +279,7 @@ static inline Qt::KeyboardModifiers toQtKeyboardModifiers(DWORD keyState)
     Used for drag operations.
 
     \sa QWindowsDrag
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -506,6 +508,7 @@ QWindowsOleDropSource::GiveFeedback(DWORD dwEffect)
     (sending DragEnter/Leave, etc) is handled in here.
 
     \sa QWindowsDrag
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -702,7 +705,7 @@ QWindowsOleDropTarget::Drop(LPDATAOBJECT /*pDataObj*/, DWORD grfKeyState,
 /*!
     \class QWindowsDrag
     \brief Windows drag implementation.
-
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsfontdatabase.cpp b/src/plugins/platforms/windows/qwindowsfontdatabase.cpp
index 814a6a9..445b40f 100644
--- a/src/plugins/platforms/windows/qwindowsfontdatabase.cpp
+++ b/src/plugins/platforms/windows/qwindowsfontdatabase.cpp
@@ -591,6 +591,7 @@ static inline bool initDirectWrite(QWindowsFontEngineData *d)
     EnumFontFamiliesEx() does not list all fonts by default.
     This should be introduced to Lighthouse as well?
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsfontengine.cpp b/src/plugins/platforms/windows/qwindowsfontengine.cpp
index d8a1865..eb293c5 100644
--- a/src/plugins/platforms/windows/qwindowsfontengine.cpp
+++ b/src/plugins/platforms/windows/qwindowsfontengine.cpp
@@ -276,6 +276,7 @@ int QWindowsFontEngine::getGlyphIndexes(const QChar *str, int numChars, QGlyphLa
 /*!
     \class QWindowsFontEngine
     \brief Standard Windows font engine.
+    \internal
     \ingroup qt-lighthouse-win
 
     Will probably be superseded by a common Free Type font engine in Qt 5.X.
@@ -1285,6 +1286,7 @@ void QWindowsFontEngine::initFontInfo(const QFontDef &request,
 /*!
     \class QWindowsMultiFontEngine
     \brief Standard Windows Multi font engine.
+    \internal
     \ingroup qt-lighthouse-win
 
     "Merges" several font engines that have gaps in the
diff --git a/src/plugins/platforms/windows/qwindowsfontenginedirectwrite.cpp b/src/plugins/platforms/windows/qwindowsfontenginedirectwrite.cpp
index 4dbb2cf..b02686c 100644
--- a/src/plugins/platforms/windows/qwindowsfontenginedirectwrite.cpp
+++ b/src/plugins/platforms/windows/qwindowsfontenginedirectwrite.cpp
@@ -175,6 +175,7 @@ namespace {
 /*!
     \class QWindowsFontEngineDirectWrite
     \brief Windows font engine using Direct Write.
+    \internal
     \ingroup qt-lighthouse-win
 
     Font engine for subpixel positioned text on Windows Vista
diff --git a/src/plugins/platforms/windows/qwindowsglcontext.cpp b/src/plugins/platforms/windows/qwindowsglcontext.cpp
index 607dabc..2528ad9 100644
--- a/src/plugins/platforms/windows/qwindowsglcontext.cpp
+++ b/src/plugins/platforms/windows/qwindowsglcontext.cpp
@@ -664,6 +664,7 @@ static inline QOpenGLContextData createDummyWindowOpenGLContextData()
     Provides utility function to retrieve from currently active
     context and to apply to a QSurfaceFormat.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -743,6 +744,7 @@ QDebug operator<<(QDebug d, const QWindowsOpenGLContextFormat &f)
     Functions like wglGetProcAddress() or glGetString() only work if there
     is a current GL context.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -788,6 +790,7 @@ QOpenGLTemporaryContext::~QOpenGLTemporaryContext()
     \note Initialization requires an active context (see create()).
 
     \sa QWindowsGLContext
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -865,6 +868,7 @@ static inline bool useARB()
     which will affect the window as well. The HDCs are stored in a list of
     QOpenGLContextData and are released in doneCurrent().
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsguieventdispatcher.cpp b/src/plugins/platforms/windows/qwindowsguieventdispatcher.cpp
index 49158dc..56952df 100644
--- a/src/plugins/platforms/windows/qwindowsguieventdispatcher.cpp
+++ b/src/plugins/platforms/windows/qwindowsguieventdispatcher.cpp
@@ -60,6 +60,7 @@ QT_BEGIN_NAMESPACE
     qWindowsWndProc. Handling the Lighthouse gui events should be done
     from within the qWindowsWndProc to ensure correct processing of messages.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsinputcontext.cpp b/src/plugins/platforms/windows/qwindowsinputcontext.cpp
index 03a7625..ca7f95c 100644
--- a/src/plugins/platforms/windows/qwindowsinputcontext.cpp
+++ b/src/plugins/platforms/windows/qwindowsinputcontext.cpp
@@ -153,6 +153,7 @@ template <class T>
     QtWindows::InputMethodCloseCandidateWindowEvent
     needs to be checked (mouse grab might interfere with candidate window).
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsintegration.cpp b/src/plugins/platforms/windows/qwindowsintegration.cpp
index e0a1138..e0ab113 100644
--- a/src/plugins/platforms/windows/qwindowsintegration.cpp
+++ b/src/plugins/platforms/windows/qwindowsintegration.cpp
@@ -86,6 +86,7 @@ QT_BEGIN_NAMESPACE
     \li releaseDC Releases the previously acquired DC and returns 0.
     \endlist
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -174,6 +175,7 @@ void *QWindowsNativeInterface::createMessageWindow(const QString &classNameTempl
 /*!
     \class QWindowsIntegration
     \brief QPlatformIntegration implementation for Windows.
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsinternalmimedata.cpp b/src/plugins/platforms/windows/qwindowsinternalmimedata.cpp
index 9bed609..1918259 100644
--- a/src/plugins/platforms/windows/qwindowsinternalmimedata.cpp
+++ b/src/plugins/platforms/windows/qwindowsinternalmimedata.cpp
@@ -62,6 +62,7 @@
     does conversion using QWindowsMime classes.
 
     \sa QInternalMimeData, QWindowsMime, QWindowsMimeConverter
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowskeymapper.cpp b/src/plugins/platforms/windows/qwindowskeymapper.cpp
index 25d3d43..ec37c4b 100644
--- a/src/plugins/platforms/windows/qwindowskeymapper.cpp
+++ b/src/plugins/platforms/windows/qwindowskeymapper.cpp
@@ -53,6 +53,7 @@ QT_BEGIN_NAMESPACE
 /*!
     \class QWindowsKeyMapper
     \brief Translates Windows keys to QWindowSystemInterface events.
+    \internal
     \ingroup qt-lighthouse-win
 
     In addition, handles some special keys to display system menus, etc.
diff --git a/src/plugins/platforms/windows/qwindowsmime.cpp b/src/plugins/platforms/windows/qwindowsmime.cpp
index e41db3f..963ee88 100644
--- a/src/plugins/platforms/windows/qwindowsmime.cpp
+++ b/src/plugins/platforms/windows/qwindowsmime.cpp
@@ -398,6 +398,7 @@ static bool canGetData(int cf, IDataObject * pDataObj)
 /*!
     \class QWindowsMime
     \brief The QWindowsMime class maps open-standard MIME to Window Clipboard formats.
+    \internal
     \ingroup qt-lighthouse-win
 
     Qt's drag-and-drop and clipboard facilities use the MIME standard.
@@ -1437,6 +1438,7 @@ QString QLastResortMimes::mimeForFormat(const FORMATETC &formatetc) const
 /*!
     \class QWindowsMimeConverter
     \brief Manages the list of QWindowsMime instances.
+    \internal
     \ingroup qt-lighthouse-win
     \sa QWindowsMime
 */
diff --git a/src/plugins/platforms/windows/qwindowsmousehandler.cpp b/src/plugins/platforms/windows/qwindowsmousehandler.cpp
index f866f68..2a98b7f 100644
--- a/src/plugins/platforms/windows/qwindowsmousehandler.cpp
+++ b/src/plugins/platforms/windows/qwindowsmousehandler.cpp
@@ -120,6 +120,7 @@ static inline void compressMouseMove(MSG *msg)
 
     Dispatches mouse and touch events. Separate for code cleanliness.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsnativeimage.cpp b/src/plugins/platforms/windows/qwindowsnativeimage.cpp
index 9cd30df..c95f7d0 100644
--- a/src/plugins/platforms/windows/qwindowsnativeimage.cpp
+++ b/src/plugins/platforms/windows/qwindowsnativeimage.cpp
@@ -62,6 +62,7 @@ typedef struct {
     causes CreateDIBSection() to fail.
 
     \sa QWindowsBackingStore
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsole.cpp b/src/plugins/platforms/windows/qwindowsole.cpp
index 6f34967..ee8f7d6 100644
--- a/src/plugins/platforms/windows/qwindowsole.cpp
+++ b/src/plugins/platforms/windows/qwindowsole.cpp
@@ -71,6 +71,7 @@ QT_BEGIN_NAMESPACE
        (NOTE: must set pformatetcOut->ptd = NULL)
    \endlist
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -277,6 +278,7 @@ QWindowsOleDataObject::EnumDAdvise(LPENUMSTATDATA FAR*)
 /*!
     \class QWindowsOleEnumFmtEtc
     \brief Enumerates the FORMATETC structures supported by QWindowsOleDataObject.
+    \internal
     \ingroup qt-lighthouse-win
 */
 
diff --git a/src/plugins/platforms/windows/qwindowsscreen.cpp b/src/plugins/platforms/windows/qwindowsscreen.cpp
index 0c24ff7..90a5261 100644
--- a/src/plugins/platforms/windows/qwindowsscreen.cpp
+++ b/src/plugins/platforms/windows/qwindowsscreen.cpp
@@ -169,8 +169,9 @@ static inline QSharedPointer<QWindowsCursor> sharedCursor()
 /*!
     \class QWindowsScreen
     \brief Windows screen.
-    \ingroup qt-lighthouse-win
     \sa QWindowsScreenManager
+    \internal
+    \ingroup qt-lighthouse-win
 */
 
 QWindowsScreen::QWindowsScreen(const QWindowsScreenData &data) :
@@ -314,8 +315,9 @@ void QWindowsScreen::handleChanges(const QWindowsScreenData &newData)
     Listens for changes and notifies QWindowSystemInterface about changed/
     added/deleted screens.
 
-    \ingroup qt-lighthouse-win
     \sa QWindowsScreen
+    \internal
+    \ingroup qt-lighthouse-win
 */
 
 QWindowsScreenManager::QWindowsScreenManager() :
diff --git a/src/plugins/platforms/windows/qwindowswindow.cpp b/src/plugins/platforms/windows/qwindowswindow.cpp
index ca23623..74da8c9 100644
--- a/src/plugins/platforms/windows/qwindowswindow.cpp
+++ b/src/plugins/platforms/windows/qwindowswindow.cpp
@@ -226,6 +226,7 @@ static bool shouldShowMaximizeButton(Qt::WindowFlags flags)
     Contains the window creation code formerly in qwidget_win.cpp.
 
     \sa QWindowCreationContext
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -476,6 +477,7 @@ void WindowCreationData::initialize(HWND hwnd, bool frameChange) const
     Geometry constraints ready to apply to a MINMAXINFO taking frame
     into account.
 
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -571,6 +573,7 @@ bool QWindowsGeometryHint::positionIncludesFrame(const QWindow *w)
     WM_GETMINMAXINFO and obtains the corrected size/position.
 
     \sa WindowCreationData, QWindowsContext
+    \internal
     \ingroup qt-lighthouse-win
 */
 
@@ -609,7 +612,7 @@ QWindowCreationContext::QWindowCreationContext(const QWindow *w,
 }
 
 /*!
-    \class QWindowsBaseWindow
+    \class QWindowsWindow
     \brief Raster or OpenGL Window.
 
     \list
@@ -626,6 +629,7 @@ QWindowCreationContext::QWindowCreationContext(const QWindow *w,
        handleWmPaint() is empty (although required).
     \endlist
 
+    \internal
     \ingroup qt-lighthouse-win
 */