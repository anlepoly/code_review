diff --git a/src/quick/items/qquickspriteengine.cpp b/src/quick/items/qquickspriteengine.cpp
index 1763d7a..724d134 100644
--- a/src/quick/items/qquickspriteengine.cpp
+++ b/src/quick/items/qquickspriteengine.cpp
@@ -348,6 +348,7 @@ void QQuickSpriteEngine::startAssemblingImage()
     if (m_startedImageAssembly)
         return;
     m_loaded = false;
+    m_errorsPrinted = false;
 
     //This could also trigger the start of the image loading in Sprites, however that currently happens in Sprite::setSource
 
@@ -370,10 +371,12 @@ void QQuickSpriteEngine::startAssemblingImage()
 QImage QQuickSpriteEngine::assembledImage()
 {
     QQuickPixmap::Status stat = status();
-    if (stat == QQuickPixmap::Error)
+    if (!m_errorsPrinted && stat == QQuickPixmap::Error) {
         foreach (QQuickSprite* s, m_sprites)
             if (s->m_pix.isError())
                 qmlInfo(s) << s->m_pix.error();
+        m_errorsPrinted = true;
+    }
 
     if (stat != QQuickPixmap::Ready)
         return QImage();
diff --git a/src/quick/items/qquickspriteengine_p.h b/src/quick/items/qquickspriteengine_p.h
index d78a103..996ed5e 100644
--- a/src/quick/items/qquickspriteengine_p.h
+++ b/src/quick/items/qquickspriteengine_p.h
@@ -295,6 +295,7 @@ private:
     QList<QQuickSprite*> m_sprites;
     bool m_startedImageAssembly;
     bool m_loaded;
+    bool m_errorsPrinted;
 };
 
 //Common use is to have your own list property which is transparently an engine