diff --git a/tests/auto/corelib/tools/qcryptographichash/qcryptographichash.pro b/tests/auto/corelib/tools/qcryptographichash/qcryptographichash.pro
index fddd67f..1c4b74e 100644
--- a/tests/auto/corelib/tools/qcryptographichash/qcryptographichash.pro
+++ b/tests/auto/corelib/tools/qcryptographichash/qcryptographichash.pro
@@ -3,14 +3,4 @@ TARGET = tst_qcryptographichash
 QT = core testlib
 SOURCES = tst_qcryptographichash.cpp
 
-
-wince* {
-   addFiles.files = data/*
-   addFiles.path = data/
-   DEPLOYMENT += addFiles
-
-   DEFINES += SRCDIR=\\\".\\\"
-}
-else {
-    DEFINES += SRCDIR=\\\"$$PWD/\\\"
-}
\ No newline at end of file
+TESTDATA += data/*
diff --git a/tests/auto/corelib/tools/qcryptographichash/tst_qcryptographichash.cpp b/tests/auto/corelib/tools/qcryptographichash/tst_qcryptographichash.cpp
index 0f35089..81cc66f 100644
--- a/tests/auto/corelib/tools/qcryptographichash/tst_qcryptographichash.cpp
+++ b/tests/auto/corelib/tools/qcryptographichash/tst_qcryptographichash.cpp
@@ -169,7 +169,9 @@ void tst_QCryptographicHash::files()
     QFETCH(QCryptographicHash::Algorithm, algorithm);
     QFETCH(QByteArray, md5sum);
     {
-        QFile f(QString::fromLocal8Bit(SRCDIR) + filename);
+        QString testData = QFINDTESTDATA(filename);
+        QVERIFY2(!testData.isEmpty(), qPrintable(QString("Cannot find test data: %1").arg(filename)));
+        QFile f(testData);
         QCryptographicHash hash(algorithm);
         QVERIFY(! hash.addData(&f)); // file is not open for reading;
         if (f.open(QIODevice::ReadOnly)) {