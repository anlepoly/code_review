diff --git a/src/corelib/statemachine/qeventtransition.cpp b/src/corelib/statemachine/qeventtransition.cpp
index 3c93281..bdd4f41 100644
--- a/src/corelib/statemachine/qeventtransition.cpp
+++ b/src/corelib/statemachine/qeventtransition.cpp
@@ -125,9 +125,8 @@ void QEventTransitionPrivate::unregister()
 void QEventTransitionPrivate::maybeRegister()
 {
     Q_Q(QEventTransition);
-    if (!machine() || !machine()->configuration().contains(sourceState()))
-        return;
-    QStateMachinePrivate::get(machine())->registerEventTransition(q);
+    if (QStateMachine *mach = machine())
+        QStateMachinePrivate::get(mach)->maybeRegisterEventTransition(q);
 }
 
 /*!
diff --git a/src/corelib/statemachine/qsignaltransition.cpp b/src/corelib/statemachine/qsignaltransition.cpp
index 26d2add..f1f0e4a 100644
--- a/src/corelib/statemachine/qsignaltransition.cpp
+++ b/src/corelib/statemachine/qsignaltransition.cpp
@@ -131,9 +131,8 @@ void QSignalTransitionPrivate::unregister()
 void QSignalTransitionPrivate::maybeRegister()
 {
     Q_Q(QSignalTransition);
-    if (!machine() || !machine()->configuration().contains(sourceState()))
-        return;
-    QStateMachinePrivate::get(machine())->registerSignalTransition(q);
+    if (QStateMachine *mach = machine())
+        QStateMachinePrivate::get(mach)->maybeRegisterSignalTransition(q);
 }
 
 /*!
diff --git a/src/corelib/statemachine/qstate.cpp b/src/corelib/statemachine/qstate.cpp
index 27cec1d..481f0e9 100644
--- a/src/corelib/statemachine/qstate.cpp
+++ b/src/corelib/statemachine/qstate.cpp
@@ -313,8 +313,8 @@ void QState::addTransition(QAbstractTransition *transition)
             return ;
         }
     }
-    if (machine() != 0 && machine()->configuration().contains(this))
-        QStateMachinePrivate::get(machine())->registerTransitions(this);
+    if (QStateMachine *mach = machine())
+        QStateMachinePrivate::get(mach)->maybeRegisterTransition(transition);
 }
 
 /*!
diff --git a/src/corelib/statemachine/qstatemachine.cpp b/src/corelib/statemachine/qstatemachine.cpp
index 81be186..59b6b55 100644
--- a/src/corelib/statemachine/qstatemachine.cpp
+++ b/src/corelib/statemachine/qstatemachine.cpp
@@ -1660,15 +1660,32 @@ void QStateMachinePrivate::registerTransitions(QAbstractState *state)
     QList<QAbstractTransition*> transitions = QStatePrivate::get(group)->transitions();
     for (int i = 0; i < transitions.size(); ++i) {
         QAbstractTransition *t = transitions.at(i);
-        if (QSignalTransition *st = qobject_cast<QSignalTransition*>(t)) {
-            registerSignalTransition(st);
-        }
+        registerTransition(t);
+    }
+}
+
+void QStateMachinePrivate::maybeRegisterTransition(QAbstractTransition *transition)
+{
+    if (QSignalTransition *st = qobject_cast<QSignalTransition*>(transition)) {
+        maybeRegisterSignalTransition(st);
+    }
 #ifndef QT_NO_STATEMACHINE_EVENTFILTER
-        else if (QEventTransition *oet = qobject_cast<QEventTransition*>(t)) {
-            registerEventTransition(oet);
-        }
+    else if (QEventTransition *et = qobject_cast<QEventTransition*>(transition)) {
+        maybeRegisterEventTransition(et);
+    }
 #endif
+}
+
+void QStateMachinePrivate::registerTransition(QAbstractTransition *transition)
+{
+    if (QSignalTransition *st = qobject_cast<QSignalTransition*>(transition)) {
+        registerSignalTransition(st);
+    }
+#ifndef QT_NO_STATEMACHINE_EVENTFILTER
+    else if (QEventTransition *oet = qobject_cast<QEventTransition*>(transition)) {
+        registerEventTransition(oet);
     }
+#endif
 }
 
 void QStateMachinePrivate::unregisterTransition(QAbstractTransition *transition)
@@ -1683,6 +1700,13 @@ void QStateMachinePrivate::unregisterTransition(QAbstractTransition *transition)
 #endif
 }
 
+void QStateMachinePrivate::maybeRegisterSignalTransition(QSignalTransition *transition)
+{
+    Q_Q(QStateMachine);
+    if ((state == Running) && configuration.contains(transition->sourceState()))
+        registerSignalTransition(transition);
+}
+
 void QStateMachinePrivate::registerSignalTransition(QSignalTransition *transition)
 {
     Q_Q(QStateMachine);
@@ -1784,6 +1808,12 @@ void QStateMachinePrivate::unregisterAllTransitions()
 }
 
 #ifndef QT_NO_STATEMACHINE_EVENTFILTER
+void QStateMachinePrivate::maybeRegisterEventTransition(QEventTransition *transition)
+{
+    if ((state == Running) && configuration.contains(transition->sourceState()))
+        registerEventTransition(transition);
+}
+
 void QStateMachinePrivate::registerEventTransition(QEventTransition *transition)
 {
     Q_Q(QStateMachine);
diff --git a/src/corelib/statemachine/qstatemachine_p.h b/src/corelib/statemachine/qstatemachine_p.h
index 113f17f..f3291e7 100644
--- a/src/corelib/statemachine/qstatemachine_p.h
+++ b/src/corelib/statemachine/qstatemachine_p.h
@@ -170,9 +170,13 @@ public:
     void goToState(QAbstractState *targetState);
 
     void registerTransitions(QAbstractState *state);
+    void maybeRegisterTransition(QAbstractTransition *transition);
+    void registerTransition(QAbstractTransition *transition);
+    void maybeRegisterSignalTransition(QSignalTransition *transition);
     void registerSignalTransition(QSignalTransition *transition);
     void unregisterSignalTransition(QSignalTransition *transition);
 #ifndef QT_NO_STATEMACHINE_EVENTFILTER
+    void maybeRegisterEventTransition(QEventTransition *transition);
     void registerEventTransition(QEventTransition *transition);
     void unregisterEventTransition(QEventTransition *transition);
     void handleFilteredEvent(QObject *watched, QEvent *event);