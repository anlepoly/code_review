diff --git a/src/tools/moc/generator.cpp b/src/tools/moc/generator.cpp
index 937a62e..3362a1a 100644
--- a/src/tools/moc/generator.cpp
+++ b/src/tools/moc/generator.cpp
@@ -443,7 +443,7 @@ void Generator::generateClassInfos()
     }
 }
 
-void Generator::generateFunctions(QList<FunctionDef>& list, const char *functype, int type)
+void Generator::generateFunctions(const QList<FunctionDef>& list, const char *functype, int type)
 {
     if (list.isEmpty())
         return;
@@ -492,7 +492,7 @@ void Generator::generateFunctions(QList<FunctionDef>& list, const char *functype
     }
 }
 
-void Generator::generateFunctionRevisions(QList<FunctionDef>& list, const char *functype)
+void Generator::generateFunctionRevisions(const QList<FunctionDef>& list, const char *functype)
 {
     if (list.count())
         fprintf(out, "\n // %ss: revision\n", functype);
diff --git a/src/tools/moc/generator.h b/src/tools/moc/generator.h
index 4e96511..46eee4c 100644
--- a/src/tools/moc/generator.h
+++ b/src/tools/moc/generator.h
@@ -56,8 +56,8 @@ public:
     void generateCode();
 private:
     void generateClassInfos();
-    void generateFunctions(QList<FunctionDef> &list, const char *functype, int type);
-    void generateFunctionRevisions(QList<FunctionDef>& list, const char *functype);
+    void generateFunctions(const QList<FunctionDef> &list, const char *functype, int type);
+    void generateFunctionRevisions(const QList<FunctionDef>& list, const char *functype);
     void generateEnums(int index);
     void generateProperties();
     void generateMetacall();