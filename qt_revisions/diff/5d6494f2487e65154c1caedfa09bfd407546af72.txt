diff --git a/doc/src/examples/qmlvideo.qdoc b/doc/src/examples/qmlvideo.qdoc
index 3b186d1..7ac2664 100644
--- a/doc/src/examples/qmlvideo.qdoc
+++ b/doc/src/examples/qmlvideo.qdoc
@@ -128,7 +128,7 @@ element, the embedded
 
 \section1 Calculating and displaying QML painting rate
 
-\include examples/video-qml-paint-rate.qdocinc
+\input examples/video-qml-paint-rate.qdocinc
 
 All that remains is to connect the afterRendering() signal of the QQuickView
 object to a JavaScript function, which will eventually call frequencyItem.notify():
diff --git a/doc/src/examples/qmlvideofx.qdoc b/doc/src/examples/qmlvideofx.qdoc
index 29d4425..acfb202 100644
--- a/doc/src/examples/qmlvideofx.qdoc
+++ b/doc/src/examples/qmlvideofx.qdoc
@@ -151,7 +151,7 @@ The abstraction of source item type is achieved by the
 \printuntil }
 \skipto function openVideo
 \printuntil "ContentVideo.qml"
-\skipto contentLoader.item.source
+\skipto contentLoader.item.mediaSource
 \printuntil path
 \skipto }
 \printuntil }
@@ -202,7 +202,7 @@ And here is the effect selection menu:
 
 \section1 Calculating and displaying QML painting rate
 
-\include examples/video-qml-paint-rate.qdocinc
+\input examples/video-qml-paint-rate.qdocinc
 
 All that remains is to connect the afterRendering() signal of the QQuickView
 object to a JavaScript function, which will eventually call frequencyItem.notify():
diff --git a/doc/src/examples/video-qml-paint-rate.qdocinc b/doc/src/examples/video-qml-paint-rate.qdocinc
index bc993fd..84098e2 100644
--- a/doc/src/examples/video-qml-paint-rate.qdocinc
+++ b/doc/src/examples/video-qml-paint-rate.qdocinc
@@ -33,7 +33,7 @@ and its data is displayed by defining a QML item called FrequencyItem, like this
 \printuntil id: monitor
 \skipto onAverageFrequencyChanged
 \printuntil {
-\skipto instantaneousFrequencyText
+\skipto averageFrequencyText
 \printuntil /^\}/
 
 The result looks like this:
diff --git a/doc/src/snippets/multimedia-snippets/camera.cpp b/doc/src/snippets/multimedia-snippets/camera.cpp
index 08a2e89..a44421e 100644
--- a/doc/src/snippets/multimedia-snippets/camera.cpp
+++ b/doc/src/snippets/multimedia-snippets/camera.cpp
@@ -110,7 +110,7 @@ void overview_still()
 
     //on shutter button released
     camera->unlock();
-    //! [Camera overview surface]
+    //! [Camera overview capture]
 }
 
 void overview_movie()
diff --git a/src/gsttools/qgstreamerbushelper.cpp b/src/gsttools/qgstreamerbushelper.cpp
index daf7213..68c8795 100644
--- a/src/gsttools/qgstreamerbushelper.cpp
+++ b/src/gsttools/qgstreamerbushelper.cpp
@@ -139,7 +139,7 @@ static GstBusSyncReply syncGstBusFilter(GstBus* bus, GstMessage* message, QGstre
 
 
 /*!
-    \class gstreamer::QGstreamerBusHelper
+    \class QGstreamerBusHelper
     \internal
 */
 
diff --git a/src/gsttools/qgstreamermessage.cpp b/src/gsttools/qgstreamermessage.cpp
index 02b03a3..9b54d5d 100644
--- a/src/gsttools/qgstreamermessage.cpp
+++ b/src/gsttools/qgstreamermessage.cpp
@@ -49,7 +49,7 @@ static int wuchi = qRegisterMetaType<QGstreamerMessage>();
 
 
 /*!
-    \class gstreamer::QGstreamerMessage
+    \class QGstreamerMessage
     \internal
 */
 
diff --git a/src/imports/audioengine/qdeclarative_audiosample_p.cpp b/src/imports/audioengine/qdeclarative_audiosample_p.cpp
index 4842704..423945b 100644
--- a/src/imports/audioengine/qdeclarative_audiosample_p.cpp
+++ b/src/imports/audioengine/qdeclarative_audiosample_p.cpp
@@ -158,7 +158,7 @@ bool QDeclarativeAudioSample::isLoaded() const
 }
 
 /*!
-    \qmlproperty QtAudioEngine1::AudioSample::load()
+    \qmlmethod void QtAudioEngine1::AudioSample::load()
 
     Starts loading the sample into memory if not loaded.
 */
diff --git a/src/imports/multimedia/qdeclarativecameraexposure.cpp b/src/imports/multimedia/qdeclarativecameraexposure.cpp
index dc433ec..6d594f6 100644
--- a/src/imports/multimedia/qdeclarativecameraexposure.cpp
+++ b/src/imports/multimedia/qdeclarativecameraexposure.cpp
@@ -80,13 +80,13 @@ QT_BEGIN_NAMESPACE
     For example, to select automatic shutter speed selection:
 
     \qml
-        camera.exposure.setAutoShutterSpeed();
+        camera.exposure.setAutoShutterSpeed()
     \endqml
 
     Or for a specific shutter speed:
 
     \qml
-        camera.exposure.manualShutterSpeed = 0.01; // 10ms
+        camera.exposure.manualShutterSpeed = 0.01 // 10ms
     \endqml
 
     You can only choose one or the other mode.
diff --git a/src/imports/multimedia/qdeclarativevideooutput.cpp b/src/imports/multimedia/qdeclarativevideooutput.cpp
index 235b217..46b5893 100644
--- a/src/imports/multimedia/qdeclarativevideooutput.cpp
+++ b/src/imports/multimedia/qdeclarativevideooutput.cpp
@@ -550,7 +550,7 @@ QRectF QDeclarativeVideoOutput::sourceRect() const
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapNormalizedPointToItem
+    \qmlmethod QPointF QtMultimedia5::VideoOutput::mapNormalizedPointToItem (const QPointF &point) const
 
     Given normalized coordinates \a point (that is, each
     component in the range of 0 to 1.0), return the mapped point
@@ -587,7 +587,7 @@ QPointF QDeclarativeVideoOutput::mapNormalizedPointToItem(const QPointF &point)
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapNormalizedRectToItem
+    \qmlmethod QRectF QtMultimedia5::VideoOutput::mapNormalizedRectToItem(const QRectF &rectangle) const
 
     Given a rectangle \a rectangle in normalized
     coordinates (that is, each component in the range of 0 to 1.0),
@@ -604,7 +604,7 @@ QRectF QDeclarativeVideoOutput::mapNormalizedRectToItem(const QRectF &rectangle)
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapPointToItem
+    \qmlmethod QPointF QtMultimedia5::VideoOutput::mapPointToItem(const QPointF &point) const
 
     Given a point \a point in item coordinates, return the
     corresponding point in source coordinates.  This mapping is
@@ -624,7 +624,7 @@ QPointF QDeclarativeVideoOutput::mapPointToSource(const QPointF &point) const
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapRectToSource
+    \qmlmethod QRectF QtMultimedia5::VideoOutput::mapRectToSource(const QRectF &rectangle) const
 
     Given a rectangle \a rectangle in item coordinates, return the
     corresponding rectangle in source coordinates.  This mapping is
@@ -642,7 +642,7 @@ QRectF QDeclarativeVideoOutput::mapRectToSource(const QRectF &rectangle) const
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapPointToItemNormalized
+    \qmlmethod QPointF QtMultimedia5::VideoOutput::mapPointToItemNormalized(const QPointF &point) const
 
     Given a point \a point in item coordinates, return the
     corresponding point in normalized source coordinates.  This mapping is
@@ -677,7 +677,7 @@ QPointF QDeclarativeVideoOutput::mapPointToSourceNormalized(const QPointF &point
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapRectToSourceNormalized
+    \qmlmethod QRectF QtMultimedia5::VideoOutput::mapRectToSourceNormalized(const QRectF &rectangle) const
 
     Given a rectangle \a rectangle in item coordinates, return the
     corresponding rectangle in normalized source coordinates.  This mapping is
@@ -695,7 +695,7 @@ QRectF QDeclarativeVideoOutput::mapRectToSourceNormalized(const QRectF &rectangl
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapPointToItem
+    \qmlmethod QPointF QtMultimedia5::VideoOutput::mapPointToItem(const QPointF &point) const
 
     Given a point \a point in source coordinates, return the
     corresponding point in item coordinates.  This mapping is
@@ -718,7 +718,7 @@ QPointF QDeclarativeVideoOutput::mapPointToItem(const QPointF &point) const
 }
 
 /*!
-    \qmlmethod QtMultimedia5::VideoOutput::mapRectToItem
+    \qmlmethod QRectF QtMultimedia5::VideoOutput::mapRectToItem(const QRectF &rectangle) const
 
     Given a rectangle \a rectangle in source coordinates, return the
     corresponding rectangle in item coordinates.  This mapping is
diff --git a/src/multimedia/controls/qcamerafocuscontrol.cpp b/src/multimedia/controls/qcamerafocuscontrol.cpp
index dffcc10..865072e 100644
--- a/src/multimedia/controls/qcamerafocuscontrol.cpp
+++ b/src/multimedia/controls/qcamerafocuscontrol.cpp
@@ -167,7 +167,7 @@ QCameraFocusControl::~QCameraFocusControl()
 */
 
 /*!
-  \fn QCameraFocusControl::focusModeChanged
+  \fn void QCameraFocusControl::focusModeChanged(QCameraFocus::FocusModes mode)
 
   Signal is emitted when the focus mode is chaged,
   usually in result of QCameraFocusControl::setFocusMode call or capture mode changes.
@@ -176,7 +176,7 @@ QCameraFocusControl::~QCameraFocusControl()
 */
 
 /*!
-  \fn QCameraFocusControl::focusPointModeChanged
+  \fn void QCameraFocusControl::focusPointModeChanged(QCameraFocus::FocusPointMode mode)
 
   Signal is emitted when the focus point mode is chaged,
   usually in result of QCameraFocusControl::setFocusPointMode call or capture mode changes.
@@ -185,7 +185,7 @@ QCameraFocusControl::~QCameraFocusControl()
 */
 
 /*!
-  \fn QCameraFocusControl::customFocusPointChanged
+  \fn void QCameraFocusControl::customFocusPointChanged(const QPointF &point)
 
   Signal is emitted when the custom focus point is changed.
 
diff --git a/src/multimedia/controls/qradiodatacontrol.cpp b/src/multimedia/controls/qradiodatacontrol.cpp
index 778c532..4d99702 100644
--- a/src/multimedia/controls/qradiodatacontrol.cpp
+++ b/src/multimedia/controls/qradiodatacontrol.cpp
@@ -112,31 +112,31 @@ QRadioDataControl::~QRadioDataControl()
 */
 
 /*!
-    \fn int QRadioDataControl::stationId()
+    \fn QString QRadioDataControl::stationId() const
 
     Returns the current Program Identification
 */
 
 /*!
-    \fn QRadioData::ProgramType QRadioDataControl::programType()
+    \fn QRadioData::ProgramType QRadioDataControl::programType() const
 
     Returns the current Program Type
 */
 
 /*!
-    \fn QString QRadioDataControl::programTypeName()
+    \fn QString QRadioDataControl::programTypeName() const
 
     Returns the current Program Type Name
 */
 
 /*!
-    \fn QString QRadioDataControl::stationName()
+    \fn QString QRadioDataControl::stationName() const
 
     Returns the current Program Service
 */
 
 /*!
-    \fn QString QRadioDataControl::radioText()
+    \fn QString QRadioDataControl::radioText() const
 
     Returns the current Radio Text
 */
@@ -148,7 +148,7 @@ QRadioDataControl::~QRadioDataControl()
 */
 
 /*!
-    \fn bool QRadioDataControl::isAlternativeFrequenciesEnabled()
+    \fn bool QRadioDataControl::isAlternativeFrequenciesEnabled() const
 
     Returns true if Alternative Frequency is currently enabled
 */
diff --git a/src/multimedia/recording/qmediarecorder.cpp b/src/multimedia/recording/qmediarecorder.cpp
index 51fe347..78d518b 100644
--- a/src/multimedia/recording/qmediarecorder.cpp
+++ b/src/multimedia/recording/qmediarecorder.cpp
@@ -887,7 +887,7 @@ void QMediaRecorder::stop()
 */
 
 /*!
-    \fn QMediaRecorder::availableChanged(bool available)
+    \fn QMediaRecorder::availabilityChanged(bool available)
 
     Signals that the media recorder is now available (if \a available is true), or not.
 */
diff --git a/src/multimediawidgets/qeglimagetexturesurface.cpp b/src/multimediawidgets/qeglimagetexturesurface.cpp
index 4b164dd..327be81 100644
--- a/src/multimediawidgets/qeglimagetexturesurface.cpp
+++ b/src/multimediawidgets/qeglimagetexturesurface.cpp
@@ -58,7 +58,7 @@ const QAbstractVideoBuffer::HandleType EGLImageTextureHandle =
 QAbstractVideoBuffer::HandleType(QAbstractVideoBuffer::UserHandle+3434);
 
 /*!
-    \class QOmapFbVideoSurface
+    \class QEglImageTextureSurface
     \internal
 */
 
@@ -491,7 +491,7 @@ void QEglImageTextureSurface::paint(QPainter *painter, const QRectF &target, con
 }
 
 /*!
-    \fn QOmapFbVideoSurface::frameChanged()
+    \fn QEglImageTextureSurface::frameChanged()
 */
 
 /*!
diff --git a/src/multimediawidgets/qvideowidget.cpp b/src/multimediawidgets/qvideowidget.cpp
index a82df21..6a557b3 100644
--- a/src/multimediawidgets/qvideowidget.cpp
+++ b/src/multimediawidgets/qvideowidget.cpp
@@ -1001,7 +1001,6 @@ void QVideoWidget::paintEvent(QPaintEvent *event)
 
 #if defined(Q_WS_WIN)
 /*!
-    \reimp
     \internal
 */
 bool QVideoWidget::winEvent(MSG *message, long *result)