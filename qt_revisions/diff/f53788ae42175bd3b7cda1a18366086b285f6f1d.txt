diff --git a/doc/src/multimediabackend.qdoc b/doc/src/multimediabackend.qdoc
index fffa121..2c359d0 100644
--- a/doc/src/multimediabackend.qdoc
+++ b/doc/src/multimediabackend.qdoc
@@ -53,13 +53,14 @@ this by implementing certain control and service classes, as detailed below.
 For the developer who wishes to extend the functionality of the Qt Multimedia
 classes there are several classes of particular importance. The classes
 providing default functionality are QMediaService, QMediaServiceProvider and
-QMediaControl.
+QMediaControl.  Some of these classes are not in the public API since they
+are very seldom useful to application developers.
 
-to extend the Multimedia API you would use the following three classes or
+To extend the Multimedia API you would use the following three classes or
 classes derived from them.
 
     \list
-    \li \l QMediaServiceProvider is used by the top level client class to
+    \li QMediaServiceProvider is used by the top level client class to
     request a service. The top level class knowing what kind of service it needs.
 
     \li \l QMediaService provides a service and when asked by the top level
@@ -89,6 +90,11 @@ for the interface.
 
 \section2 Adding a Media Service Provider
 
+In general, adding a new media service provider is outside the scope of this documentation.
+For best results, consult the existing provider source code, and seek assistance on the relevant
+mailing lists and IRC channels.
+
+\omit
 The base class for creating new service providers is \l{QMediaServiceProvider}.
 The user must implement the \l{QMediaServiceProvider::requestService()}{requestService()}
 function
@@ -123,6 +129,8 @@ Other methods that may be overloaded
 
 The choice of what needs to be done depends on what the developer wishes to do with the service.
 
+\endomit
+
 \section2 Classes for service implementers.
 
 \annotatedlist multimedia_control
diff --git a/src/imports/multimedia/qdeclarativeaudio.cpp b/src/imports/multimedia/qdeclarativeaudio.cpp
index 347a49f..9e09e27 100644
--- a/src/imports/multimedia/qdeclarativeaudio.cpp
+++ b/src/imports/multimedia/qdeclarativeaudio.cpp
@@ -1105,7 +1105,7 @@ void QDeclarativeAudio::_q_statusChanged()
 ///////////// MediaPlayer Docs /////////////
 
 /*!
-    \qmlclass MediaPlayer
+    \qmlclass MediaPlayer QDeclarativeAudio
     \brief The MediaPlayer type allows you to add media playback to a scene.
 
     \inqmlmodule QtMultimedia 5
diff --git a/src/imports/multimedia/qdeclarativecameracapture.cpp b/src/imports/multimedia/qdeclarativecameracapture.cpp
index 8c575c9..56987f7 100644
--- a/src/imports/multimedia/qdeclarativecameracapture.cpp
+++ b/src/imports/multimedia/qdeclarativecameracapture.cpp
@@ -131,7 +131,7 @@ QDeclarativeCameraCapture::~QDeclarativeCameraCapture()
     Indicates camera is ready to capture photo.
 
    It's permissible to call capture() while the camera is active
-   regardless of isReadyForCapture property value.
+   regardless of the \e ready property value.
    If camera is not ready to capture image immediately,
    the capture request is queued with all the related camera settings
    to be executed as soon as possible.
diff --git a/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp b/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp
index 385da40..ff32998 100644
--- a/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp
+++ b/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp
@@ -152,7 +152,7 @@ void QDeclarativeCameraImageProcessing::setManualWhiteBalance(qreal colorTemp) c
 }
 
 /*!
-    \qmlproperty int QtMultimedia5::CameraImageProcessing::contrast
+    \qmlproperty qreal QtMultimedia5::CameraImageProcessing::contrast
 
     Image contrast adjustment.
     Valid contrast adjustment values range between -1.0 and 1.0, with a default of 0.
@@ -171,7 +171,7 @@ void QDeclarativeCameraImageProcessing::setContrast(qreal value)
 }
 
 /*!
-    \qmlproperty int QtMultimedia5::CameraImageProcessing::saturation
+    \qmlproperty qreal QtMultimedia5::CameraImageProcessing::saturation
 
     Image saturation adjustment.
     Valid saturation adjustment values range between -1.0 and 1.0, the default is 0.
@@ -190,7 +190,7 @@ void QDeclarativeCameraImageProcessing::setSaturation(qreal value)
 }
 
 /*!
-    \qmlproperty int QtMultimedia5::CameraImageProcessing::sharpeningLevel
+    \qmlproperty qreal QtMultimedia5::CameraImageProcessing::sharpeningLevel
 
     Adjustment of sharpening level applied to image.
 
@@ -211,7 +211,7 @@ void QDeclarativeCameraImageProcessing::setSharpeningLevel(qreal value)
 }
 
 /*!
-    \qmlproperty int QtMultimedia5::CameraImageProcessing::denoisingLevel
+    \qmlproperty qreal QtMultimedia5::CameraImageProcessing::denoisingLevel
 
     Adjustment of denoising applied to image.
 
diff --git a/src/multimedia/audio/qaudiooutput.cpp b/src/multimedia/audio/qaudiooutput.cpp
index 685667e..4150e8c 100644
--- a/src/multimedia/audio/qaudiooutput.cpp
+++ b/src/multimedia/audio/qaudiooutput.cpp
@@ -379,7 +379,7 @@ QString QAudioOutput::category() const
 }
 
 /*!
-    Sets the audio category of this audio stream.
+    Sets the audio category of this audio stream to \a category.
 
     Some platforms can group audio streams into categories
     and manage their volumes independently, or display them
diff --git a/src/multimedia/controls/qmediarecordercontrol.cpp b/src/multimedia/controls/qmediarecordercontrol.cpp
index f7a486c..60414db 100644
--- a/src/multimedia/controls/qmediarecordercontrol.cpp
+++ b/src/multimedia/controls/qmediarecordercontrol.cpp
@@ -54,14 +54,14 @@ QT_BEGIN_NAMESPACE
     \brief The QMediaRecorderControl class provides access to the recording
     functionality of a QMediaService.
 
+    Generally you will use the QMediaRecorder class in application code - this
+    class is mostly used when implementing a new QMediaService or if there is
+    access to specific low level functionality not otherwise present in QMediaRecorder.
+
     If a QMediaService can record media it will implement QMediaRecorderControl.
     This control provides a means to set the \l {outputLocation()}{output location},
-    and \l {record()}{start}, \l {pause()}{pause} and \l {stop()}{stop}
-    recording.  It also provides feedback on the \l {duration()}{duration}
-    of the recording.
-
-    The functionality provided by this control is exposed to application
-    code through the QMediaRecorder class.
+    and record, pause and stop recording via the \l setState() method.  It also
+    provides feedback on the \l {duration()}{duration} of the recording.
 
     The interface name of QMediaRecorderControl is \c org.qt-project.qt.mediarecordercontrol/5.0 as
     defined in QMediaRecorderControl_iid.
diff --git a/src/multimedia/playback/qmediaplayer.cpp b/src/multimedia/playback/qmediaplayer.cpp
index 3b1b06b..067893e 100644
--- a/src/multimedia/playback/qmediaplayer.cpp
+++ b/src/multimedia/playback/qmediaplayer.cpp
@@ -83,7 +83,7 @@ QT_BEGIN_NAMESPACE
     functions for things like:
 
     \list
-    \li Accessing the currently playing media's metadata (\l {QMediaObject::metaData()} and \l predefined \l {QtMultimedia::MetaData}{meta-data keys})
+    \li Accessing the currently playing media's metadata (\l {QMediaObject::metaData()} and \l {QtMultimedia::MetaData}{predefined meta-data keys})
     \li Checking to see if the media playback service is currently available (\l {QMediaObject::availabilityError()})
     \endlist
 
diff --git a/src/multimedia/qmediaservice.cpp b/src/multimedia/qmediaservice.cpp
index 8ab2cb8..3488d08 100644
--- a/src/multimedia/qmediaservice.cpp
+++ b/src/multimedia/qmediaservice.cpp
@@ -76,9 +76,11 @@ QT_BEGIN_NAMESPACE
     Media objects can use services loaded dynamically from plug-ins or
     implemented statically within an applications.  Plug-in based services
     should also implement the QMediaServiceProviderPlugin interface.  Static
-    services should implement the QMediaServiceProvider interface.
+    services should implement the QMediaServiceProvider interface.  In general,
+    implementing a QMediaService is outside of the scope of this documentation
+    and support on the relevant mailing lists or IRC channels should be sought.
 
-    \sa QMediaObject, QMediaControl, QMediaServiceProvider, QMediaServiceProviderPlugin
+    \sa QMediaObject, QMediaControl
 */
 
 /*!
diff --git a/src/multimedia/recording/qmediaencodersettings.cpp b/src/multimedia/recording/qmediaencodersettings.cpp
index edb72b5..fa79e51 100644
--- a/src/multimedia/recording/qmediaencodersettings.cpp
+++ b/src/multimedia/recording/qmediaencodersettings.cpp
@@ -342,7 +342,7 @@ QVariantMap QAudioEncoderSettings::encodingOptions() const
 }
 
 /*!
-    Set the encoding \a option \a value.
+    Set the encoding \a option to \a value.
 
     The supported set and meaning of encoding options are
     system and selected codec specific.
@@ -359,12 +359,12 @@ void QAudioEncoderSettings::setEncodingOption(const QString &option, const QVari
 }
 
 /*!
-    Replace all the \a encoding options.
+    Replace all the encoding options with \a options.
 
     The supported set and meaning of encoding options are
     system and selected codec specific.
 
-    \sa encodingOption(), setEncodingOptions()
+    \sa encodingOption(), setEncodingOption()
 */
 void QAudioEncoderSettings::setEncodingOptions(const QVariantMap &options)
 {
@@ -687,12 +687,12 @@ void QVideoEncoderSettings::setEncodingOption(const QString &option, const QVari
 }
 
 /*!
-    Replace all the \a encoding options.
+    Replace all the encoding options with \a options.
 
     The supported set and meaning of encoding options are
     system and selected codec specific.
 
-    \sa encodingOption(), setEncodingOptions()
+    \sa encodingOption(), setEncodingOption()
 */
 void QVideoEncoderSettings::setEncodingOptions(const QVariantMap &options)
 {
@@ -932,12 +932,12 @@ void QImageEncoderSettings::setEncodingOption(const QString &option, const QVari
 }
 
 /*!
-    Replace all the \a encoding options.
+    Replace all the encoding options with \a options.
 
     The supported set and meaning of encoding options are
     system and selected codec specific.
 
-    \sa encodingOption(), setEncodingOptions()
+    \sa encodingOption(), setEncodingOption()
 */
 void QImageEncoderSettings::setEncodingOptions(const QVariantMap &options)
 {
diff --git a/src/multimediawidgets/qvideowidget.cpp b/src/multimediawidgets/qvideowidget.cpp
index 6a557b3..e798d63 100644
--- a/src/multimediawidgets/qvideowidget.cpp
+++ b/src/multimediawidgets/qvideowidget.cpp
@@ -739,7 +739,7 @@ void QVideoWidget::setFullScreen(bool fullScreen)
 
     Signals that the \a fullScreen mode of a video widget has changed.
 
-    \sa fullScreen
+    \sa fullScreen()
 */
 
 /*!
@@ -771,7 +771,7 @@ void QVideoWidget::setBrightness(int brightness)
 
     Signals that a video widgets's \a brightness adjustment has changed.
 
-    \sa brightness
+    \sa brightness()
 */
 
 /*!
@@ -804,7 +804,7 @@ void QVideoWidget::setContrast(int contrast)
 
     Signals that a video widgets's \a contrast adjustment has changed.
 
-    \sa contrast
+    \sa contrast()
 */
 
 /*!
@@ -836,7 +836,7 @@ void QVideoWidget::setHue(int hue)
 
     Signals that a video widgets's \a hue has changed.
 
-    \sa hue
+    \sa hue()
 */
 
 /*!
@@ -869,7 +869,7 @@ void QVideoWidget::setSaturation(int saturation)
 
     Signals that a video widgets's \a saturation has changed.
 
-    \sa saturation
+    \sa saturation()
 */
 
 /*!
@@ -889,6 +889,7 @@ QSize QVideoWidget::sizeHint() const
 }
 
 /*!
+  \reimp
   Current event \a event.
   Returns the value of the baseclass QWidget::event(QEvent *event) function.
 */
@@ -922,6 +923,7 @@ bool QVideoWidget::event(QEvent *event)
 }
 
 /*!
+  \reimp
   Handles the show \a event.
  */
 void QVideoWidget::showEvent(QShowEvent *event)
@@ -945,7 +947,7 @@ void QVideoWidget::showEvent(QShowEvent *event)
 }
 
 /*!
-
+  \reimp
   Handles the hide \a event.
 */
 void QVideoWidget::hideEvent(QHideEvent *event)
@@ -959,6 +961,7 @@ void QVideoWidget::hideEvent(QHideEvent *event)
 }
 
 /*!
+  \reimp
   Handles the resize \a event.
  */
 void QVideoWidget::resizeEvent(QResizeEvent *event)
@@ -972,6 +975,7 @@ void QVideoWidget::resizeEvent(QResizeEvent *event)
 }
 
 /*!
+  \reimp
   Handles the move \a event.
  */
 void QVideoWidget::moveEvent(QMoveEvent *event)
@@ -983,6 +987,7 @@ void QVideoWidget::moveEvent(QMoveEvent *event)
 }
 
 /*!
+  \reimp
   Handles the paint \a event.
  */
 void QVideoWidget::paintEvent(QPaintEvent *event)