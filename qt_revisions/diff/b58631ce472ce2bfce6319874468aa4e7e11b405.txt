diff --git a/src/widgets/itemviews/qlistwidget.cpp b/src/widgets/itemviews/qlistwidget.cpp
index 97fbea6..bb39546 100644
--- a/src/widgets/itemviews/qlistwidget.cpp
+++ b/src/widgets/itemviews/qlistwidget.cpp
@@ -75,6 +75,7 @@ QListModel::~QListModel()
 
 void QListModel::clear()
 {
+    beginResetModel();
     for (int i = 0; i < items.count(); ++i) {
         if (items.at(i)) {
             items.at(i)->d->theid = -1;
@@ -83,7 +84,7 @@ void QListModel::clear()
         }
     }
     items.clear();
-    reset();
+    endResetModel();
 }
 
 QListWidgetItem *QListModel::at(int row) const
diff --git a/src/widgets/itemviews/qstandarditemmodel.cpp b/src/widgets/itemviews/qstandarditemmodel.cpp
index 112b533..5616d76 100644
--- a/src/widgets/itemviews/qstandarditemmodel.cpp
+++ b/src/widgets/itemviews/qstandarditemmodel.cpp
@@ -2097,13 +2097,14 @@ void QStandardItemModel::setItemRoleNames(const QHash<int,QByteArray> &roleNames
 void QStandardItemModel::clear()
 {
     Q_D(QStandardItemModel);
+    beginResetModel();
     d->root.reset(new QStandardItem);
     d->root->d_func()->setModel(this);
     qDeleteAll(d->columnHeaderItems);
     d->columnHeaderItems.clear();
     qDeleteAll(d->rowHeaderItems);
     d->rowHeaderItems.clear();
-    reset();
+    endResetModel();
 }
 
 /*!
diff --git a/src/widgets/itemviews/qtablewidget.cpp b/src/widgets/itemviews/qtablewidget.cpp
index 82055ad..5932f20 100644
--- a/src/widgets/itemviews/qtablewidget.cpp
+++ b/src/widgets/itemviews/qtablewidget.cpp
@@ -755,6 +755,7 @@ void QTableModel::clear()
 
 void QTableModel::clearContents()
 {
+    beginResetModel();
     for (int i = 0; i < tableItems.count(); ++i) {
         if (tableItems.at(i)) {
             tableItems.at(i)->view = 0;
@@ -762,7 +763,7 @@ void QTableModel::clearContents()
             tableItems[i] = 0;
         }
     }
-    reset();
+    endResetModel();
 }
 
 void QTableModel::itemChanged(QTableWidgetItem *item)
diff --git a/src/widgets/itemviews/qtreewidget.cpp b/src/widgets/itemviews/qtreewidget.cpp
index ca8b9c4..cec709a 100644
--- a/src/widgets/itemviews/qtreewidget.cpp
+++ b/src/widgets/itemviews/qtreewidget.cpp
@@ -160,6 +160,7 @@ QTreeModel::~QTreeModel()
 void QTreeModel::clear()
 {
     SkipSorting skipSorting(this);
+    beginResetModel();
     for (int i = 0; i < rootItem->childCount(); ++i) {
         QTreeWidgetItem *item = rootItem->children.at(i);
         item->par = 0;
@@ -168,7 +169,7 @@ void QTreeModel::clear()
     }
     rootItem->children.clear();
     sortPendingTimer.stop();
-    reset();
+    endResetModel();
 }
 
 /*!
diff --git a/src/widgets/util/qcompleter.cpp b/src/widgets/util/qcompleter.cpp
index 503e5aa..d416f26 100644
--- a/src/widgets/util/qcompleter.cpp
+++ b/src/widgets/util/qcompleter.cpp
@@ -421,7 +421,8 @@ void QCompletionModel::filter(const QStringList& parts)
 void QCompletionModel::resetModel()
 {
     if (rowCount() == 0) {
-        reset();
+        beginResetModel();
+        endResetModel();
         return;
     }
 
diff --git a/src/widgets/util/qundoview.cpp b/src/widgets/util/qundoview.cpp
index 4b09d5f..a87e9e0 100644
--- a/src/widgets/util/qundoview.cpp
+++ b/src/widgets/util/qundoview.cpp
@@ -142,7 +142,8 @@ void QUndoModel::stackDestroyed(QObject *obj)
 
 void QUndoModel::stackChanged()
 {
-    reset();
+    beginResetModel();
+    endResetModel();
     m_sel_model->setCurrentIndex(selectedIndex(), QItemSelectionModel::ClearAndSelect);
 }