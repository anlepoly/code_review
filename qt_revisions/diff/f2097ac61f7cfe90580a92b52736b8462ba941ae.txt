diff --git a/doc/config/modules/qtcore.qdocconf b/doc/config/modules/qtcore.qdocconf
index 3225dfa..ca598bf 100644
--- a/doc/config/modules/qtcore.qdocconf
+++ b/doc/config/modules/qtcore.qdocconf
@@ -9,12 +9,25 @@ exampledirs += $QT_CORE_SOURCES/../.. \
                $QT_CORE_SOURCES/../../doc/src \
                $QT_CORE_SOURCES/../../examples \
                $QT_CORE_SOURCES/doc/snippets \
+               $QT_CORE_SOURCES/../concurrent/doc/snippets \
+               $QT_CORE_SOURCES/../dbus/doc/snippets \
+               $QT_CORE_SOURCES/../gui/doc/snippets \
+               $QT_CORE_SOURCES/../network/doc/snippets \
+               $QT_CORE_SOURCES/../opengl/doc/snippets \
+               $QT_CORE_SOURCES/../printsupport/doc/snippets \
                $QT_CORE_SOURCES/../sql/doc/snippets \
+               $QT_CORE_SOURCES/../testlib/doc/snippets \
+               $QT_CORE_SOURCES/../widgets/doc/snippets \
                $QT_CORE_SOURCES/../xml/doc/snippets
 
 imagedirs   += $QT_CORE_SOURCES/../../doc/src/images \
                $QT_CORE_SOURCES/../../examples \
-               $QT_CORE_SOURCES/doc/images
+               $QT_CORE_SOURCES/doc/images \
+               $QT_CORE_SOURCES/../concurrent/doc/images \
+               $QT_CORE_SOURCES/../gui/doc/images \
+               $QT_CORE_SOURCES/../printsupport/doc/images \
+               $QT_CORE_SOURCES/../sql/doc/images \
+               $QT_CORE_SOURCES/../widgets/doc/images
 
 excludedirs += $QT_CORE_SOURCES/../3rdparty/ce-compat \
                $QT_CORE_SOURCES/../3rdparty/des \
diff --git a/doc/src/development/qtestlib.qdoc b/doc/src/development/qtestlib.qdoc
deleted file mode 100644
index b0a3d4c..0000000
--- a/doc/src/development/qtestlib.qdoc
+++ /dev/null
@@ -1,840 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:FDL$
-** GNU Free Documentation License
-** Alternatively, this file may be used under the terms of the GNU Free
-** Documentation License version 1.3 as published by the Free Software
-** Foundation and appearing in the file included in the packaging of
-** this file.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms
-** and conditions contained in a signed written agreement between you
-** and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*!
-    \page qtestlib-manual.html
-    \title QTestLib Manual
-    \brief An overview of Qt's unit testing framework.
-
-    \ingroup frameworks-technologies
-    \ingroup qt-basic-concepts
-
-    \keyword qtestlib
-
-    The QTestLib framework, provided by Nokia, is a tool for unit
-    testing Qt based applications and libraries. QTestLib provides
-    all the functionality commonly found in unit testing frameworks as
-    well as extensions for testing graphical user interfaces.
-
-    \section1 QTestLib Features
-
-    QTestLib is designed to ease the writing of unit tests for Qt
-    based applications and libraries:
-
-    \table
-    \header \li Feature \li Details
-    \row
-        \li \b Lightweight
-        \li QTestLib consists of about 6000 lines of code and 60
-           exported symbols.
-    \row
-        \li \b Self-contained
-        \li QTestLib requires only a few symbols from the Qt Core library
-           for non-gui testing.
-    \row
-        \li \b {Rapid testing}
-        \li QTestLib needs no special test-runners; no special
-           registration for tests.
-    \row
-        \li \b {Data-driven testing}
-        \li A test can be executed multiple times with different test data.
-    \row
-        \li \b {Basic GUI testing}
-        \li QTestLib offers functionality for mouse and keyboard simulation.
-    \row
-        \li \b {Benchmarking}
-        \li QTestLib supports benchmarking and provides several measurement back-ends.
-    \row
-         \li \b {IDE friendly}
-         \li QTestLib outputs messages that can be interpreted by Visual
-            Studio and KDevelop.
-    \row
-         \li \b Thread-safety
-         \li The error reporting is thread safe and atomic.
-    \row
-         \li \b Type-safety
-         \li Extensive use of templates prevent errors introduced by
-            implicit type casting.
-    \row
-         \li \b {Easily extendable}
-         \li Custom types can easily be added to the test data and test output.
-    \endtable
-
-    \note For higher-level GUI and application testing needs, please
-    see the \l{Partner Directory} for Qt testing products provided by
-    Nokia partners.
-
-
-    \section1 QTestLib API
-
-    All public methods are in the \l QTest namespace. In addition, the
-    \l QSignalSpy class provides easy introspection for Qt's signals and slots.
-
-
-    \section1 Using QTestLib
-
-    \section2 Creating a Test
-
-    To create a test, subclass QObject and add one or more private slots to it. Each
-    private slot is a testfunction in your test. QTest::qExec() can be used to execute
-    all testfunctions in the test object.
-
-    In addition, there are four private slots that are \e not treated as testfunctions.
-    They will be executed by the testing framework and can be used to initialize and
-    clean up either the entire test or the current test function.
-
-    \list
-    \li \c{initTestCase()} will be called before the first testfunction is executed.
-    \li \c{cleanupTestCase()} will be called after the last testfunction was executed.
-    \li \c{init()} will be called before each testfunction is executed.
-    \li \c{cleanup()} will be called after every testfunction.
-    \endlist
-
-    If \c{initTestCase()} fails, no testfunction will be executed. If \c{init()} fails,
-    the following testfunction will not be executed, the test will proceed to the next
-    testfunction.
-
-    Example:
-    \snippet doc/src/snippets/code/doc_src_qtestlib.cpp 0
-
-    For more examples, refer to the \l{QTestLib Tutorial}.
-
-    \section2 Building a Test
-
-    If you are using \c qmake as your build tool, just add the
-    following to your project file:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.pro 1
-
-    If you would like to run the test via \c{make check}, add the
-    additional line:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.pro 2
-
-    See \l{qmake Common Projects#building-a-testcase}{the qmake manual} for
-    more information about \c{make check}.
-
-    If you are using other build tools, make sure that you add the location
-    of the QTestLib header files to your include path (usually \c{include/QtTest}
-    under your Qt installation directory). If you are using a release build
-    of Qt, link your test to the \c QtTest library. For debug builds, use
-    \c{QtTest_debug}.
-
-    See \l {Chapter 1: Writing a Unit Test}{Writing a Unit Test} for a step by
-    step explanation.
-
-    \section2 QTestLib Command Line Arguments
-
-    \section3 Syntax
-
-    The syntax to execute an autotest takes the following simple form:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 2
-
-    Substitute \c testname with the name of your executable. \c
-    testfunctions can contain names of test functions to be
-    executed. If no \c testfunctions are passed, all tests are run. If you
-    append the name of an entry in \c testdata, the test function will be
-    run only with that test data.
-
-    For example:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 3
-
-    Runs the test function called \c toUpper with all available test data.
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 4
-
-    Runs the \c toUpper test function with all available test data,
-    and the \c toInt test function with the testdata called \c
-    zero (if the specified test data doesn't exist, the associated test
-    will fail).
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 5
-
-    Runs the testMyWidget function test, outputs every signal
-    emission and waits 500 milliseconds after each simulated
-    mouse/keyboard event.
-
-    \section3 Options
-
-    \section4 Logging Options
-
-    The following command line options determine how test results are reported:
-
-    \list
-    \li \c -o \e{filename,format} \BR
-    write output to the specified file, in the specified format (one of
-    \c txt, \c xml, \c lightxml or \c xunitxml).  The special filename \c -
-    may be used to log to standard output.
-    \li \c -o \e filename \BR
-    write output to the specified file.
-    \li \c -txt \BR
-    outputs results in plain text.
-    \li \c -xml \BR
-    outputs results as an XML document.
-    \li \c -lightxml \BR
-    outputs results as a stream of XML tags.
-    \li \c -xunitxml \BR
-    outputs results as an Xunit XML document.
-    \endlist
-
-    The first version of the \c -o option may be repeated in order to log
-    test results in multiple formats, but no more than one instance of this
-    option can log test results to standard output.
-
-    If the first version of the \c -o option is used, neither the second version
-    of the \c -o option nor the \c -txt, \c -xml, \c -lightxml or \c -xunitxml
-    options should be used.
-
-    If neither version of the \c -o option is used, test results will be logged to
-    standard output.  If no format option is used, test results will be logged in
-    plain text.
-
-    \section4 Test Log Detail Options
-
-    The following command line options control how much detail is reported
-    in test logs:
-
-    \list
-    \li \c -silent \BR
-    silent output, only shows fatal errors, test failures and minimal status messages.
-    \li \c -v1 \BR
-    verbose output; shows when each test function is entered.
-    (This option only affects plain text output.)
-    \li \c -v2 \BR
-    extended verbose output; shows each \l QCOMPARE() and \l QVERIFY().
-    (This option affects all output formats and implies \c -v1 for plain text output.)
-    \li \c -vs \BR
-    shows every signal that gets emitted and the slot invocations resulting from those signals.
-    (This option affects all output formats.)
-    \endlist
-
-    \section4 Testing Options
-
-    The following command-line options influence how tests are run:
-
-    \list
-    \li \c -functions \BR
-    outputs all test functions available in the test, then quits.
-    \li \c -datatags \BR
-    outputs all data tags available in the test.
-    A global data tag is preceded by ' __global__ '.
-    \li \c -eventdelay \e ms \BR
-    if no delay is specified for keyboard or mouse simulation
-    (\l QTest::keyClick(),
-    \l QTest::mouseClick() etc.), the value from this parameter
-    (in milliseconds) is substituted.
-    \li \c -keydelay \e ms \BR
-    like -eventdelay, but only influences keyboard simulation and not mouse
-    simulation.
-    \li \c -mousedelay \e ms \BR
-    like -eventdelay, but only influences mouse simulation and not keyboard
-    simulation.
-    \li \c -maxwarnings \e number\BR
-    sets the maximum number of warnings to output. 0 for unlimited, defaults to 2000.
-    \li \c -nocrashhandler \BR
-    disables the crash handler on Unix platforms.
-    \endlist
-
-    \section4 Benchmarking Options
-
-    The following command line options control benchmark testing:
-
-    \list
-    \li \c -callgrind \BR
-    use callgrind to time benchmarks (Linux only).
-    \li \c -tickcounter \BR
-    use CPU tick counters to time benchmarks.
-    \li \c -eventcounter \BR
-    counts events received during benchmarks.
-    \li \c -minimumvalue \e n \BR
-    sets the minimum acceptable measurement value.
-    \li \c -iterations \e n \BR
-    sets the number of accumulation iterations.
-    \li \c -median \e n \BR
-    sets the number of median iterations.
-    \li \c -vb \BR
-    output verbose benchmarking information.
-    \endlist
-
-    \section4 Miscellaneous Options
-
-    \list
-    \li \c -help \BR
-    outputs the possible command line arguments and give some useful help.
-    \endlist
-
-    \section2 Creating a Benchmark
-
-    To create a benchmark, follow the instructions for creating a test and then add a
-    QBENCHMARK macro to the test function that you want to benchmark.
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.cpp 12
-
-    The code inside the QBENCHMARK macro will be measured, and possibly also repeated
-    several times in order to get an accurate measurement. This depends on the selected
-    measurement back-end. Several back-ends are available. They can be selected on the
-    command line:
-
-    \target testlib-benchmarking-measurement
-
-    \table
-    \header \li Name
-         \li Commmand-line Argument
-         \li Availability
-    \row \li Walltime
-         \li (default)
-         \li All platforms
-    \row \li CPU tick counter
-         \li -tickcounter
-         \li Windows, Mac OS X, Linux, many UNIX-like systems.
-    \row \li Valgrind/Callgrind
-         \li -callgrind
-         \li Linux (if installed)
-    \row \li Event Counter
-         \li -eventcounter
-         \li All platforms
-    \endtable
-
-    In short, walltime is always available but requires many repetitions to
-    get a useful result.
-    Tick counters are usually available and can provide
-    results with fewer repetitions, but can be susceptible to CPU frequency
-    scaling issues.
-    Valgrind provides exact results, but does not take
-    I/O waits into account, and is only available on a limited number of
-    platforms.
-    Event counting is available on all platforms and it provides the number of events
-    that were received by the event loop before they are sent to their corresponding
-    targets (this might include non-Qt events).
-
-    \note Depending on the device configuration, Tick counters on the
-     Windows CE platform may not be as fine-grained, compared to other platforms.
-     Devices that do not support high-resolution timers default to
-     one-millisecond granularity.
-
-    See the chapter 5 in the \l{QTestLib Tutorial} for more benchmarking examples.
-
-    \section1 Using QTestLib remotely on Windows CE
-    \c cetest is a convenience application which helps the user to launch an
-    application remotely on a Windows CE device or emulator.
-
-    It needs to be executed after the unit test has been successfully compiled.
-
-    Prior to launching, the following files are copied to the device:
-
-    \list
-    \li all Qt libraries the project links to
-    \li \l {QtRemote}{QtRemote.dll}
-    \li the c runtime library specified during installation
-    \li all files specified in the \c .pro file following the \l DEPLOYMENT rules.
-    \endlist
-
-    \section2 Using \c cetest
-    \section3 Syntax
-    The syntax to execute an autotest takes the following simple form:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 6
-
-    \section3 Options
-    \c cetest provides the same options as those for unit-testing on non cross-compiled
-    platforms. See \l {QTestLib Command Line Arguments} {Command Line Arguments} for
-    more information.
-
-    The following commands are also included:
-
-    \list
-    \li \c -debug \BR
-    Test version compiled in debug mode.
-    \li \c -release \BR
-    Test version compiled in release mode.
-    \li \c -libpath \e path \BR
-    Target path to copy Qt libraries to.
-    \li \c -qt-delete \BR
-    Delete Qt libraries after execution.
-    \li \c -project-delete \BR
-    Delete project files after execution.
-    \li \c -delete \BR
-    Delete project and Qt libraries after execution.
-    \li \c -conf \BR
-    Specifies a qt.conf file to be deployed to remote directory.
-    \endlist
-
-    \note \c{debug} is the default build option.
-
-    \section2 QtRemote
-    \c QtRemote is a small library which is build after QTestLib. It allows the host
-    system to create a process on a remote device and waits until its execution has
-    been finished.
-
-    \section2 Requirements
-    \c cetest uses Microsoft ActiveSync to establish a remote connection between the
-    host computer and the device. Thus header files and libraries are needed to compile
-    cetest and QtRemote successfully.
-
-    Prior to \l{Installing Qt for Windows CE}{installation} of Qt, you need to set your
-    \c INCLUDE and \c LIB environment variables properly.
-
-    A default installation of Windows Mobile 5 for Pocket PC can be obtained by:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 7
-
-    Note that Qt will remember the path, so you do not need to set it again
-    after switching the environments for cross-compilation.
-
-    \section1 3rd Party Code
-
-    The CPU tick counters used for benchmarking is licensed under the following
-    license: (from src/testlib/3rdparty/cycle.h)
-
-    \legalese
-    Copyright (c) 2003, 2006 Matteo Frigo\br
-    Copyright (c) 2003, 2006 Massachusetts Institute of Technology
-
-    Permission is hereby granted, free of charge, to any person obtaining
-    a copy of this software and associated documentation files (the
-    "Software"), to deal in the Software without restriction, including
-    without limitation the rights to use, copy, modify, merge, publish,
-    distribute, sublicense, and/or sell copies of the Software, and to
-    permit persons to whom the Software is furnished to do so, subject to
-    the following conditions:
-
-    The above copyright notice and this permission notice shall be
-    included in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-    \endlegalese
-*/
-
-/*!
-    \page qtestlib-tutorial.html
-    \brief A short introduction to testing with QTestLib.
-    \contentspage QTestLib Manual
-    \nextpage {Chapter 1: Writing a Unit Test}{Chapter 1}
-    \ingroup best-practices
-
-    \title QTestLib Tutorial
-
-    This tutorial gives a short introduction to how to use some of the
-    features of the QTestLib framework. It is divided into five
-    chapters:
-
-    \list 1
-    \li \l {Chapter 1: Writing a Unit Test}{Writing a Unit Test}
-    \li \l {Chapter 2: Data Driven Testing}{Data Driven Testing}
-    \li \l {Chapter 3: Simulating GUI Events}{Simulating GUI Events}
-    \li \l {Chapter 4: Replaying GUI Events}{Replaying GUI Events}
-    \li \l {Chapter 5: Writing a Benchmark}{Writing a Benchmark}
-    \endlist
-
-*/
-
-
-/*!
-    \example qtestlib/tutorial1
-
-    \contentspage {QTestLib Tutorial}{Contents}
-    \nextpage {Chapter 2: Data Driven Testing}{Chapter 2}
-
-    \title Chapter 1: Writing a Unit Test
-
-    In this first chapter we will see how to write a simple unit test
-    for a class, and how to execute it.
-
-    \section1 Writing a Test
-
-    Let's assume you want to test the behavior of our QString class.
-    First, you need a class that contains your test functions. This class
-    has to inherit from QObject:
-
-    \snippet examples/qtestlib/tutorial1/testqstring.cpp 0
-
-    Note that you need to include the QTest header, and that the
-    test functions have to be declared as private slots so the
-    test framework finds and executes it.
-
-    Then you need to implement the test function itself. The
-    implementation could look like this:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.cpp 8
-
-    The \l QVERIFY() macro evaluates the expression passed as its
-    argument. If the expression evaluates to true, the execution of
-    the test function continues. Otherwise, a message describing the
-    failure is appended to the test log, and the test function stops
-    executing.
-
-    But if you want a more verbose output to the test log, you should
-    use the \l QCOMPARE() macro instead:
-
-    \snippet examples/qtestlib/tutorial1/testqstring.cpp 1
-
-    If the strings are not equal, the contents of both strings is
-    appended to the test log, making it immediately visible why the
-    comparison failed.
-
-    Finally, to make our test case a stand-alone executable, the
-    following two lines are needed:
-
-    \snippet examples/qtestlib/tutorial1/testqstring.cpp 2
-
-    The \l QTEST_MAIN() macro expands to a simple \c main()
-    method that runs all the test functions. Note that if both the
-    declaration and the implementation of our test class are in a \c
-    .cpp file, we also need to include the generated moc file to make
-    Qt's introspection work.
-
-    \section1 Executing a Test
-
-    Now that we finished writing our test, we want to execute
-    it. Assuming that our test was saved as \c testqstring.cpp in an
-    empty directory: we build the test using qmake to create a project
-    and generate a makefile.
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 9
-
-    \b {Note:}If you're using windows, replace \c make with \c
-    nmake or whatever build tool you use.
-
-    Running the resulting executable should give you the following
-    output:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.qdoc 10
-
-    Congratulations! You just wrote and executed your first unit test
-    using the QTestLib framework.
-*/
-
-/*!
-    \example qtestlib/tutorial2
-
-    \previouspage {Chapter 1: Writing a Unit Test}{Chapter 1}
-    \contentspage {QTestLib Tutorial}{Contents}
-    \nextpage {Chapter 3: Simulating Gui Events}{Chapter 3}
-
-    \title Chapter 2: Data Driven Testing
-
-    In this chapter we will demonstrate how to execute a test
-    multiple times with different test data.
-
-    So far, we have hard coded the data we wanted to test into our
-    test function. If we add more test data, the function might look like
-    this:
-
-    \snippet doc/src/snippets/code/doc_src_qtestlib.cpp 11
-
-    To prevent that the function ends up being cluttered by repetitive
-    code, QTestLib supports adding test data to a test function. All
-    we need is to add another private slot to our test class:
-
-    \snippet examples/qtestlib/tutorial2/testqstring.cpp 0
-
-    \section1 Writing the Data Function
-
-    A test function's associated data function carries the same name,
-    appended by \c{_data}. Our data function looks like this:
-
-    \snippet examples/qtestlib/tutorial2/testqstring.cpp 1
-
-    First, we define the two elements of our test table using the \l
-    QTest::addColumn() function: A test string, and the
-    expected result of applying the QString::toUpper() function to
-    that string.
-
-    Then we add some data to the table using the \l
-    QTest::newRow() function. Each set of data will become a
-    separate row in the test table.
-
-    \l QTest::newRow() takes one argument: A name that will be
-    associated with the data set. If the test fails, the name will be
-    used in the test log, referencing the failed data. Then we
-    stream the data set into the new table row: First an arbitrary
-    string, and then the expected result of applying the
-    QString::toUpper() function to that string.
-
-    You can think of the test data as a two-dimensional table. In
-    our case, it has two columns called \c string and \c result and
-    three rows. In addition a name as well as an index is associated
-    with each row:
-
-    \table
-    \header
-        \li index
-        \li name
-        \li string
-        \li result
-    \row
-        \li 0
-        \li all lower
-        \li "hello"
-        \li HELLO
-    \row
-        \li 1
-        \li mixed
-        \li "Hello"
-        \li HELLO
-    \row
-        \li 2
-        \li all upper
-        \li "HELLO"
-        \li HELLO
-    \endtable
-
-    \section1 Rewriting the Test Function
-
-    Our test function can now be rewritten:
-
-    \snippet examples/qtestlib/tutorial2/testqstring.cpp 2
-
-    The TestQString::toUpper() function will be executed three times,
-    once for each entry in the test table that we created in the
-    associated TestQString::toUpper_data() function.
-
-    First, we fetch the two elements of the data set using the \l
-    QFETCH() macro. \l QFETCH() takes two arguments: The data type of
-    the element and the element name. Then we perform the test using
-    the \l QCOMPARE() macro.
-
-    This approach makes it very easy to add new data to the test
-    without modifying the test itself.
-
-    And again, to make our test case a stand-alone executable,
-    the following two lines are needed:
-
-    \snippet examples/qtestlib/tutorial2/testqstring.cpp 3
-
-    As before, the QTEST_MAIN() macro expands to a simple main()
-    method that runs all the test functions, and since both the
-    declaration and the implementation of our test class are in a .cpp
-    file, we also need to include the generated moc file to make Qt's
-    introspection work.
-*/
-
-/*!
-    \example qtestlib/tutorial3
-
-    \previouspage {Chapter 2: Data Driven Testing}{Chapter 2}
-    \contentspage {QTestLib Tutorial}{Contents}
-    \nextpage {Chapter 4: Replaying GUI Events}{Chapter 4}
-
-    \title Chapter 3: Simulating GUI Events
-
-    QTestLib features some mechanisms to test graphical user
-    interfaces. Instead of simulating native window system events,
-    QTestLib sends internal Qt events. That means there are no
-    side-effects on the machine the tests are running on.
-
-    In this chapter we will se how to write a simple GUI test.
-
-    \section1 Writing a GUI test
-
-    This time, let's assume you want to test the behavior of our
-    QLineEdit class. As before, you will need a class that contains
-    your test function:
-
-    \snippet examples/qtestlib/tutorial3/testgui.cpp 0
-
-    The only difference is that you need to include the QtGui class
-    definitions in addition to the QTest namespace.
-
-    \snippet examples/qtestlib/tutorial3/testgui.cpp 1
-
-    In the implementation of the test function we first create a
-    QLineEdit. Then we simulate writing "hello world" in the line edit
-    using the \l QTest::keyClicks() function.
-
-    \note The widget must also be shown in order to correctly test keyboard
-    shortcuts.
-
-    QTest::keyClicks() simulates clicking a sequence of keys on a
-    widget. Optionally, a keyboard modifier can be specified as well
-    as a delay (in milliseconds) of the test after each key click. In
-    a similar way, you can use the QTest::keyClick(),
-    QTest::keyPress(), QTest::keyRelease(), QTest::mouseClick(),
-    QTest::mouseDClick(), QTest::mouseMove(), QTest::mousePress()
-    and QTest::mouseRelease() functions to simulate the associated
-    GUI events.
-
-    Finally, we use the \l QCOMPARE() macro to check if the line edit's
-    text is as expected.
-
-    As before, to make our test case a stand-alone executable, the
-    following two lines are needed:
-
-    \snippet examples/qtestlib/tutorial3/testgui.cpp 2
-
-    The QTEST_MAIN() macro expands to a simple main() method that
-    runs all the test functions, and since both the declaration and
-    the implementation of our test class are in a .cpp file, we also
-    need to include the generated moc file to make Qt's introspection
-    work.
-*/
-
-/*!
-    \example qtestlib/tutorial4
-
-    \previouspage {Chapter 3: Simulating GUI Event}{Chapter 3}
-    \contentspage {QTestLib Tutorial}{Contents}
-    \nextpage {Chapter 5: Writing a Benchmark}{Chapter 5}
-
-    \title Chapter 4: Replaying GUI Events
-
-    In this chapter, we will show how to simulate a GUI event,
-    and how to store a series of GUI events as well as replay them on
-    a widget.
-
-    The approach to storing a series of events and replay them, is
-    quite similar to the approach explained in \l {Chapter 2:
-    Data Driven Testing}{chapter 2}; all you need is to add a data
-    function to your test class:
-
-    \snippet examples/qtestlib/tutorial4/testgui.cpp 0
-
-    \section1 Writing the Data Function
-
-    As before, a test function's associated data function carries the
-    same name, appended by \c{_data}.
-
-    \snippet examples/qtestlib/tutorial4/testgui.cpp 1
-
-    First, we define the elements of the table using the
-    QTest::addColumn() function: A list of GUI events, and the
-    expected result of applying the list of events on a QWidget. Note
-    that the type of the first element is \l QTestEventList.
-
-    A QTestEventList can be populated with GUI events that can be
-    stored as test data for later usage, or be replayed on any
-    QWidget.
-
-    In our current data function, we create two \l
-    {QTestEventList}s. The first list consists of a single click to
-    the 'a' key. We add the event to the list using the
-    QTestEventList::addKeyClick() function. Then we use the
-    QTest::newRow() function to give the data set a name, and
-    stream the event list and the expected result into the table.
-
-    The second list consists of two key clicks: an 'a' with a
-    following 'backspace'. Again we use the
-    QTestEventList::addKeyClick() to add the events to the list, and
-    QTest::newRow() to put the event list and the expected
-    result into the table with an associated name.
-
-    \section1 Rewriting the Test Function
-
-    Our test can now be rewritten:
-
-    \snippet examples/qtestlib/tutorial4/testgui.cpp 2
-
-    The TestGui::testGui() function will be executed two times,
-    once for each entry in the test data that we created in the
-    associated TestGui::testGui_data() function.
-
-    First, we fetch the two elements of the data set using the \l
-    QFETCH() macro. \l QFETCH() takes two arguments: The data type of
-    the element and the element name. Then we create a QLineEdit, and
-    apply the list of events on that widget using the
-    QTestEventList::simulate() function.
-
-    Finally, we use the QCOMPARE() macro to check if the line edit's
-    text is as expected.
-
-    As before, to make our test case a stand-alone executable,
-    the following two lines are needed:
-
-    \snippet examples/qtestlib/tutorial4/testgui.cpp 3
-
-    The QTEST_MAIN() macro expands to a simple main() method that
-    runs all the test functions, and since both the declaration and
-    the implementation of our test class are in a .cpp file, we also
-    need to include the generated moc file to make Qt's introspection
-    work.
-*/
-
-/*!
-    \example qtestlib/tutorial5
-
-    \previouspage {Chapter 4: Replaying GUI Events}{Chapter 4}
-    \contentspage {QTestLib Tutorial}{Contents}
-
-    \title Chapter 5: Writing a Benchmark
-
-    In this final chapter we will demonstrate how to write benchmarks
-    using QTestLib.
-
-    \section1 Writing a Benchmark
-    To create a benchmark we extend a test function with a QBENCHMARK macro.
-    A benchmark test function will then typically consist of setup code and
-    a QBENCHMARK macro that contains the code to be measured. This test
-    function benchmarks QString::localeAwareCompare().
-
-    \snippet examples/qtestlib/tutorial5/benchmarking.cpp 0
-
-    Setup can be done at the beginning of the function, the clock is not
-    running at this point. The code inside the QBENCHMARK macro will be
-    measured, and possibly repeated several times in order to  get an
-    accurate measurement.
-
-    Several \l {testlib-benchmarking-measurement}{back-ends} are available
-    and can be selected on the command line.
-
-    \section1 Data Functions
-
-    Data functions are useful for creating benchmarks that compare
-    multiple data inputs, for example locale aware compare against standard
-    compare.
-
-    \snippet examples/qtestlib/tutorial5/benchmarking.cpp 1
-
-    The test function then uses the data to determine what to benchmark.
-
-    \snippet examples/qtestlib/tutorial5/benchmarking.cpp 2
-
-    The "if(useLocaleCompare)" switch is placed outside the QBENCHMARK
-    macro to avoid measuring its overhead. Each benchmark test function
-    can have one active QBENCHMARK macro.
-
-    \section1 External Tools
-
-    Tools for handling and visualizing test data are available as part of
-    the \l {qtestlib-tools} project in the \l{Qt Labs} web site.
-    These include a tool for comparing performance data obtained from test
-    runs and a utility to generate Web-based graphs of performance data.
-
-    See the \l{qtestlib-tools Announcement}{qtestlib-tools announcement}
-    for more information on these tools and a simple graphing example.
-
-*/
-
-
-
diff --git a/doc/src/frameworks-technologies/dbus-adaptors.qdoc b/doc/src/frameworks-technologies/dbus-adaptors.qdoc
deleted file mode 100644
index 5a77a81..0000000
--- a/doc/src/frameworks-technologies/dbus-adaptors.qdoc
+++ /dev/null
@@ -1,481 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:FDL$
-** GNU Free Documentation License
-** Alternatively, this file may be used under the terms of the GNU Free
-** Documentation License version 1.3 as published by the Free Software
-** Foundation and appearing in the file included in the packaging of
-** this file.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms
-** and conditions contained in a signed written agreement between you
-** and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*!
-    \page usingadaptors.html
-    \title Using QtDBus Adaptors
-    \brief How to create and use DBus adaptors in Qt.
-
-    \ingroup best-practices
-
-    Adaptors are special classes that are attached to any QObject-derived class
-    and provide the interface to the external world using D-Bus. Adaptors are
-    intended to be lightweight classes whose main purpose is to relay calls to
-    and from the real object, possibly validating or converting the input from
-    the external world and, thus, protecting the real object.
-
-    Unlike multiple inheritance, adaptors can be added at any time to any object
-    (but not removed), which allows for greater flexibility when exporting
-    existing classes. Another advantage of adaptors is to provide similar but not
-    identical functionality in methods of the same name in different interfaces,
-    a case which can be quite common when adding a new version of a standard
-    interface to an object.
-
-    In order to use an adaptor, one must create a class which inherits
-    QDBusAbstractAdaptor. Since that is a standard QObject-derived class, the
-    Q_OBJECT macro must appear in the declaration and the source file must be
-    processed with the \l {moc} tool. The class must also contain one
-    Q_CLASSINFO entry with the \c {"D-Bus Interface"} name, declaring which
-    interface it is exporting. Only one entry per class is supported.
-
-    Any public slot in the class will be accessible through the bus over messages
-    of the MethodCall type. (See \l {Declaring Slots in D-Bus Adaptors} for more
-    information). Signals in the class will be automatically relayed over D-Bus.
-    However, not all types are allowed signals or slots' parameter lists: see
-    \l {The QtDBus Type System} for more information.
-
-    Also, any property declared with Q_PROPERTY will be automatically exposed
-    over the Properties interface on D-Bus. Since the QObject property system
-    does not allow for non-readable properties, it is not possible to declare
-    write-only properties using adaptors.
-
-    More information:
-    \list
-      \li \l{Declaring Slots in D-Bus Adaptors}
-      \li \l{Declaring Signals in D-Bus Adaptors}
-      \li \l{The QtDBus Type System}
-      \li \l{D-Bus Adaptor Example}
-    \endlist
-
-    \sa QDBusAbstractAdaptor
-*/
-
-/*!
-    \page qdbusadaptorexample.html
-    \title D-Bus Adaptor Example
-
-    \previouspage The QtDBus Type System
-    \contentspage Using QtDBus Adaptors
-
-    The following example code shows how a D-Bus interface can be implemented
-    using an adaptor.
-
-    A sample usage of QDBusAbstractAdaptor is as follows:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 0
-
-    The code above would create an interface that could be represented more or less in the following
-    canonical representation:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 1
-
-    This adaptor could be used in the application's main function as follows
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 2
-
-    Break-down analysis:
-    \tableofcontents
-
-    \section1 The header
-
-    The header of the example is:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 3
-
-    The code does the following:
-    \list
-      \li it declares the adaptor MainApplicationAdaptor, which descends from QDBusAbstractAdaptor
-      \li it declares the Qt meta-object data using the Q_OBJECT macro
-      \li it declares the name of the D-Bus interface it implements.
-    \endlist
-
-    \section1 The properties
-
-    The properties are declared as follows:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 4
-
-    And are implemented as follows:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 5
-
-    The code declares three properties: one of them is a read-write property called "caption" of
-    string type. The other two are read-only, also of the string type.
-
-    The properties organizationName and organizationDomain are simple relays of the app object's
-    organizationName and organizationDomain properties. However, the caption property requires
-    verifying if the application has a main window associated with it: if there isn't any, the
-    caption property is empty. Note how it is possible to access data defined in other objects
-    through the getter/setter functions.
-
-    \section1 The constructor
-
-    The constructor:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 6
-
-    The constructor does the following:
-    \list
-    \li it initialises its base class (QDBusAbstractAdaptor) with the parent object it is related to.
-    \li it stores the app pointer in a member variable. Note that it would be possible to access the
-       same object using the QDBusAbstractAdaptor::object() function, but it would be necessary to
-       use \a static_cast<> to properly access the methods in QApplication that are not part of
-       QObject.
-    \li it connects the application's signal \a aboutToQuit to its own signal \a aboutToQuit.
-    \li it connects the application's signal \a focusChanged to a private slot to do some further
-       processing before emitting a D-Bus signal.
-    \endlist
-
-    Note that there is no destructor in the example. An eventual destructor could be used to emit
-    one last signal before the object is destroyed, for instance.
-
-    \section1 Slots/methods
-
-    The public slots in the example (which will be exported as D-Bus methods) are the following:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 7
-
-    This snippet of code defines 4 methods with different properties each:
-    \list 1
-    \li \c quit: this method takes no parameters and is defined to be asynchronous. That is, callers
-      are expected to use "fire-and-forget" mechanism when calling this method, since it provides no
-      useful reply. This is represented in D-Bus by the use of the
-      org.freedesktop.DBus.Method.NoReply annotation. See \l Q_NOREPLY for more information on
-      asynchronous methods
-
-    \li \c reparseConfiguration: this simple method, with no input or output arguments simply relays
-      the call to the application's reparseConfiguration member function.
-
-    \li \c mainWindowObject: this method takes no input parameter, but returns one string output
-      argument, containing the path to the main window object (if the application has a main
-      window), or an empty string if it has no main window. Note that this method could have also
-      been written: void mainWindowObject(QString &path).
-
-    \li \c setSessionManagement: this method takes one input argument (a boolean) and, depending on
-      its value, it calls one function or another in the application.
-    \endlist
-
-    See also: \l Q_NOREPLY.
-
-    \section1 Signals
-
-    The signals in this example are defined as follows:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 8
-
-    However, signal definition isn't enough: signals have to be emitted. One simple way of emitting
-    signals is to connect another signal to them, so that Qt's signal handling system chains them
-    automatically. This is what is done for the \a aboutToQuit signal.
-
-    When this is the case, one can use the QDBusAbstractAdaptor::setAutoRelaySignals to
-    automatically connect every signal from the real object to the adaptor.
-
-    When simple signal-to-signal connection isn't enough, one can use a private slot do do some
-    work. This is what was done for the mainWindowHasFocus signal:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 9
-
-    This private slot (which will not be exported as a method via D-Bus) was connected to the
-    \c focusChanged signal in the adaptor's constructor. It is therefore able to shape the
-    application's signal into what the interface expects it to be.
-*/
-
-/*!
-    \page qdbusdeclaringslots.html
-    \title Declaring Slots in D-Bus Adaptors
-
-    \contentspage Using QtDBus Adaptors
-    \nextpage Declaring Signals in D-Bus Adaptors
-
-    Slots in D-Bus adaptors are declared just like normal, public slots, but their
-    parameters must follow certain rules (see \l{The QtDBus Type System} for more
-    information). Slots whose parameters do not follow those rules or that are not
-    public will not be accessible via D-Bus.
-
-    Slots can have one parameter of type \c{const QDBusMessage &}, which must
-    appear at the end of the input parameter list, before any output parameters.
-    This parameter, if present, will be initialized with a copy of the
-    current message being processed, which allows the callee to obtain
-    information about the caller, such as its connection name.
-
-    Slots can be of three kinds:
-    \list 1
-      \li Asynchronous
-      \li Input-only
-      \li Input-and-output
-    \endlist
-
-    \section1 Asynchronous Slots
-    Asynchronous slots are those that do not normally return any reply to the
-    caller. For that reason, they cannot take any output parameters. In most
-    cases, by the time the first line of the slot is run, the caller function
-    has already resumed working.
-
-    However, slots must not rely on that behavior. Scheduling and message-dispatching
-    issues could change the order in which the slot is run. Code intending to
-    synchronize with the caller should provide its own method of synchronization.
-
-    Asynchronous slots are marked by the keyword \l Q_NOREPLY in the method
-    signature, before the \c void return type and the slot name. (See the
-    \c quit() slot in the \l{D-Bus Adaptor Example}).
-
-    \section1 Input-Only Slots
-
-    Input-only slots are normal slots that take parameters passed by value or
-    by constant reference. However, unlike asynchronous slots, the caller is
-    usually waiting for completion of the callee before resuming operation.
-    Therefore, non-asynchronous slots should not block or should state it its
-    documentation that they may do so.
-
-    Input-only slots have no special marking in their signature, except that
-    they take only parameters passed by value or by constant reference.
-    Optionally, slots can take a QDBusMessage parameter as a last parameter,
-    which can be used to perform additional analysis of the method call message.
-
-    \section1 Input and Output Slots
-
-    Like input-only slots, input-and-output slots are those that the caller is
-    waiting for a reply. Unlike input-only ones, though, this reply will contain
-    data. Slots that output data may contain non-constant references and may
-    return a value as well. However, the output parameters must all appear at
-    the end of the argument list and may not have input arguments interleaved.
-    Optionally, a QDBusMessage argument may appear between the input and the
-    output arguments.
-
-    \section1 Automatic Replies
-
-    Method replies are generated automatically with the contents of the output
-    parameters (if there were any) by the QtDBus implementation. Slots need not
-    worry about constructing proper QDBusMessage objects and sending them over
-    the connection.
-
-    However, the possibility of doing so remains there. Should the slot find out
-    it needs to send a special reply or even an error, it can do so by using
-    QDBusMessage::createReply() or QDBusMessage::createErrorReply() on the
-    QDBusMessage parameter and send it with QDBusConnection::send(). The
-    QtDBus implementation will not generate any reply if the slot did so.
-
-    \warning When a caller places a method call and waits for a reply, it will
-    only wait for a limited amount of time. Slots intending to take a long time
-    to complete should make that fact clear in documentation so that callers
-    properly set higher timeouts.
-
-    \section1 Delayed Replies
-
-    In some circumstances, the called slot may not be able to process
-    the request immediately. This is frequently the case when the
-    request involves an I/O or networking operation which may block.
-
-    If this is the case, the slot should return control to the
-    application's main loop to avoid freezing the user interface, and
-    resume the process later. To accomplish this, it should make use
-    of the extra \c QDBusMessage parameter at the end of the input
-    parameter list and request a delayed reply.
-
-    We do this by writing a slot that stores the request data in a
-    persistent structure, indicating to the caller using
-    \l{QDBusMessage::setDelayedReply()}{QDBusMessage::setDelayedReply(true)}
-    that the response will be sent later.
-
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 10
-
-    The use of
-    \l{QDBusConnection::send()}{QDBusConnection::sessionBus().send(data->reply)}
-    is needed to explicitly inform the caller that the response will be delayed.
-    In this case, the return value is unimportant; we return an arbitrary value
-    to satisfy the compiler.
-
-    When the request is processed and a reply is available, it should be sent
-    using the \c QDBusMessage object that was obtained. In our example, the
-    reply code could be something as follows:
-
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 11
-
-    As can be seen in the example, when a delayed reply is in place,
-    the return value(s) from the slot will be ignored by QtDBus. They
-    are used only to determine the slot's signature when communicating
-    the adaptor's description to remote applications, or in case the
-    code in the slot decides not to use a delayed reply.
-
-    The delayed reply itself is requested from QtDBus by calling
-    QDBusMessage::reply() on the original message. It then becomes the
-    resposibility of the called code to eventually send a reply to the
-    caller.
-
-    \warning When a caller places a method call and waits for a reply, it will
-    only wait for a limited amount of time. Slots intending to take a long time
-    to complete should make that fact clear in documentation so that callers
-    properly set higher timeouts.
-
-    \sa {Using QtDBus Adaptors}, {Declaring Signals in D-Bus Adaptors},
-        {The QtDBus Type System}, QDBusConnection, QDBusMessage
-*/
-
-/*!
-    \page qdbusdeclaringsignals.html
-    \title Declaring Signals in D-Bus Adaptors
-
-    \previouspage Declaring Slots in D-Bus Adaptors
-    \contentspage Using QtDBus Adaptors
-    \nextpage The QtDBus Type System
-
-    Any signal in a class derived from QDBusAbstractAdaptor will be automatically
-    relayed into D-Bus, provided that the signal's parameters conform to certain
-    rules (see \l{The QtDBus Type System} for more information). No special code
-    is necessary to make this relay.
-
-    However, signals must still be emitted. The easiest way to emit an adaptor
-    signal is to connect another signal to it, so that Qt's signals and slots
-    mechanism automatically emits the adaptor signal, too. This can be done in
-    the adaptor's constructor, as has been done in the
-    \l{D-Bus Adaptor Example}{D-Bus Adaptor example}.
-
-    The QDBusAbstractAdaptor::setAutoRelaySignals() convenience function can also
-    be used to make and break connections between signals in the real object and
-    the corresponding signals in the adaptor. It will inspect the list of signals
-    in both classes and connect those whose parameters match exactly.
-
-    \sa {Using QtDBus Adaptors},
-        {Declaring Slots in D-Bus Adaptors},
-        {The QtDBus Type System}, QDBusAbstractAdaptor
-*/
-
-/*!
-    \page qdbustypesystem.html
-    \title The QtDBus Type System
-
-    \previouspage Declaring Signals in D-Bus Adaptors
-    \contentspage Using QtDBus Adaptors
-    \nextpage D-Bus Adaptor Example
-
-    D-Bus has an extensible type system based on a few primitives and
-    composition of the primitives in arrays and structures. QtDBus
-    implements the interface to that type system through the
-    QDBusArgument class, allowing user programs to send and receive
-    practically every C++ type over the bus.
-
-    \section1 Primitive Types
-
-    The primitive types are supported natively by QDBusArgument and
-    need no special customization to be sent or received. They are
-    listed below, along with the C++ class they relate to:
-
-    \table
-      \header
-        \li Qt type
-        \li D-Bus equivalent type
-      \row
-        \li uchar
-        \li BYTE
-      \row
-        \li bool
-        \li BOOLEAN
-      \row
-        \li short
-        \li INT16
-      \row
-        \li ushort
-        \li UINT16
-      \row
-        \li int
-        \li INT32
-      \row
-        \li uint
-        \li UINT32
-      \row
-        \li qlonglong
-        \li INT64
-      \row
-        \li qulonglong
-        \li UINT64
-      \row
-        \li double
-        \li DOUBLE
-      \row
-        \li QString
-        \li STRING
-      \row
-        \li QDBusVariant
-        \li VARIANT
-      \row
-        \li QDBusObjectPath
-        \li OBJECT_PATH
-      \row
-        \li QDBusSignature
-        \li SIGNATURE
-    \endtable
-
-    Aside from the primitive types, QDBusArgument also supports two
-    non-primitive types natively, due to their widespread use in Qt
-    applications: QStringList and QByteArray.
-
-    \section1 Compound Types
-
-    D-Bus specifies three types of aggregations of primitive types
-    that allow one to create compound types. They are \c ARRAY, \c
-    STRUCT and maps/dictionaries.
-
-    Arrays are sets of zero or more elements of the same type, while
-    structures are a set of a fixed number of elements, each of any
-    type. Maps or dictionaries are implemented as arrays of a pair of
-    elements, so there can be zero or more elements in one map.
-
-    \section1 Extending the Type System
-
-    In order to use one's own type with QtDBus, the type has to be
-    declared as a Qt meta-type with the Q_DECLARE_METATYPE() macro and
-    registered with the qDBusRegisterMetaType() function. The
-    streaming operators \c{operator>>} and \c{operator<<} will be
-    automatically found by the registration system.
-
-    QtDBus provides template specializations for arrays and maps for
-    use with Qt's \l{Container classes}{container classes}, such as
-    QMap and QList, so it is not necessary to write the streaming
-    operator functions for those. For other types, and specially for
-    types implementing structures, the operators have to be explicitly
-    implemented.
-
-    See the documentation for QDBusArgument for examples for
-    structures, arrays and maps.
-
-    \section1 The Type System in Use
-
-    All of the QtDBus types (primitives and user-defined alike) can be
-    used to send and receive messages of all types over the bus.
-
-    \warning You may not use any type that is not on the list above,
-    including \a typedefs to the types listed. This also includes
-    QList<QVariant> and QMap<QString,QVariant>.
-*/
-
-/*!
-    \macro Q_NOREPLY
-    \relates QDBusAbstractAdaptor
-    \since 4.2
-
-    The Q_NOREPLY macro can be used to mark a method to be called and not wait for it to finish
-    processing before returning from QDBusInterface::call(). The called method cannot return any
-    output arguments and, if it does, any such arguments will be discarded.
-
-    You can use this macro in your own adaptors by placing it before your method's return value
-    (which must be "void") in the class declaration, as shown in the example:
-    \snippet doc/src/snippets/code/doc_src_qdbusadaptors.cpp 12
-
-    Its presence in the method implementation (outside the class declaration) is optional.
-
-    \sa {Using QtDBus Adaptors}
-*/
diff --git a/doc/src/frameworks-technologies/dbus-intro.qdoc b/doc/src/frameworks-technologies/dbus-intro.qdoc
deleted file mode 100644
index f10bdc9..0000000
--- a/doc/src/frameworks-technologies/dbus-intro.qdoc
+++ /dev/null
@@ -1,215 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:FDL$
-** GNU Free Documentation License
-** Alternatively, this file may be used under the terms of the GNU Free
-** Documentation License version 1.3 as published by the Free Software
-** Foundation and appearing in the file included in the packaging of
-** this file.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms
-** and conditions contained in a signed written agreement between you
-** and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*!
-    \page intro-to-dbus.html
-    \title D-Bus
-    \brief An introduction to Inter-Process Communication and Remote Procedure Calling with D-Bus.
-
-    \keyword QtDBus
-    \ingroup technology-apis
-
-    \section1 Introduction
-
-    D-Bus is an Inter-Process Communication (IPC) and Remote Procedure
-    Calling (RPC) mechanism originally developed for Linux to replace
-    existing and competing IPC solutions with one unified protocol. It
-    has also been designed to allow communication between system-level
-    processes (such as printer and hardware driver services) and
-    normal user processes.
-
-    It uses a fast, binary message-passing protocol, which is suitable
-    for same-machine communication due to its low latency and low
-    overhead. Its specification is currently defined by the
-    \tt{freedesktop.org} project, and is available to all parties.
-
-    Communication in general happens through a central server
-    application, called the "bus" (hence the name), but direct
-    application-to-application communication is also possible. When
-    communicating on a bus, applications can query which other
-    applications and services are available, as well as activate one
-    on demand.
-
-    \section1 The Buses
-
-    D-Bus buses are used to when many-to-many communication is
-    desired. In order to achieve that, a central server is launched
-    before any applications can connect to the bus: this server is
-    responsible for keeping track of the applications that are
-    connected and for properly routing messages from their source to
-    their destination.
-
-    In addition, D-Bus defines two well-known buses, called the
-    system bus and the session bus. These buses are special in the
-    sense that they have well-defined semantics: some services are
-    defined to be found in one or both of these buses.
-
-    For example, an application wishing to query the list of hardware
-    devices attached to the computer will probably communicate to a
-    service available on the system bus, while the service providing
-    opening of the user's web browser will be probably found on the
-    session bus.
-
-    On the system bus, one can also expect to find restrictions on
-    what services each application is allowed to offer. Therefore, one
-    can be reasonably certain that, if a certain service is present,
-    it is being offered by a trusted application.
-
-    \section1 Concepts
-
-    \section2 Messages
-
-    On the low level, applications communicate over D-Bus by sending
-    messages to one another. Messages are used to relay the remote
-    procedure calls as well as the replies and errors associated
-    with them. When used over a bus, messages have a destination,
-    which means they are routed only to the interested parties,
-    avoiding congestion due to "swarming" or broadcasting.
-
-    A special kind of message called a "signal message"
-    (a concept based on Qt's \l {Signals and Slots} mechanism),
-    however, does not have a pre-defined destination. Since its
-    purpose is to be used in a one-to-many context, signal messages
-    are designed to work over an "opt-in" mechanism.
-
-    The QtDBus module fully encapsulates the low-level concept of
-    messages into a simpler, object-oriented approach familiar to Qt
-    developers. In most cases, the developer need not worry about
-    sending or receiving messages.
-
-    \section2 Service Names
-
-    When communicating over a bus, applications obtain what is
-    called a "service name": it is how that application chooses to be
-    known by other applications on the same bus. The service names
-    are brokered by the D-Bus bus daemon and are used to
-    route messages from one application to another. An analogous
-    concept to service names are IP addresses and hostnames: a
-    computer normally has one IP address and may have one or more
-    hostnames associated with it, according to the services that it
-    provides to the network.
-
-    On the other hand, if a bus is not used, service names are also
-    not used. If we compare this to a computer network again, this
-    would equate to a point-to-point network: since the peer is
-    known, there is no need to use hostnames to find it or its IP
-    address.
-
-    The format of a D-Bus service name is in fact very similar to a
-    host name: it is a dot-separated sequence of letters and
-    digits. The common practice is even to name one's service name
-    according to the domain name of the organization that defined
-    that service.
-
-    For example, the D-Bus service is defined by
-    \tt{freedesktop.org} and can be found on the bus under the
-    service name:
-
-    \snippet doc/src/snippets/code/doc_src_introtodbus.qdoc 0
-
-    \section2 Object Paths
-
-    Like network hosts, applications provide specific services to
-    other applications by exporting objects. Those objects are
-    hierarchically organised, much like the parent-child
-    relationship that classes derived from QObject possess. One
-    difference, however, is that there is the concept of "root
-    object", that all objects have as ultimate parent.
-
-    If we continue our analogy with Web services, object paths
-    equate to the path part of a URL:
-
-    \img qurl-ftppath.png
-
-    Like them, object paths in D-Bus are formed resembling path
-    names on the filesystem: they are slash-separated labels, each
-    consisting of letters, digits and the underscore character
-    ("_"). They must always start with a slash and must not end with
-    one.
-
-    \section2 Interfaces
-
-    Interfaces are similar to C++ abstract classes and Java's
-    \c interface keyword and declare the "contract" that is
-    established between caller and callee. That is, they establish
-    the names of the methods, signals and properties that are
-    available as well as the behavior that is expected from either
-    side when communication is established.
-
-    Qt uses a very similar mechanism in its \l {How to Create Qt
-    Plugins}{Plugin system}: Base classes in C++ are associated
-    with a unique identifier by way of the Q_DECLARE_INTERFACE()
-    macro.
-
-    D-Bus interface names are, in fact, named in a manner similar to
-    what is suggested by the Qt Plugin System: an identifier usually
-    constructed from the domain name of the entity that defined that
-    interface.
-
-    \section2 Cheat Sheet
-
-    To facilitate remembering of the naming formats and their
-    purposes, the following table can be used:
-
-    \table 90%
-    \header \li D-Bus Concept  \li Analogy            \li Name format
-    \row    \li Service name   \li Network hostnames  \li Dot-separated
-                                                       ("looks like a hostname")
-    \row    \li Object path    \li URL path component \li Slash-separated
-                                                       ("looks like a path")
-    \row    \li Interface      \li Plugin identifier  \li Dot-separated
-    \endtable
-
-    \section1 Debugging
-
-    When developing applications that use D-Bus, it is sometimes useful to be able
-    to see information about the messages that are sent and received across the
-    bus by each application.
-
-    This feature can be enabled on a per-application basis by setting the
-    \c QDBUS_DEBUG environment variable before running each application.
-    For example, we can enable debugging only for the car in the
-    \l{D-Bus Remote Controlled Car Example} by running the controller and the
-    car in the following way:
-
-    \snippet doc/src/snippets/code/doc_src_introtodbus.qdoc QDBUS_DEBUG
-
-    Information about the messages will be written to the console the application
-    was launched from.
-
-    \section1 Further Reading
-
-    The following documents contain information about Qt's D-Bus integration
-    features, and provide details about the mechanisms used to send and receive
-    type information over the bus:
-
-    \list
-    \li \l{Using QtDBus Adaptors}
-    \li \l{The QtDBus Type System}
-    \li \l{QtDBus XML compiler (qdbusxml2cpp)}
-    \endlist
-*/
diff --git a/doc/src/frameworks-technologies/model-view-programming.qdoc b/doc/src/frameworks-technologies/model-view-programming.qdoc
deleted file mode 100644
index f643e3a..0000000
--- a/doc/src/frameworks-technologies/model-view-programming.qdoc
+++ /dev/null
@@ -1,2339 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:FDL$
-** GNU Free Documentation License
-** Alternatively, this file may be used under the terms of the GNU Free
-** Documentation License version 1.3 as published by the Free Software
-** Foundation and appearing in the file included in the packaging of
-** this file.
-**
-** Other Usage
-** Alternatively, this file may be used in accordance with the terms
-** and conditions contained in a signed written agreement between you
-** and Nokia.
-**
-**
-**
-**
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*!
-    \group model-view
-    \title Model/View Classes
-*/
-
-/*!
-    \page model-view-programming.html
-    \ingroup qt-basic-concepts
-
-    \title Model/View Programming
-    \brief A guide to Qt's extensible model/view architecture.
-
-    \section1 Introduction to Model/View Programming
-
-    Qt 4 introduced a new set of item view classes that use a model/view
-    architecture to manage the relationship between data and the way it
-    is presented to the user. The separation of functionality introduced by
-    this architecture gives developers greater flexibility to customize the
-    presentation of items, and provides a standard model interface to allow
-    a wide range of data sources to be used with existing item views.
-    In this document, we give a brief introduction to the model/view paradigm,
-    outline the concepts involved, and describe the architecture of the item
-    view system. Each of the components in the architecture is explained,
-    and examples are given that show how to use the classes provided.
-
-    \section2 The model/view architecture
-
-    Model-View-Controller (MVC) is a design pattern originating from
-    Smalltalk that is often used when building user interfaces.
-    In \l{Design Patterns}, Gamma et al. write:
-
-    \quotation
-    MVC consists of three kinds of objects. The Model is the application
-    object, the View is its screen presentation, and the Controller defines
-    the way the user interface reacts to user input. Before MVC, user
-    interface designs tended to lump these objects together. MVC decouples
-    them to increase flexibility and reuse.
-    \endquotation
-
-    If the view and the controller objects are combined, the result is
-    the model/view architecture. This still separates the way that data
-    is stored from the way that it is presented to the user, but provides
-    a simpler framework based on the same principles. This separation
-    makes it possible to display the same data in several different views,
-    and to implement new types of views, without changing the underlying
-    data structures.
-    To allow flexible handling of user input, we introduce the concept of
-    the \e delegate. The advantage of having a delegate in this framework
-    is that it allows the way items of data are rendered and edited to be
-    customized.
-
-    \table
-    \row \li \inlineimage modelview-overview.png
-    \li \b{The model/view architecture}
-
-    The model communicates with a source of data, providing an \e interface
-    for the other components in the architecture. The nature of the
-    communication depends on the type of data source, and the way the model
-    is implemented.
-
-    The view obtains \e{model indexes} from the model; these are references
-    to items of data. By supplying model indexes to the model, the view can
-    retrieve items of data from the data source.
-
-    In standard views, a \e delegate renders the items of data. When an item
-    is edited, the delegate communicates with the model directly using
-    model indexes.
-    \endtable
-
-    Generally, the model/view classes can be separated into the three groups
-    described above: models, views, and delegates. Each of these components
-    is defined by \e abstract classes that provide common interfaces and,
-    in some cases, default implementations of features.
-    Abstract classes are meant to be subclassed in order to provide the full
-    set of functionality expected by other components; this also allows
-    specialized components to be written.
-
-    Models, views, and delegates communicate with each other using \e{signals
-    and slots}:
-
-    \list
-    \li Signals from the model inform the view about changes to the data
-       held by the data source.
-    \li Signals from the view provide information about the user's interaction
-       with the items being displayed.
-    \li Signals from the delegate are used during editing to tell the
-       model and view about the state of the editor.
-    \endlist
-
-    \section3 Models
-
-    All item models are based on the QAbstractItemModel class. This class
-    defines an interface that is used by views and delegates to access data.
-    The data itself does not have to be stored in the model; it can be held
-    in a data structure or repository provided by a separate class, a file,
-    a database, or some other application component.
-
-    The basic concepts surrounding models are presented in the section
-    on \l{Model Classes}.
-
-    QAbstractItemModel
-    provides an interface to data that is flexible enough to handle views
-    that represent data in the form of tables, lists, and trees. However,
-    when implementing new models for list and table-like data structures,
-    the QAbstractListModel and QAbstractTableModel classes are better
-    starting points because they provide appropriate default implementations
-    of common functions. Each of these classes can be subclassed to provide
-    models that support specialized kinds of lists and tables.
-
-    The process of subclassing models is discussed in the section on
-    \l{Creating New Models}.
-
-    Qt provides some ready-made models that can be used to handle items of
-    data:
-
-    \list
-    \li QStringListModel is used to store a simple list of QString items.
-    \li QStandardItemModel manages more complex tree structures of items, each
-       of which can contain arbitrary data.
-    \li QFileSystemModel provides information about files and directories in the
-       local filing system.
-    \li QSqlQueryModel, QSqlTableModel, and QSqlRelationalTableModel are used
-       to access databases using model/view conventions.
-    \endlist
-
-    If these standard models do not meet your requirements, you can subclass
-    QAbstractItemModel, QAbstractListModel, or QAbstractTableModel to create
-    your own custom models.
-
-    \section3 Views
-
-    Complete implementations are provided for different kinds of
-    views: QListView displays a list of items, QTableView displays data
-    from a model in a table, and QTreeView shows model items of data in a
-    hierarchical list. Each of these classes is based on the
-    QAbstractItemView abstract base class. Although these classes are
-    ready-to-use implementations, they can also be subclassed to provide
-    customized views.
-
-    The available views are examined in the section on \l{View Classes}.
-
-    \section3 Delegates
-
-    QAbstractItemDelegate is the abstract base class for delegates in the
-    model/view framework. Since Qt 4.4, the default delegate implementation is
-    provided by QStyledItemDelegate, and this is used as the default delegate
-    by Qt's standard views. However, QStyledItemDelegate and QItemDelegate are
-    independent alternatives to painting and providing editors for items in
-    views. The difference between them is that QStyledItemDelegate uses the
-    current style to paint its items. We therefore recommend using
-    QStyledItemDelegate as the base class when implementing custom delegates or
-    when working with Qt style sheets.
-
-    Delegates are described in the section on \l{Delegate Classes}.
-
-    \section3 Sorting
-
-    There are two ways of approaching sorting in the model/view
-    architecture; which approach to choose depends on your underlying
-    model.
-
-    If your model is sortable, i.e, if it reimplements the
-    QAbstractItemModel::sort() function, both QTableView and QTreeView
-    provide an API that allows you to sort your model data
-    programmatically. In addition, you can enable interactive sorting
-    (i.e. allowing the users to sort the data by clicking the view's
-    headers), by connecting the QHeaderView::sortIndicatorChanged() signal
-    to the QTableView::sortByColumn() slot or the
-    QTreeView::sortByColumn() slot, respectively.
-
-    The alternative approach, if your model do not have the required
-    interface or if you want to use a list view to present your data,
-    is to use a proxy model to transform the structure of your model
-    before presenting the data in the view. This is covered in detail
-    in the section on \l {Proxy Models}.
-
-    \section3 Convenience classes
-
-    A number of \e convenience classes are derived from the standard view
-    classes for the benefit of applications that rely on Qt's item-based
-    item view and table classes. They are not intended to be subclassed,
-    but simply exist to provide a familiar interface to the equivalent classes
-    in Qt 3.
-    Examples of such classes include \l QListWidget, \l QTreeWidget, and
-    \l QTableWidget; these provide similar behavior to the \c QListBox,
-    \c QListView, and \c QTable classes in Qt 3.
-
-    These classes are less flexible than the view classes, and cannot be
-    used with arbitrary models. We recommend that you use a model/view
-    approach to handling data in item views unless you strongly need an
-    item-based set of classes.
-
-    If you wish to take advantage of the features provided by the model/view
-    approach while still using an item-based interface, consider using view
-    classes, such as QListView, QTableView, and QTreeView with
-    QStandardItemModel.
-
-    \section1 Using models and views
-
-    The following sections explain how to use the model/view pattern
-    in Qt. Each section includes an an example and is followed by a
-    section showing how to create new components.
-
-    \section2 Two models included in Qt
-
-    Two of the standard models provided by Qt are QStandardItemModel and
-    QFileSystemModel. QStandardItemModel is a multi-purpose model that can be
-    used to represent various different data structures needed by list, table,
-    and tree views. This model also holds the items of data.
-    QFileSystemModel is a model that maintains information about the contents
-    of a directory. As a result, it does not hold any items of data itself, but
-    simply represents files and directories on the local filing system.
-
-    QFileSystemModel provides a ready-to-use model to experiment with, and can be
-    easily configured to use existing data. Using this model, we can show how
-    to set up a model for use with ready-made views, and explore how to
-    manipulate data using model indexes.
-
-    \section2 Using views with an existing model
-
-    The QListView and QTreeView classes are the most suitable views
-    to use with QFileSystemModel. The example presented below displays the
-    contents of a directory in a tree view next to the same information in
-    a list view. The views share the user's selection so that the selected
-    items are highlighted in both views.
-
-    \img shareddirmodel.png
-
-    We set up a QFileSystemModel so that it is ready for use, and create some
-    views to display the contents of a directory. This shows the simplest
-    way to use a model. The construction and use of the model is
-    performed from within a single \c main() function:
-
-    \snippet doc/src/snippets/shareddirmodel/main.cpp 0
-
-    The model is set up to use data from a certain file system. The call to
-    \l{QFileSystemModel::}{setRootPath()} tell the model which drive on the
-    file system to expose to the views.
-
-    We create two views so that we can examine the items held in the model in two
-    different ways:
-
-    \snippet doc/src/snippets/shareddirmodel/main.cpp 5
-
-    The views are constructed in the same way as other widgets. Setting up
-    a view to display the items in the model is simply a matter of calling its
-    \l{QAbstractItemView::setModel()}{setModel()} function with the directory
-    model as the argument. We filter the data supplied by the model by calling
-    the \l{QAbstractItemView::}{setRootIndex()} function on each view, passing
-    a suitable \e{model index} from the file system model for the current
-    directory.
-
-    The \c index() function used in this case is unique to QFileSystemModel; we
-    supply it with a directory and it returns a model index. Model indexes are
-    discussed in \l{Model Classes}.
-
-    The rest of the function just displays the views within a splitter
-    widget, and runs the application's event loop:
-
-    \snippet doc/src/snippets/shareddirmodel/main.cpp 8
-
-    In the above example, we neglected to mention how to handle selections
-    of items. This subject is covered in more detail in the section about
-    \l{Handling Selections in Item Views}. 
-
-    \section1 Model classes
-
-    Before examining how selections are handled, you may find it
-    useful to examine the concepts used in the model/view framework.
-
-    \section2 Basic concepts
-
-    In the model/view architecture, the model provides a standard interface
-    that views and delegates use to access data. In Qt, the standard
-    interface is defined by the QAbstractItemModel class. No matter how the
-    items of data are stored in any underlying data structure, all subclasses
-    of QAbstractItemModel represent the data as a hierarchical structure
-    containing tables of items. Views use this \e convention to access items
-    of data in the model, but they are not restricted in the way that they
-    present this information to the user.
-
-    \image modelview-models.png
-
-    Models also notify any attached views about changes to data through the
-    signals and slots mechanism.
-
-    This section describes some basic concepts that are central to the way
-    item of data are accessed by other components via a model class. More
-    advanced concepts are discussed in later sections.
-
-    \section3 Model indexes
-
-    To ensure that the representation of the data is kept separate from the
-    way it is accessed, the concept of a \e{model index} is introduced. Each
-    piece of information that can be obtained via a model is represented by
-    a model index. Views and delegates use these indexes to request items of
-    data to display.
-
-    As a result, only the model needs to know how to obtain data, and the type
-    of data managed by the model can be defined fairly generally. Model indexes
-    contain a pointer to the model that created them, and this prevents
-    confusion when working with more than one model.
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 0
-
-    Model indexes provide \e temporary references to pieces of information, and
-    can be used to retrieve or modify data via the model. Since models may
-    reorganize their internal structures from time to time, model indexes may
-    become invalid, and \e{should not be stored}. If a long-term reference to a
-    piece of information is required, a \e{persistent model index} must be
-    created. This provides a reference to the information that the model keeps
-    up-to-date. Temporary model indexes are provided by the QModelIndex class,
-    and persistent model indexes are provided by the QPersistentModelIndex
-    class.
-
-    To obtain a model index that corresponds to an item of data, three
-    properties must be specified to the model: a row number, a column number,
-    and the model index of a parent item. The following sections describe
-    and explain these properties in detail.
-
-    \section3 Rows and columns
-
-    In its most basic form, a model can be accessed as a simple table in which
-    items are located by their row and column numbers. \e{This does not mean
-    that the underlying pieces of data are stored in an array structure}; the
-    use of row and column numbers is only a convention to allow components to
-    communicate with each other. We can retrieve information about any given
-    item by specifying its row and column numbers to the model, and we receive
-    an index that represents the item:
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 1
-
-    Models that provide interfaces to simple, single level data structures like
-    lists and tables do not need any other information to be provided but, as
-    the above code indicates, we need to supply more information when obtaining
-    a model index.
-
-    \table
-    \row \li \inlineimage modelview-tablemodel.png
-    \li \b{Rows and columns}
-
-    The diagram shows a representation of a basic table model in which each
-    item is located by a pair of row and column numbers. We obtain a model
-    index that refers to an item of data by passing the relevant row and
-    column numbers to the model.
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 2
-
-    Top level items in a model are always referenced by specifying
-    \c QModelIndex() as their parent item. This is discussed in the next
-    section.
-    \endtable
-
-    \section3 Parents of items
-
-    The table-like interface to item data provided by models is ideal when
-    using data in a table or list view; the row and column number system maps
-    exactly to the way the views display items. However, structures such as
-    tree views require the model to expose a more flexible interface to the
-    items within. As a result, each item can also be the parent of another
-    table of items, in much the same way that a top-level item in a tree view
-    can contain another list of items.
-
-    When requesting an index for a model item, we must provide some information
-    about the item's parent. Outside the model, the only way to refer to an
-    item is through a model index, so a parent model index must also be given:
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 3
-
-    \table
-    \row \li \inlineimage modelview-treemodel.png
-    \li \b{Parents, rows, and columns}
-
-    The diagram shows a representation of a tree model in which each item is
-    referred to by a parent, a row number, and a column number.
-
-    Items "A" and "C" are represented as top-level siblings in the model:
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 4
-
-    Item "A" has a number of children. A model index for item "B" is
-    obtained with the following code:
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 5
-    \endtable
-
-    \section3 Item roles
-
-    Items in a model can perform various \e roles for other components,
-    allowing different kinds of data to be supplied for different situations.
-    For example, Qt::DisplayRole is used to access a string that can be
-    displayed as text in a view. Typically, items contain data for a number of
-    different roles, and the standard roles are defined by Qt::ItemDataRole.
-
-    We can ask the model for the item's data by passing it the model index
-    corresponding to the item, and by specifying a role to obtain the type
-    of data we want:
-
-    \snippet doc/src/snippets/code/doc_src_model-view-programming.cpp 6
-
-    \table
-    \row \li \inlineimage modelview-roles.png
-    \li \b{Item roles}
-
-    The role indicates to the model which type of data is being referred to.
-    Views can display the roles in different ways, so it is important to
-    supply appropriate information for each role.
-
-    The \l{Creating New Models} section covers some specific uses of roles in
-    more detail.
-    \endtable
-
-    Most common uses for item data are covered by the standard roles defined in
-    Qt::ItemDataRole. By supplying appropriate item data for each role, models
-    can provide hints to views and delegates about how items should be
-    presented to the user. Different kinds of views have the freedom to
-    interpret or ignore this information as required. It is also possible to
-    define additional roles for application-specific purposes.
-
-    \section3 Summary
-
-    \list
-    \li Model indexes give views and delegates information about the location
-       of items provided by models in a way that is independent of any
-       underlying data structures.
-    \li Items are referred to by their row and column numbers, and by the model
-       index of their parent items.
-    \li Model indexes are constructed by models at the request of other
-       components, such as views and delegates.
-    \li If a valid model index is specified for the parent item when an index is
-       requested using \l{QAbstractItemModel::index()}{index()}, the index
-       returned refers to an item beneath that parent item in the model.
-       The index obtained refers to a child of that item.
-    \li If an invalid model index is specified for the parent item when an index
-       is requested using \l{QAbstractItemModel::index()}{index()}, the index
-       returned refers to a top-level item in the model.
-    \li The \l{Qt::ItemDataRole}{role} distinguishes between the
-       different kinds of data associated with an item.
-    \endlist
-
-    \section2 Using model indexes
-
-    To demonstrate how data can be retrieved from a model, using model
-    indexes, we set up a QFileSystemModel without a view and display the
-    names of files and directories in a widget.
-    Although this does not show a normal way of using a model, it demonstrates
-    the conventions used by models when dealing with model indexes.
-
-    We construct a file system model in the following way:
-
-    \snippet doc/src/snippets/simplemodel-use/main.cpp 0
-
-    In this case, we set up a default QFileSystemModel, obtain a parent index
-    using a specific implementation of \l{QFileSystemModel::}{index()}
-    provided by that model, and we count the number of rows in the model using
-    the \l{QFileSystemModel::}{rowCount()} function.
-
-    For simplicity, we are only interested in the items in the first column
-    of the model. We examine each row in turn, obtaining a model index for
-    the first item in each row, and read the data stored for that item
-    in the model.
-
-    \snippet doc/src/snippets/simplemodel-use/main.cpp 1
-
-    To obtain a model index, we specify the row number, column number (zero
-    for the first column), and the appropriate model index for the parent
-    of all the items that we want.
-    The text stored in each item is retrieved using the model's
-    \l{QFileSystemModel::}{data()} function. We specify the model index and
-    the \l{Qt::ItemDataRole}{DisplayRole} to obtain data for the
-    item in the form of a string.
-
-    \snippet doc/src/snippets/simplemodel-use/main.cpp 2
-    \codeline
-    \snippet doc/src/snippets/simplemodel-use/main.cpp 3
-
-    The above example demonstrates the basic principles used to retrieve
-    data from a model:
-
-    \list
-    \li The dimensions of a model can be found using
-       \l{QAbstractItemModel::rowCount()}{rowCount()} and
-       \l{QAbstractItemModel::columnCount()}{columnCount()}.
-       These functions generally require a parent model index to be
-       specified.
-    \li Model indexes are used to access items in the model. The row, column,
-       and parent model index are needed to specify the item.
-    \li To access top-level items in a model, specify a null model index
-       as the parent index with \c QModelIndex().
-    \li Items contain data for different roles. To obtain the data for a
-       particular role, both the model index and the role must be supplied
-       to the model.
-    \endlist
-
-    \section2 Further reading
-
-    New models can be created by implementing the standard interface
-    provided by QAbstractItemModel. In the \l{Creating New Models}
-    section, we demonstrate this by creating a convenient ready-to-use
-    model for holding lists of strings.
-
-    \section1 View classes
-
-    \section2 Concepts
-
-    In the model/view architecture, the view obtains items of data from the
-    model and presents them to the user. The way that the data is
-    presented need not resemble the representation of the data provided by
-    the model, and may be \e{completely different} from the underlying data
-    structure used to store items of data.
-
-    The separation of content and presentation is achieved by the use of a
-    standard model interface provided by QAbstractItemModel, a standard view
-    interface provided by QAbstractItemView, and the use of model indexes
-    that represent items of data in a general way.
-    Views typically manage the overall layout of the data obtained from
-    models. They may render individual items of data themselves, or use
-    \l{Delegate Classes}{delegates} to handle both rendering and editing
-    features.
-
-    As well as presenting data, views handle navigation between items,
-    and some aspects of item selection. The views also implement basic
-    user interface features, such as context menus and drag and drop.
-    A view can provide default editing facilities for items, or it may
-    work with a \l{Delegate Classes}{delegate} to provide a custom
-    editor.
-
-    A view can be constructed without a model, but a model must be
-    provided before it can display useful information. Views keep track of
-    the items that the user has selected through the use of
-    \l{Handling Selections in Item Views}{selections} which can be maintained
-    separately for each view, or shared between multiple views.
-
-    Some views, such as QTableView and QTreeView, display headers as well
-    as items. These are also implemented by a view class, QHeaderView.
-    Headers usually access the same model as the view that contains them.
-    They retrieve data from the model using the
-    \l{QAbstractItemModel::headerData()} function, and usually display
-    header information in the form of a label. New headers can be
-    subclassed from the QHeaderView class to provide more specialized
-    labels for views.
-
-    \section2 Using an existing view
-
-    Qt provides three ready-to-use view classes that present data from
-    models in ways that are familiar to most users.
-    QListView can display items from a model as a simple list, or in the
-    form of a classic icon view. QTreeView displays items from a
-    model as a hierarchy of lists, allowing deeply nested structures to be
-    represented in a compact way. QTableView presents items from a model
-    in the form of a table, much like the layout of a spreadsheet
-    application.
-
-    \img standard-views.png
-
-    The default behavior of the standard views shown above should be
-    sufficient for most applications. They provide basic editing
-    facilities, and can be customized to suit the needs of more specialized
-    user interfaces.
-
-    \section3 Using a model
-
-    We take the string list model that \l{Creating New Models}{we created as
-    an example model}, set it up with some data, and construct a view to
-    display the contents of the model. This can all be performed within a
-    single function:
-
-    \snippet doc/src/snippets/stringlistmodel/main.cpp 0
-
-    Note that the \c StringListModel is declared as a \l QAbstractItemModel.
-    This allows us to use the abstract interface to the model, and
-    ensures that the code still works, even if we replace the string list
-    model with a different model.
-
-    The list view provided by \l QListView is sufficient for presenting
-    the items in the string list model. We construct the view, and set up
-    the model using the following lines of code:
-
-    \snippet doc/src/snippets/stringlistmodel/main.cpp 2
-    \snippet doc/src/snippets/stringlistmodel/main.cpp 4
-
-    The view is shown in the normal way:
-
-    \snippet doc/src/snippets/stringlistmodel/main.cpp 5
-
-    The view renders the contents of a model, accessing data via the model's
-    interface. When the user tries to edit an item, the view uses a default
-    delegate to provide an editor widget.
-
-    \img stringlistmodel.png
-
-    The above image shows how a QListView represents the data in the string
-    list model. Since the model is editable, the view automatically allows
-    each item in the list to be edited using the default delegate.
-
-    \section3 Using multiple views of a model
-
-    Providing multiple views onto the same model is simply a matter of
-    setting the same model for each view. In the following code we create
-    two table views, each using the same simple table model which we have
-    created for this example:
-
-    \snippet doc/src/snippets/sharedtablemodel/main.cpp 0
-    \codeline
-    \snippet doc/src/snippets/sharedtablemodel/main.cpp 1
-
-    The use of signals and slots in the model/view architecture means that
-    changes to the model can be propagated to all the attached views,
-    ensuring that we can always access the same data regardless of the
-    view being used.
-
-    \img sharedmodel-tableviews.png
-
-    The above image shows two different views onto the same model, each
-    containing a number of selected items. Although the data from the model
-    is shown consistently across view, each view maintains its own internal
-    selection model. This can be useful in certain situations but, for
-    many applications, a shared selection model is desirable.
-
-    \section2 Handling selections of items
-
-    The mechanism for handling selections of items within views is provided
-    by the \l QItemSelectionModel class. All of the standard views construct
-    their own selection models by default, and interact with them in the
-    normal way. The selection model being used by a view can be obtained
-    through the \l{QAbstractItemView::selectionModel()}{selectionModel()}
-    function, and a replacement selection model can be specified with
-    \l{QAbstractItemView::setSelectionModel()}{setSelectionModel()}.
-    The ability to control the selection model used by a view is useful
-    when we want to provide multiple consistent views onto the same model
-    data.
-
-    Generally, unless you are subclassing a model or view, you don't
-    need to manipulate the contents of selections directly. However,
-    the interface to the selection model can be accessed, if required,
-    and this is explored in \l{Handling Selections in Item Views}.
-
-    \section3 Sharing selections among views
-
-    Although it is convenient that the view classes provide their own
-    selection models by default, when we use more than one view onto the
-    same model it is often desirable that both the model's data and the
-    user's selection are shown consistently in all views.
-    Since the view classes allow their internal selection models to be
-    replaced, we can achieve a unified selection between views with the
-    following line:
-
-    \snippet doc/src/snippets/sharedtablemodel/main.cpp 2
-
-    The second view is given the selection model for the first view.
-    Both views now operate on the same selection model, keeping both
-    the data and the selected items synchronized.
-
-    \img sharedselection-tableviews.png
-
-    In the example shown above, two views of the same type were used to
-    display the same model's data. However, if two different types of view
-    were used, the selected items may be represented very differently in
-    each view; for example, a contiguous selection in a table view can be
-    represented as a fragmented set of highlighted items in a tree view.
-
-    \section1 Delegate classes
-
-    \section2 Concepts
-
-    Unlike the Model-View-Controller pattern, the model/view design does not
-    include a completely separate component for managing interaction with
-    the user. Generally, the view is responsible for the presentation of
-    model data to the user, and for processing user input. To allow some
-    flexibility in the way this input is obtained, the interaction is
-    performed by delegates. These components provide input capabilities
-    and are also responsible for rendering individual items in some views.
-    The standard interface for controlling delegates is defined in the
-    \l QAbstractItemDelegate class.
-
-    Delegates are expected to be able to render their contents themselves
-    by implementing the \l{QItemDelegate::paint()}{paint()}
-    and \l{QItemDelegate::sizeHint()}{sizeHint()} functions.
-    However, simple widget-based delegates can subclass \l QItemDelegate
-    instead of \l QAbstractItemDelegate, and take advantage of the default
-    implementations of these functions.
-
-    Editors for delegates can be implemented either by using widgets to manage
-    the editing process or by handling events directly.
-    The first approach is covered later in this section, and it is also
-    shown in the \l{Spin Box Delegate Example}{Spin Box Delegate} example.
-
-    The \l{Pixelator Example}{Pixelator} example shows how to create a
-    custom delegate that performs specialized rendering for a table view.
-
-    \section2 Using an existing delegate
-
-    The standard views provided with Qt use instances of \l QItemDelegate
-    to provide editing facilities. This default implementation of the
-    delegate interface renders items in the usual style for each of the
-    standard views: \l QListView, \l QTableView, and \l QTreeView.
-
-    All the standard roles are handled by the default delegate used by
-    the standard views. The way these are interpreted is described in the
-    QItemDelegate documentation.
-
-    The delegate used by a view is returned by the
-    \l{QAbstractItemView::itemDelegate()}{itemDelegate()} function.
-    The \l{QAbstractItemView::setItemDelegate()}{setItemDelegate()} function
-    allows you to install a custom delegate for a standard view, and it is
-    necessary to use this function when setting the delegate for a custom
-    view.
-
-    \section2 A simple delegate
-
-    The delegate implemented here uses a \l QSpinBox to provide
-    editing facilities, and is mainly intended for use with models
-    that display integers. Although we set up a custom integer-based
-    table model for this purpose, we could easily have used \l
-    QStandardItemModel instead, since the custom delegate controls
-    data entry. We construct a table view to display the contents of
-    the model, and this will use the custom delegate for editing.
-
-    \img spinboxdelegate-example.png
-
-    We subclass the delegate from \l QItemDelegate because we do not want
-    to write custom display functions. However, we must still provide
-    functions to manage the editor widget:
-
-    \snippet examples/itemviews/spinboxdelegate/delegate.h 0
-
-    Note that no editor widgets are set up when the delegate is
-    constructed. We only construct an editor widget when it is needed.
-
-    \section3 Providing an editor
-
-    In this example, when the table view needs to provide an editor, it
-    asks the delegate to provide an editor widget that is appropriate
-    for the item being modified. The
-    \l{QAbstractItemDelegate::createEditor()}{createEditor()} function is
-    supplied with everything that the delegate needs to be able to set up
-    a suitable widget:
-
-    \snippet examples/itemviews/spinboxdelegate/delegate.cpp 1
-
-    Note that we do not need to keep a pointer to the editor widget because
-    the view takes responsibility for destroying it when it is no longer
-    needed.
-
-    We install the delegate's default event filter on the editor to ensure
-    that it provides the standard editing shortcuts that users expect.
-    Additional shortcuts can be added to the editor to allow more
-    sophisticated behavior; these are discussed in the section on
-    \l{#EditingHints}{Editing Hints}.
-
-    The view ensures that the editor's data and geometry are set
-    correctly by calling functions that we define later for these purposes.
-    We can create different editors depending on the model index supplied
-    by the view. For example, if we have a column of integers and a column
-    of strings we could return either a \c QSpinBox or a \c QLineEdit,
-    depending on which column is being edited.
-
-    The delegate must provide a function to copy model data into the
-    editor. In this example, we read the data stored in the
-    \l{Qt::ItemDataRole}{display role}, and set the value in the
-    spin box accordingly.
-
-    \snippet examples/itemviews/spinboxdelegate/delegate.cpp 2
-
-    In this example, we know that the editor widget is a spin box, but we
-    could have provided different editors for different types of data in
-    the model, in which case we would need to cast the widget to the
-    appropriate type before accessing its member functions.
-
-    \section3 Submitting data to the model
-
-    When the user has finished editing the value in the spin box, the view
-    asks the delegate to store the edited value in the model by calling the
-    \l{QAbstractItemDelegate::setModelData()}{setModelData()} function.
-
-    \snippet examples/itemviews/spinboxdelegate/delegate.cpp 3
-
-    Since the view manages the editor widgets for the delegate, we only
-    need to update the model with the contents of the editor supplied.
-    In this case, we ensure that the spin box is up-to-date, and update
-    the model with the value it contains using the index specified.
-
-    The standard \l QItemDelegate class informs the view when it has
-    finished editing by emitting the
-    \l{QAbstractItemDelegate::closeEditor()}{closeEditor()} signal.
-    The view ensures that the editor widget is closed and destroyed. In
-    this example, we only provide simple editing facilities, so we need
-    never emit this signal.
-
-    All the operations on data are performed through the interface
-    provided by \l QAbstractItemModel. This makes the delegate mostly
-    independent from the type of data it manipulates, but some
-    assumptions must be made in order to use certain types of
-    editor widgets. In this example, we have assumed that the model
-    always contains integer values, but we can still use this
-    delegate with different kinds of models because \l{QVariant}
-    provides sensible default values for unexpected data.
-
-    \section3 Updating the editor's geometry
-
-    It is the responsibility of the delegate to manage the editor's
-    geometry. The geometry must be set when the editor is created, and
-    when the item's size or position in the view is changed. Fortunately,
-    the view provides all the necessary geometry information inside a
-    \l{QStyleOptionViewItem}{view option} object.
-
-    \snippet examples/itemviews/spinboxdelegate/delegate.cpp 4
-
-    In this case, we just use the geometry information provided by the
-    view option in the item rectangle. A delegate that renders items with
-    several elements would not use the item rectangle directly. It would
-    position the editor in relation to the other elements in the item.
-
-    \target EditingHints
-    \section3 Editing hints
-
-    After editing, delegates should provide hints to the other components
-    about the result of the editing process, and provide hints that will
-    assist any subsequent editing operations. This is achieved by
-    emitting the \l{QAbstractItemDelegate::closeEditor()}{closeEditor()}
-    signal with a suitable hint. This is taken care of by the default
-    QItemDelegate event filter which we installed on the spin box when
-    it was constructed.
-
-    The behavior of the spin box could be adjusted to make it more user
-    friendly. In the default event filter supplied by QItemDelegate, if
-    the user hits \key Return to confirm their choice in the spin box,
-    the delegate commits the value to the model and closes the spin box.
-    We can change this behavior by installing our own event filter on the
-    spin box, and provide editing hints that suit our needs; for example,
-    we might emit \l{QAbstractItemDelegate::closeEditor()}{closeEditor()}
-    with the \l{QAbstractItemDelegate::EndEditHint}{EditNextItem} hint to
-    automatically start editing the next item in the view.
-
-    Another approach that does not require the use of an event
-    filter is to provide our own editor widget, perhaps subclassing
-    QSpinBox for convenience. This alternative approach would give us
-    more control over how the editor widget behaves at the cost of
-    writing additional code. It is usually easier to install an event
-    filter in the delegate if you need to customize the behavior of
-    a standard Qt editor widget.
-
-    Delegates do not have to emit these hints, but those that do not will
-    be less integrated into applications, and will be less usable than
-    those that emit hints to support common editing actions.
-
-    \section1 Handling selections in item views
-
-    \section2 Concepts
-
-    The selection model used in the item view classes offers many improvements
-    over the selection model used in Qt 3. It provides a more general
-    description of selections based on the facilities of the model/view
-    architecture. Although the standard classes for manipulating selections are
-    sufficient for the item views provided, the selection model allows you to
-    create specialized selection models to suit the requirements for your own
-    item models and views.
-
-    Information about the items selected in a view is stored in an instance of
-    the \l QItemSelectionModel class. This maintains model indexes for items in
-    a single model, and is independent of any views. Since there can be many
-    views onto a model, it is possible to share selections between views,
-    allowing applications to show multiple views in a consistent way.
-
-    Selections are made up of \e{selection ranges}. These efficiently maintain
-    information about large selections of items by recording only the starting
-    and ending model indexes for each range of selected items. Non-contiguous
-    selections of items are constructed by using more than one selection range
-    to describe the selection.
-
-    Selections are applied to a collection of model indexes held by a selection
-    model. The most recent selection of items applied is known as the
-    \e{current selection}. The effects of this selection can be modified even
-    after its application through the use of certain types of selection
-    commands. These are discussed later in this section.
-
-    \section3 Current item and selected items
-
-    In a view, there is always a current item and a selected item - two
-    independent states. An item can be the current item and selected at the
-    same time. The view is responsible for ensuring that there is always a
-    current item as keyboard navigation, for example, requires a current item.
-
-    The table below highlights the differences between current item and
-    selected items.
-
-    \table
-    \header
-        \li  Current Item
-        \li  Selected Items
-
-    \row
-        \li  There can only be one current item.
-        \li  There can be multiple selected items.
-    \row
-        \li  The current item will be changed with key navigation or mouse
-            button clicks.
-        \li  The selected state of items is set or unset, depending on several
-            pre-defined modes - e.g., single selection, multiple selection,
-            etc. - when the user interacts with the items.
-    \row
-        \li  The current item will be edited if the edit key, \gui F2, is
-            pressed or the item is double-clicked (provided that editing is
-            enabled).
-        \li  The current item can be used together with an anchor to specify a
-            range that should be selected or deselected (or a combination of
-            the two).
-    \row
-        \li  The current item is indicated by the focus rectangle.
-        \li  The selected items are indicated with the selection rectangle.
-    \endtable
-
-    When manipulating selections, it is often helpful to think of
-    \l QItemSelectionModel as a record of the selection state of all the items
-    in an item model. Once a selection model is set up, collections of items
-    can be selected, deselected, or their selection states can be toggled
-    without the need to know which items are already selected. The indexes of
-    all selected items can be retrieved at any time, and other components can
-    be informed of changes to the selection model via the signals and slots
-    mechanism.
-
-    \section2 Using a selection model
-
-    The standard view classes provide default selection models that can
-    be used in most applications. A selection model belonging to one view
-    can be obtained using the view's
-    \l{QAbstractItemView::selectionModel()}{selectionModel()} function,
-    and shared between many views with
-    \l{QAbstractItemView::setSelectionModel()}{setSelectionModel()},
-    so the construction of new selection models is generally not required.
-
-    A selection is created by specifying a model, and a pair of model
-    indexes to a \l QItemSelection. This uses the indexes to refer to items
-    in the given model, and interprets them as the top-left and bottom-right
-    items in a block of selected items.
-    To apply the selection to items in a model requires the selection to be
-    submitted to a selection model; this can be achieved in a number of ways,
-    each having a different effect on the selections already present in the
-    selection model.
-
-    \section3 Selecting items
-
-    To demonstrate some of the principal features of selections, we construct
-    an instance of a custom table model with 32 items in total, and open a
-    table view onto its data:
-
-    \snippet doc/src/snippets/itemselection/main.cpp 0
-
-    The table view's default selection model is retrieved for later use.
-    We do not modify any items in the model, but instead select a few
-    items that the view will display at the top-left of the table. To do
-    this, we need to retrieve the model indexes corresponding to the
-    top-left and bottom-right items in the region to be selected:
-
-    \snippet doc/src/snippets/itemselection/main.cpp 1
-
-    To select these items in the model, and see the corresponding change
-    in the table view, we need to construct a selection object then apply
-    it to the selection model:
-
-    \snippet doc/src/snippets/itemselection/main.cpp 2
-
-    The selection is applied to the selection model using a command
-    defined by a combination of
-    \l{QItemSelectionModel::SelectionFlag}{selection flags}.
-    In this case, the flags used cause the items recorded in the
-    selection object to be included in the selection model, regardless
-    of their previous state. The resulting selection is shown by the view.
-
-    \img selected-items1.png
-
-    The selection of items can be modified using various operations that
-    are defined by the selection flags. The selection that results from
-    these operations may have a complex structure, but it is represented
-    efficiently by the selection model. The use of different selection
-    flags to manipulate the selected items is described when we examine
-    how to update a selection.
-
-    \section3 Reading the selection state
-
-    The model indexes stored in the selection model can be read using
-    the \l{QItemSelectionModel::selectedIndexes()}{selectedIndexes()}
-    function. This returns an unsorted list of model indexes that we can
-    iterate over as long as we know which model they are for:
-
-    \snippet doc/src/snippets/reading-selections/window.cpp 0
-
-    The above code uses Qt's convenient \l{Container Classes}{foreach
-    keyword} to iterate over, and modify, the items corresponding to the
-    indexes returned by the selection model.
-
-    The selection model emits signals to indicate changes in the
-    selection. These notify other components about changes to both the
-    selection as a whole and the currently focused item in the item
-    model. We can connect the
-    \l{QItemSelectionModel::selectionChanged()}{selectionChanged()}
-    signal to a slot, and examine the items in the model that are selected or
-    deselected when the selection changes. The slot is called with two
-    \l{QItemSelection} objects: one contains a list of indexes that
-    correspond to newly selected items; the other contains indexes that
-    correspond to newly deselected items.
-
-    In the following code, we provide a slot that receives the
-    \l{QItemSelectionModel::selectionChanged()}{selectionChanged()}
-    signal, fills in the selected items with
-    a string, and clears the contents of the deselected items.
-
-    \snippet doc/src/snippets/updating-selections/window.cpp 0
-    \snippet doc/src/snippets/updating-selections/window.cpp 1
-    \codeline
-    \snippet doc/src/snippets/updating-selections/window.cpp 2
-
-    We can keep track of the currently focused item by connecting the
-    \l{QItemSelectionModel::currentChanged()}{currentChanged()} signal
-    to a slot that is called with two model indexes. These correspond to
-    the previously focused item, and the currently focused item.
-
-    In the following code, we provide a slot that receives the
-    \l{QItemSelectionModel::currentChanged()}{currentChanged()} signal,
-    and uses the information provided to update the status bar of a
-    \l QMainWindow:
-
-    \snippet doc/src/snippets/updating-selections/window.cpp 3
-
-    Monitoring selections made by the user is straightforward with these
-    signals, but we can also update the selection model directly.
-
-    \section3 Updating a selection
-
-    Selection commands are provided by a combination of selection flags,
-    defined by \l{QItemSelectionModel::SelectionFlag}.
-    Each selection flag tells the selection model how to update its
-    internal record of selected items when either of the
-    \l{QItemSelection::select()}{select()} functions are called.
-    The most commonly used flag is the
-    \l{QItemSelectionModel::SelectionFlag}{Select} flag
-    which instructs the selection model to record the specified items as
-    being selected. The
-    \l{QItemSelectionModel::SelectionFlag}{Toggle} flag causes the
-    selection model to invert the state of the specified items,
-    selecting any deselected items given, and deselecting any currently
-    selected items. The \l{QItemSelectionModel::SelectionFlag}{Deselect}
-    flag deselects all the specified items.
-
-    Individual items in the selection model are updated by creating a
-    selection of items, and applying them to the selection model. In the
-    following code, we apply a second selection of items to the table
-    model shown above, using the
-    \l{QItemSelectionModel::SelectionFlag}{Toggle} command to invert the
-    selection state of the items given.
-
-    \snippet doc/src/snippets/itemselection/main.cpp 3
-
-    The results of this operation are displayed in the table view,
-    providing a convenient way of visualizing what we have achieved:
-
-    \img selected-items2.png
-
-    By default, the selection commands only operate on the individual
-    items specified by the model indexes. However, the flag used to
-    describe the selection command can be combined with additional flags
-    to change entire rows and columns. For example if you call
-    \l{QItemSelectionModel::select()}{select()} with only one index, but
-    with a command that is a combination of
-    \l{QItemSelectionModel::SelectionFlag}{Select} and
-    \l{QItemSelectionModel::SelectionFlag}{Rows}, the
-    entire row containing the item referred to is selected.
-    The following code demonstrates the use of the
-    \l{QItemSelectionModel::SelectionFlag}{Rows} and
-    \l{QItemSelectionModel::SelectionFlag}{Columns} flags:
-
-    \snippet doc/src/snippets/itemselection/main.cpp 4
-
-    Although only four indexes are supplied to the selection model, the
-    use of the
-    \l{QItemSelectionModel::SelectionFlag}{Columns} and
-    \l{QItemSelectionModel::SelectionFlag}{Rows} selection flags means
-    that two columns and two rows are selected. The following image shows
-    the result of these two selections:
-
-    \img selected-items3.png
-
-    The commands performed on the example model have all involved
-    accumulating a selection of items in the model. It is also possible
-    to clear the selection, or to replace the current selection with
-    a new one.
-
-    To replace the current selection with a new selection, combine
-    the other selection flags with the
-    \l{QItemSelectionModel::SelectionFlag}{Current} flag. A command using
-    this flag instructs the selection model to replace its current collection
-    of model indexes with those specified in a call to
-    \l{QItemSelectionModel::select()}{select()}.
-    To clear all selections before you start adding new ones,
-    combine the other selection flags with the
-    \l{QItemSelectionModel::SelectionFlag}{Clear} flag. This
-    has the effect of resetting the selection model's collection of model
-    indexes.
-
-    \section3 Selecting all items in a model
-
-    To select all items in a model, it is necessary to create a
-    selection for each level of the model that covers all items in that
-    level. We do this by retrieving the indexes corresponding to the
-    top-left and bottom-right items with a given parent index:
-
-    \snippet doc/src/snippets/reading-selections/window.cpp 2
-
-    A selection is constructed with these indexes and the model. The
-    corresponding items are then selected in the selection model:
-
-    \snippet doc/src/snippets/reading-selections/window.cpp 3
-
-    This needs to be performed for all levels in the model.
-    For top-level items, we would define the parent index in the usual way:
-
-    \snippet doc/src/snippets/reading-selections/window.cpp 1
-
-    For hierarchical models, the
-    \l{QAbstractItemModel::hasChildren()}{hasChildren()} function is used to
-    determine whether any given item is the parent of another level of
-    items.
-
-    \section1 Creating new models
-
-    The separation of functionality between the model/view components allows
-    models to be created that can take advantage of existing views. This
-    approach lets us present data from a variety of sources using standard
-    graphical user interface components, such as QListView, QTableView, and
-    QTreeView.
-
-    The QAbstractItemModel class provides an interface that is flexible
-    enough to support data sources that arrange information in hierarchical
-    structures, allowing for the possibility that data will be inserted,
-    removed, modified, or sorted in some way. It also provides support for
-    drag and drop operations.
-
-    The QAbstractListModel and QAbstractTableModel classes provide support
-    for interfaces to simpler non-hierarchical data structures, and are
-    easier to use as a starting point for simple list and table models.
-
-    In this section, we create a simple read-only model to explore
-    the basic principles of the model/view architecture. Later in this
-    section, we adapt this simple model so that items can be modified
-    by the user.
-
-    For an example of a more complex model, see the
-    \l{itemviews/simpletreemodel}{Simple Tree Model} example.
-
-    The requirements of QAbstractItemModel subclasses is described in more
-    detail in the \l{Model Subclassing Reference} document.
-
-    \section2 Designing a model
-
-    When creating a new model for an existing data structure, it is
-    important to consider which type of model should be used to
-    provide an interface onto the data. If the data structure can be
-    represented as a list or table of items, you can subclass
-    QAbstractListModel or QAbstractTableModel since these classes
-    provide suitable default implementations for many functions.
-
-    However, if the underlying data structure can only be represented
-    by a hierarchical tree structure, it is necessary to subclass
-    QAbstractItemModel. This approach is taken in the
-    \l{itemviews/simpletreemodel}{Simple Tree Model} example.
-
-    In this section, we implement a simple model based on a list of
-    strings, so the QAbstractListModel provides an ideal base class on
-    which to build.
-
-    Whatever form the underlying data structure takes, it is
-    usually a good idea to supplement the standard QAbstractItemModel API
-    in specialized models with one that allows more natural access to the
-    underlying data structure. This makes it easier to populate the model
-    with data, yet still enables other general model/view components to
-    interact with it using the standard API. The model described below
-    provides a custom constructor for just this purpose.
-
-    \section2 A read-only example model
-
-    The model implemented here is a simple, non-hierarchical, read-only data
-    model based on the standard QStringListModel class. It has a \l QStringList
-    as its internal data source, and implements only what is needed to make a
-    functioning model. To make the implementation easier, we subclass
-    \l QAbstractListModel because it defines sensible default behavior for list
-    models, and it exposes a simpler interface than the \l QAbstractItemModel
-    class.
-
-    When implementing a model it is important to remember that
-    \l QAbstractItemModel does not store any data itself, it merely
-    presents an interface that the views use to access the data.
-    For a minimal read-only model it is only necessary to implement a few
-    functions as there are default implementations for most of the
-    interface. The class declaration is as follows:
-
-    \snippet doc/src/snippets/stringlistmodel/model.h 0
-    \snippet doc/src/snippets/stringlistmodel/model.h 1
-    \codeline
-    \snippet doc/src/snippets/stringlistmodel/model.h 5
-
-    Apart from the model's constructor, we only need to implement two
-    functions: \l{QAbstractItemModel::rowCount()}{rowCount()} returns the
-    number of rows in the model and \l{QAbstractItemModel::data()}{data()}
-    returns an item of data corresponding to a specified model index.
-
-    Well behaved models also implement
-    \l{QAbstractItemModel::headerData()}{headerData()} to give tree and
-    table views something to display in their headers.
-
-    Note that this is a non-hierarchical model, so we don't have to worry
-    about the parent-child relationships. If our model was hierarchical, we
-    would also have to implement the
-    \l{QAbstractItemModel::index()}{index()} and
-    \l{QAbstractItemModel::parent()}{parent()} functions.
-
-    The list of strings is stored internally in the \c stringList private
-    member variable.
-
-    \section3 Dimensions of the model
-
-    We want the number of rows in the model to be the same as the number of
-    strings in the string list. We implement the
-    \l{QAbstractItemModel::rowCount()}{rowCount()} function with this in
-    mind:
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 0
-
-    Since the model is non-hierarchical, we can safely ignore the model index
-    corresponding to the parent item. By default, models derived from
-    QAbstractListModel only contain one column, so we do not need to
-    reimplement the \l{QAbstractItemModel::columnCount()}{columnCount()}
-    function.
-
-    \section3 Model headers and data
-
-    For items in the view, we want to return the strings in the string list.
-    The \l{QAbstractItemModel::data()}{data()} function is responsible for
-    returning the item of data that corresponds to the index argument:
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 1-data-read-only
-
-    We only return a valid QVariant if the model index supplied is valid,
-    the row number is within the range of items in the string list, and the
-    requested role is one that we support.
-
-    Some views, such as QTreeView and QTableView, are able to display headers
-    along with the item data. If our model is displayed in a view with headers,
-    we want the headers to show the row and column numbers. We can provide
-    information about the headers by subclassing the
-    \l{QAbstractItemModel::headerData()}{headerData()} function:
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 2
-
-    Again, we return a valid QVariant only if the role is one that we support.
-    The orientation of the header is also taken into account when deciding the
-    exact data to return.
-
-    Not all views display headers with the item data, and those that do may
-    be configured to hide them. Nonetheless, it is recommended that you
-    implement the \l{QAbstractItemModel::headerData()}{headerData()} function
-    to provide relevant information about the data provided by the model.
-
-    An item can have several roles, giving out different data depending on the
-    role specified. The items in our model only have one role,
-    \l{Qt::ItemDataRole}{DisplayRole}, so we return the data
-    for items irrespective of the role specified.
-    However, we could reuse the data we provide for the
-    \l{Qt::ItemDataRole}{DisplayRole} in
-    other roles, such as the
-    \l{Qt::ItemDataRole}{ToolTipRole} that views can use to
-    display information about items in a tooltip.
-
-    \section2 An editable model
-
-    The read-only model shows how simple choices could be presented to the
-    user but, for many applications, an editable list model is much more
-    useful. We can modify the read-only model to make the items editable
-    by changing the data() function we implemented for read-only, and
-    by implementing two extra functions:
-    \l{QAbstractItemModel::flags()}{flags()} and
-    \l{QAbstractItemModel::setData()}{setData()}.
-    The following function declarations are added to the class definition:
-
-    \snippet doc/src/snippets/stringlistmodel/model.h 2
-    \snippet doc/src/snippets/stringlistmodel/model.h 3
-
-    \section3 Making the model editable
-
-    A delegate checks whether an item is editable before creating an
-    editor. The model must let the delegate know that its items are
-    editable. We do this by returning the correct flags for each item in
-    the model; in this case, we enable all items and make them both
-    selectable and editable:
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 3
-
-    Note that we do not have to know how the delegate performs the actual
-    editing process. We only have to provide a way for the delegate to set the
-    data in the model. This is achieved through the
-    \l{QAbstractItemModel::setData()}{setData()} function:
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 4
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 5
-
-    In this model, the item in the string list that corresponds to the
-    model index is replaced by the value provided. However, before we
-    can modify the string list, we must make sure that the index is
-    valid, the item is of the correct type, and that the role is
-    supported. By convention, we insist that the role is the
-    \l{Qt::ItemDataRole}{EditRole} since this is the role used by the
-    standard item delegate. For boolean values, however, you can use
-    Qt::CheckStateRole and set the Qt::ItemIsUserCheckable flag; a
-    checkbox is then used for editing the value. The underlying
-    data in this model is the same for all roles, so this detail just
-    makes it easier to integrate the model with standard components.
-
-    When the data has been set, the model must let the views know that some
-    data has changed. This is done by emitting the
-    \l{QAbstractItemModel::dataChanged()}{dataChanged()} signal. Since only
-    one item of data has changed, the range of items specified in the signal
-    is limited to just one model index.
-
-    Also the data() function needs to be changed to add the Qt::EditRole test:
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 1
-
-    \section3 Inserting and removing rows
-
-    It is possible to change the number of rows and columns in a model. In the
-    string list model it only makes sense to change the number of rows, so we
-    only reimplement the functions for inserting and removing rows. These are
-    declared in the class definition:
-
-    \snippet doc/src/snippets/stringlistmodel/model.h 4
-
-    Since rows in this model correspond to strings in a list, the
-    \c insertRows() function inserts a number of empty strings into the string
-    list before the specified position. The number of strings inserted is
-    equivalent to the number of rows specified.
-
-    The parent index is normally used to determine where in the model the
-    rows should be added. In this case, we only have a single top-level list
-    of strings, so we just insert empty strings into that list.
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 6
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 7
-
-    The model first calls the
-    \l{QAbstractItemModel::beginInsertRows()}{beginInsertRows()} function to
-    inform other components that the number of rows is about to change. The
-    function specifies the row numbers of the first and last new rows to be
-    inserted, and the model index for their parent item. After changing the
-    string list, it calls
-    \l{QAbstractItemModel::endInsertRows()}{endInsertRows()} to complete the
-    operation and inform other components that the dimensions of the model
-    have changed, returning true to indicate success.
-
-    The function to remove rows from the model is also simple to write.
-    The rows to be removed from the model are specified by the position and
-    the number of rows given.
-    We ignore the parent index to simplify our implementation, and just
-    remove the corresponding items from the string list.
-
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 8
-    \snippet doc/src/snippets/stringlistmodel/model.cpp 9
-
-    The \l{QAbstractItemModel::beginRemoveRows()}{beginRemoveRows()} function
-    is always called before any underlying data is removed, and specifies the
-    first and last rows to be removed. This allows other components to access
-    the data before it becomes unavailable.
-    After the rows have been removed, the model emits
-    \l{QAbstractItemModel::endRemoveRows()}{endRemoveRows()} to finish the
-    operation and let other components know that the dimensions of the model
-    have changed.
-
-    \section2 Next steps
-
-    We can display the data provided by this model, or any other model, using
-    the \l QListView class to present the model's items in the form of a vertical
-    list.
-    For the string list model, this view also provides a default editor so that
-    the items can be manipulated. We examine the possibilities made available by
-    the standard view classes in \l{View Classes}.
-
-    The \l{Model Subclassing Reference} document discusses the requirements of
-    QAbstractItemModel subclasses in more detail, and provides a guide to the
-    virtual functions that must be implemented to enable various features in
-    different types of models.
-
-    \section1 Item view convenience classes
-
-    Qt 4 also introduced some standard widgets to provide classic
-    item-based container widgets. These behave in a similar way to the
-    item view classes in Qt 3, but have been rewritten to use the
-    underlying model/view framework for performance and
-    maintainability. The old item view classes are still available in
-    the compatibility library (see the \l{porting4.html}{Porting
-    Guide} for more information).
-
-    The item-based widgets have been given names which reflect their uses:
-    \c QListWidget provides a list of items, \c QTreeWidget displays a
-    multi-level tree structure, and \c QTableWidget provides a table of cell
-    items. Each class inherits the behavior of the \c QAbstractItemView
-    class which implements common behavior for item selection and header
-    management.
-
-    \section2 List widgets
-
-    Single level lists of items are typically displayed using a \c QListWidget
-    and a number of \c{QListWidgetItem}s. A list widget is constructed in the
-    same way as any other widget:
-
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 0
-
-    List items can be added directly to the list widget when they are
-    constructed:
-
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 3
-
-    They can also be constructed without a parent list widget and added to
-    a list at some later time:
-
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 6
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 7
-
-    Each item in a list can display a text label and an icon. The colors
-    and font used to render the text can be changed to provide a customized
-    appearance for items. Tooltips, status tips, and "What's
-    This?" help are all easily configured to ensure that the list is properly
-    integrated into the application.
-
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 8
-
-    By default, items in a list are presented in the order of their creation.
-    Lists of items can be sorted according to the criteria given in
-    \l{Qt::SortOrder} to produce a list of items that is sorted in forward or
-    reverse alphabetical order:
-
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 4
-    \snippet doc/src/snippets/qlistwidget-using/mainwindow.cpp 5
-
-    \section2 Tree widgets
-
-    Trees or hierarchical lists of items are provided by the \c QTreeWidget
-    and \c QTreeWidgetItem classes. Each item in the tree widget can have
-    child items of its own, and can display a number of columns of
-    information. Tree widgets are created just like any other widget:
-
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 0
-
-    Before items can be added to the tree widget, the number of columns must
-    be set. For example, we could define two columns, and create a header
-    to provide labels at the top of each column:
-
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 1
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 2
-
-    The easiest way to set up the labels for each section is to supply a string
-    list. For more sophisticated headers, you can construct a tree item,
-    decorate it as you wish, and use that as the tree widget's header.
-
-    Top-level items in the tree widget are constructed with the tree widget as
-    their parent widget. They can be inserted in an arbitrary order, or you
-    can ensure that they are listed in a particular order by specifying the
-    previous item when constructing each item:
-
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 3
-    \codeline
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 4
-
-    Tree widgets deal with top-level items slightly differently to other
-    items from deeper within the tree. Items can be removed from the top
-    level of the tree by calling the tree widget's
-    \l{QTreeWidget::takeTopLevelItem()}{takeTopLevelItem()} function, but
-    items from lower levels are removed by calling their parent item's
-    \l{QTreeWidgetItem::takeChild()}{takeChild()} function.
-    Items are inserted in the top level of the tree with the
-    \l{QTreeWidget::insertTopLevelItem()}{insertTopLevelItem()} function.
-    At lower levels in the tree, the parent item's
-    \l{QTreeWidgetItem::insertChild()}{insertChild()} function is used.
-
-    It is easy to move items around between the top level and lower levels
-    in the tree. We just need to check whether the items are top-level items
-    or not, and this information is supplied by each item's \c parent()
-    function. For example, we can remove the current item in the tree widget
-    regardless of its location:
-
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 10
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 11
-
-    Inserting the item somewhere else in the tree widget follows the same
-    pattern:
-
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 8
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 9
-
-    \section2 Table widgets
-
-    Tables of items similar to those found in spreadsheet applications
-    are constructed with the \c QTableWidget and \c QTableWidgetItem. These
-    provide a scrolling table widget with headers and items to use within it.
-
-    Tables can be created with a set number of rows and columns, or these
-    can be added to an unsized table as they are needed.
-
-    \snippet doc/src/snippets/qtablewidget-using/mainwindow.h 0
-    \snippet doc/src/snippets/qtablewidget-using/mainwindow.cpp 0
-
-    Items are constructed outside the table before being added to the table
-    at the required location:
-
-    \snippet doc/src/snippets/qtablewidget-using/mainwindow.cpp 3
-
-    Horizontal and vertical headers can be added to the table by constructing
-    items outside the table and using them as headers:
-
-    \snippet doc/src/snippets/qtablewidget-using/mainwindow.cpp 1
-
-    Note that the rows and columns in the table begin at zero.
-
-    \section2 Common features
-
-    There are a number of item-based features common to each of the
-    convenience classes that are available through the same interfaces
-    in each class. We present these in the following sections with some
-    examples for different widgets.
-    Look at the list of \l{Model/View Classes} for each of the widgets
-    for more details about the use of each function used.
-
-    \section3 Hidden items
-
-    It is sometimes useful to be able to hide items in an item view widget
-    rather than remove them. Items for all of the above widgets can be
-    hidden and later shown again. You can determine whether an item is hidden
-    by calling the isItemHidden() function, and items can be hidden with
-    \c setItemHidden().
-
-    Since this operation is item-based, the same function is available for
-    all three convenience classes.
-
-    \section3 Selections
-
-    The way items are selected is controlled by the widget's selection mode
-    (\l{QAbstractItemView::SelectionMode}).
-    This property controls whether the user can select one or many items and,
-    in many-item selections, whether the selection must be a continuous range
-    of items. The selection mode works in the same way for all of the
-    above widgets.
-
-    \table
-    \row
-    \li \img selection-single.png
-    \li \b{Single item selections:}
-    Where the user needs to choose a single item from a widget, the
-    default \c SingleSelection mode is most suitable. In this mode, the
-    current item and the selected item are the same.
-
-    \row
-    \li \img selection-multi.png
-    \li \b{Multi-item selections:}
-    In this mode, the user can toggle the selection state of any item in the
-    widget without changing the existing selection, much like the way
-    non-exclusive checkboxes can be toggled independently.
-
-    \row
-    \li \img selection-extended.png
-    \li \b{Extended selections:}
-    Widgets that often require many adjacent items to be selected, such
-    as those found in spreadsheets, require the \c ExtendedSelection mode.
-    In this mode, continuous ranges of items in the widget can be selected
-    with both the mouse and the keyboard.
-    Complex selections, involving many items that are not adjacent to other
-    selected items in the widget, can also be created if modifier keys are
-    used.
-
-    If the user selects an item without using a modifier key, the existing
-    selection is cleared.
-    \endtable
-
-    The selected items in a widget are read using the \c selectedItems()
-    function, providing a list of relevant items that can be iterated over.
-    For example, we can find the sum of all the numeric values within a
-    list of selected items with the following code:
-
-    \snippet doc/src/snippets/qtablewidget-using/mainwindow.cpp 4
-
-    Note that for the single selection mode, the current item will be in
-    the selection. In the multi-selection and extended selection modes, the
-    current item may not lie within the selection, depending on the way the
-    user formed the selection.
-
-    \section3 Searching
-
-    It is often useful to be able to find items within an item view widget,
-    either as a developer or as a service to present to users. All three
-    item view convenience classes provide a common \c findItems() function
-    to make this as consistent and simple as possible.
-
-    Items are searched for by the text that they contain according to
-    criteria specified by a selection of values from Qt::MatchFlags.
-    We can obtain a list of matching items with the \c findItems()
-    function:
-
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 6
-    \snippet doc/src/snippets/qtreewidget-using/mainwindow.cpp 7
-
-    The above code causes items in a tree widget to be selected if they
-    contain the text given in the search string. This pattern can also be
-    used in the list and table widgets.
-
-    \section1 Using Drag and Drop with Item Views
-
-    Qt's drag and drop infrastructure is fully supported by the model/view framework.
-    Items in lists, tables, and trees can be dragged within the views, and data can be
-    imported and exported as MIME-encoded data.
-
-    The standard views automatically support internal drag and drop, where items are
-    moved around to change the order in which they are displayed. By default, drag and
-    drop is not enabled for these views because they are configured for the simplest,
-    most common uses. To allow items to be dragged around, certain properties of the
-    view need to be enabled, and the items themselves must also allow dragging to occur.
-
-    The requirements for a model that only allows items to be exported from a
-    view, and which does not allow data to be dropped into it, are fewer than
-    those for a fully-enabled drag and drop model.
-
-    See also the \l{Model Subclassing Reference} for more information about
-    enabling drag and drop support in new models.
-
-    \section2 Using convenience views
-
-    Each of the types of item used with QListWidget, QTableWidget, and QTreeWidget
-    is configured to use a different set of flags by default. For example, each
-    QListWidgetItem or QTreeWidgetItem is initially enabled, checkable, selectable,
-    and can be used as the source of a drag and drop operation; each QTableWidgetItem
-    can also be edited and used as the target of a drag and drop operation.
-
-    Although all of the standard items have one or both flags set for drag and drop,
-    you generally need to set various properties in the view itself to take advantage
-    of the built-in support for drag and drop:
-
-    \list
-    \li To enable item dragging, set the view's
-       \l{QAbstractItemView::dragEnabled}{dragEnabled} property to \c true.
-    \li To allow the user to drop either internal or external items within the view,
-       set the view's \l{QAbstractScrollArea::}{viewport()}'s
-       \l{QWidget::acceptDrops}{acceptDrops} property to \c true.
-    \li To show the user where the item currently being dragged will be placed if
-       dropped, set the view's \l{QAbstractItemView::showDropIndicator}{showDropIndicator}
-       property. This provides the user with continuously updating information about
-       item placement within the view.
-    \endlist
-
-    For example, we can enable drag and drop in a list widget with the following lines
-    of code:
-
-    \snippet doc/src/snippets/qlistwidget-dnd/mainwindow.cpp 0
-
-    The result is a list widget which allows the items to be copied
-    around within the view, and even lets the user drag items between
-    views containing the same type of data. In both situations, the
-    items are copied rather than moved.
-
-    To enable the user to move the items around within the view, we
-    must set the list widget's \l {QAbstractItemView::}{dragDropMode}:
-
-    \snippet doc/src/snippets/qlistwidget-dnd/mainwindow.cpp 1
-
-    \section2 Using model/view classes
-
-    Setting up a view for drag and drop follows the same pattern used with the
-    convenience views. For example, a QListView can be set up in the same way as a
-    QListWidget:
-
-    \snippet doc/src/snippets/qlistview-dnd/mainwindow.cpp 0
-
-    Since access to the data displayed by the view is controlled by a model, the
-    model used also has to provide support for drag and drop operations. The
-    actions supported by a model can be specified by reimplementing the
-    QAbstractItemModel::supportedDropActions() function. For example, copy and
-    move operations are enabled with the following code:
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 10
-
-    Although any combination of values from Qt::DropActions can be given, the
-    model needs to be written to support them. For example, to allow Qt::MoveAction
-    to be used properly with a list model, the model must provide an implementation
-    of QAbstractItemModel::removeRows(), either directly or by inheriting the
-    implementation from its base class.
-
-    \section3 Enabling drag and drop for items
-
-    Models indicate to views which items can be dragged, and which will accept drops,
-    by reimplementing the QAbstractItemModel::flags() function to provide suitable
-    flags.
-
-    For example, a model which provides a simple list based on QAbstractListModel
-    can enable drag and drop for each of the items by ensuring that the flags
-    returned contain the \l Qt::ItemIsDragEnabled and \l Qt::ItemIsDropEnabled
-    values:
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 7
-
-    Note that items can be dropped into the top level of the model, but dragging is
-    only enabled for valid items.
-
-    In the above code, since the model is derived from QStringListModel, we
-    obtain a default set of flags by calling its implementation of the flags()
-    function.
-
-    \section3 Encoding exported data
-
-    When items of data are exported from a model in a drag and drop operation, they
-    are encoded into an appropriate format corresponding to one or more MIME types.
-    Models declare the MIME types that they can use to supply items by reimplementing
-    the QAbstractItemModel::mimeTypes() function, returning a list of standard MIME
-    types.
-
-    For example, a model that only provides plain text would provide the following
-    implementation:
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 9
-
-    The model must also provide code to encode data in the advertised format. This
-    is achieved by reimplementing the QAbstractItemModel::mimeData() function to
-    provide a QMimeData object, just as in any other drag and drop operation.
-
-    The following code shows how each item of data, corresponding to a given list of
-    indexes, is encoded as plain text and stored in a QMimeData object.
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 8
-
-    Since a list of model indexes is supplied to the function, this approach is general
-    enough to be used in both hierarchical and non-heirarchical models.
-
-    Note that custom datatypes must be declared as \l{QMetaObject}{meta objects}
-    and that stream operators must be implemented for them. See the QMetaObject
-    class description for details.
-
-    \section3 Inserting dropped data into a model
-
-    The way that any given model handles dropped data depends on both its type
-    (list, table, or tree) and the way its contents is likely to be presented to
-    the user. Generally, the approach taken to accommodate dropped data should
-    be the one that most suits the model's underlying data store.
-
-    Different types of model tend to handle dropped data in different ways. List
-    and table models only provide a flat structure in which items of data are
-    stored. As a result, they may insert new rows (and columns) when data is
-    dropped on an existing item in a view, or they may overwrite the item's
-    contents in the model using some of the data supplied. Tree models are
-    often able to add child items containing new data to their underlying data
-    stores, and will therefore behave more predictably as far as the user
-    is concerned.
-
-    Dropped data is handled by a model's reimplementation of
-    QAbstractItemModel::dropMimeData(). For example, a model that handles a
-    simple list of strings can provide an implementation that handles data
-    dropped onto existing items separately to data dropped into the top level
-    of the model (i.e., onto an invalid item).
-
-    The model first has to make sure that the operation should be acted on,
-    the data supplied is in a format that can be used, and that its destination
-    within the model is valid:
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 0
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 1
-
-    A simple one column string list model can indicate failure if the data
-    supplied is not plain text, or if the column number given for the drop
-    is invalid.
-
-    The data to be inserted into the model is treated differently depending on
-    whether it is dropped onto an existing item or not. In this simple example,
-    we want to allow drops between existing items, before the first item in the
-    list, and after the last item.
-
-    When a drop occurs, the model index corresponding to the parent item will
-    either be valid, indicating that the drop occurred on an item, or it will
-    be invalid, indicating that the drop occurred somewhere in the view that
-    corresponds to top level of the model.
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 2
-
-    We initially examine the row number supplied to see if we can use it
-    to insert items into the model, regardless of whether the parent index is
-    valid or not.
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 3
-
-    If the parent model index is valid, the drop occurred on an item. In this
-    simple list model, we find out the row number of the item and use that
-    value to insert dropped items into the top level of the model.
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 4
-
-    When a drop occurs elsewhere in the view, and the row number is unusable,
-    we append items to the top level of the model.
-
-    In hierarchical models, when a drop occurs on an item, it would be better to
-    insert new items into the model as children of that item. In the simple
-    example shown here, the model only has one level, so this approach is not
-    appropriate.
-
-    \section3 Decoding imported data
-
-    Each implementation of \l{QAbstractItemModel::dropMimeData()}{dropMimeData()} must
-    also decode the data and insert it into the model's underlying data structure.
-
-    For a simple string list model, the encoded items can be decoded and streamed
-    into a QStringList:
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 5
-
-    The strings can then be inserted into the underlying data store. For consistency,
-    this can be done through the model's own interface:
-
-    \snippet doc/src/snippets/qlistview-dnd/model.cpp 6
-
-    Note that the model will typically need to provide implementations of the
-    QAbstractItemModel::insertRows() and QAbstractItemModel::setData() functions.
-
-    \sa {Item Views Puzzle Example}
-
-    \section1 Proxy models
-
-    In the model/view framework, items of data supplied by a single model can be shared
-    by any number of views, and each of these can possibly represent the same information
-    in completely different ways.
-    Custom views and delegates are effective ways to provide radically different
-    representations of the same data. However, applications often need to provide
-    conventional views onto processed versions of the same data, such as differently-sorted
-    views onto a list of items.
-
-    Although it seems appropriate to perform sorting and filtering operations as internal
-    functions of views, this approach does not allow multiple views to share the results
-    of such potentially costly operations. The alternative approach, involving sorting
-    within the model itself, leads to the similar problem where each view has to display
-    items of data that are organized according to the most recent processing operation.
-
-    To solve this problem, the model/view framework uses proxy models to manage the
-    information supplied between individual models and views. Proxy models are components
-    that behave like ordinary models from the perspective of a view, and access data from
-    source models on behalf of that view. The signals and slots used by the model/view
-    framework ensure that each view is updated appropriately no matter how many proxy models
-    are placed between itself and the source model.
-
-    \section2 Using proxy models
-
-    Proxy models can be inserted between an existing model and any number of views.
-    Qt is supplied with a standard proxy model, QSortFilterProxyModel, that is usually
-    instantiated and used directly, but can also be subclassed to provide custom filtering
-    and sorting behavior. The QSortFilterProxyModel class can be used in the following way:
-
-    \snippet doc/src/snippets/qsortfilterproxymodel/main.cpp 0
-    \codeline
-    \snippet doc/src/snippets/qsortfilterproxymodel/main.cpp 1
-
-    Since proxy models are inherit from QAbstractItemModel, they can be connected to
-    any kind of view, and can be shared between views. They can also be used to
-    process the information obtained from other proxy models in a pipeline arrangement.
-
-    The QSortFilterProxyModel class is designed to be instantiated and used directly
-    in applications. More specialized proxy models can be created by subclassing this
-    classes and implementing the required comparison operations.
-
-    \section2 Customizing proxy models
-
-    Generally, the type of processing used in a proxy model involves mapping each item of
-    data from its original location in the source model to either a different location in
-    the proxy model. In some models, some items may have no corresponding location in the
-    proxy model; these models are \e filtering proxy models. Views access items using
-    model indexes provided by the proxy model, and these contain no information about the
-    source model or the locations of the original items in that model.
-
-    QSortFilterProxyModel enables data from a source model to be filtered before
-    being supplied to views, and also allows the contents of a source model to
-    be supplied to views as pre-sorted data.
-
-    \section3 Custom filtering models
-
-    The QSortFilterProxyModel class provides a filtering model that is fairly versatile,
-    and which can be used in a variety of common situations. For advanced users,
-    QSortFilterProxyModel can be subclassed, providing a mechanism that enables custom
-    filters to be implemented.
-
-    Subclasses of QSortFilterProxyModel can reimplement two virtual functions that are
-    called whenever a model index from the proxy model is requested or used:
-
-    \list
-    \li \l{QSortFilterProxyModel::filterAcceptsColumn()}{filterAcceptsColumn()} is used to
-       filter specific columns from part of the source model.
-    \li \l{QSortFilterProxyModel::filterAcceptsRow()}{filterAcceptsRow()} is used to filter
-       specific rows from part of the source model.
-    \endlist
-
-    The default implementations of the above functions in QSortFilterProxyModel
-    return true to ensure that all items are passed through to views; reimplementations
-    of these functions should return false to filter out individual rows and columns.
-
-    \section3 Custom sorting models
-
-    QSortFilterProxyModel instances use Qt's built-in qStableSort() function to set up
-    mappings between items in the source model and those in the proxy model, allowing a
-    sorted hierarchy of items to be exposed to views without modifying the structure of the
-    source model. To provide custom sorting behavior, reimplement the
-    \l{QSortFilterProxyModel::lessThan()}{lessThan()} function to perform custom
-    comparisons.
-
-    \section1 Model subclassing reference
-
-    Model subclasses need to provide implementations of many of the virtual functions
-    defined in the QAbstractItemModel base class. The number of these functions that need
-    to be implemented depends on the type of model - whether it supplies views with
-    a simple list, a table, or a complex hierarchy of items. Models that inherit from
-    QAbstractListModel and QAbstractTableModel can take advantage of the default
-    implementations of functions provided by those classes. Models that expose items
-    of data in tree-like structures must provide implementations for many of the
-    virtual functions in QAbstractItemModel.
-
-    The functions that need to be implemented in a model subclass can be divided into three
-    groups:
-
-    \list
-    \li \b{Item data handling:} All models need to implement functions to enable views and
-       delegates to query the dimensions of the model, examine items, and retrieve data.
-    \li \b{Navigation and index creation:} Hierarchical models need to provide functions
-       that views can call to navigate the tree-like structures they expose, and obtain
-       model indexes for items.
-    \li \b{Drag and drop support and MIME type handling:} Models inherit functions that
-       control the way that internal and external drag and drop operations are performed.
-       These functions allow items of data to be described in terms of MIME types that
-       other components and applications can understand.
-    \endlist
-
-    For more information, see the \l
-    {"Item View Classes" Chapter of C++ GUI Programming with Qt 4}.
-
-    \section2 Item data handling
-
-    Models can provide varying levels of access to the data they provide: They can be
-    simple read-only components, some models may support resizing operations, and
-    others may allow items to be edited.
-
-    \section2 Read-Only access
-
-    To provide read-only access to data provided by a model, the following functions
-    \e{must} be implemented in the model's subclass:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::flags()}{flags()}
-         \li Used by other components to obtain information about each item provided by
-            the model. In many models, the combination of flags should include
-            Qt::ItemIsEnabled and Qt::ItemIsSelectable.
-    \row \li \l{QAbstractItemModel::data()}{data()}
-         \li Used to supply item data to views and delegates. Generally, models only
-            need to supply data for Qt::DisplayRole and any application-specific user
-            roles, but it is also good practice to provide data for Qt::ToolTipRole,
-            Qt::AccessibleTextRole, and Qt::AccessibleDescriptionRole.
-            See the Qt::ItemDataRole enum documentation for information about the types
-            associated with each role.
-    \row \li \l{QAbstractItemModel::headerData()}{headerData()}
-         \li Provides views with information to show in their headers. The information is
-            only retrieved by views that can display header information.
-    \row \li \l{QAbstractItemModel::rowCount()}{rowCount()}
-         \li Provides the number of rows of data exposed by the model.
-    \endtable
-
-    These four functions must be implemented in all types of model, including list models
-    (QAbstractListModel subclasses) and table models (QAbstractTableModel subclasses).
-
-    Additionally, the following functions \e{must} be implemented in direct subclasses
-    of QAbstractTableModel and QAbstractItemModel:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::columnCount()}{columnCount()}
-         \li Provides the number of columns of data exposed by the model. List models do not
-            provide this function because it is already implemented in QAbstractListModel.
-    \endtable
-
-    \section3 Editable items
-
-    Editable models allow items of data to be modified, and may also provide
-    functions to allow rows and columns to be inserted and removed. To enable
-    editing, the following functions must be implemented correctly:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::flags()}{flags()}
-         \li Must return an appropriate combination of flags for each item. In particular,
-            the value returned by this function must include \l{Qt::ItemIsEditable} in
-            addition to the values applied to items in a read-only model.
-    \row \li \l{QAbstractItemModel::setData()}{setData()}
-         \li Used to modify the item of data associated with a specified model index.
-            To be able to accept user input, provided by user interface elements, this
-            function must handle data associated with Qt::EditRole.
-            The implementation may also accept data associated with many different kinds
-            of roles specified by Qt::ItemDataRole. After changing the item of data,
-            models must emit the \l{QAbstractItemModel::dataChanged()}{dataChanged()}
-            signal to inform other components of the change.
-    \row \li \l{QAbstractItemModel::setHeaderData()}{setHeaderData()}
-         \li Used to modify horizontal and vertical header information. After changing
-            the item of data, models must emit the
-            \l{QAbstractItemModel::headerDataChanged()}{headerDataChanged()}
-            signal to inform other components of the change.
-    \endtable
-
-    \section3 Resizable models
-
-    All types of model can support the insertion and removal of rows. Table models
-    and hierarchical models can also support the insertion and removal of columns.
-    It is important to notify other components about changes to the model's dimensions
-    both \e before and \e after they occur. As a result, the following functions
-    can be implemented to allow the model to be resized, but implementations must
-    ensure that the appropriate functions are called to notify attached views and
-    delegates:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::insertRows()}{insertRows()}
-         \li Used to add new rows and items of data to all types of model.
-            Implementations must call
-            \l{QAbstractItemModel::beginInsertRows()}{beginInsertRows()} \e before
-            inserting new rows into any underlying data structures, and call
-            \l{QAbstractItemModel::endInsertRows()}{endInsertRows()}
-            \e{immediately afterwards}.
-    \row \li \l{QAbstractItemModel::removeRows()}{removeRows()}
-         \li Used to remove rows and the items of data they contain from all types of model.
-            Implementations must call
-            \l{QAbstractItemModel::beginRemoveRows()}{beginRemoveRows()}
-            \e before inserting new columns into any underlying data structures, and call
-            \l{QAbstractItemModel::endRemoveRows()}{endRemoveRows()}
-            \e{immediately afterwards}.
-    \row \li \l{QAbstractItemModel::insertColumns()}{insertColumns()}
-         \li Used to add new columns and items of data to table models and hierarchical models.
-            Implementations must call
-            \l{QAbstractItemModel::beginInsertColumns()}{beginInsertColumns()} \e before
-            rows are removed from any underlying data structures, and call
-            \l{QAbstractItemModel::endInsertColumns()}{endInsertColumns()}
-            \e{immediately afterwards}.
-    \row \li \l{QAbstractItemModel::removeColumns()}{removeColumns()}
-         \li Used to remove columns and the items of data they contain from table models and
-            hierarchical models.
-            Implementations must call
-            \l{QAbstractItemModel::beginRemoveColumns()}{beginRemoveColumns()}
-            \e before columns are removed from any underlying data structures, and call
-            \l{QAbstractItemModel::endRemoveColumns()}{endRemoveColumns()}
-            \e{immediately afterwards}.
-    \endtable
-
-    Generally, these functions should return true if the operation was successful.
-    However, there may be cases where the operation only partly succeeded; for example,
-    if less than the specified number of rows could be inserted. In such cases, the
-    model should return false to indicate failure to enable any attached components to
-    handle the situation.
-
-    The signals emitted by the functions called in implementations of the resizing
-    API give attached components the chance to take action before any data becomes
-    unavailable. The encapsulation of insert and remove operations with begin and end
-    functions also enable the model to manage
-    \l{QPersistentModelIndex}{persistent model indexes} correctly.
-
-    Normally, the begin and end functions are capable of informing other components
-    about changes to the model's underlying structure. For more complex changes to the
-    model's structure, perhaps involving internal reorganization or sorting of data,
-    it is necessary to emit the \l{QAbstractItemModel::layoutChanged()}{layoutChanged()}
-    signal to cause any attached views to be updated.
-
-    \section3 Lazy population of model data
-
-    Lazy population of model data effectively allows requests for information
-    about the model to be deferred until it is actually needed by views.
-
-    Some models need to obtain data from remote sources, or must perform
-    time-consuming operations to obtain information about the way the
-    data is organized. Since views generally request as much information
-    as possible in order to accurately display model data, it can be useful
-    to restrict the amount of information returned to them to reduce
-    unnecessary follow-up requests for data.
-
-    In hierarchical models where finding the number of children of a given
-    item is an expensive operation, it is useful to ensure that the model's
-    \l{QAbstractItemModel::}{rowCount()} implementation is only called when
-    necessary. In such cases, the \l{QAbstractItemModel::}{hasChildren()}
-    function can be reimplemented to provide an inexpensive way for views to
-    check for the presence of children and, in the case of QTreeView, draw
-    the appropriate decoration for their parent item.
-
-    Whether the reimplementation of \l{QAbstractItemModel::}{hasChildren()}
-    returns \c true or \c false, it may not be necessary for the view to call
-    \l{QAbstractItemModel::}{rowCount()} to find out how many children are
-    present. For example, QTreeView does not need to know how many children
-    there are if the parent item has not been expanded to show them.
-
-    If it is known that many items will have children, reimplementing
-    \l{QAbstractItemModel::}{hasChildren()} to unconditionally return \c true
-    is sometimes a useful approach to take. This ensures that each item can
-    be later examined for children while making initial population of model
-    data as fast as possible. The only disadvantage is that items without
-    children may be displayed incorrectly in some views until the user
-    attempts to view the non-existent child items.
-
-    \section2 Navigation and model index creation
-
-    Hierarchical models need to provide functions that views can call to navigate the
-    tree-like structures they expose, and obtain model indexes for items.
-
-    \section3 Parents and children
-
-    Since the structure exposed to views is determined by the underlying data
-    structure, it is up to each model subclass to create its own model indexes
-    by providing implementations of the following functions:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::index()}{index()}
-         \li Given a model index for a parent item, this function allows views and delegates
-            to access children of that item. If no valid child item - corresponding to the
-            specified row, column, and parent model index, can be found, the function
-            must return QModelIndex(), which is an invalid model index.
-    \row \li \l{QAbstractItemModel::parent()}{parent()}
-         \li Provides a model index corresponding to the parent of any given child item.
-            If the model index specified corresponds to a top-level item in the model, or if
-            there is no valid parent item in the model, the function must return
-            an invalid model index, created with the empty QModelIndex() constructor.
-    \endtable
-
-    Both functions above use the \l{QAbstractItemModel::createIndex()}{createIndex()}
-    factory function to generate indexes for other components to use. It is normal for
-    models to supply some unique identifier to this function to ensure that
-    the model index can be re-associated with its corresponding item later on.
-
-    \section2 Drag and drop support and MIME type handling
-
-    The model/view classes support drag and drop operations, providing default behavior
-    that is sufficient for many applications. However, it is also possible to customize
-    the way items are encoded during drag and drop operations, whether they are copied
-    or moved by default, and how they are inserted into existing models.
-
-    Additionally, the convenience view classes implement specialized behavior that
-    should closely follow that expected by existing developers.
-    The \l{#Convenience Views}{Convenience Views} section provides an overview of this
-    behavior.
-
-    \section3 MIME data
-
-    By default, the built-in models and views use an internal MIME type
-    (\c{application/x-qabstractitemmodeldatalist}) to pass around information about
-    model indexes. This specifies data for a list of items, containing the row and
-    column numbers of each item, and information about the roles that each item
-    supports.
-
-    Data encoded using this MIME type can be obtained by calling
-    QAbstractItemModel::mimeData() with a QModelIndexList containing the items to
-    be serialized.
-    \omit
-    The following types are used to store information about
-    each item as it is streamed into a QByteArray and stored in a QMimeData object:
-
-    \table 90%
-    \header \li Description \li Type
-    \row \li Row \li int
-    \row \li Column \li int
-    \row \li Data for each role \li QMap<int, QVariant>
-    \endtable
-
-    This information can be retrieved for use in non-model classes by calling
-    QMimeData::data() with the \c{application/x-qabstractitemmodeldatalist} MIME
-    type and streaming out the items one by one.
-    \endomit
-
-    When implementing drag and drop support in a custom model, it is possible to
-    export items of data in specialized formats by reimplementing the following
-    function:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::mimeData()}{mimeData()}
-         \li This function can be reimplemented to return data in formats other
-            than the default \c{application/x-qabstractitemmodeldatalist} internal
-            MIME type.
-
-            Subclasses can obtain the default QMimeData object from the base class
-            and add data to it in additional formats.
-    \endtable
-
-    For many models, it is useful to provide the contents of items in common format
-    represented by MIME types such as \c{text/plain} and \c{image/png}. Note that
-    images, colors and HTML documents can easily be added to a QMimeData object with
-    the QMimeData::setImageData(), QMimeData::setColorData(), and
-    QMimeData::setHtml() functions.
-
-    \section3 Accepting dropped data
-
-    When a drag and drop operation is performed over a view, the underlying model is
-    queried to determine which types of operation it supports and the MIME types
-    it can accept. This information is provided by the
-    QAbstractItemModel::supportedDropActions() and QAbstractItemModel::mimeTypes()
-    functions. Models that do not override the implementations provided by
-    QAbstractItemModel support copy operations and the default internal MIME type
-    for items.
-
-    When serialized item data is dropped onto a view, the data is inserted into
-    the current model using its implementation of QAbstractItemModel::dropMimeData().
-    The default implementation of this function will never overwrite any data in the
-    model; instead, it tries to insert the items of data either as siblings of an
-    item, or as children of that item.
-
-    To take advantage of QAbstractItemModel's default implementation for the built-in
-    MIME type, new models must provide reimplementations of the following functions:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::insertRows()}{insertRows()}
-         \li {1, 2} These functions enable the model to automatically insert new data using
-            the existing implementation provided by QAbstractItemModel::dropMimeData().
-    \row \li \l{QAbstractItemModel::insertColumns()}{insertColumns()}
-    \row \li \l{QAbstractItemModel::setData()}{setData()}
-         \li Allows the new rows and columns to be populated with items.
-    \row \li \l{QAbstractItemModel::setItemData()}{setItemData()}
-         \li This function provides more efficient support for populating new items.
-    \endtable
-
-    To accept other forms of data, these functions must be reimplemented:
-
-    \table 90%
-    \row \li \l{QAbstractItemModel::supportedDropActions()}{supportedDropActions()}
-         \li Used to return a combination of \l{Qt::DropActions}{drop actions},
-            indicating the types of drag and drop operations that the model accepts.
-    \row \li \l{QAbstractItemModel::mimeTypes()}{mimeTypes()}
-         \li Used to return a list of MIME types that can be decoded and handled by
-            the model. Generally, the MIME types that are supported for input into
-            the model are the same as those that it can use when encoding data for
-            use by external components.
-    \row \li \l{QAbstractItemModel::dropMimeData()}{dropMimeData()}
-         \li Performs the actual decoding of the data transferred by drag and drop
-            operations, determines where in the model it will be set, and inserts
-            new rows and columns where necessary. How this function is implemented
-            in subclasses depends on the requirements of the data exposed by each
-            model.
-    \endtable
-
-    If the implementation of the \l{QAbstractItemModel::dropMimeData()}{dropMimeData()}
-    function changes the dimensions of a model by inserting or removing rows or
-    columns, or if items of data are modified, care must be taken to ensure that
-    all relevant signals are emitted. It can be useful to simply call
-    reimplementations of other functions in the subclass, such as
-    \l{QAbstractItemModel::setData()}{setData()},
-    \l{QAbstractItemModel::insertRows()}{insertRows()}, and
-    \l{QAbstractItemModel::insertColumns()}{insertColumns()}, to ensure that the
-    model behaves consistently.
-
-    In order to ensure drag operations work properly, it is important to
-    reimplement the following functions that remove data from the model:
-
-    \list
-        \li \l{QAbstractItemModel::}{removeRows()}
-        \li \l{QAbstractItemModel::}{removeRow()}
-        \li \l{QAbstractItemModel::}{removeColumns()}
-        \li \l{QAbstractItemModel::}{removeColumn()}
-    \endlist
-
-    For more information about drag and drop with item views, refer to
-    \l{Using drag and drop with item views}.
-
-    \section3 Convenience views
-
-    The convenience views (QListWidget, QTableWidget, and QTreeWidget) override
-    the default drag and drop functionality to provide less flexible, but more
-    natural behavior that is appropriate for many applications. For example,
-    since it is more common to drop data into cells in a QTableWidget, replacing
-    the existing contents with the data being transferred, the underlying model
-    will set the data of the target items rather than insert new rows and columns
-    into the model. For more information on drag and drop in convenience views,
-    you can see \l{Using drag and drop with item views}.
-
-    \section2 Performance optimization for large amounts of data
-
-    The \l{QAbstractItemModel::}{canFetchMore()} function checks if the parent
-    has more data available and returns true or false accordingly. The
-    \l{QAbstractItemModel::}{fetchMore()} function fetches data based on the
-    parent specified. Both these functions can be combined, for example, in a
-    database query involving incremental data to populate a QAbstractItemModel.
-    We reimplement \l{QAbstractItemModel::}{canFetchMore()} to indicate if there
-    is more data to be fetched and \l{QAbstractItemModel::}{fetchMore()} to
-    populate the model as required.
-
-    Another example would be dynamically populated tree models, where we
-    reimplement \l{QAbstractItemModel::}{fetchMore()} when a branch in the tree
-    model is expanded.
-
-    If your reimplementation of \l{QAbstractItemModel::}{fetchMore()} adds rows
-    to the model, you need to call \l{QAbstractItemModel::}{beginInsertRows()}
-    and \l{QAbstractItemModel::}{endInsertRows()}. Also, both
-    \l{QAbstractItemModel::}{canFetchMore()} and  \l{QAbstractItemModel::}
-    {fetchMore()} must be reimplemented as their default implementation returns
-    false and does nothing.
-
-    \keyword Model/View Classes
-    \section1 The model/view classes
-
-    These classes use the model/view design pattern in which the
-    underlying data (in the model) is kept separate from the way the
-    data is presented and manipulated by the user (in the view).
-
-    \annotatedlist model-view
-
-    \section1 Related examples
-
-    \list
-    \li \l{itemviews/dirview}{Dir View}
-    \li \l{itemviews/spinboxdelegate}{Spin Box Delegate}
-    \li \l{itemviews/pixelator}{Pixelator}
-    \li \l{itemviews/simpletreemodel}{Simple Tree Model}
-    \li \l{itemviews/chart}{Chart}
-    \endlist
-*/
diff --git a/doc/src/images/assistant-toolbar.png b/doc/src/images/assistant-toolbar.png
deleted file mode 100644
index 1b41825..0000000
Binary files a/doc/src/images/assistant-toolbar.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-gnomelayout-horizontal.png b/doc/src/images/buttonbox-gnomelayout-horizontal.png
deleted file mode 100644
index b2f74bb..0000000
Binary files a/doc/src/images/buttonbox-gnomelayout-horizontal.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-gnomelayout-vertical.png b/doc/src/images/buttonbox-gnomelayout-vertical.png
deleted file mode 100644
index e7843dc..0000000
Binary files a/doc/src/images/buttonbox-gnomelayout-vertical.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-kdelayout-horizontal.png b/doc/src/images/buttonbox-kdelayout-horizontal.png
deleted file mode 100644
index 5da11f4..0000000
Binary files a/doc/src/images/buttonbox-kdelayout-horizontal.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-kdelayout-vertical.png b/doc/src/images/buttonbox-kdelayout-vertical.png
deleted file mode 100644
index 6f5dfc6..0000000
Binary files a/doc/src/images/buttonbox-kdelayout-vertical.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-mac-modeless-horizontal.png b/doc/src/images/buttonbox-mac-modeless-horizontal.png
deleted file mode 100644
index 2e853d3..0000000
Binary files a/doc/src/images/buttonbox-mac-modeless-horizontal.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-mac-modeless-vertical.png b/doc/src/images/buttonbox-mac-modeless-vertical.png
deleted file mode 100644
index f59bd8d..0000000
Binary files a/doc/src/images/buttonbox-mac-modeless-vertical.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-maclayout-horizontal.png b/doc/src/images/buttonbox-maclayout-horizontal.png
deleted file mode 100644
index 89ae84d..0000000
Binary files a/doc/src/images/buttonbox-maclayout-horizontal.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-maclayout-vertical.png b/doc/src/images/buttonbox-maclayout-vertical.png
deleted file mode 100644
index 7287600..0000000
Binary files a/doc/src/images/buttonbox-maclayout-vertical.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-winlayout-horizontal.png b/doc/src/images/buttonbox-winlayout-horizontal.png
deleted file mode 100644
index dd4ce1c..0000000
Binary files a/doc/src/images/buttonbox-winlayout-horizontal.png and /dev/null differ
diff --git a/doc/src/images/buttonbox-winlayout-vertical.png b/doc/src/images/buttonbox-winlayout-vertical.png
deleted file mode 100644
index 539de1a..0000000
Binary files a/doc/src/images/buttonbox-winlayout-vertical.png and /dev/null differ
diff --git a/doc/src/images/checkboxes-exclusive.png b/doc/src/images/checkboxes-exclusive.png
deleted file mode 100644
index 0ada3a0..0000000
Binary files a/doc/src/images/checkboxes-exclusive.png and /dev/null differ
diff --git a/doc/src/images/checkboxes-non-exclusive.png b/doc/src/images/checkboxes-non-exclusive.png
deleted file mode 100644
index 4211aae..0000000
Binary files a/doc/src/images/checkboxes-non-exclusive.png and /dev/null differ
diff --git a/doc/src/images/cleanlooks-pushbutton-menu.png b/doc/src/images/cleanlooks-pushbutton-menu.png
deleted file mode 100644
index 0d5cb59..0000000
Binary files a/doc/src/images/cleanlooks-pushbutton-menu.png and /dev/null differ
diff --git a/doc/src/images/columnview.png b/doc/src/images/columnview.png
deleted file mode 100644
index 127b795..0000000
Binary files a/doc/src/images/columnview.png and /dev/null differ
diff --git a/doc/src/images/graphicsview-ellipseitem-pie.png b/doc/src/images/graphicsview-ellipseitem-pie.png
deleted file mode 100644
index 136175a..0000000
Binary files a/doc/src/images/graphicsview-ellipseitem-pie.png and /dev/null differ
diff --git a/doc/src/images/graphicsview-ellipseitem.png b/doc/src/images/graphicsview-ellipseitem.png
deleted file mode 100644
index 7c7a8e5..0000000
Binary files a/doc/src/images/graphicsview-ellipseitem.png and /dev/null differ
diff --git a/doc/src/images/listview.png b/doc/src/images/listview.png
deleted file mode 100755
index fa49c52..0000000
Binary files a/doc/src/images/listview.png and /dev/null differ
diff --git a/doc/src/images/macintosh-menu.png b/doc/src/images/macintosh-menu.png
deleted file mode 100644
index 59bdcea..0000000
Binary files a/doc/src/images/macintosh-menu.png and /dev/null differ
diff --git a/doc/src/images/mdi-cascade.png b/doc/src/images/mdi-cascade.png
deleted file mode 100644
index ca55a5b..0000000
Binary files a/doc/src/images/mdi-cascade.png and /dev/null differ
diff --git a/doc/src/images/mdi-tile.png b/doc/src/images/mdi-tile.png
deleted file mode 100644
index 1486d96..0000000
Binary files a/doc/src/images/mdi-tile.png and /dev/null differ
diff --git a/doc/src/images/modelview-combobox.png b/doc/src/images/modelview-combobox.png
deleted file mode 100755
index d172b41..0000000
Binary files a/doc/src/images/modelview-combobox.png and /dev/null differ
diff --git a/doc/src/images/modelview-models.png b/doc/src/images/modelview-models.png
deleted file mode 100644
index 183a7cf..0000000
Binary files a/doc/src/images/modelview-models.png and /dev/null differ
diff --git a/doc/src/images/modelview-overview.png b/doc/src/images/modelview-overview.png
deleted file mode 100644
index 41e3a68..0000000
Binary files a/doc/src/images/modelview-overview.png and /dev/null differ
diff --git a/doc/src/images/modelview-roles.png b/doc/src/images/modelview-roles.png
deleted file mode 100644
index 2a60ce7..0000000
Binary files a/doc/src/images/modelview-roles.png and /dev/null differ
diff --git a/doc/src/images/modelview-tablemodel.png b/doc/src/images/modelview-tablemodel.png
deleted file mode 100644
index 9a9ea2f..0000000
Binary files a/doc/src/images/modelview-tablemodel.png and /dev/null differ
diff --git a/doc/src/images/modelview-treemodel.png b/doc/src/images/modelview-treemodel.png
deleted file mode 100644
index f7b02eb..0000000
Binary files a/doc/src/images/modelview-treemodel.png and /dev/null differ
diff --git a/doc/src/images/motif-menubar.png b/doc/src/images/motif-menubar.png
deleted file mode 100644
index f1d9f4b..0000000
Binary files a/doc/src/images/motif-menubar.png and /dev/null differ
diff --git a/doc/src/images/plastique-menu.png b/doc/src/images/plastique-menu.png
deleted file mode 100644
index 88df249..0000000
Binary files a/doc/src/images/plastique-menu.png and /dev/null differ
diff --git a/doc/src/images/plastique-menubar.png b/doc/src/images/plastique-menubar.png
deleted file mode 100644
index 642f95d..0000000
Binary files a/doc/src/images/plastique-menubar.png and /dev/null differ
diff --git a/doc/src/images/plastique-printdialog-properties.png b/doc/src/images/plastique-printdialog-properties.png
deleted file mode 100644
index 38c1ae7..0000000
Binary files a/doc/src/images/plastique-printdialog-properties.png and /dev/null differ
diff --git a/doc/src/images/plastique-printdialog.png b/doc/src/images/plastique-printdialog.png
deleted file mode 100644
index 3f8af01..0000000
Binary files a/doc/src/images/plastique-printdialog.png and /dev/null differ
diff --git a/doc/src/images/plastique-pushbutton-menu.png b/doc/src/images/plastique-pushbutton-menu.png
deleted file mode 100644
index d090033..0000000
Binary files a/doc/src/images/plastique-pushbutton-menu.png and /dev/null differ
diff --git a/doc/src/images/plastique-sizegrip.png b/doc/src/images/plastique-sizegrip.png
deleted file mode 100644
index 09a551e..0000000
Binary files a/doc/src/images/plastique-sizegrip.png and /dev/null differ
diff --git a/doc/src/images/plastique-tabbar-truncated.png b/doc/src/images/plastique-tabbar-truncated.png
deleted file mode 100644
index 8e906d9..0000000
Binary files a/doc/src/images/plastique-tabbar-truncated.png and /dev/null differ
diff --git a/doc/src/images/plastique-tabbar.png b/doc/src/images/plastique-tabbar.png
deleted file mode 100644
index 3371dda..0000000
Binary files a/doc/src/images/plastique-tabbar.png and /dev/null differ
diff --git a/doc/src/images/printer-rects.png b/doc/src/images/printer-rects.png
deleted file mode 100644
index 8ebea60..0000000
Binary files a/doc/src/images/printer-rects.png and /dev/null differ
diff --git a/doc/src/images/qformlayout-kde.png b/doc/src/images/qformlayout-kde.png
deleted file mode 100644
index c32bb12..0000000
Binary files a/doc/src/images/qformlayout-kde.png and /dev/null differ
diff --git a/doc/src/images/qformlayout-mac.png b/doc/src/images/qformlayout-mac.png
deleted file mode 100644
index 0a0824e..0000000
Binary files a/doc/src/images/qformlayout-mac.png and /dev/null differ
diff --git a/doc/src/images/qformlayout-qpe.png b/doc/src/images/qformlayout-qpe.png
deleted file mode 100644
index 3abecc5..0000000
Binary files a/doc/src/images/qformlayout-qpe.png and /dev/null differ
diff --git a/doc/src/images/qformlayout-win.png b/doc/src/images/qformlayout-win.png
deleted file mode 100644
index 1ed44bd..0000000
Binary files a/doc/src/images/qformlayout-win.png and /dev/null differ
diff --git a/doc/src/images/qscrollarea-noscrollbars.png b/doc/src/images/qscrollarea-noscrollbars.png
deleted file mode 100644
index a1520f3..0000000
Binary files a/doc/src/images/qscrollarea-noscrollbars.png and /dev/null differ
diff --git a/doc/src/images/qscrollarea-onescrollbar.png b/doc/src/images/qscrollarea-onescrollbar.png
deleted file mode 100644
index b4f7976..0000000
Binary files a/doc/src/images/qscrollarea-onescrollbar.png and /dev/null differ
diff --git a/doc/src/images/qscrollarea-twoscrollbars.png b/doc/src/images/qscrollarea-twoscrollbars.png
deleted file mode 100644
index bf720e4..0000000
Binary files a/doc/src/images/qscrollarea-twoscrollbars.png and /dev/null differ
diff --git a/doc/src/images/qscrollbar-values.png b/doc/src/images/qscrollbar-values.png
deleted file mode 100644
index cea744b..0000000
Binary files a/doc/src/images/qscrollbar-values.png and /dev/null differ
diff --git a/doc/src/images/qspinbox-plusminus.png b/doc/src/images/qspinbox-plusminus.png
deleted file mode 100644
index 3b35a40..0000000
Binary files a/doc/src/images/qspinbox-plusminus.png and /dev/null differ
diff --git a/doc/src/images/qspinbox-updown.png b/doc/src/images/qspinbox-updown.png
deleted file mode 100644
index a6caa44..0000000
Binary files a/doc/src/images/qspinbox-updown.png and /dev/null differ
diff --git a/doc/src/images/qtableview-resized.png b/doc/src/images/qtableview-resized.png
deleted file mode 100644
index 813256e..0000000
Binary files a/doc/src/images/qtableview-resized.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-aero1.png b/doc/src/images/qtwizard-aero1.png
deleted file mode 100644
index fe9e9bc..0000000
Binary files a/doc/src/images/qtwizard-aero1.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-aero2.png b/doc/src/images/qtwizard-aero2.png
deleted file mode 100644
index 261c065..0000000
Binary files a/doc/src/images/qtwizard-aero2.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-classic1.png b/doc/src/images/qtwizard-classic1.png
deleted file mode 100644
index be3edbe..0000000
Binary files a/doc/src/images/qtwizard-classic1.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-classic2.png b/doc/src/images/qtwizard-classic2.png
deleted file mode 100644
index 165f569..0000000
Binary files a/doc/src/images/qtwizard-classic2.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-mac1.png b/doc/src/images/qtwizard-mac1.png
deleted file mode 100644
index bc8cd9b..0000000
Binary files a/doc/src/images/qtwizard-mac1.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-mac2.png b/doc/src/images/qtwizard-mac2.png
deleted file mode 100644
index 850f6b8..0000000
Binary files a/doc/src/images/qtwizard-mac2.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-modern1.png b/doc/src/images/qtwizard-modern1.png
deleted file mode 100644
index 223e3dd..0000000
Binary files a/doc/src/images/qtwizard-modern1.png and /dev/null differ
diff --git a/doc/src/images/qtwizard-modern2.png b/doc/src/images/qtwizard-modern2.png
deleted file mode 100644
index d66c374..0000000
Binary files a/doc/src/images/qtwizard-modern2.png and /dev/null differ
diff --git a/doc/src/images/selected-items1.png b/doc/src/images/selected-items1.png
deleted file mode 100644
index 12b572d..0000000
Binary files a/doc/src/images/selected-items1.png and /dev/null differ
diff --git a/doc/src/images/selected-items2.png b/doc/src/images/selected-items2.png
deleted file mode 100644
index ad247d9..0000000
Binary files a/doc/src/images/selected-items2.png and /dev/null differ
diff --git a/doc/src/images/selected-items3.png b/doc/src/images/selected-items3.png
deleted file mode 100644
index d7aa7be..0000000
Binary files a/doc/src/images/selected-items3.png and /dev/null differ
diff --git a/doc/src/images/selection-extended.png b/doc/src/images/selection-extended.png
deleted file mode 100644
index 8ca488d..0000000
Binary files a/doc/src/images/selection-extended.png and /dev/null differ
diff --git a/doc/src/images/selection-multi.png b/doc/src/images/selection-multi.png
deleted file mode 100644
index 766e4a1..0000000
Binary files a/doc/src/images/selection-multi.png and /dev/null differ
diff --git a/doc/src/images/selection-single.png b/doc/src/images/selection-single.png
deleted file mode 100644
index d9d0655..0000000
Binary files a/doc/src/images/selection-single.png and /dev/null differ
diff --git a/doc/src/images/shareddirmodel.png b/doc/src/images/shareddirmodel.png
deleted file mode 100644
index 7b9fded..0000000
Binary files a/doc/src/images/shareddirmodel.png and /dev/null differ
diff --git a/doc/src/images/sharedmodel-tableviews.png b/doc/src/images/sharedmodel-tableviews.png
deleted file mode 100644
index d241e4c..0000000
Binary files a/doc/src/images/sharedmodel-tableviews.png and /dev/null differ
diff --git a/doc/src/images/sharedselection-tableviews.png b/doc/src/images/sharedselection-tableviews.png
deleted file mode 100644
index ccbda25..0000000
Binary files a/doc/src/images/sharedselection-tableviews.png and /dev/null differ
diff --git a/doc/src/images/simpleanchorlayout-example.png b/doc/src/images/simpleanchorlayout-example.png
deleted file mode 100644
index 1d5c8ac..0000000
Binary files a/doc/src/images/simpleanchorlayout-example.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-border-image-stretched.png b/doc/src/images/stylesheet-border-image-stretched.png
deleted file mode 100644
index 3f9ca92..0000000
Binary files a/doc/src/images/stylesheet-border-image-stretched.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-border-image-wrong.png b/doc/src/images/stylesheet-border-image-wrong.png
deleted file mode 100644
index 19d6e44..0000000
Binary files a/doc/src/images/stylesheet-border-image-wrong.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-branch-closed.png b/doc/src/images/stylesheet-branch-closed.png
deleted file mode 100644
index 213ffdd..0000000
Binary files a/doc/src/images/stylesheet-branch-closed.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-branch-end.png b/doc/src/images/stylesheet-branch-end.png
deleted file mode 100644
index 54915b3..0000000
Binary files a/doc/src/images/stylesheet-branch-end.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-branch-more.png b/doc/src/images/stylesheet-branch-more.png
deleted file mode 100644
index 664ad44..0000000
Binary files a/doc/src/images/stylesheet-branch-more.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-branch-open.png b/doc/src/images/stylesheet-branch-open.png
deleted file mode 100644
index e8cad95..0000000
Binary files a/doc/src/images/stylesheet-branch-open.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-coffee-cleanlooks.png b/doc/src/images/stylesheet-coffee-cleanlooks.png
deleted file mode 100644
index e75df0d..0000000
Binary files a/doc/src/images/stylesheet-coffee-cleanlooks.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-coffee-xp.png b/doc/src/images/stylesheet-coffee-xp.png
deleted file mode 100644
index 8bedd80..0000000
Binary files a/doc/src/images/stylesheet-coffee-xp.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-pagefold-mac.png b/doc/src/images/stylesheet-pagefold-mac.png
deleted file mode 100644
index 5c061b9..0000000
Binary files a/doc/src/images/stylesheet-pagefold-mac.png and /dev/null differ
diff --git a/doc/src/images/stylesheet-vline.png b/doc/src/images/stylesheet-vline.png
deleted file mode 100644
index 8f0c336..0000000
Binary files a/doc/src/images/stylesheet-vline.png and /dev/null differ
diff --git a/doc/src/images/tableview.png b/doc/src/images/tableview.png
deleted file mode 100755
index 8be1b6c..0000000
Binary files a/doc/src/images/tableview.png and /dev/null differ
diff --git a/doc/src/images/widgets-tutorial-childwidget.png b/doc/src/images/widgets-tutorial-childwidget.png
deleted file mode 100644
index 0d42d70..0000000
Binary files a/doc/src/images/widgets-tutorial-childwidget.png and /dev/null differ
diff --git a/doc/src/images/widgets-tutorial-nestedlayouts.png b/doc/src/images/widgets-tutorial-nestedlayouts.png
deleted file mode 100644
index 1e2a9f4..0000000
Binary files a/doc/src/images/widgets-tutorial-nestedlayouts.png and /dev/null differ
diff --git a/doc/src/images/widgets-tutorial-toplevel.png b/doc/src/images/widgets-tutorial-toplevel.png
deleted file mode 100644
index a80d13c..0000000
Binary files a/doc/src/images/widgets-tutorial-toplevel.png and /dev/null differ
diff --git a/doc/src/images/widgets-tutorial-windowlayout.png b/doc/src/images/widgets-tutorial-windowlayout.png
deleted file mode 100644
index fce52cd..0000000
Binary files a/doc/src/images/widgets-tutorial-windowlayout.png and /dev/null differ
diff --git a/doc/src/images/windowsxp-menu.png b/doc/src/images/windowsxp-menu.png
deleted file mode 100644
index b8ca947..0000000
Binary files a/doc/src/images/windowsxp-menu.png and /dev/null differ
diff --git a/doc/src/modules.qdoc b/doc/src/modules.qdoc
index 45701a0..716b535 100644
--- a/doc/src/modules.qdoc
+++ b/doc/src/modules.qdoc
@@ -46,7 +46,6 @@
     \row \li \l{QtMultimedia Module}{QtMultimedia} \li Classes for audio, video, radio and camera functionality
     \row \li \l{QtNetwork} \li Classes for network programming
     \row \li \l{QtOpenGL} \li OpenGL support classes
-    \row \li \l{QtOpenVG} \li OpenVG support classes
     \row \li \l{QtOrganizer} \li Classes for managing your calendar events.
     \row \li \l{QtPrintSupport} \li Classes for printing.
     \row \li \l{Qt Publish Subscribe Module}{QtPublishSubscribe} \li Simplified mechanism for subscribing to notifications
@@ -112,109 +111,6 @@
 */
 
 /*!
-    \module QtOpenGL
-    \title QtOpenGL Module
-    \ingroup modules
-	\ingroup technology-apis
-
-    \brief The QtOpenGL module offers classes that make it easy to
-    use OpenGL in Qt applications.
-
-    OpenGL is a standard API for rendering 3D graphics. OpenGL only
-    deals with 3D rendering and provides little or no support for GUI
-    programming issues. The user interface for an OpenGL application
-    must be created with another toolkit, such as Motif on the X
-    platform, Microsoft Foundation Classes (MFC) under Windows, or Qt
-    on both platforms.
-
-    \note OpenGL is a trademark of Silicon Graphics, Inc. in
-    the United States and other countries.
-
-    The Qt OpenGL module makes it easy to use OpenGL in Qt applications.
-    It provides an OpenGL widget class that can be used just like any
-    other Qt widget, except that it opens an OpenGL display buffer where
-    you can use the OpenGL API to render the contents.
-
-    To include the definitions of the module's classes, use the
-    following directive:
-
-    \snippet doc/src/snippets/code/doc_src_qtopengl.cpp 0
-
-    To link against the module, add this line to your \l qmake \c
-    .pro file:
-
-    \snippet doc/src/snippets/code/doc_src_qtopengl.pro 1
-
-    The Qt OpenGL module is implemented as a platform-independent Qt/C++
-    wrapper around the platform-dependent GLX (version 1.3 or later),
-    WGL, or AGL C APIs. Although the basic functionality provided is very
-    similar to Mark Kilgard's GLUT library, applications using the Qt
-    OpenGL module can take advantage of the whole Qt API for
-    non-OpenGL-specific GUI functionality.
-
-    The QtOpenGL module is available on Windows, X11 and Mac OS X.
-    \l{Qt for Embedded Linux and OpenGL} supports OpenGL ES (OpenGL for
-    Embedded Systems).
-    \note To be able to use the OpenGL API in \l{Qt for Embedded Linux}, it must be
-    integrated with the Q Window System (QWS). See the
-    \l{Qt for Embedded Linux and OpenGL} documentation for details.
-
-*/
-
-/*!
-    \module QtOpenVG
-    \title QtOpenVG Module
-    \since 4.6
-    \ingroup modules
-	\ingroup technology-apis
-
-    \brief The QtOpenVG module is a plugin that provides support for
-    OpenVG painting.
-
-    OpenVG is a standard API from the
-    \l{http://www.khronos.org/openvg}{Khronos Group} for accelerated
-    2D vector graphics that is appearing in an increasing number of
-    embedded devices.
-
-    OpenVG support can be enabled by passing the \c{-openvg} option
-    to configure. It is assumed that the following qmake variables
-    are set to appropriate values in the qmake.conf file for your
-    platform:
-
-    \list
-    \li QMAKE_INCDIR_OPENVG
-    \li QMAKE_LIBDIR_OPENVG
-    \li QMAKE_LIBS_OPENVG
-    \endlist
-
-    Most OpenVG implementations are based on EGL, so the following
-    variables may also need to be set:
-
-    \list
-    \li QMAKE_INCDIR_EGL
-    \li QMAKE_LIBDIR_EGL
-    \li QMAKE_LIBS_EGL
-    \endlist
-
-    See \l{qmake Variable Reference} for more information on these variables.
-
-    Two kinds of OpenVG engines are currently supported: EGL based,
-    and engines built on top of OpenGL such as
-    \l{http://sourceforge.net/projects/shivavg}{ShivaVG}.
-    EGL based engines are preferred.
-
-    Once the graphics system plugin has been built and installed,
-    applications can be run as follows to use the plugin:
-
-    \code
-    app -graphicssystem OpenVG
-    \endcode
-
-    If ShivaVG is being used, then substitute \c ShivaVG instead of
-    \c OpenVG in the line above.
-*/
-
-/*!
 	\module QtScript
 	\title QtScript Module
 	\since 4.3
@@ -679,33 +575,6 @@
 */
 
 /*!
-    \module QtTest
-    \title QtTest Module
-    \ingroup modules
-
-    \keyword QtTest
-
-    \brief The QtTest module provides classes for unit testing Qt applications and libraries.
-
-    Applications that use Qt's unit testing classes need to
-    be configured to be built against the QtTest module.
-    To include the definitions of the module's classes, use the
-    following directive:
-
-    \snippet doc/src/snippets/code/doc_src_qttest.cpp 0
-
-    To link against the module, add this line to your \l qmake \c
-    .pro file:
-
-    \snippet doc/src/snippets/code/doc_src_qttest.pro 1
-
-    See the \l{QTestLib Manual} for a detailed introduction on how to use
-    Qt's unit testing features with your applications.
-
-    The QtTest module is part of all \l{Qt editions}.
-*/
-
-/*!
     \module QAxContainer
     \title QAxContainer Module
     \ingroup modules
diff --git a/doc/src/snippets/code/doc_src_introtodbus.qdoc b/doc/src/snippets/code/doc_src_introtodbus.qdoc
deleted file mode 100644
index 5d8833c..0000000
--- a/doc/src/snippets/code/doc_src_introtodbus.qdoc
+++ /dev/null
@@ -1,48 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-org.freedesktop.DBus
-//! [0]
-
-//! [QDBUS_DEBUG]
-examples/dbus/remotecontrolledcar/controller/controller &
-QDBUS_DEBUG=1 examples/dbus/remotecontrolledcar/car/car &
-//! [QDBUS_DEBUG]
diff --git a/doc/src/snippets/code/doc_src_model-view-programming.cpp b/doc/src/snippets/code/doc_src_model-view-programming.cpp
deleted file mode 100644
index ca9aa60..0000000
--- a/doc/src/snippets/code/doc_src_model-view-programming.cpp
+++ /dev/null
@@ -1,76 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-QAbstractItemModel *model = index.model();
-//! [0]
-
-
-//! [1]
-QModelIndex index = model->index(row, column, ...);
-//! [1]
-
-
-//! [2]
-QModelIndex indexA = model->index(0, 0, QModelIndex());
-QModelIndex indexB = model->index(1, 1, QModelIndex());
-QModelIndex indexC = model->index(2, 1, QModelIndex());
-//! [2]
-
-
-//! [3]
-QModelIndex index = model->index(row, column, parent);
-//! [3]
-
-
-//! [4]
-QModelIndex indexA = model->index(0, 0, QModelIndex());
-QModelIndex indexC = model->index(2, 1, QModelIndex());
-//! [4]
-
-
-//! [5]
-QModelIndex indexB = model->index(1, 0, indexA);
-//! [5]
-
-
-//! [6]
-QVariant value = model->data(index, role);
-//! [6]
diff --git a/doc/src/snippets/code/doc_src_qdbusadaptors.cpp b/doc/src/snippets/code/doc_src_qdbusadaptors.cpp
deleted file mode 100644
index 279c10f..0000000
--- a/doc/src/snippets/code/doc_src_qdbusadaptors.cpp
+++ /dev/null
@@ -1,293 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-class MainApplicationAdaptor: public QDBusAbstractAdaptor
-{
-    Q_OBJECT
-    Q_CLASSINFO("D-Bus Interface", "org.kde.DBus.MainApplication")
-    Q_PROPERTY(QString caption READ caption WRITE setCaption)
-    Q_PROPERTY(QString organizationName READ organizationName)
-    Q_PROPERTY(QString organizationDomain READ organizationDomain)
-
-private:
-    QApplication *app;
-
-public:
-    MainApplicationAdaptor(QApplication *application)
-        : QDBusAbstractAdaptor(application), app(application)
-    {
-        connect(application, SIGNAL(aboutToQuit()), SIGNAL(aboutToQuit()));
-        connect(application, SIGNAL(focusChanged(QWidget*, QWidget*)),
-                SLOT(focusChangedSlot(QWidget*, QWidget*)));
-    }
-
-    QString caption()
-    {
-        if (app->hasMainWindow())
-            return app->mainWindow()->caption();
-        return QString(""); // must not return a null QString
-    }
-
-    void setCaption(const QString &newCaption)
-    {
-        if (app->hasMainWindow())
-            app->mainWindow()->setCaption(newCaption);
-    }
-
-    QString organizationName()
-    {
-        return app->organizationName();
-    }
-
-    QString organizationDomain()
-    {
-        return app->organizationDomain();
-    }
-
-public slots:
-    Q_NOREPLY void quit()
-    { app->quit(); }
-
-    void reparseConfiguration()
-    { app->reparseConfiguration(); }
-
-    QString mainWindowObject()
-    {
-        if (app->hasMainWindow())
-            return QString("/%1/mainwindow").arg(app->applicationName());
-        return QString();
-    }
-
-    void setSessionManagement(bool enable)
-    {
-        if (enable)
-           app->enableSessionManagement();
-        else
-           app->disableSessionManagement();
-    }
-
-private slots:
-    void focusChangedSlot(QWidget *, QWidget *now)
-    {
-        if (now == app->mainWindow())
-            emit mainWindowHasFocus();
-    }
-
-signals:
-    void aboutToQuit();
-    void mainWindowHasFocus();
-};
-//! [0]
-
-
-//! [1]
-interface org.kde.DBus.MainApplication
-{
-    property readwrite STRING caption
-    property read STRING organizationName
-    property read STRING organizationDomain
-
-    method quit() annotation("org.freedesktop.DBus.Method.NoReply", "true")
-    method reparseConfiguration()
-    method mainWindowObject(out STRING)
-    method disableSessionManagement(in BOOLEAN enable)
-
-    signal aboutToQuit()
-    signal mainWindowHasFocus()
-}
-//! [1]
-
-
-//! [2]
-int main(int argc, char **argv)
-{
-    // create the QApplication object
-    QApplication app(argc, argv);
-
-    // create the MainApplication adaptor:
-    new MainApplicationAdaptor(app);
-
-    // connect to D-Bus and register as an object:
-    QDBusConnection::sessionBus().registerObject("/MainApplication", app);
-
-    // add main window, etc.
-    [...]
-
-    app.exec();
-}
-//! [2]
-
-
-//! [3]
-class MainApplicationAdaptor: public QDBusAbstractAdaptor
-{
-    Q_OBJECT
-    Q_CLASSINFO("D-Bus Interface", "org.kde.DBus.MainApplication")
-//! [3]
-
-
-//! [4]
-    Q_PROPERTY(QString caption READ caption WRITE setCaption)
-    Q_PROPERTY(QString organizationName READ organizationName)
-    Q_PROPERTY(QString organizationDomain READ organizationDomain)
-//! [4]
-
-
-//! [5]
-QString caption()
-{
-    if (app->hasMainWindow())
-        return app->mainWindow()->caption();
-    return QString();
-}
-
-void setCaption(const QString &newCaption)
-{
-    if (app->hasMainWindow())
-        app->mainWindow()->setCaption(newCaption);
-}
-
-QString organizationName()
-{
-    return app->organizationName();
-}
-
-QString organizationDomain()
-{
-    return app->organizationDomain();
-}
-//! [5]
-
-
-//! [6]
-MyInterfaceAdaptor(QApplication *application)
-    : QDBusAbstractAdaptor(application), app(application)
-{
-    connect(application, SIGNAL(aboutToQuit()), SIGNAL(aboutToQuit());
-    connect(application, SIGNAL(focusChanged(QWidget*, QWidget*)),
-            SLOT(focusChangedSlot(QWidget*, QWidget*)));
-}
-//! [6]
-
-
-//! [7]
-public slots:
-    Q_NOREPLY void quit()
-    { app->quit(); }
-
-    void reparseConfiguration()
-    { app->reparseConfiguration(); }
-
-    QString mainWindowObject()
-    {
-        if (app->hasMainWindow())
-            return QString("/%1/mainwindow").arg(app->applicationName());
-        return QString();
-    }
-
-    void setSessionManagement(bool enable)
-    {
-        if (enable)
-           app->enableSessionManagement();
-        else
-           app->disableSessionManagement();
-    }
-//! [7]
-
-
-//! [8]
-signals:
-    void aboutToQuit();
-    void mainWindowHasFocus();
-//! [8]
-
-
-//! [9]
-private slots:
-    void focusChangedSlot(QWidget *, QWidget *now)
-    {
-        if (now == app->mainWindow())
-            emit mainWindowHasFocus();
-    }
-//! [9]
-
-
-//! [10]
-struct RequestData
-{
-    QString request;
-    QString processedData;
-    QDBusMessage reply;
-};
-
-QString processRequest(const QString &request, const QDBusMessage &message)
-{
-    RequestData *data = new RequestData;
-    data->request = request;
-    message.setDelayedReply(true);
-    data->reply = message.createReply();
-    QDBusConnection::sessionBus().send(data->reply);
-
-    appendRequest(data);
-    return QString();
-}
-//! [10]
-
-
-//! [11]
-void sendReply(RequestData *data)
-{
-    // data->processedData has been initialized with the request's reply
-    QDBusMessage &reply = &data->reply;
-
-    // send the reply over D-Bus:
-    reply << data->processedData;
-    QDBusConnection::sessionBus().send(reply);
-
-    // dispose of the transaction data
-    delete data;
-}
-//! [11]
-
-
-//! [12]
-Q_NOREPLY void myMethod();
-//! [12]
diff --git a/doc/src/snippets/code/doc_src_qtdbus.cpp b/doc/src/snippets/code/doc_src_qtdbus.cpp
deleted file mode 100644
index 65fc2e7..0000000
--- a/doc/src/snippets/code/doc_src_qtdbus.cpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-#include <QtDBus>
-//! [0]
diff --git a/doc/src/snippets/code/doc_src_qtdbus.pro b/doc/src/snippets/code/doc_src_qtdbus.pro
deleted file mode 100644
index d0e6c0e..0000000
--- a/doc/src/snippets/code/doc_src_qtdbus.pro
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#! [1]
-QT += dbus
-#! [1]
diff --git a/doc/src/snippets/code/doc_src_qtestlib.cpp b/doc/src/snippets/code/doc_src_qtestlib.cpp
deleted file mode 100644
index a1e0f9f..0000000
--- a/doc/src/snippets/code/doc_src_qtestlib.cpp
+++ /dev/null
@@ -1,88 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-class MyFirstTest: public QObject
-{
-    Q_OBJECT
-private slots:
-    void initTestCase()
-    { qDebug("called before everything else"); }
-    void myFirstTest()
-    { QVERIFY(1 == 1); }
-    void mySecondTest()
-    { QVERIFY(1 != 2); }
-    void cleanupTestCase()
-    { qDebug("called after myFirstTest and mySecondTest"); }
-};
-//! [0]
-
-
-//! [8]
-void TestQString::toUpper()
-{
-    QString str = "Hello";
-    QVERIFY(str.toUpper() == "HELLO");
-}
-//! [8]
-
-
-//! [11]
-QCOMPARE(QString("hello").toUpper(), QString("HELLO"));
-QCOMPARE(QString("Hello").toUpper(), QString("HELLO"));
-QCOMPARE(QString("HellO").toUpper(), QString("HELLO"));
-QCOMPARE(QString("HELLO").toUpper(), QString("HELLO"));
-//! [11]
-
-//! [12]
-class MyFirstBenchmark: public QObject
-{
-    Q_OBJECT
-private slots:
-    void myFirstBenchmark()
-    { 
-        QString string1;
-        QString string2;
-        QBENCHMARK {
-            string1.localeAwareCompare(string2);
-        }
-    }
-};
-//! [12]
diff --git a/doc/src/snippets/code/doc_src_qtestlib.pro b/doc/src/snippets/code/doc_src_qtestlib.pro
deleted file mode 100644
index e6de136..0000000
--- a/doc/src/snippets/code/doc_src_qtestlib.pro
+++ /dev/null
@@ -1,47 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#! [1]
-QT += testlib
-#! [1]
-
-#! [2]
-CONFIG += testcase
-#! [2]
diff --git a/doc/src/snippets/code/doc_src_qtestlib.qdoc b/doc/src/snippets/code/doc_src_qtestlib.qdoc
deleted file mode 100644
index bd65f3e..0000000
--- a/doc/src/snippets/code/doc_src_qtestlib.qdoc
+++ /dev/null
@@ -1,87 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [2]
-testname [options] [testfunctions[:testdata]]...
-//! [2]
-
-
-//! [3]
-/myTestDirectory$ testQString toUpper
-//! [3]
-
-
-//! [4]
-/myTestDirectory$ testQString toUpper toInt:zero
-//! [4]
-
-
-//! [5]
-/myTestDirectory$ testMyWidget -vs -eventdelay 500
-//! [5]
-
-
-//! [6]
-cetest [options] ...
-//! [6]
-
-
-//! [7]
-set INCLUDE=C:\Program Files\Windows CE Tools\wce500\Windows Mobile 5.0 Pocket PC SDK\Activesync\Inc;%INCLUDE%
-set LIB=C:\Program Files\Windows CE Tools\wce500\Windows Mobile 5.0 Pocket PC SDK\Activesync\Lib;%LIB%    
-//! [7]
-
-
-//! [9]
-/myTestDirectory$ qmake -project "QT += testlib"
-/myTestDirectory$ qmake
-/myTestDirectory$ make
-//! [9]
-
-
-//! [10]
-********* Start testing of TestQString *********
-Config: Using QTest library %VERSION%, Qt %VERSION%
-PASS   : TestQString::initTestCase()
-PASS   : TestQString::toUpper()
-PASS   : TestQString::cleanupTestCase()
-Totals: 3 passed, 0 failed, 0 skipped
-********* Finished testing of TestQString *********
-//! [10]
diff --git a/doc/src/snippets/code/doc_src_qtopengl.cpp b/doc/src/snippets/code/doc_src_qtopengl.cpp
deleted file mode 100644
index d14a1ed..0000000
--- a/doc/src/snippets/code/doc_src_qtopengl.cpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-#include <QtOpenGL>
-//! [0]
diff --git a/doc/src/snippets/code/doc_src_qtopengl.pro b/doc/src/snippets/code/doc_src_qtopengl.pro
deleted file mode 100644
index 8c12b35..0000000
--- a/doc/src/snippets/code/doc_src_qtopengl.pro
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#! [1]
-QT += opengl
-#! [1]
diff --git a/doc/src/snippets/code/doc_src_qtprintsupport.cpp b/doc/src/snippets/code/doc_src_qtprintsupport.cpp
deleted file mode 100644
index ca022c4..0000000
--- a/doc/src/snippets/code/doc_src_qtprintsupport.cpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [1]
-#include <QtPrintSupport>
-//! [1]
diff --git a/doc/src/snippets/code/doc_src_qtprintsupport.pro b/doc/src/snippets/code/doc_src_qtprintsupport.pro
deleted file mode 100644
index 05cdbf3..0000000
--- a/doc/src/snippets/code/doc_src_qtprintsupport.pro
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#! [0]
-QT += printsupport
-#! [0]
diff --git a/doc/src/snippets/code/doc_src_qttest.cpp b/doc/src/snippets/code/doc_src_qttest.cpp
deleted file mode 100644
index 21860fd..0000000
--- a/doc/src/snippets/code/doc_src_qttest.cpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [0]
-#include <QtTest>
-//! [0]
diff --git a/doc/src/snippets/code/doc_src_qttest.pro b/doc/src/snippets/code/doc_src_qttest.pro
deleted file mode 100644
index 15cbfc5..0000000
--- a/doc/src/snippets/code/doc_src_qttest.pro
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#! [1]
-QT += testlib
-#! [1]
diff --git a/doc/src/snippets/code/doc_src_qtwidgets.cpp b/doc/src/snippets/code/doc_src_qtwidgets.cpp
deleted file mode 100644
index 74888e3..0000000
--- a/doc/src/snippets/code/doc_src_qtwidgets.cpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [1]
-#include <QtWidgets>
-//! [1]
diff --git a/doc/src/snippets/code/doc_src_qtwidgets.pro b/doc/src/snippets/code/doc_src_qtwidgets.pro
deleted file mode 100644
index 7e3c633..0000000
--- a/doc/src/snippets/code/doc_src_qtwidgets.pro
+++ /dev/null
@@ -1,43 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#! [0]
-QT += widgets
-#! [0]
diff --git a/doc/src/snippets/customstyle/customstyle.pro b/doc/src/snippets/customstyle/customstyle.pro
deleted file mode 100644
index af0ee4e..0000000
--- a/doc/src/snippets/customstyle/customstyle.pro
+++ /dev/null
@@ -1,2 +0,0 @@
-HEADERS += customstyle.h
-SOURCES += customstyle.cpp main.cpp
diff --git a/doc/src/snippets/customstyle/main.cpp b/doc/src/snippets/customstyle/main.cpp
deleted file mode 100644
index b3bea3b..0000000
--- a/doc/src/snippets/customstyle/main.cpp
+++ /dev/null
@@ -1,54 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-//! [using a custom style]
-#include <QtGui>
-
-#include "customstyle.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication::setStyle(new CustomStyle);
-    QApplication app(argc, argv);
-    QSpinBox spinBox;
-    spinBox.show();
-    return app.exec();
-}
-//! [using a custom style]
diff --git a/doc/src/snippets/itemselection/itemselection.pro b/doc/src/snippets/itemselection/itemselection.pro
deleted file mode 100644
index b1126bf..0000000
--- a/doc/src/snippets/itemselection/itemselection.pro
+++ /dev/null
@@ -1,3 +0,0 @@
-HEADERS     = model.h
-SOURCES     = main.cpp \
-              model.cpp
diff --git a/doc/src/snippets/itemselection/main.cpp b/doc/src/snippets/itemselection/main.cpp
deleted file mode 100644
index f39fb68..0000000
--- a/doc/src/snippets/itemselection/main.cpp
+++ /dev/null
@@ -1,115 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  main.cpp
-
-  A simple example that shows how selections can be used directly on a model.
-  It shows the result of some selections made using a table view.
-*/
-
-#include <QApplication>
-#include <QItemSelection>
-#include <QItemSelectionModel>
-#include <QTableView>
-
-#include "model.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-
-//! [0]
-    TableModel *model = new TableModel(8, 4, &app);
-
-    QTableView *table = new QTableView(0);
-    table->setModel(model);
-
-    QItemSelectionModel *selectionModel = table->selectionModel();
-//! [0] //! [1]
-    QModelIndex topLeft;
-    QModelIndex bottomRight;
-
-    topLeft = model->index(0, 0, QModelIndex());
-    bottomRight = model->index(5, 2, QModelIndex());
-//! [1]
-
-//! [2]
-    QItemSelection selection(topLeft, bottomRight);
-    selectionModel->select(selection, QItemSelectionModel::Select);
-//! [2]
-
-//! [3]
-    QItemSelection toggleSelection;
-
-    topLeft = model->index(2, 1, QModelIndex());
-    bottomRight = model->index(7, 3, QModelIndex());
-    toggleSelection.select(topLeft, bottomRight);
-
-    selectionModel->select(toggleSelection, QItemSelectionModel::Toggle);
-//! [3]
-
-//! [4]
-    QItemSelection columnSelection;
-
-    topLeft = model->index(0, 1, QModelIndex());
-    bottomRight = model->index(0, 2, QModelIndex());
-
-    columnSelection.select(topLeft, bottomRight);
-
-    selectionModel->select(columnSelection,
-        QItemSelectionModel::Select | QItemSelectionModel::Columns);
-
-    QItemSelection rowSelection;
-
-    topLeft = model->index(0, 0, QModelIndex());
-    bottomRight = model->index(1, 0, QModelIndex());
-
-    rowSelection.select(topLeft, bottomRight);
-
-    selectionModel->select(rowSelection,
-        QItemSelectionModel::Select | QItemSelectionModel::Rows);
-//! [4]
-
-    table->setWindowTitle("Selected items in a table model");
-    table->show();
-    table->resize(460, 280);
-    return app.exec();
-}
diff --git a/doc/src/snippets/itemselection/model.cpp b/doc/src/snippets/itemselection/model.cpp
deleted file mode 100644
index 6c9c5ba..0000000
--- a/doc/src/snippets/itemselection/model.cpp
+++ /dev/null
@@ -1,238 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-    model.cpp
-
-    Provides a table model for use in various examples.
-*/
-
-#include <QtGui>
-
-#include "model.h"
-
-/*!
-    Constructs a table model with at least one row and one column.
-*/
-
-TableModel::TableModel(int rows, int columns, QObject *parent)
-    : QAbstractTableModel(parent)
-{
-    QStringList newList;
-
-    for (int column = 0; column < qMax(1, columns); ++column) {
-        newList.append("");
-    }
-
-    for (int row = 0; row < qMax(1, rows); ++row) {
-        rowList.append(newList);
-    }
-}
-
-
-/*!
-    Returns the number of items in the row list as the number of rows
-    in the model.
-*/
-
-int TableModel::rowCount(const QModelIndex &/*parent*/) const
-{
-    return rowList.size();
-}
-
-/*!
-    Returns the number of items in the first list item as the number of
-    columns in the model. All rows should have the same number of columns.
-*/
-
-int TableModel::columnCount(const QModelIndex &/*parent*/) const
-{
-    return rowList[0].size();
-}
-
-/*!
-    Returns an appropriate value for the requested data.
-    If the view requests an invalid index, an invalid variant is returned.
-    Any valid index that corresponds to a string in the list causes that
-    string to be returned for the display role; otherwise an invalid variant
-    is returned.
-*/
-
-QVariant TableModel::data(const QModelIndex &index, int role) const
-{
-    if (!index.isValid())
-        return QVariant();
-
-    if (role == Qt::DisplayRole)
-        return rowList[index.row()][index.column()];
-    else
-        return QVariant();
-}
-
-/*!
-    Returns the appropriate header string depending on the orientation of
-    the header and the section. If anything other than the display role is
-    requested, we return an invalid variant.
-*/
-
-QVariant TableModel::headerData(int section, Qt::Orientation orientation,
-                                int role) const
-{
-    if (role != Qt::DisplayRole)
-        return QVariant();
-
-    if (orientation == Qt::Horizontal)
-        return QString("Column %1").arg(section);
-    else
-        return QString("Row %1").arg(section);
-}
-
-/*!
-    Returns an appropriate value for the item's flags. Valid items are
-    enabled, selectable, and editable.
-*/
-
-Qt::ItemFlags TableModel::flags(const QModelIndex &index) const
-{
-    if (!index.isValid())
-        return Qt::ItemIsEnabled;
-
-    return Qt::ItemIsEnabled | Qt::ItemIsSelectable | Qt::ItemIsEditable;
-}
-
-/*!
-    Changes an item in the model, but only if the following conditions
-    are met:
-
-    * The index supplied is valid.
-    * The role associated with editing text is specified.
-
-    The dataChanged() signal is emitted if the item is changed.
-*/
-
-bool TableModel::setData(const QModelIndex &index,
-                         const QVariant &value, int role)
-{
-    if (!index.isValid() || role != Qt::EditRole)
-        return false;
-
-    rowList[index.row()][index.column()] = value.toString();
-    emit dataChanged(index, index);
-    return true;
-}
-
-/*!
-    Inserts a number of rows into the model at the specified position.
-*/
-
-bool TableModel::insertRows(int position, int rows, const QModelIndex &parent)
-{
-    int columns = columnCount();
-    beginInsertRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        QStringList items;
-        for (int column = 0; column < columns; ++column)
-            items.append("");
-        rowList.insert(position, items);
-    }
-
-    endInsertRows();
-    return true;
-}
-
-/*!
-    Inserts a number of columns into the model at the specified position.
-    Each entry in the list is extended in turn with the required number of
-    empty strings.
-*/
-
-bool TableModel::insertColumns(int position, int columns,
-                               const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginInsertColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = position; column < columns; ++column) {
-            rowList[row].insert(position, "");
-        }
-    }
-
-    endInsertColumns();
-    return true;
-}
-
-/*!
-    Removes a number of rows from the model at the specified position.
-*/
-
-bool TableModel::removeRows(int position, int rows, const QModelIndex &parent)
-{
-    beginRemoveRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        rowList.removeAt(position);
-    }
-
-    endRemoveRows();
-    return true;
-}
-
-/*!
-    Removes a number of columns from the model at the specified position.
-    Each row is shortened by the number of columns specified.
-*/
-
-bool TableModel::removeColumns(int position, int columns,
-                               const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginRemoveColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = 0; column < columns; ++column) {
-            rowList[row].removeAt(position);
-        }
-    }
-
-    endRemoveColumns();
-    return true;
-}
diff --git a/doc/src/snippets/itemselection/model.h b/doc/src/snippets/itemselection/model.h
deleted file mode 100644
index ef63e45..0000000
--- a/doc/src/snippets/itemselection/model.h
+++ /dev/null
@@ -1,74 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef MODEL_H
-#define MODEL_H
-
-#include <QAbstractTableModel>
-#include <QStringList>
-#include <QVariant>
-
-class TableModel : public QAbstractTableModel
-{
-    Q_OBJECT
-
-public:
-    TableModel(int rows = 1, int columns = 1, QObject *parent = 0);
-
-    int rowCount(const QModelIndex &parent = QModelIndex()) const;
-    int columnCount(const QModelIndex &parent = QModelIndex()) const;
-    QVariant data(const QModelIndex &index, int role) const;
-    QVariant headerData(int section, Qt::Orientation orientation,
-                        int role = Qt::DisplayRole) const;
-
-    Qt::ItemFlags flags(const QModelIndex &index) const;
-    bool setData(const QModelIndex &index, const QVariant &value,
-                 int role = Qt::EditRole);
-
-    bool insertRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool insertColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-    bool removeRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool removeColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-
-private:
-    QList<QStringList> rowList;
-};
-
-#endif
diff --git a/doc/src/snippets/qlistview-dnd/main.cpp b/doc/src/snippets/qlistview-dnd/main.cpp
deleted file mode 100644
index 56bff2a..0000000
--- a/doc/src/snippets/qlistview-dnd/main.cpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include <QtGui>
-
-#include "mainwindow.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-    MainWindow *window = new MainWindow;
-    window->show();
-    return app.exec();
-}
diff --git a/doc/src/snippets/qlistview-dnd/mainwindow.cpp b/doc/src/snippets/qlistview-dnd/mainwindow.cpp
deleted file mode 100644
index ff35c5e..0000000
--- a/doc/src/snippets/qlistview-dnd/mainwindow.cpp
+++ /dev/null
@@ -1,83 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include <QtGui>
-
-#include "mainwindow.h"
-#include "model.h"
-
-MainWindow::MainWindow()
-{
-    QMenu *fileMenu = new QMenu(tr("&File"));
-
-    QAction *quitAction = fileMenu->addAction(tr("E&xit"));
-    quitAction->setShortcut(tr("Ctrl+Q"));
-
-    menuBar()->addMenu(fileMenu);
-
-//  For convenient quoting:
-//! [0]
-QListView *listView = new QListView(this);
-listView->setSelectionMode(QAbstractItemView::ExtendedSelection);
-listView->setDragEnabled(true);
-listView->setAcceptDrops(true);
-listView->setDropIndicatorShown(true);
-//! [0]
-
-    this->listView = listView;
-
-    connect(quitAction, SIGNAL(triggered()), this, SLOT(close()));
-
-    setupListItems();
-
-    setCentralWidget(listView);
-    setWindowTitle(tr("List View"));
-}
-
-void MainWindow::setupListItems()
-{
-    QStringList items;
-    items << tr("Oak") << tr("Fir") << tr("Pine") << tr("Birch") << tr("Hazel")
-          << tr("Redwood") << tr("Sycamore") << tr("Chestnut")
-          << tr("Mahogany");
-
-    DragDropListModel *model = new DragDropListModel(items, this);
-    listView->setModel(model);
-}
diff --git a/doc/src/snippets/qlistview-dnd/mainwindow.h b/doc/src/snippets/qlistview-dnd/mainwindow.h
deleted file mode 100644
index daac612..0000000
--- a/doc/src/snippets/qlistview-dnd/mainwindow.h
+++ /dev/null
@@ -1,61 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef WINDOW_H
-#define WINDOW_H
-
-#include <QMainWindow>
-
-class QListView;
-
-class MainWindow : public QMainWindow
-{
-    Q_OBJECT
-
-public:
-    MainWindow();
-
-private:
-    void setupListItems();
-
-    QListView *listView;
-};
-
-#endif
diff --git a/doc/src/snippets/qlistview-dnd/model.cpp b/doc/src/snippets/qlistview-dnd/model.cpp
deleted file mode 100644
index 190ac96..0000000
--- a/doc/src/snippets/qlistview-dnd/model.cpp
+++ /dev/null
@@ -1,167 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of an example program for Qt.
-** EDITIONS: NOLIMITS
-**
-****************************************************************************/
-
-/*
-  model.cpp
-
-  A simple model that uses a QStringList as its data source.
-*/
-
-#include <QtGui>
-
-#include "model.h"
-
-DragDropListModel::DragDropListModel(const QStringList &strings,
-                                     QObject *parent)
-    : QStringListModel(strings, parent)
-{
-}
-
-//! [0]
-bool DragDropListModel::dropMimeData(const QMimeData *data,
-    Qt::DropAction action, int row, int column, const QModelIndex &parent)
-{
-    if (action == Qt::IgnoreAction)
-        return true;
-
-    if (!data->hasFormat("application/vnd.text.list"))
-        return false;
-
-    if (column > 0)
-//! [0] //! [1]
-        return false;
-//! [1]
-
-//! [2]
-    int beginRow;
-
-    if (row != -1)
-        beginRow = row;
-//! [2] //! [3]
-    else if (parent.isValid())
-        beginRow = parent.row();
-//! [3] //! [4]
-    else
-        beginRow = rowCount(QModelIndex());
-//! [4]
-
-//! [5]
-    QByteArray encodedData = data->data("application/vnd.text.list");
-    QDataStream stream(&encodedData, QIODevice::ReadOnly);
-    QStringList newItems;
-    int rows = 0;
-
-    while (!stream.atEnd()) {
-        QString text;
-        stream >> text;
-        newItems << text;
-        ++rows;
-    }
-//! [5]
-
-//! [6]
-    insertRows(beginRow, rows, QModelIndex());
-    foreach (const QString &text, newItems) {
-        QModelIndex idx = index(beginRow, 0, QModelIndex());
-        setData(idx, text);
-        beginRow++;
-    }
-
-    return true;
-}
-//! [6]
-
-//! [7]
-Qt::ItemFlags DragDropListModel::flags(const QModelIndex &index) const
-{
-    Qt::ItemFlags defaultFlags = QStringListModel::flags(index);
-
-    if (index.isValid())
-        return Qt::ItemIsDragEnabled | Qt::ItemIsDropEnabled | defaultFlags;
-    else
-        return Qt::ItemIsDropEnabled | defaultFlags;
-}
-//! [7]
-
-//! [8]
-QMimeData *DragDropListModel::mimeData(const QModelIndexList &indexes) const
-{
-    QMimeData *mimeData = new QMimeData();
-    QByteArray encodedData;
-
-    QDataStream stream(&encodedData, QIODevice::WriteOnly);
-
-    foreach (const QModelIndex &index, indexes) {
-        if (index.isValid()) {
-            QString text = data(index, Qt::DisplayRole).toString();
-            stream << text;
-        }
-    }
-
-    mimeData->setData("application/vnd.text.list", encodedData);
-    return mimeData;
-}
-//! [8]
-
-//! [9]
-QStringList DragDropListModel::mimeTypes() const
-{
-    QStringList types;
-    types << "application/vnd.text.list";
-    return types;
-}
-//! [9]
-
-//! [10]
-Qt::DropActions DragDropListModel::supportedDropActions() const
-{
-    return Qt::CopyAction | Qt::MoveAction;
-}
-//! [10]
diff --git a/doc/src/snippets/qlistview-dnd/model.h b/doc/src/snippets/qlistview-dnd/model.h
deleted file mode 100644
index 9d1ff90..0000000
--- a/doc/src/snippets/qlistview-dnd/model.h
+++ /dev/null
@@ -1,73 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of an example program for Qt.
-** EDITIONS: NOLIMITS
-**
-****************************************************************************/
-
-#ifndef MODEL_H
-#define MODEL_H
-
-#include <QObject>
-#include <QStringListModel>
-
-class DragDropListModel : public QStringListModel
-{
-    Q_OBJECT
-
-public:
-    DragDropListModel(const QStringList &strings, QObject *parent = 0);
-
-    Qt::ItemFlags flags(const QModelIndex &index) const;
-
-    bool dropMimeData(const QMimeData *data, Qt::DropAction action,
-                      int row, int column, const QModelIndex &parent);
-    QMimeData *mimeData(const QModelIndexList &indexes) const;
-    QStringList mimeTypes() const;
-    Qt::DropActions supportedDropActions() const;
-};
-
-#endif
diff --git a/doc/src/snippets/qlistview-dnd/qlistview-dnd.pro b/doc/src/snippets/qlistview-dnd/qlistview-dnd.pro
deleted file mode 100644
index 71fa273..0000000
--- a/doc/src/snippets/qlistview-dnd/qlistview-dnd.pro
+++ /dev/null
@@ -1,5 +0,0 @@
-SOURCES     = main.cpp \
-              mainwindow.cpp \
-              model.cpp
-HEADERS     = mainwindow.h \
-              model.h
diff --git a/doc/src/snippets/qlistwidget-dnd/main.cpp b/doc/src/snippets/qlistwidget-dnd/main.cpp
deleted file mode 100644
index 56bff2a..0000000
--- a/doc/src/snippets/qlistwidget-dnd/main.cpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include <QtGui>
-
-#include "mainwindow.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-    MainWindow *window = new MainWindow;
-    window->show();
-    return app.exec();
-}
diff --git a/doc/src/snippets/qlistwidget-dnd/mainwindow.cpp b/doc/src/snippets/qlistwidget-dnd/mainwindow.cpp
deleted file mode 100644
index 8d93f82..0000000
--- a/doc/src/snippets/qlistwidget-dnd/mainwindow.cpp
+++ /dev/null
@@ -1,87 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include <QtGui>
-
-#include "mainwindow.h"
-
-MainWindow::MainWindow()
-{
-    QMenu *fileMenu = new QMenu(tr("&File"));
-
-    QAction *quitAction = fileMenu->addAction(tr("E&xit"));
-    quitAction->setShortcut(tr("Ctrl+Q"));
-
-    menuBar()->addMenu(fileMenu);
-
-//  For convenient quoting:
-//! [0]
-QListWidget *listWidget = new QListWidget(this);
-listWidget->setSelectionMode(QAbstractItemView::SingleSelection);
-listWidget->setDragEnabled(true);
-listWidget->viewport()->setAcceptDrops(true);
-listWidget->setDropIndicatorShown(true);
-//! [0] //! [1]
-listWidget->setDragDropMode(QAbstractItemView::InternalMove);
-//! [1]
-
-    this->listWidget = listWidget;
-
-    connect(quitAction, SIGNAL(triggered()), this, SLOT(close()));
-
-    setupListItems();
-
-    setCentralWidget(listWidget);
-    setWindowTitle(tr("List Widget"));
-}
-
-void MainWindow::setupListItems()
-{
-    QListWidgetItem *item;
-    item = new QListWidgetItem(tr("Oak"), listWidget);
-    item = new QListWidgetItem(tr("Fir"), listWidget);
-    item = new QListWidgetItem(tr("Pine"), listWidget);
-    item = new QListWidgetItem(tr("Birch"), listWidget);
-    item = new QListWidgetItem(tr("Hazel"), listWidget);
-    item = new QListWidgetItem(tr("Redwood"), listWidget);
-    item = new QListWidgetItem(tr("Sycamore"), listWidget);
-    item = new QListWidgetItem(tr("Chestnut"), listWidget);
-    item = new QListWidgetItem(tr("Mahogany"), listWidget);
-}
diff --git a/doc/src/snippets/qlistwidget-dnd/mainwindow.h b/doc/src/snippets/qlistwidget-dnd/mainwindow.h
deleted file mode 100644
index 50cac64..0000000
--- a/doc/src/snippets/qlistwidget-dnd/mainwindow.h
+++ /dev/null
@@ -1,62 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef WINDOW_H
-#define WINDOW_H
-
-#include <QMainWindow>
-
-class QListWidget;
-class QListWidgetItem;
-
-class MainWindow : public QMainWindow
-{
-    Q_OBJECT
-
-public:
-    MainWindow();
-
-private:
-    void setupListItems();
-
-    QListWidget *listWidget;
-};
-
-#endif
diff --git a/doc/src/snippets/qlistwidget-dnd/qlistwidget-dnd.pro b/doc/src/snippets/qlistwidget-dnd/qlistwidget-dnd.pro
deleted file mode 100644
index 12a900a..0000000
--- a/doc/src/snippets/qlistwidget-dnd/qlistwidget-dnd.pro
+++ /dev/null
@@ -1,3 +0,0 @@
-SOURCES     = main.cpp \
-              mainwindow.cpp
-HEADERS     = mainwindow.h
diff --git a/doc/src/snippets/qsortfilterproxymodel/main.cpp b/doc/src/snippets/qsortfilterproxymodel/main.cpp
deleted file mode 100644
index 0d78ae3..0000000
--- a/doc/src/snippets/qsortfilterproxymodel/main.cpp
+++ /dev/null
@@ -1,77 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include <QtGui>
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-    QObject *parent = &app;
-
-    QStringList numbers;
-    numbers << "One" << "Two" << "Three" << "Four" << "Five";
-
-    QAbstractItemModel *stringListModel = new QStringListModel(numbers, parent);
-
-//! [0]
-    QSortFilterProxyModel *filterModel = new QSortFilterProxyModel(parent);
-    filterModel->setSourceModel(stringListModel);
-//! [0]
-
-    QWidget *window = new QWidget;
-
-//! [1]
-    QListView *filteredView = new QListView;
-    filteredView->setModel(filterModel);
-//! [1]
-    filteredView->setWindowTitle("Filtered view onto a string list model");
-
-    QLineEdit *patternEditor = new QLineEdit;
-    QObject::
-    connect(patternEditor, SIGNAL(textChanged(const QString &)),
-            filterModel, SLOT(setFilterRegExp(const QString &)));
-
-    QVBoxLayout *layout = new QVBoxLayout(window);
-    layout->addWidget(filteredView);
-    layout->addWidget(patternEditor);
-
-    window->show();
-    return app.exec();
-}
diff --git a/doc/src/snippets/qsortfilterproxymodel/qsortfilterproxymodel.pro b/doc/src/snippets/qsortfilterproxymodel/qsortfilterproxymodel.pro
deleted file mode 100644
index 16181f2..0000000
--- a/doc/src/snippets/qsortfilterproxymodel/qsortfilterproxymodel.pro
+++ /dev/null
@@ -1 +0,0 @@
-SOURCES     = main.cpp
diff --git a/doc/src/snippets/qtablewidget-using/Images/cubed.png b/doc/src/snippets/qtablewidget-using/Images/cubed.png
deleted file mode 100644
index 2cd9048..0000000
Binary files a/doc/src/snippets/qtablewidget-using/Images/cubed.png and /dev/null differ
diff --git a/doc/src/snippets/qtablewidget-using/Images/squared.png b/doc/src/snippets/qtablewidget-using/Images/squared.png
deleted file mode 100644
index bfdf993..0000000
Binary files a/doc/src/snippets/qtablewidget-using/Images/squared.png and /dev/null differ
diff --git a/doc/src/snippets/qtablewidget-using/images.qrc b/doc/src/snippets/qtablewidget-using/images.qrc
deleted file mode 100644
index 1d49b52..0000000
--- a/doc/src/snippets/qtablewidget-using/images.qrc
+++ /dev/null
@@ -1,6 +0,0 @@
-<!DOCTYPE RCC><RCC version="1.0">
-<qresource>
-   <file>Images/squared.png</file>
-   <file>Images/cubed.png</file>
-</qresource>
-</RCC>
diff --git a/doc/src/snippets/qtablewidget-using/main.cpp b/doc/src/snippets/qtablewidget-using/main.cpp
deleted file mode 100644
index 56bff2a..0000000
--- a/doc/src/snippets/qtablewidget-using/main.cpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#include <QtGui>
-
-#include "mainwindow.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-    MainWindow *window = new MainWindow;
-    window->show();
-    return app.exec();
-}
diff --git a/doc/src/snippets/qtablewidget-using/mainwindow.h b/doc/src/snippets/qtablewidget-using/mainwindow.h
deleted file mode 100644
index 5c8c997..0000000
--- a/doc/src/snippets/qtablewidget-using/mainwindow.h
+++ /dev/null
@@ -1,70 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef WINDOW_H
-#define WINDOW_H
-
-#include <QMainWindow>
-
-class QAction;
-class QTableWidget;
-class QTableWidgetItem;
-
-class MainWindow : public QMainWindow
-{
-    Q_OBJECT
-
-public:
-    MainWindow();
-
-public slots:
-    void averageItems();
-    void sumItems();
-
-private:
-    void setupTableItems();
-
-    QAction *removeAction;
-//! [0]
-    QTableWidget *tableWidget;
-//! [0]
-};
-
-#endif
diff --git a/doc/src/snippets/qtablewidget-using/qtablewidget-using.pro b/doc/src/snippets/qtablewidget-using/qtablewidget-using.pro
deleted file mode 100644
index ffe134c..0000000
--- a/doc/src/snippets/qtablewidget-using/qtablewidget-using.pro
+++ /dev/null
@@ -1,4 +0,0 @@
-SOURCES     = main.cpp \
-              mainwindow.cpp
-HEADERS     = mainwindow.h
-RESOURCES   += images.qrc
diff --git a/doc/src/snippets/reading-selections/main.cpp b/doc/src/snippets/reading-selections/main.cpp
deleted file mode 100644
index 3356ffc..0000000
--- a/doc/src/snippets/reading-selections/main.cpp
+++ /dev/null
@@ -1,59 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  main.cpp
-
-  A simple example that shows how selections can be used directly on a model.
-  It shows the result of some selections made using a table view.
-*/
-
-#include <QApplication>
-
-#include "window.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-    QMainWindow *window = new MainWindow;
-    window->show();
-    window->resize(640, 480);
-    return app.exec();
-}
diff --git a/doc/src/snippets/reading-selections/model.cpp b/doc/src/snippets/reading-selections/model.cpp
deleted file mode 100644
index ca4b9f8..0000000
--- a/doc/src/snippets/reading-selections/model.cpp
+++ /dev/null
@@ -1,238 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-    model.cpp
-
-    Provides a table model for use in various examples.
-*/
-
-#include <QtGui>
-
-#include "model.h"
-
-/*!
-    Constructs a table model with at least one row and one column.
-*/
-
-TableModel::TableModel(int rows, int columns, QObject *parent)
-    : QAbstractTableModel(parent)
-{
-    QStringList newList;
-
-    for (int column = 0; column < qMax(1, columns); ++column) {
-        newList.append("");
-    }
-
-    for (int row = 0; row < qMax(1, rows); ++row) {
-        rowList.append(newList);
-    }
-}
-
-
-/*!
-    Returns the number of items in the row list as the number of rows
-    in the model.
-*/
-
-int TableModel::rowCount(const QModelIndex &/*parent*/) const
-{
-    return rowList.size();
-}
-
-/*!
-    Returns the number of items in the first list item as the number of
-    columns in the model. All rows should have the same number of columns.
-*/
-
-int TableModel::columnCount(const QModelIndex &/*parent*/) const
-{
-    return rowList[0].size();
-}
-
-/*!
-    Returns an appropriate value for the requested data.
-    If the view requests an invalid index, an invalid variant is returned.
-    Any valid index that corresponds to a string in the list causes that
-    string to be returned for the display role; otherwise an invalid variant
-    is returned.
-*/
-
-QVariant TableModel::data(const QModelIndex &index, int role) const
-{
-    if (!index.isValid())
-        return QVariant();
-
-    if (role == Qt::DisplayRole)
-        return rowList[index.row()][index.column()];
-    else
-        return QVariant();
-}
-
-/*!
-    Returns the appropriate header string depending on the orientation of
-    the header and the section. If anything other than the display role is
-    requested, we return an invalid variant.
-*/
-
-QVariant TableModel::headerData(int section, Qt::Orientation orientation,
-                                int role) const
-{
-    if (role != Qt::DisplayRole)
-        return QVariant();
-
-    if (orientation == Qt::Horizontal)
-        return QString("Column %1").arg(section);
-    else
-        return QString("Row %1").arg(section);
-}
-
-/*!
-    Returns an appropriate value for the item's flags. Valid items are
-    enabled, selectable, and editable.
-*/
-
-Qt::ItemFlags TableModel::flags(const QModelIndex &index) const
-{
-    if (!index.isValid())
-        return Qt::ItemIsEnabled;
-
-    return Qt::ItemIsEnabled | Qt::ItemIsSelectable;
-}
-
-/*!
-    Changes an item in the model, but only if the following conditions
-    are met:
-
-    * The index supplied is valid.
-    * The role associated with editing text is specified.
-
-    The dataChanged() signal is emitted if the item is changed.
-*/
-
-bool TableModel::setData(const QModelIndex &index,
-                         const QVariant &value, int role)
-{
-    if (!index.isValid() || role != Qt::EditRole)
-        return false;
-
-    rowList[index.row()][index.column()] = value.toString();
-    emit dataChanged(index, index);
-    return true;
-}
-
-/*!
-    Inserts a number of rows into the model at the specified position.
-*/
-
-bool TableModel::insertRows(int position, int rows, const QModelIndex &parent)
-{
-    int columns = columnCount();
-    beginInsertRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        QStringList items;
-        for (int column = 0; column < columns; ++column)
-            items.append("");
-        rowList.insert(position, items);
-    }
-
-    endInsertRows();
-    return true;
-}
-
-/*!
-    Inserts a number of columns into the model at the specified position.
-    Each entry in the list is extended in turn with the required number of
-    empty strings.
-*/
-
-bool TableModel::insertColumns(int position, int columns,
-                               const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginInsertColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = position; column < columns; ++column) {
-            rowList[row].insert(position, "");
-        }
-    }
-
-    endInsertColumns();
-    return true;
-}
-
-/*!
-    Removes a number of rows from the model at the specified position.
-*/
-
-bool TableModel::removeRows(int position, int rows, const QModelIndex &parent)
-{
-    beginRemoveRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        rowList.removeAt(position);
-    }
-
-    endRemoveRows();
-    return true;
-}
-
-/*!
-    Removes a number of columns from the model at the specified position.
-    Each row is shortened by the number of columns specified.
-*/
-
-bool TableModel::removeColumns(int position, int columns,
-                               const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginRemoveColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = 0; column < columns; ++column) {
-            rowList[row].removeAt(position);
-        }
-    }
-
-    endRemoveColumns();
-    return true;
-}
diff --git a/doc/src/snippets/reading-selections/model.h b/doc/src/snippets/reading-selections/model.h
deleted file mode 100644
index ef63e45..0000000
--- a/doc/src/snippets/reading-selections/model.h
+++ /dev/null
@@ -1,74 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef MODEL_H
-#define MODEL_H
-
-#include <QAbstractTableModel>
-#include <QStringList>
-#include <QVariant>
-
-class TableModel : public QAbstractTableModel
-{
-    Q_OBJECT
-
-public:
-    TableModel(int rows = 1, int columns = 1, QObject *parent = 0);
-
-    int rowCount(const QModelIndex &parent = QModelIndex()) const;
-    int columnCount(const QModelIndex &parent = QModelIndex()) const;
-    QVariant data(const QModelIndex &index, int role) const;
-    QVariant headerData(int section, Qt::Orientation orientation,
-                        int role = Qt::DisplayRole) const;
-
-    Qt::ItemFlags flags(const QModelIndex &index) const;
-    bool setData(const QModelIndex &index, const QVariant &value,
-                 int role = Qt::EditRole);
-
-    bool insertRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool insertColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-    bool removeRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool removeColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-
-private:
-    QList<QStringList> rowList;
-};
-
-#endif
diff --git a/doc/src/snippets/reading-selections/reading-selections.pro b/doc/src/snippets/reading-selections/reading-selections.pro
deleted file mode 100644
index 91ebd3e..0000000
--- a/doc/src/snippets/reading-selections/reading-selections.pro
+++ /dev/null
@@ -1,2 +0,0 @@
-HEADERS += model.h window.h
-SOURCES += main.cpp model.cpp window.cpp
diff --git a/doc/src/snippets/reading-selections/window.cpp b/doc/src/snippets/reading-selections/window.cpp
deleted file mode 100644
index dd99703..0000000
--- a/doc/src/snippets/reading-selections/window.cpp
+++ /dev/null
@@ -1,120 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  window.cpp
-
-  A minimal subclass of QTableView with slots to allow the selection model
-  to be monitored.
-*/
-
-#include <QAbstractItemModel>
-#include <QItemSelection>
-#include <QItemSelectionModel>
-#include <QMenu>
-#include <QMenuBar>
-#include <QStatusBar>
-
-#include "model.h"
-#include "window.h"
-
-MainWindow::MainWindow(QWidget *parent)
-    : QMainWindow(parent)
-{
-    setWindowTitle("Selected Items in a Table Model");
-
-    model = new TableModel(8, 4, this);
-
-    table = new QTableView(this);
-    table->setModel(model);
-
-    QMenu *actionMenu = new QMenu(tr("&Actions"), this);
-    QAction *fillAction = actionMenu->addAction(tr("&Fill Selection"));
-    QAction *clearAction = actionMenu->addAction(tr("&Clear Selection"));
-    QAction *selectAllAction = actionMenu->addAction(tr("&Select All"));
-    menuBar()->addMenu(actionMenu);
-
-    connect(fillAction, SIGNAL(triggered()), this, SLOT(fillSelection()));
-    connect(clearAction, SIGNAL(triggered()), this, SLOT(clearSelection()));
-    connect(selectAllAction, SIGNAL(triggered()), this, SLOT(selectAll()));
-
-    selectionModel = table->selectionModel();
-
-    statusBar();
-    setCentralWidget(table);
-}
-
-void MainWindow::fillSelection()
-{
-//! [0]
-    QModelIndexList indexes = selectionModel->selectedIndexes();
-    QModelIndex index;
-
-    foreach(index, indexes) {
-        QString text = QString("(%1,%2)").arg(index.row()).arg(index.column());
-        model->setData(index, text);
-    }
-//! [0]
-}
-
-void MainWindow::clearSelection()
-{
-    QModelIndexList indexes = selectionModel->selectedIndexes();
-    QModelIndex index;
-
-    foreach(index, indexes)
-        model->setData(index, "");
-}
-
-void MainWindow::selectAll()
-{
-//! [1]
-    QModelIndex parent = QModelIndex();
-//! [1] //! [2]
-    QModelIndex topLeft = model->index(0, 0, parent);
-    QModelIndex bottomRight = model->index(model->rowCount(parent)-1,
-        model->columnCount(parent)-1, parent);
-//! [2]
-
-//! [3]
-    QItemSelection selection(topLeft, bottomRight);
-    selectionModel->select(selection, QItemSelectionModel::Select);
-//! [3]
-}
diff --git a/doc/src/snippets/reading-selections/window.h b/doc/src/snippets/reading-selections/window.h
deleted file mode 100644
index 6d2537c..0000000
--- a/doc/src/snippets/reading-selections/window.h
+++ /dev/null
@@ -1,67 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef WINDOW_H
-#define WINDOW_H
-
-#include <QItemSelection>
-#include <QMainWindow>
-#include <QAbstractItemModel>
-#include <QWidget>
-#include <QTableView>
-
-class MainWindow : public QMainWindow
-{
-    Q_OBJECT
-public:
-    MainWindow(QWidget *parent = 0);
-
-private slots:
-    void fillSelection();
-    void clearSelection();
-    void selectAll();
-
-private:
-    QAbstractItemModel *model;
-    QItemSelectionModel *selectionModel;
-    QTableView *table;
-};
-
-#endif
diff --git a/doc/src/snippets/sharedtablemodel/main.cpp b/doc/src/snippets/sharedtablemodel/main.cpp
deleted file mode 100644
index f031a02..0000000
--- a/doc/src/snippets/sharedtablemodel/main.cpp
+++ /dev/null
@@ -1,89 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  main.cpp
-
-  A simple example that shows how a single model can be shared between
-  multiple views.
-*/
-
-#include <QApplication>
-#include <QHeaderView>
-#include <QItemSelectionModel>
-#include <QTableView>
-
-#include "model.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-
-    TableModel *model = new TableModel(4, 2, &app);
-
-//! [0]
-    QTableView *firstTableView = new QTableView;
-    QTableView *secondTableView = new QTableView;
-//! [0]
-
-//! [1]
-    firstTableView->setModel(model);
-    secondTableView->setModel(model);
-//! [1]
-
-    firstTableView->horizontalHeader()->setModel(model);
-
-    for (int row = 0; row < 4; ++row) {
-        for (int column = 0; column < 2; ++column) {
-            QModelIndex index = model->index(row, column, QModelIndex());
-            model->setData(index, QVariant(QString("(%1, %2)").arg(row).arg(column)));
-        }
-    }
-
-//! [2]
-    secondTableView->setSelectionModel(firstTableView->selectionModel());
-//! [2]
-
-    firstTableView->setWindowTitle("First table view");
-    secondTableView->setWindowTitle("Second table view");
-    firstTableView->show();
-    secondTableView->show();
-    return app.exec();
-}
diff --git a/doc/src/snippets/sharedtablemodel/model.cpp b/doc/src/snippets/sharedtablemodel/model.cpp
deleted file mode 100644
index ec56f84..0000000
--- a/doc/src/snippets/sharedtablemodel/model.cpp
+++ /dev/null
@@ -1,236 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-    model.cpp
-
-    Provides a table model for use in various examples.
-*/
-
-#include <QtGui>
-
-#include "model.h"
-
-/*!
-    Constructs a table model with at least one row and one column.
-*/
-
-TableModel::TableModel(int rows, int columns, QObject *parent)
-    : QAbstractTableModel(parent)
-{
-    QStringList newList;
-
-    for (int column = 0; column < qMax(1, columns); ++column) {
-        newList.append("");
-    }
-
-    for (int row = 0; row < qMax(1, rows); ++row) {
-        rowList.append(newList);
-    }
-}
-
-
-/*!
-    Returns the number of items in the row list as the number of rows
-    in the model.
-*/
-
-int TableModel::rowCount(const QModelIndex &/*parent*/) const
-{
-    return rowList.size();
-}
-
-/*!
-    Returns the number of items in the first list item as the number of
-    columns in the model. All rows should have the same number of columns.
-*/
-
-int TableModel::columnCount(const QModelIndex &/*parent*/) const
-{
-    return rowList[0].size();
-}
-
-/*!
-    Returns an appropriate value for the requested data.
-    If the view requests an invalid index, an invalid variant is returned.
-    Any valid index that corresponds to a string in the list causes that
-    string to be returned for the display role; otherwise an invalid variant
-    is returned.
-*/
-
-QVariant TableModel::data(const QModelIndex &index, int role) const
-{
-    if (!index.isValid())
-        return QVariant();
-
-    if (role == Qt::DisplayRole)
-        return rowList[index.row()][index.column()];
-    else
-        return QVariant();
-}
-
-/*!
-    Returns the appropriate header string depending on the orientation of
-    the header and the section. If anything other than the display role is
-    requested, we return an invalid variant.
-*/
-
-QVariant TableModel::headerData(int section, Qt::Orientation orientation,
-                                int role) const
-{
-    if (role != Qt::DisplayRole)
-        return QVariant();
-
-    if (orientation == Qt::Horizontal)
-        return QString("Column %1").arg(section);
-    else
-        return QString("Row %1").arg(section);
-}
-
-/*!
-    Returns an appropriate value for the item's flags. Valid items are
-    enabled, selectable, and editable.
-*/
-
-Qt::ItemFlags TableModel::flags(const QModelIndex &index) const
-{
-    if (!index.isValid())
-        return Qt::ItemIsEnabled;
-
-    return Qt::ItemIsEnabled | Qt::ItemIsSelectable | Qt::ItemIsEditable;
-}
-
-/*!
-    Changes an item in the model, but only if the following conditions
-    are met:
-
-    * The index supplied is valid.
-    * The role associated with editing text is specified.
-
-    The dataChanged() signal is emitted if the item is changed.
-*/
-
-bool TableModel::setData(const QModelIndex &index,
-                         const QVariant &value, int role)
-{
-    if (!index.isValid() || role != Qt::EditRole)
-        return false;
-
-    rowList[index.row()][index.column()] = value.toString();
-    emit dataChanged(index, index);
-    return true;
-}
-
-/*!
-    Inserts a number of rows into the model at the specified position.
-*/
-
-bool TableModel::insertRows(int position, int rows, const QModelIndex &parent)
-{
-    int columns = columnCount();
-    beginInsertRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        QStringList items;
-        for (int column = 0; column < columns; ++column)
-            items.append("");
-        rowList.insert(position, items);
-    }
-
-    endInsertRows();
-    return true;
-}
-
-/*!
-    Inserts a number of columns into the model at the specified position.
-    Each entry in the list is extended in turn with the required number of
-    empty strings.
-*/
-
-bool TableModel::insertColumns(int position, int columns, const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginInsertColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = position; column < columns; ++column) {
-            rowList[row].insert(position, "");
-        }
-    }
-
-    endInsertColumns();
-    return true;
-}
-
-/*!
-    Removes a number of rows from the model at the specified position.
-*/
-
-bool TableModel::removeRows(int position, int rows, const QModelIndex &parent)
-{
-    beginRemoveRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        rowList.removeAt(position);
-    }
-
-    endRemoveRows();
-    return true;
-}
-
-/*!
-    Removes a number of columns from the model at the specified position.
-    Each row is shortened by the number of columns specified.
-*/
-
-bool TableModel::removeColumns(int position, int columns, const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginRemoveColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = 0; column < columns; ++column) {
-            rowList[row].removeAt(position);
-        }
-    }
-
-    endRemoveColumns();
-    return true;
-}
diff --git a/doc/src/snippets/sharedtablemodel/model.h b/doc/src/snippets/sharedtablemodel/model.h
deleted file mode 100644
index ef63e45..0000000
--- a/doc/src/snippets/sharedtablemodel/model.h
+++ /dev/null
@@ -1,74 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef MODEL_H
-#define MODEL_H
-
-#include <QAbstractTableModel>
-#include <QStringList>
-#include <QVariant>
-
-class TableModel : public QAbstractTableModel
-{
-    Q_OBJECT
-
-public:
-    TableModel(int rows = 1, int columns = 1, QObject *parent = 0);
-
-    int rowCount(const QModelIndex &parent = QModelIndex()) const;
-    int columnCount(const QModelIndex &parent = QModelIndex()) const;
-    QVariant data(const QModelIndex &index, int role) const;
-    QVariant headerData(int section, Qt::Orientation orientation,
-                        int role = Qt::DisplayRole) const;
-
-    Qt::ItemFlags flags(const QModelIndex &index) const;
-    bool setData(const QModelIndex &index, const QVariant &value,
-                 int role = Qt::EditRole);
-
-    bool insertRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool insertColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-    bool removeRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool removeColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-
-private:
-    QList<QStringList> rowList;
-};
-
-#endif
diff --git a/doc/src/snippets/sharedtablemodel/sharedtablemodel.pro b/doc/src/snippets/sharedtablemodel/sharedtablemodel.pro
deleted file mode 100644
index 10671e6..0000000
--- a/doc/src/snippets/sharedtablemodel/sharedtablemodel.pro
+++ /dev/null
@@ -1,2 +0,0 @@
-HEADERS += model.h
-SOURCES += main.cpp model.cpp
diff --git a/doc/src/snippets/simplemodel-use/main.cpp b/doc/src/snippets/simplemodel-use/main.cpp
deleted file mode 100644
index d8188b1..0000000
--- a/doc/src/snippets/simplemodel-use/main.cpp
+++ /dev/null
@@ -1,95 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  main.cpp
-
-  A simple example of how to access items from an existing model.
-*/
-
-#include <QtGui>
-
-/*!
-    Create a default directory model and, using the index-based interface to
-    the model and some QLabel widgets, populate the window's layout with the
-    names of objects in the directory.
-
-    Note that we only want to read the filenames in the highest level of the
-    directory, so we supply a default (invalid) QModelIndex to the model in
-    order to indicate that we want top-level items.
-*/
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-
-    QWidget *window = new QWidget;
-    QVBoxLayout *layout = new QVBoxLayout(window);
-    QLabel *title = new QLabel("Some items from the directory model", window);
-    title->setBackgroundRole(QPalette::Base);
-    title->setMargin(8);
-    layout->addWidget(title);
-    
-//! [0]
-    QFileSystemModel *model = new QFileSystemModel;
-    QModelIndex parentIndex = model->index(QDir::currentPath());
-    int numRows = model->rowCount(parentIndex);
-//! [0]
-
-//! [1]
-    for (int row = 0; row < numRows; ++row) {
-        QModelIndex index = model->index(row, 0, parentIndex);
-//! [1]
-
-//! [2]
-        QString text = model->data(index, Qt::DisplayRole).toString();
-        // Display the text in a widget.
-//! [2]
-
-        QLabel *label = new QLabel(text, window);
-        layout->addWidget(label);
-//! [3]
-    }
-//! [3]
-
-    window->setWindowTitle("A simple model example");
-    window->show();
-    return app.exec();
-}
diff --git a/doc/src/snippets/simplemodel-use/simplemodel-use.pro b/doc/src/snippets/simplemodel-use/simplemodel-use.pro
deleted file mode 100644
index 28dcadc..0000000
--- a/doc/src/snippets/simplemodel-use/simplemodel-use.pro
+++ /dev/null
@@ -1 +0,0 @@
-SOURCES += main.cpp
diff --git a/doc/src/snippets/stringlistmodel/main.cpp b/doc/src/snippets/stringlistmodel/main.cpp
deleted file mode 100644
index d4f0efd..0000000
--- a/doc/src/snippets/stringlistmodel/main.cpp
+++ /dev/null
@@ -1,83 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*!
-    The main function for the string list model example. This creates and
-    populates a model with values from a string list then displays the
-    contents of the model using a QListView widget.
-*/
-
-#include <QAbstractItemModel>
-#include <QApplication>
-#include <QListView>
-
-#include "model.h"
-
-//! [0]
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-
-// Unindented for quoting purposes:
-//! [1]
-QStringList numbers;
-numbers << "One" << "Two" << "Three" << "Four" << "Five";
-
-QAbstractItemModel *model = new StringListModel(numbers);
-//! [0] //! [1] //! [2] //! [3]
-QListView *view = new QListView;
-//! [2]
-view->setWindowTitle("View onto a string list model");
-//! [4]
-view->setModel(model);
-//! [3] //! [4]
-
-    model->insertRows(5, 7, QModelIndex());
-
-    for (int row = 5; row < 12; ++row) {
-        QModelIndex index = model->index(row, 0, QModelIndex());
-        model->setData(index, QString::number(row+1));
-    }
-
-//! [5]
-    view->show();
-    return app.exec();
-}
-//! [5]
diff --git a/doc/src/snippets/stringlistmodel/model.cpp b/doc/src/snippets/stringlistmodel/model.cpp
deleted file mode 100644
index 6795345..0000000
--- a/doc/src/snippets/stringlistmodel/model.cpp
+++ /dev/null
@@ -1,211 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  model.cpp
-
-  A simple model that uses a QStringList as its data source.
-*/
-
-#include "model.h"
-
-/*!
-    Returns the number of items in the string list as the number of rows
-    in the model.
-*/
-
-//! [0]
-int StringListModel::rowCount(const QModelIndex &parent) const
-{
-    return stringList.count();
-}
-//! [0]
-
-
-#ifdef 0
-// This represents a read-only version of data(), an early stage in the 
-// development of the example leading to an editable StringListModel.
-
-/*!
-    Returns an appropriate value for the requested data.
-    If the view requests an invalid index, an invalid variant is returned.
-    Any valid index that corresponds to a string in the list causes that
-    string to be returned.
-*/
-
-//! [1-data-read-only]
-QVariant StringListModel::data(const QModelIndex &index, int role) const
-{
-    if (!index.isValid())
-        return QVariant();
-
-    if (index.row() >= stringList.size())
-        return QVariant();
-
-    if (role == Qt::DisplayRole)
-        return stringList.at(index.row());
-    else
-        return QVariant();
-}
-//! [1-data-read-only]
-#endif
-
-
-/*!
-    Returns an appropriate value for the requested data.
-    If the view requests an invalid index, an invalid variant is returned.
-    Any valid index that corresponds to a string in the list causes that
-    string to be returned.
-*/
-
-//! [1]
-QVariant StringListModel::data(const QModelIndex &index, int role) const
-{
-    if (!index.isValid())
-        return QVariant();
-
-    if (index.row() >= stringList.size())
-        return QVariant();
-        
-    if (role == Qt::DisplayRole || role == Qt::EditRole)
-        return stringList.at(index.row());
-    else
-        return QVariant();
-}
-//! [1]
-
-/*!
-    Returns the appropriate header string depending on the orientation of
-    the header and the section. If anything other than the display role is
-    requested, we return an invalid variant.
-*/
-
-//! [2]
-QVariant StringListModel::headerData(int section, Qt::Orientation orientation,
-                                     int role) const
-{
-    if (role != Qt::DisplayRole)
-        return QVariant();
-
-    if (orientation == Qt::Horizontal)
-        return QString("Column %1").arg(section);
-    else
-        return QString("Row %1").arg(section);
-}
-//! [2]
-
-/*!
-    Returns an appropriate value for the item's flags. Valid items are
-    enabled, selectable, and editable.
-*/
-
-//! [3]
-Qt::ItemFlags StringListModel::flags(const QModelIndex &index) const
-{
-    if (!index.isValid())
-        return Qt::ItemIsEnabled;
-
-    return QAbstractItemModel::flags(index) | Qt::ItemIsEditable;
-}
-//! [3]
-
-/*!
-    Changes an item in the string list, but only if the following conditions
-    are met:
-
-    * The index supplied is valid.
-    * The index corresponds to an item to be shown in a view.
-    * The role associated with editing text is specified.
-
-    The dataChanged() signal is emitted if the item is changed.
-*/
-
-//! [4]
-bool StringListModel::setData(const QModelIndex &index,
-                              const QVariant &value, int role)
-{
-    if (index.isValid() && role == Qt::EditRole) {
-
-        stringList.replace(index.row(), value.toString());
-        emit dataChanged(index, index);
-        return true;
-    }
-//! [4] //! [5]
-    return false;
-}
-//! [5]
-
-/*!
-    Inserts a number of rows into the model at the specified position.
-*/
-
-//! [6]
-bool StringListModel::insertRows(int position, int rows, const QModelIndex &parent)
-{
-    beginInsertRows(QModelIndex(), position, position+rows-1);
-
-    for (int row = 0; row < rows; ++row) {
-        stringList.insert(position, "");
-    }
-
-    endInsertRows();
-    return true;
-//! [6] //! [7]
-}
-//! [7]
-
-/*!
-    Removes a number of rows from the model at the specified position.
-*/
-
-//! [8]
-bool StringListModel::removeRows(int position, int rows, const QModelIndex &parent)
-{
-    beginRemoveRows(QModelIndex(), position, position+rows-1);
-
-    for (int row = 0; row < rows; ++row) {
-        stringList.removeAt(position);
-    }
-
-    endRemoveRows();
-    return true;
-//! [8] //! [9]
-}
-//! [9]
diff --git a/doc/src/snippets/stringlistmodel/model.h b/doc/src/snippets/stringlistmodel/model.h
deleted file mode 100644
index 1dceccb..0000000
--- a/doc/src/snippets/stringlistmodel/model.h
+++ /dev/null
@@ -1,82 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef MODEL_H
-#define MODEL_H
-
-#include <QAbstractListModel>
-#include <QObject>
-#include <QStringList>
-
-//! [0]
-class StringListModel : public QAbstractListModel
-{
-    Q_OBJECT
-
-public:
-    StringListModel(const QStringList &strings, QObject *parent = 0)
-        : QAbstractListModel(parent), stringList(strings) {}
-
-    int rowCount(const QModelIndex &parent = QModelIndex()) const;
-    QVariant data(const QModelIndex &index, int role) const;
-    QVariant headerData(int section, Qt::Orientation orientation,
-//! [0] //! [1]
-                        int role = Qt::DisplayRole) const;
-//! [1]
-
-//! [2]
-    Qt::ItemFlags flags(const QModelIndex &index) const;
-    bool setData(const QModelIndex &index, const QVariant &value,
-//! [2] //! [3]
-                 int role = Qt::EditRole);
-//! [3]
-
-//! [4]
-    bool insertRows(int position, int rows, const QModelIndex &index = QModelIndex());
-    bool removeRows(int position, int rows, const QModelIndex &index = QModelIndex());
-//! [4]
-
-//! [5]
-private:
-    QStringList stringList;
-};
-//! [5]
-
-#endif
diff --git a/doc/src/snippets/stringlistmodel/stringlistmodel.pro b/doc/src/snippets/stringlistmodel/stringlistmodel.pro
deleted file mode 100644
index b1126bf..0000000
--- a/doc/src/snippets/stringlistmodel/stringlistmodel.pro
+++ /dev/null
@@ -1,3 +0,0 @@
-HEADERS     = model.h
-SOURCES     = main.cpp \
-              model.cpp
diff --git a/doc/src/snippets/updating-selections/main.cpp b/doc/src/snippets/updating-selections/main.cpp
deleted file mode 100644
index 3356ffc..0000000
--- a/doc/src/snippets/updating-selections/main.cpp
+++ /dev/null
@@ -1,59 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  main.cpp
-
-  A simple example that shows how selections can be used directly on a model.
-  It shows the result of some selections made using a table view.
-*/
-
-#include <QApplication>
-
-#include "window.h"
-
-int main(int argc, char *argv[])
-{
-    QApplication app(argc, argv);
-    QMainWindow *window = new MainWindow;
-    window->show();
-    window->resize(640, 480);
-    return app.exec();
-}
diff --git a/doc/src/snippets/updating-selections/model.cpp b/doc/src/snippets/updating-selections/model.cpp
deleted file mode 100644
index ec56f84..0000000
--- a/doc/src/snippets/updating-selections/model.cpp
+++ /dev/null
@@ -1,236 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-    model.cpp
-
-    Provides a table model for use in various examples.
-*/
-
-#include <QtGui>
-
-#include "model.h"
-
-/*!
-    Constructs a table model with at least one row and one column.
-*/
-
-TableModel::TableModel(int rows, int columns, QObject *parent)
-    : QAbstractTableModel(parent)
-{
-    QStringList newList;
-
-    for (int column = 0; column < qMax(1, columns); ++column) {
-        newList.append("");
-    }
-
-    for (int row = 0; row < qMax(1, rows); ++row) {
-        rowList.append(newList);
-    }
-}
-
-
-/*!
-    Returns the number of items in the row list as the number of rows
-    in the model.
-*/
-
-int TableModel::rowCount(const QModelIndex &/*parent*/) const
-{
-    return rowList.size();
-}
-
-/*!
-    Returns the number of items in the first list item as the number of
-    columns in the model. All rows should have the same number of columns.
-*/
-
-int TableModel::columnCount(const QModelIndex &/*parent*/) const
-{
-    return rowList[0].size();
-}
-
-/*!
-    Returns an appropriate value for the requested data.
-    If the view requests an invalid index, an invalid variant is returned.
-    Any valid index that corresponds to a string in the list causes that
-    string to be returned for the display role; otherwise an invalid variant
-    is returned.
-*/
-
-QVariant TableModel::data(const QModelIndex &index, int role) const
-{
-    if (!index.isValid())
-        return QVariant();
-
-    if (role == Qt::DisplayRole)
-        return rowList[index.row()][index.column()];
-    else
-        return QVariant();
-}
-
-/*!
-    Returns the appropriate header string depending on the orientation of
-    the header and the section. If anything other than the display role is
-    requested, we return an invalid variant.
-*/
-
-QVariant TableModel::headerData(int section, Qt::Orientation orientation,
-                                int role) const
-{
-    if (role != Qt::DisplayRole)
-        return QVariant();
-
-    if (orientation == Qt::Horizontal)
-        return QString("Column %1").arg(section);
-    else
-        return QString("Row %1").arg(section);
-}
-
-/*!
-    Returns an appropriate value for the item's flags. Valid items are
-    enabled, selectable, and editable.
-*/
-
-Qt::ItemFlags TableModel::flags(const QModelIndex &index) const
-{
-    if (!index.isValid())
-        return Qt::ItemIsEnabled;
-
-    return Qt::ItemIsEnabled | Qt::ItemIsSelectable | Qt::ItemIsEditable;
-}
-
-/*!
-    Changes an item in the model, but only if the following conditions
-    are met:
-
-    * The index supplied is valid.
-    * The role associated with editing text is specified.
-
-    The dataChanged() signal is emitted if the item is changed.
-*/
-
-bool TableModel::setData(const QModelIndex &index,
-                         const QVariant &value, int role)
-{
-    if (!index.isValid() || role != Qt::EditRole)
-        return false;
-
-    rowList[index.row()][index.column()] = value.toString();
-    emit dataChanged(index, index);
-    return true;
-}
-
-/*!
-    Inserts a number of rows into the model at the specified position.
-*/
-
-bool TableModel::insertRows(int position, int rows, const QModelIndex &parent)
-{
-    int columns = columnCount();
-    beginInsertRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        QStringList items;
-        for (int column = 0; column < columns; ++column)
-            items.append("");
-        rowList.insert(position, items);
-    }
-
-    endInsertRows();
-    return true;
-}
-
-/*!
-    Inserts a number of columns into the model at the specified position.
-    Each entry in the list is extended in turn with the required number of
-    empty strings.
-*/
-
-bool TableModel::insertColumns(int position, int columns, const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginInsertColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = position; column < columns; ++column) {
-            rowList[row].insert(position, "");
-        }
-    }
-
-    endInsertColumns();
-    return true;
-}
-
-/*!
-    Removes a number of rows from the model at the specified position.
-*/
-
-bool TableModel::removeRows(int position, int rows, const QModelIndex &parent)
-{
-    beginRemoveRows(parent, position, position + rows - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        rowList.removeAt(position);
-    }
-
-    endRemoveRows();
-    return true;
-}
-
-/*!
-    Removes a number of columns from the model at the specified position.
-    Each row is shortened by the number of columns specified.
-*/
-
-bool TableModel::removeColumns(int position, int columns, const QModelIndex &parent)
-{
-    int rows = rowCount();
-    beginRemoveColumns(parent, position, position + columns - 1);
-
-    for (int row = 0; row < rows; ++row) {
-        for (int column = 0; column < columns; ++column) {
-            rowList[row].removeAt(position);
-        }
-    }
-
-    endRemoveColumns();
-    return true;
-}
diff --git a/doc/src/snippets/updating-selections/model.h b/doc/src/snippets/updating-selections/model.h
deleted file mode 100644
index ef63e45..0000000
--- a/doc/src/snippets/updating-selections/model.h
+++ /dev/null
@@ -1,74 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef MODEL_H
-#define MODEL_H
-
-#include <QAbstractTableModel>
-#include <QStringList>
-#include <QVariant>
-
-class TableModel : public QAbstractTableModel
-{
-    Q_OBJECT
-
-public:
-    TableModel(int rows = 1, int columns = 1, QObject *parent = 0);
-
-    int rowCount(const QModelIndex &parent = QModelIndex()) const;
-    int columnCount(const QModelIndex &parent = QModelIndex()) const;
-    QVariant data(const QModelIndex &index, int role) const;
-    QVariant headerData(int section, Qt::Orientation orientation,
-                        int role = Qt::DisplayRole) const;
-
-    Qt::ItemFlags flags(const QModelIndex &index) const;
-    bool setData(const QModelIndex &index, const QVariant &value,
-                 int role = Qt::EditRole);
-
-    bool insertRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool insertColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-    bool removeRows(int position, int rows, const QModelIndex &parent = QModelIndex());
-    bool removeColumns(int position, int columns, const QModelIndex &parent = QModelIndex());
-
-private:
-    QList<QStringList> rowList;
-};
-
-#endif
diff --git a/doc/src/snippets/updating-selections/updating-selections.pro b/doc/src/snippets/updating-selections/updating-selections.pro
deleted file mode 100644
index 91ebd3e..0000000
--- a/doc/src/snippets/updating-selections/updating-selections.pro
+++ /dev/null
@@ -1,2 +0,0 @@
-HEADERS += model.h window.h
-SOURCES += main.cpp model.cpp window.cpp
diff --git a/doc/src/snippets/updating-selections/window.cpp b/doc/src/snippets/updating-selections/window.cpp
deleted file mode 100644
index eaa37b8..0000000
--- a/doc/src/snippets/updating-selections/window.cpp
+++ /dev/null
@@ -1,109 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-/*
-  window.cpp
-
-  A minimal subclass of QTableView with slots to allow the selection model
-  to be monitored.
-*/
-
-#include <QAbstractItemModel>
-#include <QItemSelection>
-#include <QItemSelectionModel>
-#include <QStatusBar>
-
-#include "model.h"
-#include "window.h"
-
-MainWindow::MainWindow(QWidget *parent)
-    : QMainWindow(parent)
-{
-    setWindowTitle("Selected items in a table model");
-
-    model = new TableModel(8, 4, this);
-
-    table = new QTableView(this);
-    table->setModel(model);
-
-    selectionModel = table->selectionModel();
-    connect(selectionModel,
-        SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),
-        this, SLOT(updateSelection(const QItemSelection &, const QItemSelection &)));
-    connect(selectionModel,
-        SIGNAL(currentChanged(const QModelIndex &, const QModelIndex &)),
-        this, SLOT(changeCurrent(const QModelIndex &, const QModelIndex &)));
-
-    statusBar();
-    setCentralWidget(table);
-}
-
-//! [0]
-void MainWindow::updateSelection(const QItemSelection &selected,
-    const QItemSelection &deselected)
-{
-    QModelIndex index;
-    QModelIndexList items = selected.indexes();
-
-    foreach (index, items) {
-        QString text = QString("(%1,%2)").arg(index.row()).arg(index.column());
-        model->setData(index, text);
-//! [0] //! [1]
-    }
-//! [1]
-
-//! [2]
-    items = deselected.indexes();
-
-    foreach (index, items)
-        model->setData(index, "");
-}
-//! [2]
-
-//! [3]
-void MainWindow::changeCurrent(const QModelIndex &current,
-    const QModelIndex &previous)
-{
-    statusBar()->showMessage(
-        tr("Moved from (%1,%2) to (%3,%4)")
-            .arg(previous.row()).arg(previous.column())
-            .arg(current.row()).arg(current.column()));
-}
-//! [3]
diff --git a/doc/src/snippets/updating-selections/window.h b/doc/src/snippets/updating-selections/window.h
deleted file mode 100644
index 0d87ced..0000000
--- a/doc/src/snippets/updating-selections/window.h
+++ /dev/null
@@ -1,67 +0,0 @@
-/****************************************************************************
-**
-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/
-**
-** This file is part of the documentation of the Qt Toolkit.
-**
-** $QT_BEGIN_LICENSE:BSD$
-** You may use this file under the terms of the BSD license as follows:
-**
-** "Redistribution and use in source and binary forms, with or without
-** modification, are permitted provided that the following conditions are
-** met:
-**   * Redistributions of source code must retain the above copyright
-**     notice, this list of conditions and the following disclaimer.
-**   * Redistributions in binary form must reproduce the above copyright
-**     notice, this list of conditions and the following disclaimer in
-**     the documentation and/or other materials provided with the
-**     distribution.
-**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor
-**     the names of its contributors may be used to endorse or promote
-**     products derived from this software without specific prior written
-**     permission.
-**
-** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
-**
-** $QT_END_LICENSE$
-**
-****************************************************************************/
-
-#ifndef WINDOW_H
-#define WINDOW_H
-
-#include <QItemSelection>
-#include <QMainWindow>
-#include <QModelIndex>
-#include <QWidget>
-#include <QTableView>
-
-class MainWindow : public QMainWindow
-{
-    Q_OBJECT
-public:
-    MainWindow(QWidget *parent = 0);
-
-public slots:
-    void updateSelection(const QItemSelection &selected,
-                         const QItemSelection &deselected);
-    void changeCurrent(const QModelIndex &current, const QModelIndex &previous);
-
-private:
-    QAbstractItemModel *model;
-    QItemSelectionModel *selectionModel;
-    QTableView *table;
-};
-
-#endif