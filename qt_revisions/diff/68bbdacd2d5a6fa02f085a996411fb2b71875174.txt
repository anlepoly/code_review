diff --git a/src/quick/items/context2d/qquickcontext2d.cpp b/src/quick/items/context2d/qquickcontext2d.cpp
index b78a799..76f795b 100644
--- a/src/quick/items/context2d/qquickcontext2d.cpp
+++ b/src/quick/items/context2d/qquickcontext2d.cpp
@@ -2284,7 +2284,7 @@ static v8::Handle<v8::Value> ctx2d_measureText(const v8::Arguments &args)
 /*!
   \qmlmethod QtQuick2::Context2D::drawImage(variant image, real sx, real sy, real sw, sh, real dx, real dy, real dw, dh)
   This is an overloaded function.
-  Draws the given item as \a image from source point (\a sx, \a sy) and source width \sw, source height \sh
+  Draws the given item as \a image from source point (\a sx, \a sy) and source width \a sw, source height \a sh
   onto the canvas at point (\a dx, \a dy) and with width \a dw, height \a dh.
 
 
diff --git a/src/quick/items/qquickshadereffect.cpp b/src/quick/items/qquickshadereffect.cpp
index 6695c60..be30230 100644
--- a/src/quick/items/qquickshadereffect.cpp
+++ b/src/quick/items/qquickshadereffect.cpp
@@ -595,6 +595,7 @@ void QQuickShaderEffectCommon::propertyChanged(QQuickItem *item, int mappedId,
     \l blending is enabled, source-over blending is used. However, additive
     blending can be achieved by outputting zero in the alpha channel.
 
+    \table
     \row
     \li \image declarative-shadereffectitem.png
     \li \qml
@@ -628,7 +629,7 @@ void QQuickShaderEffectCommon::propertyChanged(QQuickItem *item, int mappedId,
             }
         }
         \endqml
-    \endrow
+    \endtable
 
     By default, the ShaderEffect consists of four vertices, one for each
     corner. For non-linear vertex transformations, like page curl, you can
diff --git a/src/quick/items/qquickshadereffectmesh.cpp b/src/quick/items/qquickshadereffectmesh.cpp
index d1110c5..52a3a0c 100644
--- a/src/quick/items/qquickshadereffectmesh.cpp
+++ b/src/quick/items/qquickshadereffectmesh.cpp
@@ -168,6 +168,7 @@ QSGGeometry *QQuickGridMesh::updateGeometry(QSGGeometry *geometry, const QVector
     For non-linear vertex transformations, you probably want to set the
     resolution higher.
 
+    \table
     \row
     \li \image declarative-gridmesh.png
     \li \qml
@@ -199,7 +200,7 @@ QSGGeometry *QQuickGridMesh::updateGeometry(QSGGeometry *geometry, const QVector
                 }"
         }
         \endqml
-    \endrow
+    \endtable
 */
 
 void QQuickGridMesh::setResolution(const QSize &res)
diff --git a/src/quick/items/qquickshadereffectsource.cpp b/src/quick/items/qquickshadereffectsource.cpp
index b221919..3804c93 100644
--- a/src/quick/items/qquickshadereffectsource.cpp
+++ b/src/quick/items/qquickshadereffectsource.cpp
@@ -510,7 +510,6 @@ QImage QQuickShaderEffectTexture::toImage() const
             }
         }
         \endqml
-    \endrow
     \endtable
 
     The ShaderEffectSource type does not redirect any mouse or keyboard
diff --git a/src/quick/util/qquicktransition.cpp b/src/quick/util/qquicktransition.cpp
index de32fef..32c9756 100644
--- a/src/quick/util/qquicktransition.cpp
+++ b/src/quick/util/qquicktransition.cpp
@@ -292,7 +292,7 @@ QQuickTransitionInstance *QQuickTransition::prepare(QQuickStateOperation::Action
     The animation would only be applied when changing from the default state to
     the "brighter" state (i.e. when the mouse is pressed, but not on release).
 
-    Multiple \c to and \from values can be set by using a comma-separated string.
+    Multiple \c to and \c from values can be set by using a comma-separated string.
 
     \sa reversible
 */