diff --git a/src/testlib/qsignaldumper.cpp b/src/testlib/qsignaldumper.cpp
index c7b9f31..2da4174 100644
--- a/src/testlib/qsignaldumper.cpp
+++ b/src/testlib/qsignaldumper.cpp
@@ -64,12 +64,6 @@ static int iLevel = 0;
 static int ignoreLevel = 0;
 enum { IndentSpacesCount = 4 };
 
-static QByteArray memberName(const QMetaMethod &member)
-{
-    QByteArray ba = member.methodSignature();
-    return ba.left(ba.indexOf('('));
-}
-
 static void qSignalDumperCallback(QObject *caller, int method_index, void **argv)
 {
     Q_ASSERT(caller); Q_ASSERT(argv); Q_UNUSED(argv);
@@ -96,7 +90,7 @@ static void qSignalDumperCallback(QObject *caller, int method_index, void **argv
     str += QByteArray::number(quintptr(caller), 16);
 
     str += ") ";
-    str += QTest::memberName(member);
+    str += member.name();
     str += " (";
 
     QList<QByteArray> args = member.parameterTypes();
diff --git a/src/testlib/qtestcase.cpp b/src/testlib/qtestcase.cpp
index 9628140..08dd4a9 100644
--- a/src/testlib/qtestcase.cpp
+++ b/src/testlib/qtestcase.cpp
@@ -1095,20 +1095,16 @@ int Q_TESTLIB_EXPORT defaultKeyDelay()
 
 static bool isValidSlot(const QMetaMethod &sl)
 {
-    if (sl.access() != QMetaMethod::Private || !sl.parameterTypes().isEmpty()
-        || qstrlen(sl.typeName()) || sl.methodType() != QMetaMethod::Slot)
+    if (sl.access() != QMetaMethod::Private || sl.parameterCount() != 0
+        || sl.returnType() != QMetaType::Void || sl.methodType() != QMetaMethod::Slot)
         return false;
-    QByteArray signature = sl.methodSignature();
-    const char *sig = signature.constData();
-    int len = qstrlen(sig);
-    if (len < 2)
+    QByteArray name = sl.name();
+    if (name.isEmpty())
         return false;
-    if (sig[len - 2] != '(' || sig[len - 1] != ')')
+    if (name.endsWith("_data"))
         return false;
-    if (len > 7 && strcmp(sig + (len - 7), "_data()") == 0)
-        return false;
-    if (strcmp(sig, "initTestCase()") == 0 || strcmp(sig, "cleanupTestCase()") == 0
-        || strcmp(sig, "cleanup()") == 0 || strcmp(sig, "init()") == 0)
+    if (name == "initTestCase" || name == "cleanupTestCase"
+        || name == "cleanup" || name == "init")
         return false;
     return true;
 }