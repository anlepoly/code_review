diff --git a/src/corelib/global/qglobal.h b/src/corelib/global/qglobal.h
index f1ce80e..bb6fa61 100644
--- a/src/corelib/global/qglobal.h
+++ b/src/corelib/global/qglobal.h
@@ -1683,10 +1683,6 @@ Q_CORE_EXPORT void qFatal(const char *, ...) /* print fatal message and exit */
 Q_CORE_EXPORT void qErrnoWarning(int code, const char *msg, ...);
 Q_CORE_EXPORT void qErrnoWarning(const char *msg, ...);
 
-#if (defined(QT_NO_DEBUG_OUTPUT) || defined(QT_NO_TEXTSTREAM)) && !defined(QT_NO_DEBUG_STREAM)
-#define QT_NO_DEBUG_STREAM
-#endif
-
 /*
   Forward declarations only.
 
@@ -1694,13 +1690,19 @@ Q_CORE_EXPORT void qErrnoWarning(const char *msg, ...);
 */
 class QDebug;
 class QNoDebug;
-#ifndef QT_NO_DEBUG_STREAM
+#if !defined(QT_NO_DEBUG_OUTPUT) && !defined(QT_NO_DEBUG_STREAM)
 Q_CORE_EXPORT_INLINE QDebug qDebug();
-Q_CORE_EXPORT_INLINE QDebug qWarning();
-Q_CORE_EXPORT_INLINE QDebug qCritical();
 #else
 inline QNoDebug qDebug();
 #endif
+#if !defined(QT_NO_WARNING_OUTPUT) && !defined(QT_NO_DEBUG_STREAM)
+Q_CORE_EXPORT_INLINE QDebug qWarning();
+#else
+inline QNoDebug qWarning();
+#endif
+#if !defined(QT_NO_DEBUG_STREAM)
+Q_CORE_EXPORT_INLINE QDebug qCritical();
+#endif
 
 #define QT_NO_QDEBUG_MACRO while (false) qDebug
 #ifdef QT_NO_DEBUG_OUTPUT
diff --git a/src/corelib/io/qdebug.h b/src/corelib/io/qdebug.h
index d5fe36e..ecef792 100644
--- a/src/corelib/io/qdebug.h
+++ b/src/corelib/io/qdebug.h
@@ -141,8 +141,6 @@ public:
     inline QNoDebug &operator<<(const T &) { return *this; }
 };
 
-Q_CORE_EXPORT_INLINE QDebug qCritical() { return QDebug(QtCriticalMsg); }
-
 inline QDebug &QDebug::operator=(const QDebug &other)
 {
     if (this != &other) {
@@ -275,17 +273,15 @@ inline QDebug operator<<(QDebug debug, const QFlags<T> &flags)
     return debug.space();
 }
 
-#if !defined(QT_NO_DEBUG_STREAM)
+#if !defined(QT_NO_DEBUG_OUTPUT) && !defined(QT_NO_DEBUG_STREAM)
 Q_CORE_EXPORT_INLINE QDebug qDebug() { return QDebug(QtDebugMsg); }
-
-#else // QT_NO_DEBUG_STREAM
+#else
 #undef qDebug
 inline QNoDebug qDebug() { return QNoDebug(); }
 #define qDebug QT_NO_QDEBUG_MACRO
-
 #endif
 
-#if !defined(QT_NO_WARNING_OUTPUT)
+#if !defined(QT_NO_WARNING_OUTPUT) && !defined(QT_NO_DEBUG_STREAM)
 Q_CORE_EXPORT_INLINE QDebug qWarning() { return QDebug(QtWarningMsg); }
 #else
 #undef qWarning
@@ -293,6 +289,11 @@ inline QNoDebug qWarning() { return QNoDebug(); }
 #define qWarning QT_NO_QWARNING_MACRO
 #endif
 
+#if !defined(QT_NO_DEBUG_STREAM)
+Q_CORE_EXPORT_INLINE QDebug qCritical() { return QDebug(QtCriticalMsg); }
+#endif
+
+
 QT_END_NAMESPACE
 
 QT_END_HEADER
diff --git a/tests/auto/corelib/io/io.pro b/tests/auto/corelib/io/io.pro
index e044eda..1399371 100644
--- a/tests/auto/corelib/io/io.pro
+++ b/tests/auto/corelib/io/io.pro
@@ -11,6 +11,7 @@ SUBDIRS=\
     qfilesystementry \
     qfilesystemwatcher \
     qiodevice \
+    qnodebug \
     qprocess \
     qprocessenvironment \
     qresourceengine \
diff --git a/tests/auto/corelib/io/qnodebug/qnodebug.pro b/tests/auto/corelib/io/qnodebug/qnodebug.pro
new file mode 100644
index 0000000..2f951ab
--- /dev/null
+++ b/tests/auto/corelib/io/qnodebug/qnodebug.pro
@@ -0,0 +1,4 @@
+CONFIG += testcase parallel_test
+TARGET = tst_qnodebug
+QT = core testlib
+SOURCES = tst_qnodebug.cpp
diff --git a/tests/auto/corelib/io/qnodebug/tst_qnodebug.cpp b/tests/auto/corelib/io/qnodebug/tst_qnodebug.cpp
new file mode 100644
index 0000000..eb1ead8
--- /dev/null
+++ b/tests/auto/corelib/io/qnodebug/tst_qnodebug.cpp
@@ -0,0 +1,80 @@
+/****************************************************************************
+**
+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
+** All rights reserved.
+** Contact: Nokia Corporation (qt-info@nokia.com)
+**
+** This file is part of the test suite of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:LGPL$
+** GNU Lesser General Public License Usage
+** This file may be used under the terms of the GNU Lesser General Public
+** License version 2.1 as published by the Free Software Foundation and
+** appearing in the file LICENSE.LGPL included in the packaging of this
+** file. Please review the following information to ensure the GNU Lesser
+** General Public License version 2.1 requirements will be met:
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+**
+** In addition, as a special exception, Nokia gives you certain additional
+** rights. These rights are described in the Nokia Qt LGPL Exception
+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
+**
+** GNU General Public License Usage
+** Alternatively, this file may be used under the terms of the GNU General
+** Public License version 3.0 as published by the Free Software Foundation
+** and appearing in the file LICENSE.GPL included in the packaging of this
+** file. Please review the following information to ensure the GNU General
+** Public License version 3.0 requirements will be met:
+** http://www.gnu.org/copyleft/gpl.html.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms and
+** conditions contained in a signed written agreement between you and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+// This test is for "release" mode, with -DQT_NO_DEBUG -DQT_NO_DEBUG_OUTPUT
+#ifndef QT_NO_DEBUG
+#define QT_NO_DEBUG
+#endif
+#ifndef QT_NO_DEBUG_OUTPUT
+#define QT_NO_DEBUG_OUTPUT
+#endif
+
+#include <QtCore/QtCore>
+#include <QtCore/QtDebug>
+#include <QtTest/QtTest>
+
+class tst_QNoDebug: public QObject
+{
+    Q_OBJECT
+private slots:
+    void noDebugOutput() const;
+    void streaming() const;
+};
+
+void tst_QNoDebug::noDebugOutput() const
+{
+    // should do nothing
+    qDebug() << "foo";
+
+    // qWarning still works, though
+    QTest::ignoreMessage(QtWarningMsg, "bar ");
+    qWarning() << "bar";
+}
+
+void tst_QNoDebug::streaming() const
+{
+    QDateTime dt(QDate(1,2,3),QTime(4,5,6));
+    QTest::ignoreMessage(QtWarningMsg, qPrintable(QString::fromLatin1("QDateTime(\"%1\") ").arg(dt.toString())));
+    qWarning() << dt;
+}
+
+QTEST_MAIN(tst_QNoDebug);
+#include "tst_qnodebug.moc"