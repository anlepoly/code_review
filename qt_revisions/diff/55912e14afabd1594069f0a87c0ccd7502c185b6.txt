diff --git a/src/concurrent/doc/src/qtconcurrent.qdoc b/src/concurrent/doc/src/qtconcurrent.qdoc
new file mode 100644
index 0000000..29a9cd9
--- /dev/null
+++ b/src/concurrent/doc/src/qtconcurrent.qdoc
@@ -0,0 +1,40 @@
+/****************************************************************************
+**
+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
+** Contact: http://www.qt-project.org/
+**
+** This file is part of the documentation of the Qt Toolkit.
+**
+** $QT_BEGIN_LICENSE:FDL$
+** GNU Free Documentation License
+** Alternatively, this file may be used under the terms of the GNU Free
+** Documentation License version 1.3 as published by the Free Software
+** Foundation and appearing in the file included in the packaging of
+** this file.
+**
+** Other Usage
+** Alternatively, this file may be used in accordance with the terms
+** and conditions contained in a signed written agreement between you
+** and Nokia.
+**
+**
+**
+**
+**
+** $QT_END_LICENSE$
+**
+****************************************************************************/
+
+/*!
+    \module QtConcurrent
+    \title QtConcurrent Module
+    \ingroup modules
+
+    \keyword QtConcurrent
+
+    \brief The QtConcurrent module contains functionality to support concurrent execution of program code
+
+    The concurrent module extends the basic threading support found in \l{QtCore module}{Qt Core} and
+    simplifies the development of code that can be executed in parallel on all available CPU cores.
+*/
+
diff --git a/src/corelib/doc/src/threads-basics.qdoc b/src/corelib/doc/src/threads-basics.qdoc
index 0f455c0..7a034ab 100644
--- a/src/corelib/doc/src/threads-basics.qdoc
+++ b/src/corelib/doc/src/threads-basics.qdoc
@@ -163,7 +163,7 @@
     \endtable
 
     In general, it is recommended to only use safe and tested paths and to
-    avoid introducing ad-hoc threading concepts. QtConcurrent provides an easy
+    avoid introducing ad-hoc threading concepts. The QtConcurrent module provides an easy
     interface for distributing work to all of the processor's cores. The
     threading code is completely hidden in the QtConcurrent framework, so you
     don't have to take care of the details. However, QtConcurrent can't be used
diff --git a/src/corelib/thread/qthreadpool.cpp b/src/corelib/thread/qthreadpool.cpp
index 8545c06..abbb683 100644
--- a/src/corelib/thread/qthreadpool.cpp
+++ b/src/corelib/thread/qthreadpool.cpp
@@ -392,9 +392,7 @@ void QThreadPoolPrivate::stealRunnable(QRunnable *runnable)
     QThreadPool.
 
     Note that QThreadPool is a low-level class for managing threads, see
-    QtConcurrent::run() or the other
-    \l {Concurrent Programming}{Qt Concurrent} APIs for higher
-    level alternatives.
+    the Qt Concurrent module for higher level alternatives.
 
     \sa QRunnable
 */