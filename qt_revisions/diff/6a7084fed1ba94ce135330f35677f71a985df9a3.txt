diff --git a/src/quick/items/qquickmousearea.cpp b/src/quick/items/qquickmousearea.cpp
index 9185556..7fd6da1 100644
--- a/src/quick/items/qquickmousearea.cpp
+++ b/src/quick/items/qquickmousearea.cpp
@@ -187,7 +187,7 @@ QQuickDragAttached *QQuickDrag::qmlAttachedProperties(QObject *obj)
 }
 
 QQuickMouseAreaPrivate::QQuickMouseAreaPrivate()
-: absorb(true), hovered(false), pressed(false), longPress(false),
+: enabled(true), hovered(false), pressed(false), longPress(false),
   moved(false), stealMouse(false), doubleClick(false), preventStealing(false),
   propagateComposedEvents(false), drag(0)
 {
@@ -581,14 +581,14 @@ qreal QQuickMouseArea::mouseY() const
 bool QQuickMouseArea::isEnabled() const
 {
     Q_D(const QQuickMouseArea);
-    return d->absorb;
+    return d->enabled;
 }
 
 void QQuickMouseArea::setEnabled(bool a)
 {
     Q_D(QQuickMouseArea);
-    if (a != d->absorb) {
-        d->absorb = a;
+    if (a != d->enabled) {
+        d->enabled = a;
         emit enabledChanged();
     }
 }
@@ -620,7 +620,7 @@ void QQuickMouseArea::setPreventStealing(bool prevent)
     Q_D(QQuickMouseArea);
     if (prevent != d->preventStealing) {
         d->preventStealing = prevent;
-        setKeepMouseGrab(d->preventStealing && d->absorb);
+        setKeepMouseGrab(d->preventStealing && d->enabled);
         emit preventStealingChanged();
     }
 }
@@ -658,7 +658,7 @@ void QQuickMouseArea::setPropagateComposedEvents(bool prevent)
     Q_D(QQuickMouseArea);
     if (prevent != d->propagateComposedEvents) {
         d->propagateComposedEvents = prevent;
-        setKeepMouseGrab(d->propagateComposedEvents && d->absorb);
+        setKeepMouseGrab(d->propagateComposedEvents && d->enabled);
         emit propagateComposedEventsChanged();
     }
 }
@@ -691,7 +691,7 @@ void QQuickMouseArea::mousePressEvent(QMouseEvent *event)
     Q_D(QQuickMouseArea);
     d->moved = false;
     d->stealMouse = d->preventStealing;
-    if (!d->absorb)
+    if (!d->enabled)
         QQuickItem::mousePressEvent(event);
     else {
         d->longPress = false;
@@ -714,7 +714,7 @@ void QQuickMouseArea::mousePressEvent(QMouseEvent *event)
 void QQuickMouseArea::mouseMoveEvent(QMouseEvent *event)
 {
     Q_D(QQuickMouseArea);
-    if (!d->absorb && !d->pressed) {
+    if (!d->enabled && !d->pressed) {
         QQuickItem::mouseMoveEvent(event);
         return;
     }
@@ -800,7 +800,7 @@ void QQuickMouseArea::mouseReleaseEvent(QMouseEvent *event)
 {
     Q_D(QQuickMouseArea);
     d->stealMouse = false;
-    if (!d->absorb && !d->pressed) {
+    if (!d->enabled && !d->pressed) {
         QQuickItem::mouseReleaseEvent(event);
     } else {
         d->saveEvent(event);
@@ -822,7 +822,7 @@ void QQuickMouseArea::mouseReleaseEvent(QMouseEvent *event)
 void QQuickMouseArea::mouseDoubleClickEvent(QMouseEvent *event)
 {
     Q_D(QQuickMouseArea);
-    if (d->absorb) {
+    if (d->enabled) {
         d->saveEvent(event);
         QQuickMouseEvent me(d->lastPos.x(), d->lastPos.y(), d->lastButton, d->lastButtons, d->lastModifiers, true, false);
         me.setAccepted(d->isDoubleClickConnected());
@@ -837,7 +837,7 @@ void QQuickMouseArea::mouseDoubleClickEvent(QMouseEvent *event)
 void QQuickMouseArea::hoverEnterEvent(QHoverEvent *event)
 {
     Q_D(QQuickMouseArea);
-    if (!d->absorb && !d->pressed) {
+    if (!d->enabled && !d->pressed) {
         QQuickItem::hoverEnterEvent(event);
     } else {
         d->lastPos = event->posF();
@@ -854,7 +854,7 @@ void QQuickMouseArea::hoverEnterEvent(QHoverEvent *event)
 void QQuickMouseArea::hoverMoveEvent(QHoverEvent *event)
 {
     Q_D(QQuickMouseArea);
-    if (!d->absorb && !d->pressed) {
+    if (!d->enabled && !d->pressed) {
         QQuickItem::hoverMoveEvent(event);
     } else {
         d->lastPos = event->posF();
@@ -871,7 +871,7 @@ void QQuickMouseArea::hoverMoveEvent(QHoverEvent *event)
 void QQuickMouseArea::hoverLeaveEvent(QHoverEvent *event)
 {
     Q_D(QQuickMouseArea);
-    if (!d->absorb && !d->pressed)
+    if (!d->enabled && !d->pressed)
         QQuickItem::hoverLeaveEvent(event);
     else
         setHovered(false);
@@ -880,7 +880,7 @@ void QQuickMouseArea::hoverLeaveEvent(QHoverEvent *event)
 void QQuickMouseArea::wheelEvent(QWheelEvent *event)
 {
     Q_D(QQuickMouseArea);
-    if (!d->absorb) {
+    if (!d->enabled) {
         QQuickItem::wheelEvent(event);
         return;
     }
@@ -968,7 +968,7 @@ bool QQuickMouseArea::sendMouseEvent(QMouseEvent *event)
 bool QQuickMouseArea::childMouseEventFilter(QQuickItem *i, QEvent *e)
 {
     Q_D(QQuickMouseArea);
-    if (!d->pressed && (!d->absorb || !isVisible() || !d->drag || !d->drag->filterChildren()))
+    if (!d->pressed && (!d->enabled || !isVisible() || !d->drag || !d->drag->filterChildren()))
         return QQuickItem::childMouseEventFilter(i, e);
     switch (e->type()) {
     case QEvent::MouseButtonPress:
diff --git a/src/quick/items/qquickmousearea_p_p.h b/src/quick/items/qquickmousearea_p_p.h
index f5521d9..d73fb12 100644
--- a/src/quick/items/qquickmousearea_p_p.h
+++ b/src/quick/items/qquickmousearea_p_p.h
@@ -85,7 +85,7 @@ public:
     bool isClickConnected();
     bool isWheelConnected();
 
-    bool absorb : 1;
+    bool enabled : 1;
     bool hovered : 1;
     bool pressed : 1;
     bool longPress : 1;
diff --git a/src/quick/items/qquickpincharea.cpp b/src/quick/items/qquickpincharea.cpp
index eba9d09..ba0a429 100644
--- a/src/quick/items/qquickpincharea.cpp
+++ b/src/quick/items/qquickpincharea.cpp
@@ -260,14 +260,14 @@ QQuickPinchArea::~QQuickPinchArea()
 bool QQuickPinchArea::isEnabled() const
 {
     Q_D(const QQuickPinchArea);
-    return d->absorb;
+    return d->enabled;
 }
 
 void QQuickPinchArea::setEnabled(bool a)
 {
     Q_D(QQuickPinchArea);
-    if (a != d->absorb) {
-        d->absorb = a;
+    if (a != d->enabled) {
+        d->enabled = a;
         emit enabledChanged();
     }
 }
@@ -275,7 +275,7 @@ void QQuickPinchArea::setEnabled(bool a)
 void QQuickPinchArea::touchEvent(QTouchEvent *event)
 {
     Q_D(QQuickPinchArea);
-    if (!d->absorb || !isVisible()) {
+    if (!d->enabled || !isVisible()) {
         QQuickItem::event(event);
         return;
     }
@@ -464,7 +464,7 @@ void QQuickPinchArea::mousePressEvent(QMouseEvent *event)
 {
     Q_D(QQuickPinchArea);
     d->stealMouse = false;
-    if (!d->absorb)
+    if (!d->enabled)
         QQuickItem::mousePressEvent(event);
     else {
         setKeepMouseGrab(false);
@@ -475,7 +475,7 @@ void QQuickPinchArea::mousePressEvent(QMouseEvent *event)
 void QQuickPinchArea::mouseMoveEvent(QMouseEvent *event)
 {
     Q_D(QQuickPinchArea);
-    if (!d->absorb) {
+    if (!d->enabled) {
         QQuickItem::mouseMoveEvent(event);
         return;
     }
@@ -485,7 +485,7 @@ void QQuickPinchArea::mouseReleaseEvent(QMouseEvent *event)
 {
     Q_D(QQuickPinchArea);
     d->stealMouse = false;
-    if (!d->absorb) {
+    if (!d->enabled) {
         QQuickItem::mouseReleaseEvent(event);
     } else {
         QQuickCanvas *c = canvas();
@@ -544,7 +544,7 @@ bool QQuickPinchArea::sendMouseEvent(QMouseEvent *event)
 bool QQuickPinchArea::childMouseEventFilter(QQuickItem *i, QEvent *e)
 {
     Q_D(QQuickPinchArea);
-    if (!d->absorb || !isVisible())
+    if (!d->enabled || !isVisible())
         return QQuickItem::childMouseEventFilter(i, e);
     switch (e->type()) {
     case QEvent::MouseButtonPress:
diff --git a/src/quick/items/qquickpincharea_p_p.h b/src/quick/items/qquickpincharea_p_p.h
index 0828651..468fdc4 100644
--- a/src/quick/items/qquickpincharea_p_p.h
+++ b/src/quick/items/qquickpincharea_p_p.h
@@ -66,7 +66,7 @@ class QQuickPinchAreaPrivate : public QQuickItemPrivate
     Q_DECLARE_PUBLIC(QQuickPinchArea)
 public:
     QQuickPinchAreaPrivate()
-      : absorb(true), stealMouse(false), inPinch(false)
+      : enabled(true), stealMouse(false), inPinch(false)
       , pinchRejected(false), pinchActivated(false), initPinch(false)
       , pinch(0), pinchStartDist(0), pinchStartScale(1.0)
       , pinchLastScale(1.0), pinchStartRotation(0.0), pinchStartAngle(0.0)
@@ -83,7 +83,7 @@ public:
         q->setFiltersChildMouseEvents(true);
     }
 
-    bool absorb : 1;
+    bool enabled : 1;
     bool stealMouse : 1;
     bool inPinch : 1;
     bool pinchRejected : 1;