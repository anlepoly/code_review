diff --git a/src/serialport.cpp b/src/serialport.cpp
index 57de5b2..cc64d72 100755
--- a/src/serialport.cpp
+++ b/src/serialport.cpp
@@ -352,6 +352,7 @@ bool SerialPortPrivate::flush()
     // Attempt to write it all in one chunk.
     qint64 written = write(ptr, nextSize);
     if (written < 0) {
+        setError(SerialPort::IoError);
         writeBuffer.clear();
         return false;
     }
@@ -567,8 +568,10 @@ bool SerialPortPrivate::readFromPort()
 
     readBuffer.chop(int(bytesToRead - ((readBytes < 0) ? qint64(0) : readBytes)));
 
-    // Here, error processing is skipped because error code is set
-    // automatically from the serial engine (if necessary).
+    if (readBytes < 0) {
+        setError(SerialPort::IoError);
+        return false;
+    }
 
     return true;
 }
@@ -1798,12 +1801,10 @@ qint64 SerialPort::readData(char *data, qint64 maxSize)
         if (readBytes == -2)
             return 0;
 
-        // Note: Processing errors (at readBytes == -1) is skipped, because it was
-        // done automatically from the serial engine.
-
-        // Only do this when there was no error
-        if ((readBytes >= 0) && !d->engine->isReadNotificationEnabled())
-            d->engine->setReadNotificationEnabled(true);
+        if (readBytes < 0)
+            d->setError(SerialPort::IoError);
+        else if (!d->engine->isReadNotificationEnabled())
+            d->engine->setReadNotificationEnabled(true); // Only do this when there was no error
 
         return readBytes;
     }
@@ -1826,11 +1827,11 @@ qint64 SerialPort::writeData(const char *data, qint64 maxSize)
 
     if (!d->isBuffered) {
         qint64 written = d->write(data, maxSize);
-        if (written < 0) {
-            //Error
-        } else if (!d->writeBuffer.isEmpty()) {
+
+        if (written < 0)
+            d->setError(SerialPort::IoError);
+        else if (!d->writeBuffer.isEmpty())
             d->engine->setWriteNotificationEnabled(true);
-        }
 
         if (written >= 0)
             emit bytesWritten(written);
diff --git a/src/serialportengine_symbian.cpp b/src/serialportengine_symbian.cpp
index df1cb36..a15f745 100755
--- a/src/serialportengine_symbian.cpp
+++ b/src/serialportengine_symbian.cpp
@@ -413,10 +413,10 @@ qint64 SymbianSerialPortEngine::read(char *data, qint64 len)
     m_descriptor.Read(status, TTimeIntervalMicroSeconds32(0), buffer);
     User::WaitForRequest(status);
     TInt err = status.Int();
-    if (err != KErrNone) {
-        dptr->setError(SerialPort::IoError);
+
+    if (err != KErrNone)
         return qint64(-1);
-    }
+
     return qint64(buffer.Length());
 }
 
@@ -446,10 +446,9 @@ qint64 SymbianSerialPortEngine::write(const char *data, qint64 len)
     User::WaitForRequest(status);
     TInt err = status.Int();
 
-    if (err != KErrNone) {
-        dptr->setError(SerialPort::IoError);
-        len = -1;
-    }
+    if (err != KErrNone)
+        return qint64(-1);
+
     // FIXME: How to get the actual number of bytes written?
     return qint64(len);
 }
diff --git a/src/serialportengine_unix.cpp b/src/serialportengine_unix.cpp
index e3332af..d54a518 100755
--- a/src/serialportengine_unix.cpp
+++ b/src/serialportengine_unix.cpp
@@ -507,10 +507,6 @@ qint64 UnixSerialPortEngine::read(char *data, qint64 len)
             break;
         default:;
         }
-        // FIXME: Here need call errno
-        // and set error type?
-        if (bytesRead == -1)
-            dptr->setError(SerialPort::IoError);
     }
     return bytesRead;
 }
@@ -550,10 +546,6 @@ qint64 UnixSerialPortEngine::write(const char *data, qint64 len)
             break;
         default:;
         }
-        // FIXME: Here need call errno
-        // and set error type?
-        if (bytesWritten == -1)
-            dptr->setError(SerialPort::IoError);
     }
     return bytesWritten;
 }
diff --git a/src/serialportengine_win.cpp b/src/serialportengine_win.cpp
index d384987..9f3cc56 100755
--- a/src/serialportengine_win.cpp
+++ b/src/serialportengine_win.cpp
@@ -531,10 +531,8 @@ qint64 WinSerialPortEngine::read(char *data, qint64 len)
     }
 #endif
 
-    if (!sucessResult) {
-        dptr->setError(SerialPort::IoError);
-        return -1;
-    }
+    if (!sucessResult)
+        return qint64(-1);
 
     // FIXME: Process emulate policy.
     if (m_flagErrorFromCommEvent) {
@@ -584,10 +582,9 @@ qint64 WinSerialPortEngine::write(const char *data, qint64 len)
     }
 #endif
 
-    if (!sucessResult) {
-        dptr->setError(SerialPort::IoError);
-        return -1;
-    }
+    if (!sucessResult)
+        return qint64(-1);
+
     return quint64(writeBytes);
 }