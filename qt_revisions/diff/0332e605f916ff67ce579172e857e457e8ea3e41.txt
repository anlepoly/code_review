diff --git a/src/quick/items/qquicktextinput.cpp b/src/quick/items/qquicktextinput.cpp
index 903769b..a114caf 100644
--- a/src/quick/items/qquicktextinput.cpp
+++ b/src/quick/items/qquicktextinput.cpp
@@ -2570,6 +2570,7 @@ void QQuickTextInputPrivate::processInputMethodEvent(QInputMethodEvent *event)
     if (event->replacementLength()) {
         m_selstart = m_cursor;
         m_selend = m_selstart + event->replacementLength();
+        m_selend = qMin(m_selend, m_text.length());
         removeSelectedText();
     }
     if (!event->commitString().isEmpty()) {
diff --git a/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp b/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp
index 51ee89a..5576345 100644
--- a/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp
+++ b/tests/auto/qtquick2/qquicktextinput/tst_qquicktextinput.cpp
@@ -1659,6 +1659,14 @@ void tst_qquicktextinput::inputMethods()
     QCOMPARE(input->text(), QString(""));
     input->setValidator(0);
     delete validator;
+
+    // input should reset selection even if replacement parameters are out of bounds
+    input->setText("text");
+    input->setCursorPosition(0);
+    input->moveCursorSelection(input->text().length());
+    event.setCommitString("replacement", -input->text().length(), input->text().length());
+    QGuiApplication::sendEvent(qGuiApp->inputPanel()->inputItem(), &event);
+    QCOMPARE(input->selectionStart(), input->selectionEnd());
 }
 
 /*