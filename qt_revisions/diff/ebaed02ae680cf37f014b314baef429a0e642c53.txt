diff --git a/src/widgets/kernel/qaction.cpp b/src/widgets/kernel/qaction.cpp
index 70a9ab6..e835f92 100644
--- a/src/widgets/kernel/qaction.cpp
+++ b/src/widgets/kernel/qaction.cpp
@@ -280,7 +280,7 @@ void QActionPrivate::setShortcutEnabled(bool enable, QShortcutMap &map)
     File menu in your menubar and the File menu has a submenu, setting the
     MenuRole for the actions in that submenu have no effect. They will never be moved.
 */
-
+#ifndef qdoc
 /*! \since 4.6
 
     \enum QAction::SoftKeyRole
@@ -300,7 +300,7 @@ void QActionPrivate::setShortcutEnabled(bool enable, QShortcutMap &map)
     the action has focus. If no widget currently has focus, the softkey framework will traverse up the
     widget parent hierarchy looking for a widget containing softkey actions.
  */
-
+#endif
 /*!
     Constructs an action with \a parent. If \a parent is an action
     group the action will be automatically inserted into the group.
@@ -1287,6 +1287,7 @@ QAction::MenuRole QAction::menuRole() const
     return d->menuRole;
 }
 
+#ifndef qdoc
 /*!
     \property QAction::softKeyRole
     \brief the action's softkey role
@@ -1313,7 +1314,7 @@ QAction::SoftKeyRole QAction::softKeyRole() const
     Q_D(const QAction);
     return d->softKeyRole;
 }
-
+#endif
 /*!
     \property QAction::iconVisibleInMenu
     \brief Whether or not an action should show an icon in a menu
diff --git a/src/widgets/kernel/qaction.h b/src/widgets/kernel/qaction.h
index d9b5189..e149975 100644
--- a/src/widgets/kernel/qaction.h
+++ b/src/widgets/kernel/qaction.h
@@ -66,7 +66,9 @@ class Q_WIDGETS_EXPORT QAction : public QObject
     Q_DECLARE_PRIVATE(QAction)
 
     Q_ENUMS(MenuRole)
+#ifndef qdoc
     Q_ENUMS(SoftKeyRole)
+#endif
     Q_ENUMS(Priority)
     Q_PROPERTY(bool checkable READ isCheckable WRITE setCheckable NOTIFY changed)
     Q_PROPERTY(bool checked READ isChecked WRITE setChecked DESIGNABLE isCheckable NOTIFY toggled)
@@ -85,7 +87,9 @@ class Q_WIDGETS_EXPORT QAction : public QObject
 #endif
     Q_PROPERTY(bool visible READ isVisible WRITE setVisible NOTIFY changed)
     Q_PROPERTY(MenuRole menuRole READ menuRole WRITE setMenuRole NOTIFY changed)
+#ifndef qdoc
     Q_PROPERTY(SoftKeyRole softKeyRole READ softKeyRole WRITE setSoftKeyRole NOTIFY changed)
+#endif
     Q_PROPERTY(bool iconVisibleInMenu READ isIconVisibleInMenu WRITE setIconVisibleInMenu NOTIFY changed)
     Q_PROPERTY(Priority priority READ priority WRITE setPriority)
 
@@ -93,8 +97,10 @@ public:
     // note this is copied into qplatformmenu.h, which must stay in sync
     enum MenuRole { NoRole = 0, TextHeuristicRole, ApplicationSpecificRole, AboutQtRole,
                     AboutRole, PreferencesRole, QuitRole };
+#ifndef qdoc
     enum SoftKeyRole {
                     NoSoftKey, PositiveSoftKey, NegativeSoftKey, SelectSoftKey };
+#endif
     enum Priority { LowPriority = 0,
                     NormalPriority = 128,
                     HighPriority = 256};
@@ -172,9 +178,10 @@ public:
     void setMenuRole(MenuRole menuRole);
     MenuRole menuRole() const;
 
+#ifndef qdoc
     void setSoftKeyRole(SoftKeyRole softKeyRole);
     SoftKeyRole softKeyRole() const;
-
+#endif
     void setIconVisibleInMenu(bool visible);
     bool isIconVisibleInMenu() const;