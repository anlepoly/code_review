diff --git a/src/corelib/kernel/qmimedata.cpp b/src/corelib/kernel/qmimedata.cpp
index f48d1c7..bbc9577 100644
--- a/src/corelib/kernel/qmimedata.cpp
+++ b/src/corelib/kernel/qmimedata.cpp
@@ -192,13 +192,10 @@ QVariant QMimeDataPrivate::retrieveTypedData(const QString &format, QVariant::Ty
         case QVariant::ByteArray:
         case QVariant::Color:
             return data.toByteArray();
-            break;
         case QVariant::String:
             return data.toString().toUtf8();
-            break;
         case QVariant::Url:
             return data.toUrl().toEncoded();
-            break;
         case QVariant::List: {
             // has to be list of URLs
             QByteArray result;
diff --git a/src/corelib/tools/qregexp.cpp b/src/corelib/tools/qregexp.cpp
index e87e5ef..7aea083 100644
--- a/src/corelib/tools/qregexp.cpp
+++ b/src/corelib/tools/qregexp.cpp
@@ -1324,14 +1324,11 @@ Q_CORE_EXPORT QString qt_regexp_toCanonical(const QString &pattern, QRegExp::Pat
 #ifndef QT_NO_REGEXP_WILDCARD
     case QRegExp::Wildcard:
         return wc2rx(pattern, false);
-        break;
     case QRegExp::WildcardUnix:
         return wc2rx(pattern, true);
-        break;
 #endif
     case QRegExp::FixedString:
         return QRegExp::escape(pattern);
-        break;
     case QRegExp::W3CXmlSchema11:
     default:
         return pattern;
diff --git a/src/dbus/qdbusdemarshaller.cpp b/src/dbus/qdbusdemarshaller.cpp
index c25e7a3..31e3fe2 100644
--- a/src/dbus/qdbusdemarshaller.cpp
+++ b/src/dbus/qdbusdemarshaller.cpp
@@ -300,7 +300,6 @@ QVariant QDBusDemarshaller::toVariantInternal()
 
         // I hope you never dereference this pointer!
         return QVariant::fromValue<void *>(ptr);
-        break;
     };
 }
 
diff --git a/src/gui/image/qimage.cpp b/src/gui/image/qimage.cpp
index 25999b7..9da360b 100644
--- a/src/gui/image/qimage.cpp
+++ b/src/gui/image/qimage.cpp
@@ -4915,43 +4915,33 @@ int QImage::metric(PaintDeviceMetric metric) const
     switch (metric) {
     case PdmWidth:
         return d->width;
-        break;
 
     case PdmHeight:
         return d->height;
-        break;
 
     case PdmWidthMM:
         return qRound(d->width * 1000 / d->dpmx);
-        break;
 
     case PdmHeightMM:
         return qRound(d->height * 1000 / d->dpmy);
-        break;
 
     case PdmNumColors:
         return d->colortable.size();
-        break;
 
     case PdmDepth:
         return d->depth;
-        break;
 
     case PdmDpiX:
         return qRound(d->dpmx * 0.0254);
-        break;
 
     case PdmDpiY:
         return qRound(d->dpmy * 0.0254);
-        break;
 
     case PdmPhysicalDpiX:
         return qRound(d->dpmx * 0.0254);
-        break;
 
     case PdmPhysicalDpiY:
         return qRound(d->dpmy * 0.0254);
-        break;
 
     default:
         qWarning("QImage::metric(): Unhandled metric type %d", metric);
diff --git a/src/gui/opengl/qopenglframebufferobject.cpp b/src/gui/opengl/qopenglframebufferobject.cpp
index ef8e420..380ada3 100644
--- a/src/gui/opengl/qopenglframebufferobject.cpp
+++ b/src/gui/opengl/qopenglframebufferobject.cpp
@@ -349,7 +349,6 @@ bool QOpenGLFramebufferObjectPrivate::checkFramebufferStatus(QOpenGLContext *ctx
     case GL_NO_ERROR:
     case GL_FRAMEBUFFER_COMPLETE:
         return true;
-        break;
     case GL_FRAMEBUFFER_UNSUPPORTED:
         qDebug("QOpenGLFramebufferObject: Unsupported framebuffer format.");
         break;
diff --git a/src/gui/painting/qpathclipper.cpp b/src/gui/painting/qpathclipper.cpp
index 8cf57a8..4b53257 100644
--- a/src/gui/painting/qpathclipper.cpp
+++ b/src/gui/painting/qpathclipper.cpp
@@ -1630,7 +1630,6 @@ QPainterPath QPathClipper::clip(Operation operation)
                         result.addRect(subjectBounds);
                         return result;
                     }
-                    break;
                 case BoolAnd:
                     return clipPath;
                 case BoolOr:
diff --git a/src/network/access/qhttpnetworkconnectionchannel.cpp b/src/network/access/qhttpnetworkconnectionchannel.cpp
index 51076c6..34496cb 100644
--- a/src/network/access/qhttpnetworkconnectionchannel.cpp
+++ b/src/network/access/qhttpnetworkconnectionchannel.cpp
@@ -296,7 +296,6 @@ bool QHttpNetworkConnectionChannel::sendRequest()
                 // premature eof happened
                 connection->d_func()->emitReplyError(socket, reply, QNetworkReply::UnknownNetworkError);
                 return false;
-                break;
             } else if (readPointer == 0 || currentReadSize == 0) {
                 // nothing to read currently, break the loop
                 break;
diff --git a/src/network/access/qhttpnetworkrequest.cpp b/src/network/access/qhttpnetworkrequest.cpp
index e9a6628..ef65efd 100644
--- a/src/network/access/qhttpnetworkrequest.cpp
+++ b/src/network/access/qhttpnetworkrequest.cpp
@@ -83,31 +83,22 @@ QByteArray QHttpNetworkRequestPrivate::methodName() const
     switch (operation) {
     case QHttpNetworkRequest::Get:
         return "GET";
-        break;
     case QHttpNetworkRequest::Head:
         return "HEAD";
-        break;
     case QHttpNetworkRequest::Post:
         return "POST";
-        break;
     case QHttpNetworkRequest::Options:
         return "OPTIONS";
-        break;
     case QHttpNetworkRequest::Put:
         return "PUT";
-        break;
     case QHttpNetworkRequest::Delete:
         return "DELETE";
-        break;
     case QHttpNetworkRequest::Trace:
         return "TRACE";
-        break;
     case QHttpNetworkRequest::Connect:
         return "CONNECT";
-        break;
     case QHttpNetworkRequest::Custom:
         return customVerb;
-        break;
     default:
         break;
     }
diff --git a/src/network/access/qnetworkrequest.cpp b/src/network/access/qnetworkrequest.cpp
index 6d036ad..b7d8dbb 100644
--- a/src/network/access/qnetworkrequest.cpp
+++ b/src/network/access/qnetworkrequest.cpp
@@ -979,53 +979,41 @@ static int name_to_month(const char* month_str)
         switch (month_str[1]) {
         case 'a':
             return 1;
-            break;
         case 'u':
             switch (month_str[2] ) {
             case 'n':
                 return 6;
-                break;
             case 'l':
                 return 7;
-                break;
             }
         }
         break;
     case 'F':
         return 2;
-        break;
     case 'M':
         switch (month_str[2] ) {
         case 'r':
             return 3;
-            break;
         case 'y':
             return 5;
-            break;
         }
         break;
     case 'A':
         switch (month_str[1]) {
         case 'p':
             return 4;
-            break;
         case 'u':
             return 8;
-            break;
         }
         break;
     case 'O':
         return 10;
-        break;
     case 'S':
         return 9;
-        break;
     case 'N':
         return 11;
-        break;
     case 'D':
         return 12;
-        break;
     }
 
     return 0;
diff --git a/src/opengl/qglframebufferobject.cpp b/src/opengl/qglframebufferobject.cpp
index 413c7f5..a5c2d1c 100644
--- a/src/opengl/qglframebufferobject.cpp
+++ b/src/opengl/qglframebufferobject.cpp
@@ -393,7 +393,6 @@ bool QGLFramebufferObjectPrivate::checkFramebufferStatus() const
     case GL_NO_ERROR:
     case GL_FRAMEBUFFER_COMPLETE:
         return true;
-        break;
     case GL_FRAMEBUFFER_UNSUPPORTED:
         qDebug("QGLFramebufferObject: Unsupported framebuffer format.");
         break;
diff --git a/src/widgets/itemviews/qcolumnview.cpp b/src/widgets/itemviews/qcolumnview.cpp
index ec5f2d5..a320e61 100644
--- a/src/widgets/itemviews/qcolumnview.cpp
+++ b/src/widgets/itemviews/qcolumnview.cpp
@@ -365,14 +365,12 @@ QModelIndex QColumnView::moveCursor(CursorAction cursorAction, Qt::KeyboardModif
             return (current.parent());
         else
             return current;
-        break;
 
     case MoveRight:
         if (model()->hasChildren(current))
             return model()->index(0, 0, current);
         else
             return current.sibling(current.row() + 1, current.column());
-        break;
 
     default:
         break;
diff --git a/src/widgets/statemachine/qguistatemachine.cpp b/src/widgets/statemachine/qguistatemachine.cpp
index 98d4098..fcb3a6d 100644
--- a/src/widgets/statemachine/qguistatemachine.cpp
+++ b/src/widgets/statemachine/qguistatemachine.cpp
@@ -69,7 +69,6 @@ static QEvent *cloneEvent(QEvent *e)
         return new QEvent(*e);
     case QEvent::Leave:
         return new QEvent(*e);
-        break;
     case QEvent::Paint:
         Q_ASSERT_X(false, "cloneEvent()", "not implemented");
         break;
diff --git a/src/widgets/styles/qcommonstyle.cpp b/src/widgets/styles/qcommonstyle.cpp
index 990245a..99ef88a 100644
--- a/src/widgets/styles/qcommonstyle.cpp
+++ b/src/widgets/styles/qcommonstyle.cpp
@@ -2777,7 +2777,6 @@ QRect QCommonStyle::subElementRect(SubElement sr, const QStyleOption *opt,
                     return widget->style()->subElementRect(QStyle::SE_FrameContents, opt, widget);
                 else
                     return subElementRect(QStyle::SE_FrameContents, opt, widget);
-                break;
 
             case QFrame::WinPanel:
                 frameWidth = 2;