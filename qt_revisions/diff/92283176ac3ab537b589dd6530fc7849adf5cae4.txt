diff --git a/src/gui/kernel/qevent.cpp b/src/gui/kernel/qevent.cpp
index abd6baf..0c2dc0a 100644
--- a/src/gui/kernel/qevent.cpp
+++ b/src/gui/kernel/qevent.cpp
@@ -1676,15 +1676,6 @@ void QInputMethodEvent::setCommitString(const QString &commitString, int replace
 }
 
 /*!
-    \fn void QInputMethodEvent::setTentativeCommitString(const QString &string)
-    Sets the tentative commit string to \a string.
-
-    The tentative commit string is what the preedit string is expected to be committed as.
-    The string can be used within the editor to trigger code that reacts on text changes such as validators.
-    \deprecated
-*/
-
-/*!
     \fn const QList<Attribute> &QInputMethodEvent::attributes() const
 
     Returns the list of attributes passed to the QInputMethodEvent
@@ -1734,16 +1725,6 @@ void QInputMethodEvent::setCommitString(const QString &commitString, int replace
 */
 
 /*!
-    \fn const QString &tentativeCommitString() const
-
-    Returns the text as which preedit string is expected to be committed as.
-    The string can be used within the editor to trigger code that reacts on text changes such as validators.
-    \deprecated
-
-    \sa setTentativeCommitString()
-*/
-
-/*!
     \class QInputMethodQueryEvent
     \since 5.0
     \inmodule QtGui
diff --git a/src/gui/kernel/qevent.h b/src/gui/kernel/qevent.h
index 55c8ed4..5ff5b11 100644
--- a/src/gui/kernel/qevent.h
+++ b/src/gui/kernel/qevent.h
@@ -457,12 +457,6 @@ public:
     inline int replacementStart() const { return replace_from; }
     inline int replacementLength() const { return replace_length; }
 
-#if QT_DEPRECATED_SINCE(5, 0)
-    QT_DEPRECATED inline void setTentativeCommitString(const QString &string)
-    { tentativeCommit = string;  }
-    QT_DEPRECATED inline const QString &tentativeCommitString() const { return tentativeCommit; }
-#endif
-
     QInputMethodEvent(const QInputMethodEvent &other);
 
 private:
@@ -471,7 +465,6 @@ private:
     QString commit;
     int replace_from;
     int replace_length;
-    QString tentativeCommit;
 };
 Q_DECLARE_TYPEINFO(QInputMethodEvent::Attribute, Q_MOVABLE_TYPE);