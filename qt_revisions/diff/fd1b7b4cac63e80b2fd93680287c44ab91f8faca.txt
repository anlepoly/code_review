diff --git a/src/testlib/qbenchmarkvalgrind.cpp b/src/testlib/qbenchmarkvalgrind.cpp
index c4a4990..a2c7345 100644
--- a/src/testlib/qbenchmarkvalgrind.cpp
+++ b/src/testlib/qbenchmarkvalgrind.cpp
@@ -195,13 +195,6 @@ bool QBenchmarkValgrindUtils::runCallgrindSubProcess(const QStringList &origAppA
          << QLatin1String("--quiet")
          << execFile << QLatin1String("-callgrindchild");
 
-#if (defined Q_WS_QWS)
-    // While running the child process, we aren't processing events, and hence aren't
-    // acting as the QWS server. Therefore it's necessary to tell the child to act
-    // as its own server instead of connecting to us.
-    args << QLatin1String("-qws");
-#endif
-
     // pass on original arguments that make sense (e.g. avoid wasting time producing output
     // that will be ignored anyway) ...
     for (int i = 1; i < origAppArgs.size(); ++i) {
diff --git a/src/testlib/qtestcase.cpp b/src/testlib/qtestcase.cpp
index cf1d0be..e0c330d 100644
--- a/src/testlib/qtestcase.cpp
+++ b/src/testlib/qtestcase.cpp
@@ -1970,9 +1970,6 @@ FatalSignalHandler::FatalSignalHandler()
 
     for (int i = 0; fatalSignals[i]; ++i) {
         sigaction(fatalSignals[i], &act, &oldact);
-#ifndef Q_WS_QWS
-        // Don't overwrite any non-default handlers
-        // however, we need to replace the default QWS handlers
         if (
 #ifdef SA_SIGINFO
             oldact.sa_flags & SA_SIGINFO ||
@@ -1980,7 +1977,6 @@ FatalSignalHandler::FatalSignalHandler()
             oldact.sa_handler != SIG_DFL) {
             sigaction(fatalSignals[i], &oldact, 0);
         } else
-#endif
         {
             sigaddset(&handledSignals, fatalSignals[i]);
         }