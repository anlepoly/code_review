diff --git a/src/widgets/kernel/qstackedlayout.cpp b/src/widgets/kernel/qstackedlayout.cpp
index 003454c..2660e43 100644
--- a/src/widgets/kernel/qstackedlayout.cpp
+++ b/src/widgets/kernel/qstackedlayout.cpp
@@ -502,9 +502,17 @@ int QStackedLayout::heightForWidth(int width) const
     int hfw = 0;
     for (int i = 0; i < n; ++i) {
         if (QLayoutItem *item = itemAt(i)) {
-            hfw = qMax(hfw, item->heightForWidth(width));
+            if (QWidget *w = item->widget())
+                /*
+                Note: Does not query the layout item, but bypasses it and asks the widget
+                directly. This is consistent with how QStackedLayout::sizeHint() is
+                implemented. This also avoids an issue where QWidgetItem::heightForWidth()
+                returns -1 if the widget is hidden.
+                */
+                hfw = qMax(hfw, w->heightForWidth(width));
         }
     }
+    hfw = qMax(hfw, minimumSize().height());
     return hfw;
 }
 
diff --git a/tests/auto/widgets/kernel/qstackedlayout/tst_qstackedlayout.cpp b/tests/auto/widgets/kernel/qstackedlayout/tst_qstackedlayout.cpp
index 6756206..3a34897 100644
--- a/tests/auto/widgets/kernel/qstackedlayout/tst_qstackedlayout.cpp
+++ b/tests/auto/widgets/kernel/qstackedlayout/tst_qstackedlayout.cpp
@@ -42,6 +42,7 @@
 
 #include <QtTest/QtTest>
 #include <QLineEdit>
+#include <QLabel>
 #include <QStackedLayout>
 #include <qapplication.h>
 #include <qwidget.h>
@@ -68,6 +69,7 @@ private slots:
     void deleteCurrent();
     void removeWidget();
     void keepFocusAfterSetCurrent();
+    void heigthForWidth();
 
 private:
     QWidget *testWidget;
@@ -362,6 +364,36 @@ void tst_QStackedLayout::keepFocusAfterSetCurrent()
     QVERIFY(edit2->hasFakeEditFocus);
 }
 
+void tst_QStackedLayout::heigthForWidth()
+{
+    if (testWidget->layout()) delete testWidget->layout();
+    QStackedLayout *stackLayout = new QStackedLayout(testWidget);
+
+    QLabel *shortLabel = new QLabel("This is a short text.");
+    shortLabel->setWordWrap(true);
+    stackLayout->addWidget(shortLabel);
+
+    QLabel *longLabel = new QLabel("Write code once to target multiple platforms\n"
+                         "Qt allows you to write advanced applications and UIs once, "
+                         "and deploy them across desktop and embedded operating systems "
+                         "without rewriting the source code saving time and development cost.\n\n"
+                         "Create amazing user experiences\n"
+                         "Whether you prefer C++ or JavaScript, Qt provides the building blocks - "
+                         "a broad set of customizable widgets, graphics canvas, style engine "
+                         "and more that you need to build modern user interfaces. "
+                         "Incorporate 3D graphics, multimedia audio or video, visual effects, "
+                         "and animations to set your application apart from the competition.");
+
+    longLabel->setWordWrap(true);
+    stackLayout->addWidget(longLabel);
+    stackLayout->setCurrentIndex(0);
+    int hfw_index0 = stackLayout->heightForWidth(200);
+
+    stackLayout->setCurrentIndex(1);
+    QCOMPARE(stackLayout->heightForWidth(200), hfw_index0);
+
+}
+
 QTEST_MAIN(tst_QStackedLayout)
 #include "tst_qstackedlayout.moc"