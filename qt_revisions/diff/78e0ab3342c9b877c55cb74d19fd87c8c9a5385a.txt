diff --git a/dist/changes-5.0.0 b/dist/changes-5.0.0
index 70e526c..9852c24 100644
--- a/dist/changes-5.0.0
+++ b/dist/changes-5.0.0
@@ -558,10 +558,9 @@ Qt for Windows CE
 
 - QPointer
 
-   * QPointer itself is now deprecated, and the implementation of QPointer
-     has been changed to use QWeakPointer. The old guard mechanism has been
-     removed. This causes two slight changes in behavior when using
-     QPointer:
+   * The implementation of QPointer has been changed to use QWeakPointer. The
+     old guard mechanism has been removed. This causes a slight change
+     in behavior when using QPointer:
 
      * When using QPointer on a QWidget (or a subclass of QWidget), previously
      the QPointer would be cleared by the QWidget destructor. Now, the QPointer
@@ -569,12 +568,6 @@ Qt for Windows CE
      cleared). Any QPointers tracking a widget will NOT be cleared before the
      QWidget destructor destroys the children for the widget being tracked.
 
-     * When constructing a QSharedPointer to take ownership of an object after a
-     QPointer is already tracking the object. Previously, the shared pointer
-     construction would not be affected by the QPointer, but now that QPointer
-     is implemented using QWeakPoiner, constructing the QSharedPointer will
-     cause an abort().
-
 
 - QVariant
 
diff --git a/src/corelib/kernel/qpointer.cpp b/src/corelib/kernel/qpointer.cpp
index f81451d..e0e14e5 100644
--- a/src/corelib/kernel/qpointer.cpp
+++ b/src/corelib/kernel/qpointer.cpp
@@ -56,7 +56,7 @@
     destroyed while you still hold a reference to it. You can safely
     test the pointer for validity.
 
-    Note that Qt 5 introduces two slight changes in behavior when using QPointer.
+    Note that Qt 5 introduces a slight change in behavior when using QPointer.
 
     \list
 
@@ -66,12 +66,6 @@
     cleared). Any QPointers tracking a widget will \b NOT be cleared before the
     QWidget destructor destroys the children for the widget being tracked.
 
-    \li When constructing a QSharedPointer to take ownership of an object after a
-    QPointer is already tracking the object. Previously, the shared pointer
-    construction would not be affected by the QPointer, but now that QPointer
-    is implemented using QWeakPoiner, constructing the QSharedPointer will
-    cause an \c abort().
-
     \endlist
 
     Qt also provides QSharedPointer, an implementation of a reference-counted