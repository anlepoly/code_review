diff --git a/examples/blockingmaster/blockingmasterwidget.cpp b/examples/blockingmaster/blockingmasterwidget.cpp
index e42beb6..7cff89a 100644
--- a/examples/blockingmaster/blockingmasterwidget.cpp
+++ b/examples/blockingmaster/blockingmasterwidget.cpp
@@ -48,7 +48,7 @@
 #include <QPushButton>
 #include <QGridLayout>
 
-#include "serialportinfo.h"
+#include <QtAddOnSerialPort/serialportinfo.h>
 
 QT_USE_NAMESPACE_SERIALPORT
 
@@ -100,9 +100,9 @@ void BlockingMasterWidget::runMaster()
     setControlsEnabled(false);
     statusLabel->setText(tr("Status: Running, connected to port %1.")
                          .arg(serialPortComboBox->currentText()));
-    thread.startNewMaster(serialPortComboBox->currentText(),
-                          waitResponseSpinBox->value(),
-                          requestLineEdit->text());
+    thread.startNewTransaction(serialPortComboBox->currentText(),
+                               waitResponseSpinBox->value(),
+                               requestLineEdit->text());
 }
 
 void BlockingMasterWidget::showResponse(const QString &s)
diff --git a/examples/blockingmaster/transactionthread.cpp b/examples/blockingmaster/transactionthread.cpp
index ff04e2e..8843d19 100644
--- a/examples/blockingmaster/transactionthread.cpp
+++ b/examples/blockingmaster/transactionthread.cpp
@@ -41,7 +41,7 @@
 
 #include "transactionthread.h"
 
-#include <serialport.h>
+#include <QtAddOnSerialPort/serialport.h>
 
 #include <QTime>
 
@@ -61,7 +61,7 @@ TransactionThread::~TransactionThread()
     wait();
 }
 
-void TransactionThread::startNewMaster(const QString &port, int transactionWaitTimeout, const QString &request)
+void TransactionThread::startNewTransaction(const QString &port, int transactionWaitTimeout, const QString &request)
 {
     QMutexLocker locker(&mutex);
     portName = port;
diff --git a/examples/blockingmaster/transactionthread.h b/examples/blockingmaster/transactionthread.h
index 6542f05..3e01395 100644
--- a/examples/blockingmaster/transactionthread.h
+++ b/examples/blockingmaster/transactionthread.h
@@ -54,7 +54,7 @@ public:
     TransactionThread(QObject *parent = 0);
     ~TransactionThread();
 
-    void startNewMaster(const QString &port, int transactionWaitTimeout, const QString &request);
+    void startNewTransaction(const QString &port, int transactionWaitTimeout, const QString &request);
     void run();
 
 signals:
diff --git a/examples/blockingslave/blockingslavewidget.cpp b/examples/blockingslave/blockingslavewidget.cpp
index c099f7e..9af7ec6 100644
--- a/examples/blockingslave/blockingslavewidget.cpp
+++ b/examples/blockingslave/blockingslavewidget.cpp
@@ -48,7 +48,7 @@
 #include <QPushButton>
 #include <QGridLayout>
 
-#include <serialportinfo.h>
+#include <QtAddOnSerialPort/serialportinfo.h>
 
 QT_USE_NAMESPACE_SERIALPORT
 
@@ -107,9 +107,9 @@ void BlockingSlaveWidget::runSlave()
     runButton->setEnabled(false);
     statusLabel->setText(tr("Status: Running, connected to port %1.")
                          .arg(serialPortComboBox->currentText()));
-    thread.startNewSlave(serialPortComboBox->currentText(),
-                         waitRequestSpinBox->value(),
-                         responseLineEdit->text());
+    thread.startSlave(serialPortComboBox->currentText(),
+                      waitRequestSpinBox->value(),
+                      responseLineEdit->text());
 }
 
 void BlockingSlaveWidget::showRequest(const QString &s)
diff --git a/examples/blockingslave/transactionthread.cpp b/examples/blockingslave/transactionthread.cpp
index 6e158c8..bc6f105 100644
--- a/examples/blockingslave/transactionthread.cpp
+++ b/examples/blockingslave/transactionthread.cpp
@@ -41,7 +41,7 @@
 
 #include "transactionthread.h"
 
-#include <serialport.h>
+#include <QtAddOnSerialPort/serialport.h>
 
 #include <QTime>
 
@@ -60,7 +60,7 @@ TransactionThread::~TransactionThread()
     wait();
 }
 
-void TransactionThread::startNewSlave(const QString &port, int transactionWaitTimeout, const QString &response)
+void TransactionThread::startSlave(const QString &port, int transactionWaitTimeout, const QString &response)
 {
     QMutexLocker locker(&mutex);
     portName = port;
diff --git a/examples/blockingslave/transactionthread.h b/examples/blockingslave/transactionthread.h
index 3982d94..352ab8e 100644
--- a/examples/blockingslave/transactionthread.h
+++ b/examples/blockingslave/transactionthread.h
@@ -54,7 +54,7 @@ public:
     TransactionThread(QObject *parent = 0);
     ~TransactionThread();
 
-    void startNewSlave(const QString &port, int transactionWaitTimeout, const QString &response);
+    void startSlave(const QString &port, int transactionWaitTimeout, const QString &response);
     void run();
 
 signals: