diff --git a/src/platformsupport/eglconvenience/qeglconvenience.cpp b/src/platformsupport/eglconvenience/qeglconvenience.cpp
index 2cd5da2..32c7a44 100644
--- a/src/platformsupport/eglconvenience/qeglconvenience.cpp
+++ b/src/platformsupport/eglconvenience/qeglconvenience.cpp
@@ -347,12 +347,12 @@ static struct AttrInfo attrs[] = {
     {EGL_MAX_SWAP_INTERVAL, "EGL_MAX_SWAP_INTERVAL"},
     {-1, 0}};
 
-void q_printEglConfig(EGLConfig config)
+void q_printEglConfig(EGLDisplay display, EGLConfig config)
 {
     EGLint index;
     for (index = 0; attrs[index].attr != -1; ++index) {
         EGLint value;
-        if (eglGetConfigAttrib(m_dpy, config, attrs[index].attr, &value)) {
+        if (eglGetConfigAttrib(display, config, attrs[index].attr, &value)) {
             qWarning("\t%s: %d\n", attrs[index].name, (int)value);
         }
     }
diff --git a/src/platformsupport/eglconvenience/qeglconvenience_p.h b/src/platformsupport/eglconvenience/qeglconvenience_p.h
index 7718c82..3af228a 100644
--- a/src/platformsupport/eglconvenience/qeglconvenience_p.h
+++ b/src/platformsupport/eglconvenience/qeglconvenience_p.h
@@ -54,7 +54,7 @@ bool q_reduceConfigAttributes(QVector<EGLint> *configAttributes);
 EGLConfig q_configFromGLFormat(EGLDisplay display, const QSurfaceFormat &format, bool highestPixelFormat = false, int surfaceType = EGL_WINDOW_BIT);
 QSurfaceFormat q_glFormatFromConfig(EGLDisplay display, const EGLConfig config);
 bool q_hasEglExtension(EGLDisplay display,const char* extensionName);
-void q_printEglConfig(EGLConfig config);
+void q_printEglConfig(EGLDisplay display, EGLConfig config);
 
 QT_END_NAMESPACE
 
diff --git a/src/plugins/platforms/eglfs/qeglfsscreen.cpp b/src/plugins/platforms/eglfs/qeglfsscreen.cpp
index fe4afc5..cf39aa3 100644
--- a/src/plugins/platforms/eglfs/qeglfsscreen.cpp
+++ b/src/plugins/platforms/eglfs/qeglfsscreen.cpp
@@ -172,8 +172,7 @@ void QEglFSScreen::createAndSetPlatformContext()
     m_window = hooks->createNativeWindow(hooks->screenSize());
 
 #ifdef QEGL_EXTRA_DEBUG
-    qWarning("Configuration %d matches requirements\n", (int)config);
-    q_printEglConfig(config);
+    q_printEglConfig(m_dpy, config);
 #endif
 
     m_surface = eglCreateWindowSurface(m_dpy, config, m_window, NULL);