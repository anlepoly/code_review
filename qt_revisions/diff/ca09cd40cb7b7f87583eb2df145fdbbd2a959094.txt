diff --git a/tools/qdoc3/ditaxmlgenerator.cpp b/tools/qdoc3/ditaxmlgenerator.cpp
index 457866a..350fe6c 100644
--- a/tools/qdoc3/ditaxmlgenerator.cpp
+++ b/tools/qdoc3/ditaxmlgenerator.cpp
@@ -3432,7 +3432,7 @@ QString DitaXmlGenerator::getMarkedUpSynopsis(const Node* node,
         marked.replace(tag.pos(1), tag.cap(1).length(), tmp);
     }
     marked.replace(QRegExp("<@param>([a-z]+)_([1-9n])</@param>"),
-                   "<i>\\1<sub>\\2</sub></i>");
+                   "<i> \\1<sub>\\2</sub></i>");
 #if 0    
     marked.replace("<@param>","<i>");
     marked.replace("</@param>","</i>");
@@ -3560,7 +3560,7 @@ void DitaXmlGenerator::writeText(const QString& markedCode,
                             html.clear();
                         }
                         writeStartTag(DT_i);
-                        writeCharacters(arg.toString());
+                        writeCharacters(" " + arg.toString());
                         writeEndTag(); // </i>
                     }
                     else if (k == 5) { // <@extra>
diff --git a/tools/qdoc3/htmlgenerator.cpp b/tools/qdoc3/htmlgenerator.cpp
index 16765e2..d582c7c 100644
--- a/tools/qdoc3/htmlgenerator.cpp
+++ b/tools/qdoc3/htmlgenerator.cpp
@@ -2891,6 +2891,7 @@ void HtmlGenerator::generateSynopsis(const Node *node,
                                      const QString* prefix)
 {
     QString marked = marker->markedUpSynopsis(node, relative, style);
+
     if (prefix)
         marked.prepend(*prefix);
     QRegExp templateTag("(<[^@>]*>)");
@@ -2902,7 +2903,7 @@ void HtmlGenerator::generateSynopsis(const Node *node,
     }
     marked.replace(QRegExp("<@param>([a-z]+)_([1-9n])</@param>"),
                    "<i>\\1<sub>\\2</sub></i>");
-    marked.replace("<@param>", "<i>");
+    marked.replace("<@param>", "<i> ");
     marked.replace("</@param>", "</i>");
 
     if (style == CodeMarker::Summary) {
@@ -2923,6 +2924,7 @@ void HtmlGenerator::generateSynopsis(const Node *node,
         marked.remove("<@type>");
         marked.remove("</@type>");
     }
+
     out() << highlightedCode(marked, marker, relative, alignNames);
 }
 
@@ -2971,7 +2973,6 @@ QString HtmlGenerator::highlightedCode(const QString& markedCode,
         }
     }
 
-
     // replace all <@func> tags: "(<@func target=\"([^\"]*)\">)(.*)(</@func>)"
     src = html;
     html = QString();
@@ -3110,7 +3111,6 @@ QString HtmlGenerator::highlightedCode(const QString& markedCode,
             ++i;
         }
     }
-
     return html;
 }
 
diff --git a/tools/qdoc3/qmlvisitor.cpp b/tools/qdoc3/qmlvisitor.cpp
index 0365834..b87cb55 100644
--- a/tools/qdoc3/qmlvisitor.cpp
+++ b/tools/qdoc3/qmlvisitor.cpp
@@ -250,8 +250,6 @@ void QmlDocVisitor::applyMetacommands(QDeclarativeJS::AST::SourceLocation,
                 }
             }
         }
-        else if (topicsUsed.size() > 0)
-            qDebug() << "  " << topicsUsed.at(0).topic << topicsUsed.at(0).args;
     }
     QSet<QString> metacommands = doc.metaCommandsUsed();
     if (metacommands.count() > 0) {