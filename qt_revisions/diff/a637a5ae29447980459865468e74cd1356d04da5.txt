diff --git a/src/dbus/qdbusextratypes.h b/src/dbus/qdbusextratypes.h
index c1b8cff..51b3da5 100644
--- a/src/dbus/qdbusextratypes.h
+++ b/src/dbus/qdbusextratypes.h
@@ -123,7 +123,7 @@ private:
 };
 
 inline QDBusSignature::QDBusSignature(const char *dBusSignature)
-    : m_signature(QString::fromAscii(dBusSignature))
+    : m_signature(QString::fromLatin1(dBusSignature))
 { doCheck(); }
 
 inline QDBusSignature::QDBusSignature(const QLatin1String &dBusSignature)
diff --git a/tests/auto/tools/qdbuscpp2xml/tst_qdbuscpp2xml.cpp b/tests/auto/tools/qdbuscpp2xml/tst_qdbuscpp2xml.cpp
index 5510c65..23ef811 100644
--- a/tests/auto/tools/qdbuscpp2xml/tst_qdbuscpp2xml.cpp
+++ b/tests/auto/tools/qdbuscpp2xml/tst_qdbuscpp2xml.cpp
@@ -153,7 +153,7 @@ void tst_qdbuscpp2xml::qdbuscpp2xml()
     }
     const QChar cr = QLatin1Char('\r');
     const QString err = QString::fromLocal8Bit(process.readAllStandardError()).remove(cr);
-    const QString out = QString::fromAscii(process.readAllStandardOutput()).remove(cr);
+    const QString out = QString::fromLatin1(process.readAllStandardOutput()).remove(cr);
 
     if (!err.isEmpty()) {
         qDebug() << "UNEXPECTED STDERR CONTENTS: " << err;
diff --git a/tests/benchmarks/dbus/qdbusperformance/tst_qdbusperformance.cpp b/tests/benchmarks/dbus/qdbusperformance/tst_qdbusperformance.cpp
index fe9e37c..bea59d8 100644
--- a/tests/benchmarks/dbus/qdbusperformance/tst_qdbusperformance.cpp
+++ b/tests/benchmarks/dbus/qdbusperformance/tst_qdbusperformance.cpp
@@ -168,13 +168,13 @@ void tst_QDBusPerformance::oneWay_data()
 
     QByteArray ba(256, 'a');
     while (ba.size() < 8193) {
-        QTest::newRow(QString("%1-byteArray").arg(ba.size()).toAscii()) << QVariant::fromValue(ba) << ba.size();
+        QTest::newRow(QString("%1-byteArray").arg(ba.size()).toLatin1()) << QVariant::fromValue(ba) << ba.size();
         ba += ba;
     }
 
     QString s(256, QLatin1Char('a'));
     while (s.size() < 8193) {
-        QTest::newRow(QString("%1-string").arg(s.size()).toAscii()) << QVariant::fromValue(s) << s.size();
+        QTest::newRow(QString("%1-string").arg(s.size()).toLatin1()) << QVariant::fromValue(s) << s.size();
         s += s;
     }
 }