diff --git a/src/corelib/thread/qmutex.cpp b/src/corelib/thread/qmutex.cpp
index e13c786..049230f 100644
--- a/src/corelib/thread/qmutex.cpp
+++ b/src/corelib/thread/qmutex.cpp
@@ -49,7 +49,7 @@
 #include "qthread.h"
 #include "qmutex_p.h"
 
-#ifndef Q_MUTEX_LINUX
+#ifndef QT_LINUX_FUTEX
 #include "private/qfreelist_p.h"
 #endif
 
@@ -154,7 +154,7 @@ QMutex::~QMutex()
     if (quintptr(d) > 0x3 && d->recursive) {
         delete static_cast<QRecursiveMutexPrivate *>(d);
     } else if (d) {
-#ifndef Q_MUTEX_LINUX
+#ifndef QT_LINUX_FUTEX
         if (d != dummyLocked() && static_cast<QMutexPrivate *>(d)->possiblyUnlocked.load()
             && tryLock()) {
             unlock();
@@ -340,7 +340,7 @@ bool QBasicMutex::isRecursive() {
     \sa unlock()
 */
 
-#ifndef Q_MUTEX_LINUX //linux implementation is in qmutex_linux.cpp
+#ifndef QT_LINUX_FUTEX //linux implementation is in qmutex_linux.cpp
 /*!
     \internal helper for lock()
  */
diff --git a/src/corelib/thread/qmutex_p.h b/src/corelib/thread/qmutex_p.h
index 8a9d0bf..92f13b1 100644
--- a/src/corelib/thread/qmutex_p.h
+++ b/src/corelib/thread/qmutex_p.h
@@ -65,7 +65,7 @@
 
 #if defined(Q_OS_LINUX) && !defined(QT_LINUXBASE)
 // use Linux mutexes everywhere except for LSB builds
-#  define Q_MUTEX_LINUX
+#  define QT_LINUX_FUTEX
 #endif
 
 QT_BEGIN_NAMESPACE
@@ -78,7 +78,7 @@ public:
         : recursive(mode == QMutex::Recursive) {}
 };
 
-#if !defined(Q_MUTEX_LINUX)
+#if !defined(QT_LINUX_FUTEX)
 class QMutexPrivate : public QMutexData
 {
 public:
@@ -128,7 +128,7 @@ public:
     Qt::HANDLE event;
 #endif
 };
-#endif //Q_MUTEX_LINUX
+#endif //QT_LINUX_FUTEX
 
 class QRecursiveMutexPrivate : public QMutexData
 {