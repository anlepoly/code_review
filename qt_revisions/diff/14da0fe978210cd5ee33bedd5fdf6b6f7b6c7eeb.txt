diff --git a/src/qtmenu.cpp b/src/qtmenu.cpp
index 3778f1e..fffc419 100644
--- a/src/qtmenu.cpp
+++ b/src/qtmenu.cpp
@@ -89,18 +89,10 @@ void QtMenu::setHoveredIndex(int index)
     emit hoveredIndexChanged();
 }
 
-
-#if QT_VERSION < 0x050000
-QDeclarativeListProperty<QtMenuBase> QtMenu::menuItems()
-{
-    return QDeclarativeListProperty<QtMenuBase>(this, 0, &QtMenu::append_qmenuItem);
-}
-#else
 QQmlListProperty<QtMenuBase> QtMenu::menuItems()
 {
     return QQmlListProperty<QtMenuBase>(this, 0, &QtMenu::append_qmenuItem, 0, 0, 0);
 }
-#endif
 
 void QtMenu::showPopup(qreal x, qreal y, int atActionIndex)
 {
@@ -210,17 +202,6 @@ int QtMenu::modelCount() const
     return -1;
 }
 
-#if QT_VERSION < 0x050000
-void QtMenu::append_qmenuItem(QDeclarativeListProperty<QtMenuBase> *list, QtMenuBase *menuItem)
-{
-    QtMenu *menu = qobject_cast<QtMenu *>(list->object);
-    if (menu) {
-        menuItem->setParent(menu);
-        menu->m_qmenuItems.append(menuItem);
-        menu->qmenu()->addAction(menuItem->action());
-    }
-}
-#else
 void QtMenu::append_qmenuItem(QQmlListProperty<QtMenuBase> *list, QtMenuBase *menuItem)
 {
     QtMenu *menu = qobject_cast<QtMenu *>(list->object);
@@ -230,7 +211,6 @@ void QtMenu::append_qmenuItem(QQmlListProperty<QtMenuBase> *list, QtMenuBase *me
         menu->qmenu()->addAction(menuItem->action());
     }
 }
-#endif
 
 void QtMenu::setModel(const QVariant &newModel) {
     if (m_model != newModel) {
diff --git a/src/qtmenu.h b/src/qtmenu.h
index c4aac9d..ffb76a5 100644
--- a/src/qtmenu.h
+++ b/src/qtmenu.h
@@ -78,11 +78,8 @@ public:
     int hoveredIndex() const { return m_highlightedIndex; }
     void setHoveredIndex(int index);
 
-#if QT_VERSION < 0x050000
-    QDeclarativeListProperty<QtMenuBase> menuItems();
-#else
     QQmlListProperty<QtMenuBase> menuItems();
-#endif
+
     QMenu* qmenu() { return m_qmenu; }
 
     QAction* action();
@@ -116,12 +113,8 @@ private Q_SLOTS:
     void emitHovered();
 
 private:
-#if QT_VERSION < 0x050000
-    static void append_qmenuItem(QDeclarativeListProperty<QtMenuBase> *list, QtMenuBase *menuItem);
-#else
     static void append_qmenuItem(QQmlListProperty<QtMenuBase> *list, QtMenuBase *menuItem);
-#endif
-private:
+
     QWidget *dummy;
     QMenu *m_qmenu;
     QList<QtMenuBase *> m_qmenuItems;
diff --git a/src/qtmenubar.cpp b/src/qtmenubar.cpp
index 9dd8294..9d712bb 100644
--- a/src/qtmenubar.cpp
+++ b/src/qtmenubar.cpp
@@ -41,45 +41,24 @@
 #include "qtmenubar.h"
 #include "qwindowitem.h"
 
-#if QT_VERSION < 0x050000
-#include <QtGui/QMenu>
-#include <QtGui/QMenuBar>
-#else
 #include <QtWidgets/QMenu>
 #include <QtWidgets/QMenuBar>
-#endif
 
-#if QT_VERSION < 0x050000
-QtMenuBar::QtMenuBar(QDeclarativeItem *parent)
-    : QDeclarativeItem(parent), _menuBar(0) /*, _menuBar(new QMenuBar)*/
-{
-    connect(this, SIGNAL(parentChanged()), this, SLOT(updateParent()));
-    setFlag(QGraphicsItem::ItemHasNoContents, true);
-}
-#else
 QtMenuBar::QtMenuBar(QQuickItem *parent)
     : QQuickItem(parent), _menuBar(0) /*, _menuBar(new QMenuBar)*/
 {
     connect(this, SIGNAL(parentChanged(QQuickItem *)), this, SLOT(updateParent(QQuickItem *)));
     setFlag(QQuickItem::ItemHasContents, false);
 }
-#endif
 
 QtMenuBar::~QtMenuBar()
 {
 }
 
-#if QT_VERSION < 0x050000
-QDeclarativeListProperty<QtMenu> QtMenuBar::menus()
-{
-    return QDeclarativeListProperty<QtMenu>(this, 0, &QtMenuBar::append_menu);
-}
-#else
 QQmlListProperty<QtMenu> QtMenuBar::menus()
 {
     return QQmlListProperty<QtMenu>(this, 0, &QtMenuBar::append_menu, 0, 0, 0);
 }
-#endif
 
 void QtMenuBar::updateParent(QQuickItem *newParent)
 {
@@ -96,11 +75,7 @@ void QtMenuBar::updateParent(QQuickItem *newParent)
 
 }
 
-#if QT_VERSION < 0x050000
-void QtMenuBar::append_menu(QDeclarativeListProperty<QtMenu> *list, QtMenu *menu)
-#else
 void QtMenuBar::append_menu(QQmlListProperty<QtMenu> *list, QtMenu *menu)
-#endif
 {
     QtMenuBar *menuBar = qobject_cast<QtMenuBar *>(list->object);
     if (menuBar) {
@@ -111,4 +86,4 @@ void QtMenuBar::append_menu(QQmlListProperty<QtMenu> *list, QtMenu *menu)
     }
 }
 
-#
+
diff --git a/src/qtmenubar.h b/src/qtmenubar.h
index a3b23cd..04c9217 100644
--- a/src/qtmenubar.h
+++ b/src/qtmenubar.h
@@ -43,40 +43,11 @@
 
 #include <QtCore/qglobal.h>
 
-#if QT_VERSION < 0x050000
-#include <QDeclarativeItem>
-#include <QtGui>
-#else
 #include <QtQuick/QQuickItem>
 #include <QtWidgets>
-#endif
 
 #include "qtmenu.h"
 
-#if QT_VERSION < 0x050000
-class QtMenuBar: public QDeclarativeItem
-{
-    Q_OBJECT
-
-    Q_PROPERTY(QDeclarativeListProperty<QtMenu> menus READ menus)
-    Q_CLASSINFO("DefaultProperty", "menus")
-public:
-    QtMenuBar(QDeclarativeItem *parent = 0);
-    ~QtMenuBar();
-
-    QDeclarativeListProperty<QtMenu> menus();
-
-protected Q_SLOTS:
-    void updateParent();
-
-private:
-    static void append_menu(QDeclarativeListProperty<QtMenu> *list, QtMenu *menu);
-
-private:
-    QList<QtMenu *> m_menus;
-    QMenuBar *_menuBar;
-};
-#else
 class QtMenuBar: public QQuickItem
 {
     Q_OBJECT
@@ -99,6 +70,5 @@ private:
     QList<QtMenu *> m_menus;
     QMenuBar *_menuBar;
 };
-#endif
 
 #endif //QTMENUBAR_H
diff --git a/src/qtmenuitem.cpp b/src/qtmenuitem.cpp
index 9f824bc..d621161 100644
--- a/src/qtmenuitem.cpp
+++ b/src/qtmenuitem.cpp
@@ -68,12 +68,8 @@ QString QtMenuBase::iconName() const
 {
     return _iconName;
 }
-#if QT_VERSION < 0x050000
-QtMenuSeparator::QtMenuSeparator(QObject *parent)
-#else
-QtMenuSeparator::QtMenuSeparator(QQuickItem *parent)
-#endif
 
+QtMenuSeparator::QtMenuSeparator(QQuickItem *parent)
     : QtMenuBase(parent), _action(new QAction(this))
 {
     _action->setSeparator(true);
@@ -88,11 +84,7 @@ QAction * QtMenuSeparator::action()
     return _action;
 }
 
-#if QT_VERSION < 0x050000
-QtMenuItem::QtMenuItem(QObject *parent)
-#else
 QtMenuItem::QtMenuItem(QQuickItem *parent)
-#endif
     : QtMenuBase(parent), _action(new QAction(this))
 {
     connect(_action, SIGNAL(triggered()), this, SIGNAL(triggered()));
diff --git a/src/qtmenuitem.h b/src/qtmenuitem.h
index 19e83ae..e48b5ab 100644
--- a/src/qtmenuitem.h
+++ b/src/qtmenuitem.h
@@ -45,25 +45,17 @@
 #include <QtWidgets/QAction>
 #include <QtCore/QUrl>
 
-#if QT_VERSION >= 0x050000
 #include <QtQuick/QQuickItem>
-#endif
 
-#if QT_VERSION < 0x050000
-class QtMenuBase: public QObject {
-#else
-class QtMenuBase: public QQuickItem {
-#endif
+class QtMenuBase: public QQuickItem
+{
 Q_OBJECT
     Q_PROPERTY(QUrl iconSource READ iconSource WRITE setIconSource NOTIFY iconSourceChanged)
     Q_PROPERTY(QString iconName READ iconName WRITE setIconName NOTIFY iconNameChanged)
 
 public:
-#if QT_VERSION < 0x050000
-    QtMenuBase(QObject *parent = 0) : QObject(parent) {}
-#else
     QtMenuBase(QQuickItem *parent = 0) : QQuickItem(parent) {}
-#endif
+
     virtual QAction* action() = 0;
 
     void setIconSource(const QUrl &icon);
@@ -85,11 +77,7 @@ class QtMenuSeparator : public QtMenuBase
 {
     Q_OBJECT
 public:
-#if QT_VERSION < 0x050000
-    QtMenuSeparator(QObject *parent = 0);
-#else
     QtMenuSeparator(QQuickItem *parent = 0);
-#endif
     ~QtMenuSeparator();
     QAction* action();
 
@@ -107,11 +95,7 @@ class QtMenuItem: public QtMenuBase
     Q_PROPERTY(bool enabled READ enabled WRITE setEnabled NOTIFY enabledChanged)
 
 public:
-#if QT_VERSION < 0x050000
-    QtMenuItem(QObject *parent = 0);
-#else
     QtMenuItem(QQuickItem *parent = 0);
-#endif
     ~QtMenuItem();
 
     void setText(const QString &text);