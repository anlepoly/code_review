diff --git a/src/activeqt/container/qaxwidget.cpp b/src/activeqt/container/qaxwidget.cpp
index b8372a8..f87cee2 100644
--- a/src/activeqt/container/qaxwidget.cpp
+++ b/src/activeqt/container/qaxwidget.cpp
@@ -123,6 +123,8 @@ public:
         return axhost;
     }
 
+    QWindow *hostWindow() const;
+
 protected:
     bool winEvent(MSG *msg, long *result);
     bool event(QEvent *e);
@@ -1454,12 +1456,16 @@ HRESULT WINAPI QAxClientSite::EnableModeless(BOOL fEnable)
 {
     EnableWindow(hwndForWidget(host), fEnable);
 
+    QWindow *hostWindow = host->hostWindow();
+    if (!hostWindow)
+        return S_FALSE;
+
     if (!fEnable) {
         if (!QApplicationPrivate::isBlockedByModal(host))
-            QApplicationPrivate::enterModal(host);
+            QGuiApplicationPrivate::showModalWindow(hostWindow);
     } else {
         if (QApplicationPrivate::isBlockedByModal(host))
-            QApplicationPrivate::leaveModal(host);
+            QGuiApplicationPrivate::hideModalWindow(hostWindow);
     }
     // FIXME 4.10.2011: No longer exists  in Lighthouse.
     // qt_win_ignoreNextMouseReleaseEvent = false;
@@ -1673,6 +1679,15 @@ void* QAxHostWidget::qt_metacast(const char *clname)
     return QWidget::qt_metacast(clname);
 }
 
+QWindow *QAxHostWidget::hostWindow() const
+{
+    if (QWindow *w = windowHandle())
+        return w;
+    if (QWidget *parent = nativeParentWidget())
+        return parent->windowHandle();
+    return 0;
+}
+
 QSize QAxHostWidget::sizeHint() const
 {
     return axhost ? axhost->sizeHint() : QWidget::sizeHint();