diff --git a/src/corelib/kernel/qsharedmemory_android.cpp b/src/corelib/kernel/qsharedmemory_android.cpp
index d9806a8..c0603c6 100644
--- a/src/corelib/kernel/qsharedmemory_android.cpp
+++ b/src/corelib/kernel/qsharedmemory_android.cpp
@@ -60,11 +60,6 @@ void QSharedMemoryPrivate::setErrorString(const QString &function)
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";
 }
 
-/*!
-    \internal
-
-    If not already made create the handle used for accessing the shared memory.
-*/
 key_t QSharedMemoryPrivate::handle()
 {
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";
@@ -74,15 +69,6 @@ key_t QSharedMemoryPrivate::handle()
 #endif // QT_NO_SHAREDMEMORY
 
 #if !(defined(QT_NO_SHAREDMEMORY) && defined(QT_NO_SYSTEMSEMAPHORE))
-/*!
-    \internal
-    Creates the unix file if needed.
-    returns true if the unix file was created.
-
-    -1 error
-     0 already existed
-     1 created
-  */
 int QSharedMemoryPrivate::createUnixKeyFile(const QString &fileName)
 {
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";
diff --git a/src/corelib/kernel/qsystemsemaphore_android.cpp b/src/corelib/kernel/qsystemsemaphore_android.cpp
index 1e13f6e..58c31c3 100644
--- a/src/corelib/kernel/qsystemsemaphore_android.cpp
+++ b/src/corelib/kernel/qsystemsemaphore_android.cpp
@@ -59,30 +59,17 @@ void QSystemSemaphorePrivate::setErrorString(const QString &function)
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";
 }
 
-/*!
-    \internal
-
-    Setup unix_key
- */
 key_t QSystemSemaphorePrivate::handle(QSystemSemaphore::AccessMode mode)
 {
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";
     return -1;
 }
 
-/*!
-    \internal
-
-    Cleanup the unix_key
- */
 void QSystemSemaphorePrivate::cleanHandle()
 {
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";
 }
 
-/*!
-    \internal
- */
 bool QSystemSemaphorePrivate::modifySemaphore(int count)
 {
     qWarning() << Q_FUNC_INFO << "Not yet implemented on Android";