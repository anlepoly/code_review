diff --git a/src/corelib/global/qcompilerdetection.h b/src/corelib/global/qcompilerdetection.h
index b4ea022..8621d8b 100644
--- a/src/corelib/global/qcompilerdetection.h
+++ b/src/corelib/global/qcompilerdetection.h
@@ -105,12 +105,6 @@
 #    define Q_DECL_VARIABLE_DEPRECATED
 #    define Q_CC_INTEL
 #  endif
-/* MSVC does not support SSE/MMX on x64 */
-#  if (defined(Q_CC_MSVC) && defined(_M_X64))
-#    undef QT_HAVE_SSE
-#    undef QT_HAVE_MMX
-#    undef QT_HAVE_3DNOW
-#  endif
 
 #  if defined(Q_CC_MSVC) && _MSC_VER >= 1400
 #    define Q_COMPILER_VARIADIC_MACROS
@@ -143,9 +137,6 @@
    so check for it before that */
 #elif defined(__ARMCC__) || defined(__CC_ARM)
 #  define Q_CC_RVCT
-#  if __TARGET_ARCH_ARM >= 6
-#    define QT_HAVE_ARMV6
-#  endif
 /* work-around for missing compiler intrinsics */
 #  define __is_empty(X) false
 #  define __is_pod(X) false
diff --git a/src/gui/painting/qdrawhelper.cpp b/src/gui/painting/qdrawhelper.cpp
index 3ba8381..c21cc61 100644
--- a/src/gui/painting/qdrawhelper.cpp
+++ b/src/gui/painting/qdrawhelper.cpp
@@ -1944,7 +1944,7 @@ static const uint * QT_FASTCALL qt_fetch_conical_gradient(uint *buffer, const Op
 // Force ARM code generation for comp_func_* -methods
 #  pragma push
 #  pragma arm
-#  if defined(QT_HAVE_ARMV6)
+#  if defined(Q_PROCESSOR_ARM_V6)
 static __forceinline void preload(const uint *start)
 {
     asm( "pld [start]" );
@@ -1957,10 +1957,10 @@ static const uint L2CacheLineLengthInInts = L2CacheLineLength/sizeof(uint);
 // Two consecutive preloads stall, so space them out a bit by using different modulus.
 #    define PRELOAD_COND2(x,y) if (((uint)&x[i])%L2CacheLineLength == 0) preload(&x[i] + L2CacheLineLengthInInts); \
          if (((uint)&y[i])%L2CacheLineLength == 16) preload(&y[i] + L2CacheLineLengthInInts);
-#  endif // QT_HAVE_ARMV6
+#  endif // Q_PROCESSOR_ARM_V6
 #endif // Q_CC_RVCT
 
-#if !defined(Q_CC_RVCT) || !defined(QT_HAVE_ARMV6)
+#if !defined(Q_CC_RVCT) || !defined(Q_PROCESSOR_ARM_V6)
 #    define PRELOAD_INIT(x)
 #    define PRELOAD_INIT2(x,y)
 #    define PRELOAD_COND(x)