diff --git a/Source/JavaScriptCore/ChangeLog b/Source/JavaScriptCore/ChangeLog
index 7a50471..638d594 100644
--- a/Source/JavaScriptCore/ChangeLog
+++ b/Source/JavaScriptCore/ChangeLog
@@ -1,3 +1,12 @@
+2012-11-30  Pierre Rossi  <pierre.rossi@gmail.com>
+
+        [Qt] Unreviewed speculative Mac build fix after r136232
+
+        Update the include path so that LLIntAssembly.h is picked up.
+        The bot didn't break until later when a clean build was triggered.
+
+        * JavaScriptCore.pri:
+
 2012-11-30  Allan Sandfeld Jensen  <allan.jensen@digia.com>
 
         Crash in conversion of empty OpaqueJSString to Identifier 
diff --git a/Source/JavaScriptCore/DerivedSources.pri b/Source/JavaScriptCore/DerivedSources.pri
index a1a04c8..8bbc29d 100644
--- a/Source/JavaScriptCore/DerivedSources.pri
+++ b/Source/JavaScriptCore/DerivedSources.pri
@@ -95,23 +95,21 @@ klgen.input = KEYWORDLUT_FILES
 klgen.commands = python $$klgen.script ${QMAKE_FILE_NAME} > ${QMAKE_FILE_OUT}
 GENERATORS += klgen
 
-!macx{
-    EXTRACTOR_BINARY = LLIntOffsetsExtractor$$BIN_EXTENSION
-    DIRS = $$OUT_PWD $$OUT_PWD/debug $$OUT_PWD/release
-    for(dir, DIRS) {
-        file = $$dir/$$EXTRACTOR_BINARY
-        exists($$file): LLINT_FILES += $$file
-    }
-
-    #GENERATOR: LLInt
-    llint.output = ${QMAKE_FILE_IN_PATH}$${QMAKE_DIR_SEP}LLIntAssembly.h
-    llint.script = $$PWD/offlineasm/asm.rb
-    llint.input = LLINT_FILES
-    llint.depends = $$LLINT_DEPENDENCY
-    llint.commands = ruby $$llint.script $$LLINT_ASSEMBLER ${QMAKE_FILE_IN} ${QMAKE_FILE_OUT}
-    GENERATORS += llint
+EXTRACTOR_BINARY = LLIntOffsetsExtractor$$BIN_EXTENSION
+DIRS = $$OUT_PWD $$OUT_PWD/debug $$OUT_PWD/release
+for(dir, DIRS) {
+    file = $$dir/$$EXTRACTOR_BINARY
+    exists($$file): LLINT_FILES += $$file
 }
 
+#GENERATOR: LLInt
+llint.output = ${QMAKE_FILE_IN_PATH}$${QMAKE_DIR_SEP}LLIntAssembly.h
+llint.script = $$PWD/offlineasm/asm.rb
+llint.input = LLINT_FILES
+llint.depends = $$LLINT_DEPENDENCY
+llint.commands = ruby $$llint.script $$LLINT_ASSEMBLER ${QMAKE_FILE_IN} ${QMAKE_FILE_OUT}
+GENERATORS += llint
+
 linux-*:if(isEqual(QT_ARCH, "i386")|isEqual(QT_ARCH, "x86_64")) {
     # GENERATOR: disassembler
     disassembler.output = udis86_itab.c
diff --git a/Source/JavaScriptCore/JavaScriptCore.pri b/Source/JavaScriptCore/JavaScriptCore.pri
index d465bcf..daddf64 100644
--- a/Source/JavaScriptCore/JavaScriptCore.pri
+++ b/Source/JavaScriptCore/JavaScriptCore.pri
@@ -32,6 +32,9 @@ INCLUDEPATH += \
     $$SOURCE_DIR/ForwardingHeaders \
     $$JAVASCRIPTCORE_GENERATED_SOURCES_DIR
 
+# Pick up the right version of LLIntAssembly.h
+macx:INCLUDEPATH+=$$JAVASCRIPTCORE_GENERATED_SOURCES_DIR/$$activeBuildConfig()
+
 win32-*: LIBS += -lwinmm
 
 wince* {
diff --git a/Source/JavaScriptCore/JavaScriptCore.pro b/Source/JavaScriptCore/JavaScriptCore.pro
index 006d615..13130b8 100644
--- a/Source/JavaScriptCore/JavaScriptCore.pro
+++ b/Source/JavaScriptCore/JavaScriptCore.pro
@@ -7,18 +7,16 @@
 TEMPLATE = subdirs
 CONFIG += ordered
 
-!macx {
-    LLIntOffsetsExtractor.file = LLIntOffsetsExtractor.pro
-    LLIntOffsetsExtractor.makefile = Makefile.LLIntOffsetsExtractor
-    SUBDIRS += LLIntOffsetsExtractor
-}
+LLIntOffsetsExtractor.file = LLIntOffsetsExtractor.pro
+LLIntOffsetsExtractor.makefile = Makefile.LLIntOffsetsExtractor
+SUBDIRS += LLIntOffsetsExtractor
 
 derived_sources.file = DerivedSources.pri
 target.file = Target.pri
 
 SUBDIRS += derived_sources target
 
-!macx:addStrictSubdirOrderBetween(LLIntOffsetsExtractor, derived_sources)
+addStrictSubdirOrderBetween(LLIntOffsetsExtractor, derived_sources)
 addStrictSubdirOrderBetween(derived_sources, target)
 
 jsc.file = jsc.pro
diff --git a/Source/JavaScriptCore/Target.pri b/Source/JavaScriptCore/Target.pri
index cf8836e..f609de1 100644
--- a/Source/JavaScriptCore/Target.pri
+++ b/Source/JavaScriptCore/Target.pri
@@ -170,6 +170,13 @@ SOURCES += \
     jit/JITStubs.cpp \
     jit/JumpReplacementWatchpoint.cpp \
     jit/ThunkGenerators.cpp \
+    llint/LLIntCLoop.cpp \
+    llint/LLIntData.cpp \
+    llint/LLIntEntrypoints.cpp \
+    llint/LLIntExceptions.cpp \
+    llint/LLIntSlowPaths.cpp \
+    llint/LLIntThunks.cpp \
+    llint/LowLevelInterpreter.cpp \
     parser/Lexer.cpp \
     parser/Nodes.cpp \
     parser/ParserArena.cpp \
@@ -278,17 +285,6 @@ SOURCES += \
     tools/CodeProfiling.cpp \
     yarr/YarrJIT.cpp \
 
-!macx {
-    SOURCES += \
-        llint/LLIntCLoop.cpp \
-        llint/LLIntData.cpp \
-        llint/LLIntEntrypoints.cpp \
-        llint/LLIntExceptions.cpp \
-        llint/LLIntSlowPaths.cpp \
-        llint/LLIntThunks.cpp \
-        llint/LowLevelInterpreter.cpp
-}
-
 linux-*:if(isEqual(QT_ARCH, "i386")|isEqual(QT_ARCH, "x86_64")) {
     SOURCES += \
         disassembler/UDis86Disassembler.cpp \
diff --git a/Source/WTF/wtf/Platform.h b/Source/WTF/wtf/Platform.h
index fdae426..1603019 100644
--- a/Source/WTF/wtf/Platform.h
+++ b/Source/WTF/wtf/Platform.h
@@ -926,7 +926,7 @@
 #if !defined(ENABLE_LLINT) \
     && ENABLE(JIT) \
     && (OS(DARWIN) || OS(LINUX)) \
-    && (PLATFORM(MAC) || PLATFORM(IOS) || PLATFORM(GTK) || (PLATFORM(QT) && !OS(DARWIN))) \
+    && (PLATFORM(MAC) || PLATFORM(IOS) || PLATFORM(GTK) || PLATFORM(QT)) \
     && (CPU(X86) || CPU(X86_64) || CPU(ARM_THUMB2))
 #define ENABLE_LLINT 1
 #endif
diff --git a/Source/WebKit2/ChangeLog b/Source/WebKit2/ChangeLog
index a41bf43..654d0c3 100644
--- a/Source/WebKit2/ChangeLog
+++ b/Source/WebKit2/ChangeLog
@@ -1,3 +1,11 @@
+2012-11-30  Pierre Rossi  <pierre.rossi@gmail.com>
+
+        [Qt] Unreviewed speculative Mac build fix after r136232
+
+        cleanup an oversight from r136235
+
+        * PluginProcess.pro: s/webkit/webkitwidgets/
+
 2012-11-30  Simon Hausmann  <simon.hausmann@digia.com>
 
         Unreviewed trivial Qt build fix: