diff --git a/src/network/socket/qabstractsocket.cpp b/src/network/socket/qabstractsocket.cpp
index 5ff7da9..124f15e 100644
--- a/src/network/socket/qabstractsocket.cpp
+++ b/src/network/socket/qabstractsocket.cpp
@@ -195,7 +195,7 @@
     \fn void QAbstractSocket::disconnected()
 
     This signal is emitted when the socket has been disconnected.
-    
+
     \warning If you need to delete the sender() of this signal in a slot connected
     to it, use the \l{QObject::deleteLater()}{deleteLater()} function.
 
@@ -639,7 +639,7 @@ bool QAbstractSocketPrivate::initSocketLayer(QAbstractSocket::NetworkLayerProtoc
                socketEngine->errorString().toLatin1().constData());
 #endif
         socketError = socketEngine->error();
-	q->setErrorString(socketEngine->errorString());
+        q->setErrorString(socketEngine->errorString());
         return false;
     }
 
diff --git a/src/network/socket/qlocalsocket_win.cpp b/src/network/socket/qlocalsocket_win.cpp
index cb264a4..0138a96 100644
--- a/src/network/socket/qlocalsocket_win.cpp
+++ b/src/network/socket/qlocalsocket_win.cpp
@@ -67,7 +67,7 @@ void QLocalSocketPrivate::_q_winError(ulong windowsError, const QString &functio
     Q_Q(QLocalSocket);
     QLocalSocket::LocalSocketState currentState = state;
 
-    // If the connectToServer fails due to WaitNamedPipe() time-out, assume ConnectionError  
+    // If the connectToServer fails due to WaitNamedPipe() time-out, assume ConnectionError
     if (state == QLocalSocket::ConnectingState && windowsError == ERROR_SEM_TIMEOUT)
         windowsError = ERROR_NO_DATA;