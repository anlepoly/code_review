diff --git a/doc/src/particles/particles.qdoc b/doc/src/particles/particles.qdoc
index d51bcdf..be7d65b 100644
--- a/doc/src/particles/particles.qdoc
+++ b/doc/src/particles/particles.qdoc
@@ -31,7 +31,10 @@
 
   \brief Elements for the Qt Quick particle system
 
-  This QML module contains a particle system for Qt Quick.
+  This QML module contains a particle system for Qt Quick. To use these elements, you will need to import the module with the following line:
+  \code
+  import QtQuick.Particles 2.0
+  \endcode
 
   For a simple overview of how the system can be used, see \l{qml-particlesystem.html}{Using the Qt Quick Particle System}.
 
@@ -44,6 +47,12 @@
 \inqmlmodule QtQuick.Particles 2
     \title Using the Qt Quick Particle System
 
+
+  Note that to use elements from the particles module, you will need to import the types with the following line:
+  \code
+  import QtQuick.Particles 2.0
+  \endcode
+
     \section1 The ParticleSystem
     This particle system contains four main types of QML Elements: ParticleSystem, Painters, Emitters and Affectors.
 
diff --git a/src/imports/xmllistmodel/qqmlxmllistmodel.cpp b/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
index 22072dc..e95fd26 100644
--- a/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
+++ b/src/imports/xmllistmodel/qqmlxmllistmodel.cpp
@@ -599,6 +599,12 @@ void QQuickXmlListModelPrivate::clear_role(QQmlListProperty<QQuickXmlListModelRo
     \ingroup qml-working-with-data
     \brief The XmlListModel element is used to specify a read-only model using XPath expressions.
 
+
+    To use this element, you will need to import the module with the following line:
+    \code
+    import QtQuick.XmlListModel 2.0
+    \endcode
+
     XmlListModel is used to create a read-only model from XML data. It can be used as a data source
     for view elements (such as ListView, PathView, GridView) and other elements that interact with model
     data (such as \l Repeater).
@@ -626,6 +632,7 @@ void QQuickXmlListModelPrivate::clear_role(QQmlListProperty<QQuickXmlListModelRo
 
     \qml
     import QtQuick 2.0
+    import QtQuick.XmlListModel 2.0
 
     XmlListModel {
         id: xmlModel
diff --git a/src/quick/items/qquickcanvas.cpp b/src/quick/items/qquickcanvas.cpp
index f59a89a..f4aa735 100644
--- a/src/quick/items/qquickcanvas.cpp
+++ b/src/quick/items/qquickcanvas.cpp
@@ -729,6 +729,13 @@ void QQuickCanvasPrivate::cleanup(QSGNode *n)
 
     The Window object creates a new top-level window for a QtQuick scene. It automatically sets up the
     window for use with QtQuick 2.0 graphical elements.
+
+    To use this element, you will need to import the module with the following line:
+    \code
+    import QtQuick.Window 2.0
+    \endcode
+
+    Restricting this import will allow you to have a QML environment without access to window system features.
 */
 /*!
     \class QQuickCanvas
diff --git a/src/quick/items/qquickscreen.cpp b/src/quick/items/qquickscreen.cpp
index a00df46..280a06c 100644
--- a/src/quick/items/qquickscreen.cpp
+++ b/src/quick/items/qquickscreen.cpp
@@ -56,6 +56,13 @@ QT_BEGIN_NAMESPACE
 
     The Screen attached object is only valid inside Item or Item derived elements. Inside these elements
     it refers to the screen that the element is currently being displayed on.
+
+    To use this element, you will need to import the module with the following line:
+    \code
+    import QtQuick.Window 2.0
+    \endcode
+
+    Restricting this import will allow you to have a QML environment without access to window system features.
 */
 
 /*!