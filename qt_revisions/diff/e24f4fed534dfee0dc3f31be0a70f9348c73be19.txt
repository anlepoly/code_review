diff --git a/src/multimedia/audio/qaudiodecoder.cpp b/src/multimedia/audio/qaudiodecoder.cpp
index 1253deb..1e5983a 100644
--- a/src/multimedia/audio/qaudiodecoder.cpp
+++ b/src/multimedia/audio/qaudiodecoder.cpp
@@ -140,9 +140,7 @@ QAudioDecoder::QAudioDecoder(QObject *parent)
     Q_D(QAudioDecoder);
 
     d->provider = QMediaServiceProvider::defaultServiceProvider();
-    if (d->service == 0) {
-        d->error = ServiceMissingError;
-    } else {
+    if (d->service) {
         d->control = qobject_cast<QAudioDecoderControl*>(d->service->requestControl(QAudioDecoderControl_iid));
         if (d->control != 0) {
             connect(d->control, SIGNAL(stateChanged(QAudioDecoder::State)), SLOT(_q_stateChanged(QAudioDecoder::State)));
@@ -157,6 +155,10 @@ QAudioDecoder::QAudioDecoder(QObject *parent)
             connect(d->control ,SIGNAL(durationChanged(qint64)), this, SIGNAL(durationChanged(qint64)));
         }
     }
+    if (!d->control) {
+       d->error = ServiceMissingError;
+       d->errorString = tr("The QAudioDecoder object does not have a valid service");
+    }
 }
 
 
diff --git a/tests/auto/unit/qaudiodecoder/tst_qaudiodecoder.cpp b/tests/auto/unit/qaudiodecoder/tst_qaudiodecoder.cpp
index 43c51e3..e124710 100644
--- a/tests/auto/unit/qaudiodecoder/tst_qaudiodecoder.cpp
+++ b/tests/auto/unit/qaudiodecoder/tst_qaudiodecoder.cpp
@@ -62,6 +62,8 @@ private Q_SLOTS:
     void format();
     void source();
     void readAll();
+    void nullControl();
+    void nullService();
 
 private:
     MockAudioDecoderService  *mockAudioDecoderService;
@@ -338,6 +340,87 @@ void tst_QAudioDecoder::readAll()
     }
 }
 
+void tst_QAudioDecoder::nullControl()
+{
+    mockAudioDecoderService->setControlNull();
+    QAudioDecoder d;
+
+    QVERIFY(d.error() == QAudioDecoder::ServiceMissingError);
+    QVERIFY(!d.errorString().isEmpty());
+
+    QVERIFY(d.hasSupport("MIME") == QtMultimedia::MaybeSupported);
+
+    QVERIFY(d.state() == QAudioDecoder::StoppedState);
+
+    QVERIFY(d.sourceFilename().isEmpty());
+    d.setSourceFilename("test");
+    QVERIFY(d.sourceFilename().isEmpty());
+
+    QFile f;
+    QVERIFY(d.sourceDevice() == 0);
+    d.setSourceDevice(&f);
+    QVERIFY(d.sourceDevice() == 0);
+
+    QAudioFormat format;
+    format.setChannels(2);
+    QVERIFY(!d.audioFormat().isValid());
+    d.setAudioFormat(format);
+    QVERIFY(!d.audioFormat().isValid());
+
+    QVERIFY(!d.read().isValid());
+    QVERIFY(!d.bufferAvailable());
+
+    QVERIFY(d.position() == -1);
+    QVERIFY(d.duration() == -1);
+
+    d.start();
+    QVERIFY(d.error() == QAudioDecoder::ServiceMissingError);
+    QVERIFY(!d.errorString().isEmpty());
+    QVERIFY(d.state() == QAudioDecoder::StoppedState);
+    d.stop();
+}
+
+
+void tst_QAudioDecoder::nullService()
+{
+    mockProvider->service = 0;
+    QAudioDecoder d;
+
+    QVERIFY(d.error() == QAudioDecoder::ServiceMissingError);
+    QVERIFY(!d.errorString().isEmpty());
+
+    QVERIFY(d.hasSupport("MIME") == QtMultimedia::MaybeSupported);
+
+    QVERIFY(d.state() == QAudioDecoder::StoppedState);
+
+    QVERIFY(d.sourceFilename().isEmpty());
+    d.setSourceFilename("test");
+    QVERIFY(d.sourceFilename().isEmpty());
+
+    QFile f;
+    QVERIFY(d.sourceDevice() == 0);
+    d.setSourceDevice(&f);
+    QVERIFY(d.sourceDevice() == 0);
+
+    QAudioFormat format;
+    format.setChannels(2);
+    QVERIFY(!d.audioFormat().isValid());
+    d.setAudioFormat(format);
+    QVERIFY(!d.audioFormat().isValid());
+
+    QVERIFY(!d.read().isValid());
+    QVERIFY(!d.bufferAvailable());
+
+    QVERIFY(d.position() == -1);
+    QVERIFY(d.duration() == -1);
+
+    d.start();
+    QVERIFY(d.error() == QAudioDecoder::ServiceMissingError);
+    QVERIFY(!d.errorString().isEmpty());
+    QVERIFY(d.state() == QAudioDecoder::StoppedState);
+    d.stop();
+}
+
 QTEST_MAIN(tst_QAudioDecoder)
 
 #include "tst_qaudiodecoder.moc"
diff --git a/tests/auto/unit/qmultimedia_common/mockaudiodecoderservice.h b/tests/auto/unit/qmultimedia_common/mockaudiodecoderservice.h
index 35db819..d322868 100644
--- a/tests/auto/unit/qmultimedia_common/mockaudiodecoderservice.h
+++ b/tests/auto/unit/qmultimedia_common/mockaudiodecoderservice.h
@@ -55,6 +55,7 @@ public:
         : QMediaService(parent)
     {
         mockControl = new MockAudioDecoderControl(this);
+        validControl = mockControl;
     }
 
     ~MockAudioDecoderService()
@@ -74,7 +75,18 @@ public:
         Q_UNUSED(control);
     }
 
+    void setControlNull()
+    {
+        mockControl = 0;
+    }
+
+    void setControlValid()
+    {
+        mockControl = validControl;
+    }
+
     MockAudioDecoderControl *mockControl;
+    MockAudioDecoderControl *validControl;
 };