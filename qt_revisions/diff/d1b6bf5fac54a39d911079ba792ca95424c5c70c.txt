diff --git a/doc/config/compat.qdocconf b/doc/config/compat.qdocconf
index 0b59629..53a2613 100644
--- a/doc/config/compat.qdocconf
+++ b/doc/config/compat.qdocconf
@@ -5,24 +5,24 @@ macro.0                         = "\\\\0"
 macro.b                         = "\\\\b"
 macro.n                         = "\\\\n"
 macro.r                         = "\\\\r"
-macro.i                         = "\\o"
-macro.i11                       = "\\o{1,1}"
-macro.i12                       = "\\o{1,2}"
-macro.i13                       = "\\o{1,3}"
-macro.i14                       = "\\o{1,4}"
-macro.i15                       = "\\o{1,5}"
-macro.i16                       = "\\o{1,6}"
-macro.i17                       = "\\o{1,7}"
-macro.i18                       = "\\o{1,8}"
-macro.i19                       = "\\o{1,9}"
-macro.i21                       = "\\o{2,1}"
-macro.i31                       = "\\o{3,1}"
-macro.i41                       = "\\o{4,1}"
-macro.i51                       = "\\o{5,1}"
-macro.i61                       = "\\o{6,1}"
-macro.i71                       = "\\o{7,1}"
-macro.i81                       = "\\o{8,1}"
-macro.i91                       = "\\o{9,1}"
+macro.i                         = "\\li"
+macro.i11                       = "\\li{1,1}"
+macro.i12                       = "\\li{1,2}"
+macro.i13                       = "\\li{1,3}"
+macro.i14                       = "\\li{1,4}"
+macro.i15                       = "\\li{1,5}"
+macro.i16                       = "\\li{1,6}"
+macro.i17                       = "\\li{1,7}"
+macro.i18                       = "\\li{1,8}"
+macro.i19                       = "\\li{1,9}"
+macro.i21                       = "\\li{2,1}"
+macro.i31                       = "\\li{3,1}"
+macro.i41                       = "\\li{4,1}"
+macro.i51                       = "\\li{5,1}"
+macro.i61                       = "\\li{6,1}"
+macro.i71                       = "\\li{7,1}"
+macro.i81                       = "\\li{8,1}"
+macro.i91                       = "\\li{9,1}"
 macro.img                       = "\\image"
 macro.endquote                  = "\\endquotation"
 macro.relatesto                 = "\\relates"
diff --git a/doc/config/macros.qdocconf b/doc/config/macros.qdocconf
index 7648b54..d8b96c0 100644
--- a/doc/config/macros.qdocconf
+++ b/doc/config/macros.qdocconf
@@ -2,17 +2,17 @@ macro.aacute.HTML       = "&aacute;"
 macro.Aring.HTML        = "&Aring;"
 macro.aring.HTML        = "&aring;"
 macro.Auml.HTML         = "&Auml;"
-macro.author            = "\\bold{Author:}"
+macro.author            = "\\b{Author:}"
 macro.br.HTML           = "<br />"
 macro.BR.HTML           = "<br />"
 macro.copyright.HTML    = "&copy;"
 macro.eacute.HTML       = "&eacute;"
-macro.gui               = "\\bold"
+macro.gui               = "\\b"
 macro.hr.HTML           = "<hr />"
 macro.iacute.HTML       = "&iacute;"
-macro.key               = "\\bold"
-macro.menu              = "\\bold"
-macro.note              = "\\bold{Note:}"
+macro.key               = "\\b"
+macro.menu              = "\\b"
+macro.note              = "\\b{Note:}"
 macro.oslash.HTML       = "&oslash;"
 macro.ouml.HTML         = "&ouml;"
 macro.QA                = "\\e{Qt Assistant}"
diff --git a/doc/src/audioengineoverview.qdoc b/doc/src/audioengineoverview.qdoc
index bc979f6..888293e 100644
--- a/doc/src/audioengineoverview.qdoc
+++ b/doc/src/audioengineoverview.qdoc
@@ -43,7 +43,7 @@ events and managed by QtAudioEngine or controlled by explicitly defining a \l So
 for easier qml bindings.
 
 QtAudioEngine elements can be accessed through importing the
-\bold{QtAudioEngine 1.0} module.
+\b{QtAudioEngine 1.0} module.
 
 \qml
 import QtQuick 2.0
@@ -55,7 +55,7 @@ AudioEngine {
 
 \section1 Examples
 \list
-    \o \l {AudioEngine Example}{Audio Engine}
+    \li \l {AudioEngine Example}{Audio Engine}
 \endlist
 
 \section1 Reference Documentation
@@ -63,15 +63,15 @@ AudioEngine {
 \section2 QML Elements
 
 \list
-    \o \l AudioEngine
-    \o \l AudioSample
-    \o \l AudioCategory
-    \o \l AttenuationModelLinear
-    \o \l AttenuationModelInverse
-    \o \l Sound
-    \o \l PlayVariation
-    \o \l AudioListener
-    \o \l SoundInstance
+    \li \l AudioEngine
+    \li \l AudioSample
+    \li \l AudioCategory
+    \li \l AttenuationModelLinear
+    \li \l AttenuationModelInverse
+    \li \l Sound
+    \li \l PlayVariation
+    \li \l AudioListener
+    \li \l SoundInstance
 
 \endlist
 
diff --git a/doc/src/audiooverview.qdoc b/doc/src/audiooverview.qdoc
index d9872ff..902e3db 100644
--- a/doc/src/audiooverview.qdoc
+++ b/doc/src/audiooverview.qdoc
@@ -144,11 +144,11 @@ the supported devices and codecs and the use of recording functions in the
 QAudioRecorder class.
 
 \list
-    \o \l audiodevices
-    \o \l audioinput
-    \o \l audiooutput
-    \o \l audiorecorder
-    \o \l spectrum
+    \li \l audiodevices
+    \li \l audioinput
+    \li \l audiooutput
+    \li \l audiorecorder
+    \li \l spectrum
 \endlist
 
 QML Examples:
@@ -163,8 +163,8 @@ QML Examples:
 \section2 QML Elements
 
 \list
-    \o \l Audio
-    \o \l MediaPlayer
+    \li \l Audio
+    \li \l MediaPlayer
 \endlist
 
 */
diff --git a/doc/src/cameraoverview.qdoc b/doc/src/cameraoverview.qdoc
index 27bd8f0..9af9daa 100644
--- a/doc/src/cameraoverview.qdoc
+++ b/doc/src/cameraoverview.qdoc
@@ -242,13 +242,13 @@ There are both C++ and QML examples available.
 
 C++ Examples:
 \list
-    \o \l Camera
+    \li \l Camera
 \endlist
 
 QML Examples:
 \list
-    \o \l declarative-camera
-    \o \l qmlvideofx
+    \li \l declarative-camera
+    \li \l qmlvideofx
 \endlist
 
 \section1 Reference Documentation
diff --git a/doc/src/changes.qdoc b/doc/src/changes.qdoc
index 46511bc..b895f21 100644
--- a/doc/src/changes.qdoc
+++ b/doc/src/changes.qdoc
@@ -47,15 +47,15 @@ are now in a new library (QtMultimediaWidgets).
 
 There are a number of new features in QtMultimedia 5.0:
 \list
-\o Expanded QML API
-\o New \l QAudioRecorder class
-\o Volume support for QAudioOutput and QAudioInput
-\o More examples and documentation
-\o QML \l Torch class
-\o QSound moved from QtGui to QtMultimedia
-\o QSoundEffect available to C++ now, as well as QML
-\o FM Radio Data System classes and elements now available (\l QRadioData, \l RadioData)
-\o Various other API improvements and bugfixes
+\li Expanded QML API
+\li New \l QAudioRecorder class
+\li Volume support for QAudioOutput and QAudioInput
+\li More examples and documentation
+\li QML \l Torch class
+\li QSound moved from QtGui to QtMultimedia
+\li QSoundEffect available to C++ now, as well as QML
+\li FM Radio Data System classes and elements now available (\l QRadioData, \l RadioData)
+\li Various other API improvements and bugfixes
 \endlist
 
 \section1 Removed features
@@ -65,11 +65,11 @@ been removed.
 
 \table 70%
     \header
-        \o Removed feature
-        \o Notes
+        \li Removed feature
+        \li Notes
     \row
-        \o QMediaImageViewer
-        \o This class (and related controls and services) were removed since
+        \li QMediaImageViewer
+        \li This class (and related controls and services) were removed since
            their functionality was not suitable for many applications
 \endtable
 
@@ -82,11 +82,11 @@ they are documented elsewhere.
 
 \table 70%
     \header
-        \o Changed feature
-        \o Notes
+        \li Changed feature
+        \li Notes
     \row
-        \o QMake .pro file changes
-        \o If you've used QtMultimediaKit in the past, you needed to put
+        \li QMake .pro file changes
+        \li If you've used QtMultimediaKit in the past, you needed to put
            \code
            CONFIG += mobility
            MOBILITY += multimedia
@@ -101,8 +101,8 @@ they are documented elsewhere.
            \endcode
            if you need to use the widget classes.
     \row
-        \o Namespace changes
-        \o For QtMultimediaKit the majority of the classes were in the
+        \li Namespace changes
+        \li For QtMultimediaKit the majority of the classes were in the
            normal Qt namespace (usually nothing, unless built specially).  There
            was a QtMultimediaKit namespace for several enumerations.  This namespace
            has now changed to QtMultimedia, so if you've used one of the
@@ -111,41 +111,41 @@ they are documented elsewhere.
            search and replace on QtMultimediaKit (to replace it with QtMultimedia) will
            go a long way with porting your code.
     \row
-        \o Meta-data enumeration changes
-        \o In QtMultimediaKit the available meta-data keys were in an enumeration
+        \li Meta-data enumeration changes
+        \li In QtMultimediaKit the available meta-data keys were in an enumeration
            in the QtMultimediaKit namespace.  These meta-data keys have been changed
            to string literals in the QtMultimedia::MetaData namespace - generally your
            source code will mostly be compatible unless you have created variables or
            parameters with the QtMultimedia::MetaData type - you should replace these
            with QStrings.
     \row
-        \o Meta-data method changes
-        \o In QtMultimediaKit the available meta-data was split between methods to
+        \li Meta-data method changes
+        \li In QtMultimediaKit the available meta-data was split between methods to
            access standard, pre-defined keys, and methods to access extensible free
            form key meta-data.  These have been combined into a single method to
            access meta-data given a string key, and a list of pre-defined keys.  If
            you've used the \c extendedMetaData method of any class, you will need
            to change your code to combine the standard and extended metadata methods.
     \row
-        \o Qt Metatype registration
-        \o In QtMultimedia 5.0 we've tried to make sure that we register any classes
+        \li Qt Metatype registration
+        \li In QtMultimedia 5.0 we've tried to make sure that we register any classes
            or types that would be useful to use in cross process signals or in
            QVariants.  If you've previously added Q_DECLARE_METATYPE macros for any
            QtMultimedia class you will probably need to remove them.
     \row
-        \o Video QML element
-        \o If you've previously used the Video QML element you may be excited
+        \li Video QML element
+        \li If you've previously used the Video QML element you may be excited
            to learn that it should still work as expected, but you also have
            the choice of using the new MediaPlayer and VideoOutput elements
            together for more flexible and advanced use cases.
     \row
-        \o QSoundEffect
-        \o The SoundEffect QML element was public and accessible in QtMultimedaKit,
+        \li QSoundEffect
+        \li The SoundEffect QML element was public and accessible in QtMultimedaKit,
            and now the C++ version is also available.  If you managed to use the
            private class previously, you'll need to update your code.
     \row
-        \o Camera controls
-        \o A large number of the camera controls (QCameraImageProcessingControl,
+        \li Camera controls
+        \li A large number of the camera controls (QCameraImageProcessingControl,
            QCameraFocusControl etc) have been updated to address a number of
            design flaws.  If you have previously been using these classes, you
            should check the new design.  In particular, a number of discrete
diff --git a/doc/src/examples/qmlvideo.qdoc b/doc/src/examples/qmlvideo.qdoc
index ae9c43d..3b186d1 100644
--- a/doc/src/examples/qmlvideo.qdoc
+++ b/doc/src/examples/qmlvideo.qdoc
@@ -55,13 +55,13 @@ The \l{video/qmlvideo/qml/qmlvideo/main.qml} file creates a UI which includes
 the following elements:
 
 \list
-    \o Two \l{video/qmlvideo/qml/qmlvideo/Button.qml}{Button} elements, each
+    \li Two \l{video/qmlvideo/qml/qmlvideo/Button.qml}{Button} elements, each
        of which displays a filename, and can be used to launch a
        \l{video/qmlvideo/qml/qmlvideo/FileBrowser.qml}{FileBrowser}
-    \o An exit \l{video/qmlvideo/qml/qmlvideo/Button.qml}{Button}
-    \o A \l{video/qmlvideo/qml/qmlvideo/SceneSelectionPanel.qml}{SceneSelectionPanel},
+    \li An exit \l{video/qmlvideo/qml/qmlvideo/Button.qml}{Button}
+    \li A \l{video/qmlvideo/qml/qmlvideo/SceneSelectionPanel.qml}{SceneSelectionPanel},
        which is a flickable list displaying the available scenes
-    \o At the lower left, an item which displays the QML repainting rate - the
+    \li At the lower left, an item which displays the QML repainting rate - the
        upper number is the instantaneous frame rate and the lower number is the
        average over the past second.
 \endlist
diff --git a/doc/src/examples/qmlvideofx.qdoc b/doc/src/examples/qmlvideofx.qdoc
index 0eab75e..29d4425 100644
--- a/doc/src/examples/qmlvideofx.qdoc
+++ b/doc/src/examples/qmlvideofx.qdoc
@@ -120,14 +120,14 @@ In this application, the usage of the \l{ShaderEffect} and \l{VideoOutput}
 elements is a bit more complicated, for the following reasons:
 
 \list
-    \o Each effect can be applied to either a \l{VideoOutput} or an
+    \li Each effect can be applied to either a \l{VideoOutput} or an
        \l{Image} item, so the type of the source item must be abstracted away
        from the effect implementation
-    \o For some effects (such as the edge detection and glow examples shown in
+    \li For some effects (such as the edge detection and glow examples shown in
        the screenshots above), the transformation is applied only to pixels to
        the left of a dividing line - this allows the effect to be easily
        compared with the untransformed image on the right
-    \o Most effects have one or more parameters which can be modified by the
+    \li Most effects have one or more parameters which can be modified by the
        user - these are controlled by sliders in the UI which are connected
        to uniform values passed into the GLSL code
 \endlist
diff --git a/doc/src/multimedia.qdoc b/doc/src/multimedia.qdoc
index 7842672..50c0278 100644
--- a/doc/src/multimedia.qdoc
+++ b/doc/src/multimedia.qdoc
@@ -40,15 +40,15 @@
 Qt Multimedia offers APIs for doing many multimedia related tasks:
 
 \list
-\o Accessing raw audio devices for input and output
-\o Play low latency sound effects
-\o Play media files in playlists (like compressed audio, or video files)
-\o Record audio and compress it
-\o Tune and listen to radio stations, and receive radio program information
-\o Use a camera, including viewfinder, image capture, and movie recording
-\o Play 3D positional audio
-\o Decode audio media files into memory for processing
-\o Accessing video frames or audio buffers as they are played or recorded
+\li Accessing raw audio devices for input and output
+\li Play low latency sound effects
+\li Play media files in playlists (like compressed audio, or video files)
+\li Record audio and compress it
+\li Tune and listen to radio stations, and receive radio program information
+\li Use a camera, including viewfinder, image capture, and movie recording
+\li Play 3D positional audio
+\li Decode audio media files into memory for processing
+\li Accessing video frames or audio buffers as they are played or recorded
 \endlist
 
 \section2 Multimedia Components
@@ -57,10 +57,10 @@ All of these tasks can be broadly broken down into four main areas.  More inform
 (including background information and class references) are available here:
 
 \list
-\o \l {Audio Overview}
-\o \l {Video Overview}
-\o \l {Camera Overview}
-\o \l {Radio Overview}
+\li \l {Audio Overview}
+\li \l {Video Overview}
+\li \l {Camera Overview}
+\li \l {Radio Overview}
 \endlist
 
 \section2 Multimedia recipes
@@ -68,75 +68,75 @@ For some quick recipes for specific tasks, look at the overviews above and consu
 
 \table 70%
     \header
-        \o Use case
-        \o Examples
-        \o QML Classes
-        \o C++ Classes
+        \li Use case
+        \li Examples
+        \li QML Classes
+        \li C++ Classes
     \row
-        \o Playing a sound effect
-        \o TBD
-        \o \l SoundEffect
-        \o QSoundEffect
+        \li Playing a sound effect
+        \li TBD
+        \li \l SoundEffect
+        \li QSoundEffect
     \row
-        \o Playing low latency audio
-        \o \l{audiooutput}, \l{spectrum}
-        \o
-        \o QAudioOutput
+        \li Playing low latency audio
+        \li \l{audiooutput}, \l{spectrum}
+        \li
+        \li QAudioOutput
     \row
-        \o Playing encoded audio (MP3, AAC etc)
-        \o \l{player}
-        \o \l Audio, \l {MediaPlayer}
-        \o QMediaPlayer
+        \li Playing encoded audio (MP3, AAC etc)
+        \li \l{player}
+        \li \l Audio, \l {MediaPlayer}
+        \li QMediaPlayer
     \row
-        \o Accessing raw audio input data
-        \o \l{spectrum}, \l audioinput
-        \o
-        \o QAudioInput
+        \li Accessing raw audio input data
+        \li \l{spectrum}, \l audioinput
+        \li
+        \li QAudioInput
     \row
-        \o Recording encoded audio data
-        \o \l audiorecorder
-        \o
-        \o QAudioRecorder
+        \li Recording encoded audio data
+        \li \l audiorecorder
+        \li
+        \li QAudioRecorder
     \row
-        \o Discovering raw audio devices
-        \o \l audiodevices
-        \o
-        \o QAudioDeviceInfo
+        \li Discovering raw audio devices
+        \li \l audiodevices
+        \li
+        \li QAudioDeviceInfo
     \row
-        \o Video Playback
-        \o \l {player}, \l {video/qmlvideo}{qmlvideo}, \l{video/qmlvideofx}{qmlvideofx}
-        \o \l MediaPlayer, \l VideoOutput, \l Video
-        \o QMediaPlayer, QVideoWidget, QGraphicsVideoItem
+        \li Video Playback
+        \li \l {player}, \l {video/qmlvideo}{qmlvideo}, \l{video/qmlvideofx}{qmlvideofx}
+        \li \l MediaPlayer, \l VideoOutput, \l Video
+        \li QMediaPlayer, QVideoWidget, QGraphicsVideoItem
     \row
-        \o Video Processing
-        \o \l {video/qmlvideofx}{qmlvideofx}
-        \o \l {MediaPlayer}, \l VideoOutput
-        \o QMediaPlayer, QAbstractVideoSurface, QVideoFrame
+        \li Video Processing
+        \li \l {video/qmlvideofx}{qmlvideofx}
+        \li \l {MediaPlayer}, \l VideoOutput
+        \li QMediaPlayer, QAbstractVideoSurface, QVideoFrame
     \row
-        \o Listening to the radio
-        \o \l radio, \l declarative-radio
-        \o \l Radio, \l RadioData
-        \o QRadioTuner, QRadioData
+        \li Listening to the radio
+        \li \l radio, \l declarative-radio
+        \li \l Radio, \l RadioData
+        \li QRadioTuner, QRadioData
     \row
-        \o Accessing camera viewfinder
-        \o \l camera, \l declarative-camera
-        \o \l Camera, \l VideoOutput
-        \o QCamera, QVideoWidget, QGraphicsVideoItem
+        \li Accessing camera viewfinder
+        \li \l camera, \l declarative-camera
+        \li \l Camera, \l VideoOutput
+        \li QCamera, QVideoWidget, QGraphicsVideoItem
     \row
-        \o Viewfinder processing
-        \o
-        \o \l Camera, \l VideoOutput
-        \o QCamera, QAbstractVideoSurface, QVideoFrame
+        \li Viewfinder processing
+        \li
+        \li \l Camera, \l VideoOutput
+        \li QCamera, QAbstractVideoSurface, QVideoFrame
     \row
-        \o Capturing photos
-        \o \l camera, \l declarative-camera
-        \o \l Camera
-        \o QCamera, QCameraImageCapture
+        \li Capturing photos
+        \li \l camera, \l declarative-camera
+        \li \l Camera
+        \li QCamera, QCameraImageCapture
     \row
-        \o Capturing movies
-        \o \l camera, \l declarative-camera
-        \o \l Camera
-        \o QCamera, QMediaRecorder
+        \li Capturing movies
+        \li \l camera, \l declarative-camera
+        \li \l Camera
+        \li QCamera, QMediaRecorder
 \endtable
 
 \section1 Multimedia Limitations
diff --git a/doc/src/multimediabackend.qdoc b/doc/src/multimediabackend.qdoc
index 28684dc..bfa41a5 100644
--- a/doc/src/multimediabackend.qdoc
+++ b/doc/src/multimediabackend.qdoc
@@ -55,11 +55,11 @@ Basically, the idea is that to use the Multimedia API you would use these
 three classes or classes derived from them as follows
 
     \list
-    \o \l QMediaServiceProvider is used by the top level client class to request a service. The top level class knowing what kind of service it needs.
+    \li \l QMediaServiceProvider is used by the top level client class to request a service. The top level class knowing what kind of service it needs.
 
-    \o \l QMediaService provides a service and when asked by the top level object, say a component, will return a QMediaControl object.
+    \li \l QMediaService provides a service and when asked by the top level object, say a component, will return a QMediaControl object.
 
-    \o \l QMediaControl allows the control of the service using a known interface.
+    \li \l QMediaControl allows the control of the service using a known interface.
     \endlist
 
 Consider a developer creating, for example, a media player class called MyPlayer.
diff --git a/doc/src/plugins/qml-multimedia.qdoc b/doc/src/plugins/qml-multimedia.qdoc
index b8d46e2..e0e721a 100644
--- a/doc/src/plugins/qml-multimedia.qdoc
+++ b/doc/src/plugins/qml-multimedia.qdoc
@@ -76,73 +76,73 @@
     Much of the getting / setting of \l Audio parameters is done through properties. These include
     \table 70%
         \header
-            \o Property
-            \o Description
+            \li Property
+            \li Description
         \row
-            \o \l {Audio::source}{source}
-            \o The source URL of the media.
+            \li \l {Audio::source}{source}
+            \li The source URL of the media.
         \row
-            \o \l {Audio::autoLoad}{autoLoad}
-            \o Indicates if loading of media should begin immediately.
+            \li \l {Audio::autoLoad}{autoLoad}
+            \li Indicates if loading of media should begin immediately.
         \row
-            \o \l{Audio::playing}{playing}
-            \o Indicates that the media is playing.
+            \li \l{Audio::playing}{playing}
+            \li Indicates that the media is playing.
         \row
-            \o \l {Audio::paused}{paused}
-            \o The media is paused.
+            \li \l {Audio::paused}{paused}
+            \li The media is paused.
         \row
-            \o \l{Audio::status}{status}
-            \o The status of media loading.
+            \li \l{Audio::status}{status}
+            \li The status of media loading.
         \row
-            \o \l{Audio::duration}{duration}
-            \o Amount of time in milliseconds the media will play.
+            \li \l{Audio::duration}{duration}
+            \li Amount of time in milliseconds the media will play.
         \row
-            \o \l{Audio::position}{position}
-            \o Current position in the media in milliseconds of play.
+            \li \l{Audio::position}{position}
+            \li Current position in the media in milliseconds of play.
         \row
-            \o \l{Audio::volume}{volume}
-            \o Audio output volume: from 0.0 (silent) to 1.0 (maximum)
+            \li \l{Audio::volume}{volume}
+            \li Audio output volume: from 0.0 (silent) to 1.0 (maximum)
         \row
-            \o \l{Audio::muted}{muted}
-            \o Indicates audio is muted.
+            \li \l{Audio::muted}{muted}
+            \li Indicates audio is muted.
         \row
-            \o \l{Audio::bufferProgress}{bufferProgress}
-            \o Indicates how full the data buffer is: 0.0 (empty) to 1.0 (full).
+            \li \l{Audio::bufferProgress}{bufferProgress}
+            \li Indicates how full the data buffer is: 0.0 (empty) to 1.0 (full).
         \row
-            \o \l{Audio::seekable}{seekable}
-            \o Indicates whether the audio position can be changed.
+            \li \l{Audio::seekable}{seekable}
+            \li Indicates whether the audio position can be changed.
         \row
-            \o \l{Audio::playbackRate}{playbackRate}
-            \o The rate at which audio is played at as a multiple of the normal rate.
+            \li \l{Audio::playbackRate}{playbackRate}
+            \li The rate at which audio is played at as a multiple of the normal rate.
         \row
-            \o \l{Audio::error}{error}
-            \o An error code for the error state including NoError
+            \li \l{Audio::error}{error}
+            \li An error code for the error state including NoError
         \row
-            \o \l{Audio::errorString}{errorString}
-            \o A description of the current error condition.
+            \li \l{Audio::errorString}{errorString}
+            \li A description of the current error condition.
     \endtable
 
     The set of signals available allow the developer to create custom behavior when the following events occur,
 
     \table 70%
         \header
-            \o Signal
-            \o Description
+            \li Signal
+            \li Description
         \row
-            \o \l{Audio::onStarted}{onStarted}
-            \o Called when playback has been started.
+            \li \l{Audio::onStarted}{onStarted}
+            \li Called when playback has been started.
         \row
-            \o \l{Audio::onResumed}{onResumed}
-            \o Called when playback is resumed from the paused state.
+            \li \l{Audio::onResumed}{onResumed}
+            \li Called when playback is resumed from the paused state.
         \row
-            \o \l{Audio::onPaused}{onPaused}
-            \o Called when playback is paused.
+            \li \l{Audio::onPaused}{onPaused}
+            \li Called when playback is paused.
         \row
-            \o \l{Audio::onStopped}{onStopped}
-            \o Called when playback is stopped.
+            \li \l{Audio::onStopped}{onStopped}
+            \li Called when playback is stopped.
         \row
-            \o \l{Audio::onError}{onError}
-            \o Called when the specified error occurs.
+            \li \l{Audio::onError}{onError}
+            \li Called when the specified error occurs.
     \endtable
 
     \section2 Camera
diff --git a/doc/src/radiooverview.qdoc b/doc/src/radiooverview.qdoc
index 057ac5c..467ebfb 100644
--- a/doc/src/radiooverview.qdoc
+++ b/doc/src/radiooverview.qdoc
@@ -85,8 +85,8 @@ current frequency inside the band.
 \section2 QML Elements
 
 \list
-    \o \l Radio
-    \o \l RadioData
+    \li \l Radio
+    \li \l RadioData
 \endlist
 
 */
diff --git a/doc/src/videooverview.qdoc b/doc/src/videooverview.qdoc
index 8a8347f..b8a1dd5 100644
--- a/doc/src/videooverview.qdoc
+++ b/doc/src/videooverview.qdoc
@@ -110,15 +110,15 @@ There are both C++ and QML examples available.
 
 C++ Examples:
 \list
-    \o \l video
-    \o \l videographicsitem
-    \o \l videowidget
+    \li \l video
+    \li \l videographicsitem
+    \li \l videowidget
 \endlist
 
 QML Examples:
 \list
-    \o \l qmlvideo
-    \o \l qmlvideofx
+    \li \l qmlvideo
+    \li \l qmlvideofx
 \endlist
 
 \section1 Reference Documentation
@@ -130,9 +130,9 @@ QML Examples:
 \section2 QML Elements
 
 \list
-    \o \l MediaPlayer
-    \o \l VideoOutput
-    \o \l Video
+    \li \l MediaPlayer
+    \li \l VideoOutput
+    \li \l Video
 \endlist
 
 */
diff --git a/src/imports/audioengine/qdeclarative_attenuationmodel_p.cpp b/src/imports/audioengine/qdeclarative_attenuationmodel_p.cpp
index 1b7e33e..4d2fca3 100644
--- a/src/imports/audioengine/qdeclarative_attenuationmodel_p.cpp
+++ b/src/imports/audioengine/qdeclarative_attenuationmodel_p.cpp
@@ -99,7 +99,7 @@ void QDeclarativeAttenuationModel::setName(const QString& name)
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     AttenuationModelLinear must be defined inside AudioEngine.
 
@@ -231,7 +231,7 @@ qreal QDeclarativeAttenuationModelLinear::calculateGain(const QVector3D &listene
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     AttenuationModelInverse must be defined inside AudioEngine.
 
diff --git a/src/imports/audioengine/qdeclarative_audiocategory_p.cpp b/src/imports/audioengine/qdeclarative_audiocategory_p.cpp
index 29a445a..e345417 100644
--- a/src/imports/audioengine/qdeclarative_audiocategory_p.cpp
+++ b/src/imports/audioengine/qdeclarative_audiocategory_p.cpp
@@ -55,7 +55,7 @@ QT_USE_NAMESPACE
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     AudioCategory element can be accessed through QtAudioEngine1::AudioEngine::categories with its
     unique name and must be defined inside AudioEngine.
diff --git a/src/imports/audioengine/qdeclarative_audioengine_p.cpp b/src/imports/audioengine/qdeclarative_audioengine_p.cpp
index 1424c69..7c025a5 100644
--- a/src/imports/audioengine/qdeclarative_audioengine_p.cpp
+++ b/src/imports/audioengine/qdeclarative_audioengine_p.cpp
@@ -64,7 +64,7 @@ QT_USE_NAMESPACE
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     \qml
     import QtQuick 2.0
diff --git a/src/imports/audioengine/qdeclarative_audiolistener_p.cpp b/src/imports/audioengine/qdeclarative_audiolistener_p.cpp
index 96fcce2..ea26905 100644
--- a/src/imports/audioengine/qdeclarative_audiolistener_p.cpp
+++ b/src/imports/audioengine/qdeclarative_audiolistener_p.cpp
@@ -56,7 +56,7 @@ QT_USE_NAMESPACE
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     AudioListener will have only one global instance and you can either access it through the
     listener property of AudioEngine:
diff --git a/src/imports/audioengine/qdeclarative_audiosample_p.cpp b/src/imports/audioengine/qdeclarative_audiosample_p.cpp
index 83c8185..4842704 100644
--- a/src/imports/audioengine/qdeclarative_audiosample_p.cpp
+++ b/src/imports/audioengine/qdeclarative_audiosample_p.cpp
@@ -58,7 +58,7 @@ QT_USE_NAMESPACE
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     AudioSample element can be accessed through QtAudioEngine1::AudioEngine::samples with its unique
     name and must be defined inside AudioEngine.
diff --git a/src/imports/audioengine/qdeclarative_playvariation_p.cpp b/src/imports/audioengine/qdeclarative_playvariation_p.cpp
index edf2a87..f461706 100644
--- a/src/imports/audioengine/qdeclarative_playvariation_p.cpp
+++ b/src/imports/audioengine/qdeclarative_playvariation_p.cpp
@@ -60,7 +60,7 @@ QT_USE_NAMESPACE
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     PlayVariation must be defined inside \l Sound element.
 
diff --git a/src/imports/audioengine/qdeclarative_sound_p.cpp b/src/imports/audioengine/qdeclarative_sound_p.cpp
index 81b3ec8..37980c1 100644
--- a/src/imports/audioengine/qdeclarative_sound_p.cpp
+++ b/src/imports/audioengine/qdeclarative_sound_p.cpp
@@ -147,7 +147,7 @@ void QDeclarativeSoundCone::componentComplete()
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     Sound element can be accessed through QtAudioEngine1::AudioEngine::sounds with its unique name
     and must be defined inside AudioEngine.
@@ -232,8 +232,8 @@ void QDeclarativeSound::componentComplete()
     This property holds the playType.  It can be one of:
 
     \list
-    \o Random - randomly picks up a play variation when playback is triggered
-    \o Sequential - plays each variation in sequence when playback is triggered
+    \li Random - randomly picks up a play variation when playback is triggered
+    \li Sequential - plays each variation in sequence when playback is triggered
     \endlist
 
     The default value is Random.
diff --git a/src/imports/audioengine/qdeclarative_soundinstance_p.cpp b/src/imports/audioengine/qdeclarative_soundinstance_p.cpp
index 0ca9d19..38cffae 100644
--- a/src/imports/audioengine/qdeclarative_soundinstance_p.cpp
+++ b/src/imports/audioengine/qdeclarative_soundinstance_p.cpp
@@ -59,7 +59,7 @@ QT_USE_NAMESPACE
     \inherits Item
     \preliminary
 
-    This element is part of the \bold{QtAudioEngine 1.0} module.
+    This element is part of the \b{QtAudioEngine 1.0} module.
 
     There are two ways to create SoundInstance objects. You can obtain it by calling newInstance
     method of Sound element:
@@ -298,9 +298,9 @@ void QDeclarativeSoundInstance::dropInstance()
     This property holds the current playback state. It can be one of:
 
     \list
-    \o StopppedState
-    \o PlayingState
-    \o PausedState
+    \li StopppedState
+    \li PlayingState
+    \li PausedState
     \endlist
 */
 QDeclarativeSoundInstance::State QDeclarativeSoundInstance::state() const
diff --git a/src/imports/multimedia/Video.qml b/src/imports/multimedia/Video.qml
index b9d01ff..bef20a9 100644
--- a/src/imports/multimedia/Video.qml
+++ b/src/imports/multimedia/Video.qml
@@ -95,10 +95,10 @@ Item {
         area.
 
         \list
-        \o VideoOutput.Stretch - the video is scaled to fit
-        \o VideoOutput.PreserveAspectFit - the video is scaled uniformly to fit without
+        \li VideoOutput.Stretch - the video is scaled to fit
+        \li VideoOutput.PreserveAspectFit - the video is scaled uniformly to fit without
             cropping
-        \o VideoOuput.PreserveAspectCrop - the video is scaled uniformly to fill, cropping
+        \li VideoOuput.PreserveAspectCrop - the video is scaled uniformly to fill, cropping
             if necessary
         \endlist
 
@@ -127,9 +127,9 @@ Item {
         This read only property indicates the playback state of the media.
 
         \list
-        \o MediaPlayer.PlayingState - the media is playing
-        \o MediaPlayer.PausedState - the media is paused
-        \o MediaPlayer.StoppedState - the media is stopped
+        \li MediaPlayer.PlayingState - the media is playing
+        \li MediaPlayer.PausedState - the media is paused
+        \li MediaPlayer.StoppedState - the media is stopped
         \endlist
 
         The default state is MediaPlayer.StoppedState.
@@ -171,14 +171,14 @@ Item {
         This property holds the error state of the video.  It can be one of:
 
         \list
-        \o NoError - there is no current error.
-        \o ResourceError - the video cannot be played due to a problem
+        \li NoError - there is no current error.
+        \li ResourceError - the video cannot be played due to a problem
             allocating resources.
-        \o FormatError - the video format is not supported.
-        \o NetworkError - the video cannot be played due to network issues.
-        \o AccessDenied - the video cannot be played due to insufficient
+        \li FormatError - the video format is not supported.
+        \li NetworkError - the video cannot be played due to network issues.
+        \li AccessDenied - the video cannot be played due to insufficient
             permissions.
-        \o ServiceMissing -  the video cannot be played because the media
+        \li ServiceMissing -  the video cannot be played because the media
             service could not be
         instantiated.
         \endlist
@@ -252,15 +252,15 @@ Item {
         This property holds the status of media loading. It can be one of:
 
         \list
-        \o NoMedia - no media has been set.
-        \o Loading - the media is currently being loaded.
-        \o Loaded - the media has been loaded.
-        \o Buffering - the media is buffering data.
-        \o Stalled - playback has been interrupted while the media is buffering data.
-        \o Buffered - the media has buffered data.
-        \o EndOfMedia - the media has played to the end.
-        \o InvalidMedia - the media cannot be played.
-        \o UnknownStatus - the status of the media cannot be determined.
+        \li NoMedia - no media has been set.
+        \li Loading - the media is currently being loaded.
+        \li Loaded - the media has been loaded.
+        \li Buffering - the media is buffering data.
+        \li Stalled - playback has been interrupted while the media is buffering data.
+        \li Buffered - the media has buffered data.
+        \li EndOfMedia - the media has played to the end.
+        \li InvalidMedia - the media cannot be played.
+        \li UnknownStatus - the status of the media cannot be determined.
         \endlist
     */
     property alias status:          player.status
diff --git a/src/imports/multimedia/qdeclarativeaudio.cpp b/src/imports/multimedia/qdeclarativeaudio.cpp
index 0cc21f2..6d56610 100644
--- a/src/imports/multimedia/qdeclarativeaudio.cpp
+++ b/src/imports/multimedia/qdeclarativeaudio.cpp
@@ -52,7 +52,7 @@ QT_BEGIN_NAMESPACE
     \inqmlmodule QtMultimedia 5
     \ingroup multimedia_qml
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     \qml
     import QtQuick 2.0
@@ -111,7 +111,7 @@ QT_BEGIN_NAMESPACE
     \inqmlmodule QtMultimedia 5
     \ingroup multimedia_qml
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     \qml
     import QtQuick 2.0
@@ -256,15 +256,15 @@ void QDeclarativeAudio::stop()
     This property holds the status of media loading. It can be one of:
 
     \list
-    \o NoMedia - no media has been set.
-    \o Loading - the media is currently being loaded.
-    \o Loaded - the media has been loaded.
-    \o Buffering - the media is buffering data.
-    \o Stalled - playback has been interrupted while the media is buffering data.
-    \o Buffered - the media has buffered data.
-    \o EndOfMedia - the media has played to the end.
-    \o InvalidMedia - the media cannot be played.
-    \o UnknownStatus - the status of the media is unknown.
+    \li NoMedia - no media has been set.
+    \li Loading - the media is currently being loaded.
+    \li Loaded - the media has been loaded.
+    \li Buffering - the media is buffering data.
+    \li Stalled - playback has been interrupted while the media is buffering data.
+    \li Buffered - the media has buffered data.
+    \li EndOfMedia - the media has played to the end.
+    \li InvalidMedia - the media cannot be played.
+    \li UnknownStatus - the status of the media is unknown.
     \endlist
 */
 
@@ -280,9 +280,9 @@ QDeclarativeAudio::Status QDeclarativeAudio::status() const
     This property holds the state of media playback. It can be one of:
 
     \list
-    \o PlayingState - the media is currently playing.
-    \o PausedState - playback of the media has been suspended.
-    \o StoppedState - playback of the media is yet to begin.
+    \li PlayingState - the media is currently playing.
+    \li PausedState - playback of the media has been suspended.
+    \li StoppedState - playback of the media is yet to begin.
     \endlist
 */
 
@@ -376,12 +376,12 @@ bool QDeclarativeAudio::hasVideo() const
     This property holds the error state of the audio.  It can be one of:
 
     \list
-    \o NoError - there is no current error.
-    \o ResourceError - the audio cannot be played due to a problem allocating resources.
-    \o FormatError - the audio format is not supported.
-    \o NetworkError - the audio cannot be played due to network issues.
-    \o AccessDenied - the audio cannot be played due to insufficient permissions.
-    \o ServiceMissing -  the audio cannot be played because the media service could not be
+    \li NoError - there is no current error.
+    \li ResourceError - the audio cannot be played due to a problem allocating resources.
+    \li FormatError - the audio format is not supported.
+    \li NetworkError - the audio cannot be played due to network issues.
+    \li AccessDenied - the audio cannot be played due to insufficient permissions.
+    \li ServiceMissing -  the audio cannot be played because the media service could not be
     instantiated.
     \endlist
 */
diff --git a/src/imports/multimedia/qdeclarativeaudio_4.cpp b/src/imports/multimedia/qdeclarativeaudio_4.cpp
index 094a264..d157cf7 100644
--- a/src/imports/multimedia/qdeclarativeaudio_4.cpp
+++ b/src/imports/multimedia/qdeclarativeaudio_4.cpp
@@ -52,7 +52,7 @@ QT_BEGIN_NAMESPACE
 
     \ingroup multimedia_qml
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     \qml
     import QtQuick 2.0
@@ -215,15 +215,15 @@ void QDeclarativeAudio_4::stop()
     This property holds the status of media loading. It can be one of:
 
     \list
-    \o NoMedia - no media has been set.
-    \o Loading - the media is currently being loaded.
-    \o Loaded - the media has been loaded.
-    \o Buffering - the media is buffering data.
-    \o Stalled - playback has been interrupted while the media is buffering data.
-    \o Buffered - the media has buffered data.
-    \o EndOfMedia - the media has played to the end.
-    \o InvalidMedia - the media cannot be played.
-    \o UnknownStatus - the status of the media is unknown.
+    \li NoMedia - no media has been set.
+    \li Loading - the media is currently being loaded.
+    \li Loaded - the media has been loaded.
+    \li Buffering - the media is buffering data.
+    \li Stalled - playback has been interrupted while the media is buffering data.
+    \li Buffered - the media has buffered data.
+    \li EndOfMedia - the media has played to the end.
+    \li InvalidMedia - the media cannot be played.
+    \li UnknownStatus - the status of the media is unknown.
     \endlist
 */
 
@@ -309,12 +309,12 @@ bool QDeclarativeAudio_4::hasVideo() const
     This property holds the error state of the audio.  It can be one of:
 
     \list
-    \o NoError - there is no current error.
-    \o ResourceError - the audio cannot be played due to a problem allocating resources.
-    \o FormatError - the audio format is not supported.
-    \o NetworkError - the audio cannot be played due to network issues.
-    \o AccessDenied - the audio cannot be played due to insufficient permissions.
-    \o ServiceMissing -  the audio cannot be played because the media service could not be
+    \li NoError - there is no current error.
+    \li ResourceError - the audio cannot be played due to a problem allocating resources.
+    \li FormatError - the audio format is not supported.
+    \li NetworkError - the audio cannot be played due to network issues.
+    \li AccessDenied - the audio cannot be played due to insufficient permissions.
+    \li ServiceMissing -  the audio cannot be played because the media service could not be
     instantiated.
     \endlist
 */
diff --git a/src/imports/multimedia/qdeclarativecamera.cpp b/src/imports/multimedia/qdeclarativecamera.cpp
index f7c247f..b6d2583 100644
--- a/src/imports/multimedia/qdeclarativecamera.cpp
+++ b/src/imports/multimedia/qdeclarativecamera.cpp
@@ -77,7 +77,7 @@ void QDeclarativeCamera::_q_updateState(QCamera::State state)
 
     \inherits Item
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     You can use the \c Camera element to capture images and movies from a camera, and manipulate
     the capture and processing settings that get applied to the images.  To display the
@@ -121,19 +121,19 @@ void QDeclarativeCamera::_q_updateState(QCamera::State state)
     across a few different child properties of Camera.
 
     \table
-    \header \o Property \o Description
-    \row \o \l {CameraCapture} {imageCapture}
-         \o Methods and properties for capturing still images.
-    \row \o \l {CameraRecorder} {videoRecording}
-         \o Methods and properties for capturing movies.
-    \row \o \l {CameraExposure} {exposure}
-         \o Methods and properties for adjusting exposure (aperture, shutter speed etc).
-    \row \o \l {CameraFocus} {focus}
-         \o Methods and properties for adjusting focus and providing feedback on autofocus progress.
-    \row \o \l {CameraFlash} {flash}
-         \o Methods and properties for controlling the camera flash.
-    \row \o \l {CameraImageProcessing} {imageProcessing}
-         \o Methods and properties for adjusting camera image processing parameters.
+    \header \li Property \li Description
+    \row \li \l {CameraCapture} {imageCapture}
+         \li Methods and properties for capturing still images.
+    \row \li \l {CameraRecorder} {videoRecording}
+         \li Methods and properties for capturing movies.
+    \row \li \l {CameraExposure} {exposure}
+         \li Methods and properties for adjusting exposure (aperture, shutter speed etc).
+    \row \li \l {CameraFocus} {focus}
+         \li Methods and properties for adjusting focus and providing feedback on autofocus progress.
+    \row \li \l {CameraFlash} {flash}
+         \li Methods and properties for controlling the camera flash.
+    \row \li \l {CameraImageProcessing} {imageProcessing}
+         \li Methods and properties for adjusting camera image processing parameters.
     \endtable
 
     Basic camera state management, error reporting, and simple zoom properties are
@@ -221,12 +221,12 @@ QString QDeclarativeCamera::errorString() const
     \qmlproperty enumeration QtMultimedia5::Camera::captureMode
 
     \table
-    \header \o Value \o Description
-    \row \o CaptureStillImage
-         \o Prepares the camera element for capturing still images.
+    \header \li Value \li Description
+    \row \li CaptureStillImage
+         \li Prepares the camera element for capturing still images.
 
-    \row \o CaptureVideo
-         \o Prepares the camera element for capturing video.
+    \row \li CaptureVideo
+         \li Prepares the camera element for capturing video.
 
     \endtable
 
@@ -248,9 +248,9 @@ void QDeclarativeCamera::setCaptureMode(QDeclarativeCamera::CaptureMode mode)
     The current state of the camera object.
 
     \table
-    \header \o Value \o Description
-    \row \o UnloadedState
-         \o The initial camera state, with the camera not loaded.
+    \header \li Value \li Description
+    \row \li UnloadedState
+         \li The initial camera state, with the camera not loaded.
            The camera capabilities (with the exception of supported capture modes)
            are unknown. This state saves the most power, but takes the longest
            time to be ready for capture.
@@ -259,16 +259,16 @@ void QDeclarativeCamera::setCaptureMode(QDeclarativeCamera::CaptureMode mode)
            you can still set the camera capture settings like codec,
            resolution, or frame rate.
 
-    \row \o LoadedState
-         \o The camera is loaded and ready to be configured.
+    \row \li LoadedState
+         \li The camera is loaded and ready to be configured.
 
            In the Idle state you can query camera capabilities,
            set capture resolution, codecs, and so on.
 
            The viewfinder is not active in the loaded state.
 
-    \row \o ActiveState
-          \o In the active state the viewfinder frames are available
+    \row \li ActiveState
+          \li In the active state the viewfinder frames are available
              and the camera is ready for capture.
     \endtable
 
@@ -331,18 +331,18 @@ void QDeclarativeCamera::stop()
     The overall status for all the requested camera locks.
 
     \table
-    \header \o Value \o Description
-    \row \o Unlocked
-        \o The application is not interested in camera settings value.
+    \header \li Value \li Description
+    \row \li Unlocked
+        \li The application is not interested in camera settings value.
         The camera may keep this parameter without changes, this is common with camera focus,
         or adjust exposure and white balance constantly to keep the viewfinder image nice.
 
-    \row \o Searching
-        \o The application has requested the camera focus, exposure or white balance lock with
+    \row \li Searching
+        \li The application has requested the camera focus, exposure or white balance lock with
         searchAndLock(). This state indicates the camera is focusing or calculating exposure and white balance.
 
-    \row \o Locked
-        \o The camera focus, exposure or white balance is locked.
+    \row \li Locked
+        \li The camera focus, exposure or white balance is locked.
         The camera is ready to capture, application may check the exposure parameters.
 
         The locked state usually means the requested parameter stays the same,
@@ -357,18 +357,18 @@ void QDeclarativeCamera::stop()
     The overall status for all the requested camera locks.
 
     \table
-    \header \o Value \o Description
-    \row \o Unlocked
-        \o The application is not interested in camera settings value.
+    \header \li Value \li Description
+    \row \li Unlocked
+        \li The application is not interested in camera settings value.
         The camera may keep this parameter without changes, this is common with camera focus,
         or adjust exposure and white balance constantly to keep the viewfinder image nice.
 
-    \row \o Searching
-        \o The application has requested the camera focus, exposure or white balance lock with
+    \row \li Searching
+        \li The application has requested the camera focus, exposure or white balance lock with
         searchAndLock(). This state indicates the camera is focusing or calculating exposure and white balance.
 
-    \row \o Locked
-        \o The camera focus, exposure or white balance is locked.
+    \row \li Locked
+        \li The camera focus, exposure or white balance is locked.
         The camera is ready to capture, application may check the exposure parameters.
 
         The locked state usually means the requested parameter stays the same,
@@ -471,12 +471,12 @@ void QDeclarativeCamera::setDigitalZoom(qreal value)
     values defined below, and a descriptive string value is available in \a errorString.
 
     \table
-    \header \o Value \o Description
-    \row \o NoError \o No errors have occurred.
-    \row \o CameraError \o An error has occurred.
-    \row \o InvalidRequestError \o System resource doesn't support requested functionality.
-    \row \o ServiceMissingError \o No camera service available.
-    \row \o NotSupportedFeatureError \o The feature is not supported.
+    \header \li Value \li Description
+    \row \li NoError \li No errors have occurred.
+    \row \li CameraError \li An error has occurred.
+    \row \li InvalidRequestError \li System resource doesn't support requested functionality.
+    \row \li ServiceMissingError \li No camera service available.
+    \row \li NotSupportedFeatureError \li The feature is not supported.
     \endtable
 */
 
diff --git a/src/imports/multimedia/qdeclarativecameraexposure.cpp b/src/imports/multimedia/qdeclarativecameraexposure.cpp
index 693f3ce..dc433ec 100644
--- a/src/imports/multimedia/qdeclarativecameraexposure.cpp
+++ b/src/imports/multimedia/qdeclarativecameraexposure.cpp
@@ -51,7 +51,7 @@ QT_BEGIN_NAMESPACE
     \ingroup camera_qml
     \inqmlmodule QtMultimedia 5
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     This element allows you to adjust exposure related settings
     like aperture and shutter speed, metering and ISO speed.
@@ -291,19 +291,19 @@ void QDeclarativeCameraExposure::setAutoIsoSensitivity()
     Set the camera exposure mode to one of the following:
 
     \table
-    \header \o Value \o Description
-    \row \o Camera.ExposureManual        \o Manual mode.
-    \row \o Camera.ExposureAuto          \o Automatic mode.
-    \row \o Camera.ExposureNight         \o Night mode.
-    \row \o Camera.ExposureBacklight     \o Backlight exposure mode.
-    \row \o Camera.ExposureSpotlight     \o Spotlight exposure mode.
-    \row \o Camera.ExposureSports        \o Spots exposure mode.
-    \row \o Camera.ExposureSnow          \o Snow exposure mode.
-    \row \o Camera.ExposureBeach         \o Beach exposure mode.
-    \row \o Camera.ExposureLargeAperture \o Use larger aperture with small depth of field.
-    \row \o Camera.ExposureSmallAperture \o Use smaller aperture.
-    \row \o Camera.ExposurePortrait      \o Portrait exposure mode.
-    \row \o Camera.ExposureModeVendor    \o The base value for device specific exposure modes.
+    \header \li Value \li Description
+    \row \li Camera.ExposureManual        \li Manual mode.
+    \row \li Camera.ExposureAuto          \li Automatic mode.
+    \row \li Camera.ExposureNight         \li Night mode.
+    \row \li Camera.ExposureBacklight     \li Backlight exposure mode.
+    \row \li Camera.ExposureSpotlight     \li Spotlight exposure mode.
+    \row \li Camera.ExposureSports        \li Spots exposure mode.
+    \row \li Camera.ExposureSnow          \li Snow exposure mode.
+    \row \li Camera.ExposureBeach         \li Beach exposure mode.
+    \row \li Camera.ExposureLargeAperture \li Use larger aperture with small depth of field.
+    \row \li Camera.ExposureSmallAperture \li Use smaller aperture.
+    \row \li Camera.ExposurePortrait      \li Portrait exposure mode.
+    \row \li Camera.ExposureModeVendor    \li The base value for device specific exposure modes.
     \endtable
 */
 
@@ -351,10 +351,10 @@ void QDeclarativeCameraExposure::setSpotMeteringPoint(const QPointF &point)
     to one of the following:
 
     \table
-    \header \o Value \o Description
-    \row \o Camera.MeteringMatrix       \o A matrix of sample points is used to measure exposure.
-    \row \o Camera.MeteringAverage      \o An average is used to measure exposure.
-    \row \o Camera.MeteringSpot         \o A specific location (\l spotMeteringPoint) is used to measure exposure.
+    \header \li Value \li Description
+    \row \li Camera.MeteringMatrix       \li A matrix of sample points is used to measure exposure.
+    \row \li Camera.MeteringAverage      \li An average is used to measure exposure.
+    \row \li Camera.MeteringSpot         \li A specific location (\l spotMeteringPoint) is used to measure exposure.
     \endtable
 */
 QDeclarativeCamera::MeteringMode QDeclarativeCameraExposure::meteringMode() const
diff --git a/src/imports/multimedia/qdeclarativecameraflash.cpp b/src/imports/multimedia/qdeclarativecameraflash.cpp
index 53b448e..8b5e23b 100644
--- a/src/imports/multimedia/qdeclarativecameraflash.cpp
+++ b/src/imports/multimedia/qdeclarativecameraflash.cpp
@@ -51,7 +51,7 @@ QT_BEGIN_NAMESPACE
     \ingroup multimedia_qml
     \ingroup camera_qml
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     The CameraFlash element allows you to operate the camera flash
     hardware and control the flash mode used.  Not all cameras have
@@ -111,19 +111,19 @@ bool QDeclarativeCameraFlash::isFlashReady() const
     \property QDeclarativeCameraFlash::flashMode
 
     \table
-    \header \o Value \o Description
-    \row \o Camera.FlashOff             \o Flash is Off.
-    \row \o Camera.FlashOn              \o Flash is On.
-    \row \o Camera.FlashAuto            \o Automatic flash.
-    \row \o Camera.FlashRedEyeReduction \o Red eye reduction flash.
-    \row \o Camera.FlashFill            \o Use flash to fillin shadows.
-    \row \o Camera.FlashTorch           \o Constant light source, useful for focusing and video capture.
-    \row \o Camera.FlashSlowSyncFrontCurtain
-                                \o Use the flash in conjunction with a slow shutter speed.
+    \header \li Value \li Description
+    \row \li Camera.FlashOff             \li Flash is Off.
+    \row \li Camera.FlashOn              \li Flash is On.
+    \row \li Camera.FlashAuto            \li Automatic flash.
+    \row \li Camera.FlashRedEyeReduction \li Red eye reduction flash.
+    \row \li Camera.FlashFill            \li Use flash to fillin shadows.
+    \row \li Camera.FlashTorch           \li Constant light source, useful for focusing and video capture.
+    \row \li Camera.FlashSlowSyncFrontCurtain
+                                \li Use the flash in conjunction with a slow shutter speed.
                                 This mode allows better exposure of distant objects and/or motion blur effect.
-    \row \o Camera.FlashSlowSyncRearCurtain
-                                \o The similar mode to FlashSlowSyncFrontCurtain but flash is fired at the end of exposure.
-    \row \o Camera.FlashManual          \o Flash power is manually set.
+    \row \li Camera.FlashSlowSyncRearCurtain
+                                \li The similar mode to FlashSlowSyncFrontCurtain but flash is fired at the end of exposure.
+    \row \li Camera.FlashManual          \li Flash power is manually set.
     \endtable
 
 */
diff --git a/src/imports/multimedia/qdeclarativecamerafocus.cpp b/src/imports/multimedia/qdeclarativecamerafocus.cpp
index a75ebbf..4140b22 100644
--- a/src/imports/multimedia/qdeclarativecamerafocus.cpp
+++ b/src/imports/multimedia/qdeclarativecamerafocus.cpp
@@ -51,7 +51,7 @@ QT_BEGIN_NAMESPACE
     \ingroup multimedia_qml
     \ingroup camera_qml
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     The CameraFocus element allows control over manual and automatic
     focus settings, including information about any parts of the
@@ -207,10 +207,10 @@ void QDeclarativeCameraFocus::setCustomFocusPoint(const QPointF &point)
   and zone \c status as one of the following values:
 
     \table
-    \header \o Value \o Description
-    \row \o Camera.FocusAreaUnused  \o This focus point area is currently unused in autofocusing.
-    \row \o Camera.FocusAreaSelected    \o This focus point area is used in autofocusing, but is not in focus.
-    \row \o Camera.FocusAreaFocused  \o This focus point is used in autofocusing, and is in focus.
+    \header \li Value \li Description
+    \row \li Camera.FocusAreaUnused  \li This focus point area is currently unused in autofocusing.
+    \row \li Camera.FocusAreaSelected    \li This focus point area is used in autofocusing, but is not in focus.
+    \row \li Camera.FocusAreaFocused  \li This focus point is used in autofocusing, and is in focus.
     \endtable
 
 
diff --git a/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp b/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp
index e50a999..1b4b071 100644
--- a/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp
+++ b/src/imports/multimedia/qdeclarativecameraimageprocessing.cpp
@@ -97,17 +97,17 @@ QDeclarativeCameraImageProcessing::~QDeclarativeCameraImageProcessing()
     \qmlproperty enumeration QtMultimedia5::CameraImageProcessing::whiteBalanceMode
 
     \table
-    \header \o Value \o Description
-    \row \o WhiteBalanceManual       \o Manual white balance. In this mode the manual white balance property value is used.
-    \row \o WhiteBalanceAuto         \o Auto white balance mode.
-    \row \o WhiteBalanceSunlight     \o Sunlight white balance mode.
-    \row \o WhiteBalanceCloudy       \o Cloudy white balance mode.
-    \row \o WhiteBalanceShade        \o Shade white balance mode.
-    \row \o WhiteBalanceTungsten     \o Tungsten white balance mode.
-    \row \o WhiteBalanceFluorescent  \o Fluorescent white balance mode.
-    \row \o WhiteBalanceFlash        \o Flash white balance mode.
-    \row \o WhiteBalanceSunset       \o Sunset white balance mode.
-    \row \o WhiteBalanceVendor       \o Vendor defined white balance mode.
+    \header \li Value \li Description
+    \row \li WhiteBalanceManual       \li Manual white balance. In this mode the manual white balance property value is used.
+    \row \li WhiteBalanceAuto         \li Auto white balance mode.
+    \row \li WhiteBalanceSunlight     \li Sunlight white balance mode.
+    \row \li WhiteBalanceCloudy       \li Cloudy white balance mode.
+    \row \li WhiteBalanceShade        \li Shade white balance mode.
+    \row \li WhiteBalanceTungsten     \li Tungsten white balance mode.
+    \row \li WhiteBalanceFluorescent  \li Fluorescent white balance mode.
+    \row \li WhiteBalanceFlash        \li Flash white balance mode.
+    \row \li WhiteBalanceSunset       \li Sunset white balance mode.
+    \row \li WhiteBalanceVendor       \li Vendor defined white balance mode.
     \endtable
 
     \sa manualWhiteBalance
diff --git a/src/imports/multimedia/qdeclarativecamerarecorder.cpp b/src/imports/multimedia/qdeclarativecamerarecorder.cpp
index d333522..50e9859 100644
--- a/src/imports/multimedia/qdeclarativecamerarecorder.cpp
+++ b/src/imports/multimedia/qdeclarativecamerarecorder.cpp
@@ -239,15 +239,15 @@ int QDeclarativeCameraRecorder::audioSampleRate() const
     The type of encoding method to use when recording audio.
 
     \table
-    \header \o Value \o Description
-    \row \o ConstantQualityEncoding
-         \o Encoding will aim to have a constant quality, adjusting bitrate to fit.
+    \header \li Value \li Description
+    \row \li ConstantQualityEncoding
+         \li Encoding will aim to have a constant quality, adjusting bitrate to fit.
             This is the default.  The bitrate setting will be ignored.
-    \row \o ConstantBitRateEncoding
-         \o Encoding will use a constant bit rate, adjust quality to fit.  This is
+    \row \li ConstantBitRateEncoding
+         \li Encoding will use a constant bit rate, adjust quality to fit.  This is
             appropriate if you are trying to optimize for space.
-    \row \o AverageBitRateEncoding
-         \o Encoding will try to keep an average bitrate setting, but will use
+    \row \li AverageBitRateEncoding
+         \li Encoding will try to keep an average bitrate setting, but will use
             more or less as needed.
     \endtable
 
@@ -263,15 +263,15 @@ QDeclarativeCameraRecorder::EncodingMode QDeclarativeCameraRecorder::videoEncodi
     The type of encoding method to use when recording audio.
 
     \table
-    \header \o Value \o Description
-    \row \o ConstantQualityEncoding
-         \o Encoding will aim to have a constant quality, adjusting bitrate to fit.
+    \header \li Value \li Description
+    \row \li ConstantQualityEncoding
+         \li Encoding will aim to have a constant quality, adjusting bitrate to fit.
             This is the default.  The bitrate setting will be ignored.
-    \row \o ConstantBitRateEncoding
-         \o Encoding will use a constant bit rate, adjust quality to fit.  This is
+    \row \li ConstantBitRateEncoding
+         \li Encoding will use a constant bit rate, adjust quality to fit.  This is
             appropriate if you are trying to optimize for space.
-    \row \o AverageBitRateEncoding
-         \o Encoding will try to keep an average bitrate setting, but will use
+    \row \li AverageBitRateEncoding
+         \li Encoding will try to keep an average bitrate setting, but will use
             more or less as needed.
     \endtable
 */
@@ -365,12 +365,12 @@ QString QDeclarativeCameraRecorder::errorString() const
     The current state of the camera recorder object.
 
     \table
-    \header \o Value \o Description
-    \row \o StoppedState
-         \o The camera is not recording video.
+    \header \li Value \li Description
+    \row \li StoppedState
+         \li The camera is not recording video.
 
-    \row \o RecordingState
-         \o The camera is recording video.
+    \row \li RecordingState
+         \li The camera is recording video.
     \endtable
 */
 QDeclarativeCameraRecorder::RecorderState QDeclarativeCameraRecorder::recorderState() const
diff --git a/src/imports/multimedia/qdeclarativeradio.cpp b/src/imports/multimedia/qdeclarativeradio.cpp
index 2fcde3d..c029cae 100644
--- a/src/imports/multimedia/qdeclarativeradio.cpp
+++ b/src/imports/multimedia/qdeclarativeradio.cpp
@@ -50,7 +50,7 @@ QT_BEGIN_NAMESPACE
     \ingroup multimedia_qml
     \inherits Item
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     \qml
     import QtQuick 2.0
@@ -125,12 +125,12 @@ QDeclarativeRadio::~QDeclarativeRadio()
     This property holds the current state of the Radio element.
 
     \table
-    \header \o Value \o Description
-    \row \o ActiveState
-        \o The radio is started and active
+    \header \li Value \li Description
+    \row \li ActiveState
+        \li The radio is started and active
 
-    \row \o StoppedState
-        \o The radio is stopped
+    \row \li StoppedState
+        \li The radio is stopped
 
     \endtable
 
@@ -148,21 +148,21 @@ QDeclarativeRadio::State QDeclarativeRadio::state() const
     any one of the values in the table below.
 
     \table
-    \header \o Value \o Description
-    \row \o AM
-        \o 520 to 1610 kHz, 9 or 10kHz channel spacing, extended 1610 to 1710 kHz
+    \header \li Value \li Description
+    \row \li AM
+        \li 520 to 1610 kHz, 9 or 10kHz channel spacing, extended 1610 to 1710 kHz
 
-    \row \o FM
-        \o 87.5 to 108.0 MHz, except Japan 76-90 MHz
+    \row \li FM
+        \li 87.5 to 108.0 MHz, except Japan 76-90 MHz
 
-    \row \o SW
-        \o 1.711 to 30.0 MHz, divided into 15 bands. 5kHz channel spacing
+    \row \li SW
+        \li 1.711 to 30.0 MHz, divided into 15 bands. 5kHz channel spacing
 
-    \row \o LW
-        \o 148.5 to 283.5 kHz, 9kHz channel spacing (Europe, Africa, Asia)
+    \row \li LW
+        \li 148.5 to 283.5 kHz, 9kHz channel spacing (Europe, Africa, Asia)
 
-    \row \o FM2
-        \o range not defined, used when area supports more than one FM range
+    \row \li FM2
+        \li range not defined, used when area supports more than one FM range
 
     \endtable
 */
@@ -191,15 +191,15 @@ int QDeclarativeRadio::frequency() const
     values in the table below.
 
     \table
-    \header \o Value \o Description
-    \row \o Auto
-        \o Uses stereo mode matching the station
+    \header \li Value \li Description
+    \row \li Auto
+        \li Uses stereo mode matching the station
 
-    \row \o ForceStereo
-        \o Forces the radio to play the station in stereo, converting the sound signal if necessary
+    \row \li ForceStereo
+        \li Forces the radio to play the station in stereo, converting the sound signal if necessary
 
-    \row \o ForceMono
-        \o Forces the radio to play the station in mono, converting the sound signal if necessary
+    \row \li ForceMono
+        \li Forces the radio to play the station in mono, converting the sound signal if necessary
 
     \endtable
 */
@@ -378,12 +378,12 @@ void QDeclarativeRadio::scanUp()
     table below.
 
     \table
-    \header \o Value \o Description
-    \row \o SearchFast
-        \o Stores each radio station for later retrival and tuning
+    \header \li Value \li Description
+    \row \li SearchFast
+        \li Stores each radio station for later retrival and tuning
 
-    \row \o SearchGetStationId
-        \o Does the same as SearchFast, but also emits the station Id with the \l stationFound signal.
+    \row \li SearchGetStationId
+        \li Does the same as SearchFast, but also emits the station Id with the \l stationFound signal.
 
     \endtable
 
diff --git a/src/imports/multimedia/qdeclarativeradiodata.cpp b/src/imports/multimedia/qdeclarativeradiodata.cpp
index c9aa9f8..ccc3662 100644
--- a/src/imports/multimedia/qdeclarativeradiodata.cpp
+++ b/src/imports/multimedia/qdeclarativeradiodata.cpp
@@ -50,7 +50,7 @@ QT_BEGIN_NAMESPACE
     \ingroup multimedia_qml
     \inherits Item
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     The \c RadioData element is your gateway to all the data available through RDS. RDS is the Radio Data System
     which allows radio stations to broadcast information like the \l stationId, \l programType, \l programTypeName,
@@ -148,55 +148,55 @@ QString QDeclarativeRadioData::stationId() const
     table below.
 
     \table
-    \header \o Value
-        \row \o Undefined
-        \row \o News
-        \row \o CurrentAffairs
-        \row \o Information
-        \row \o Sport
-        \row \o Education
-        \row \o Drama
-        \row \o Culture
-        \row \o Science
-        \row \o Varied
-        \row \o PopMusic
-        \row \o RockMusic
-        \row \o EasyListening
-        \row \o LightClassical
-        \row \o SeriousClassical
-        \row \o OtherMusic
-        \row \o Weather
-        \row \o Finance
-        \row \o ChildrensProgrammes
-        \row \o SocialAffairs
-        \row \o Religion
-        \row \o PhoneIn
-        \row \o Travel
-        \row \o Leisure
-        \row \o JazzMusic
-        \row \o CountryMusic
-        \row \o NationalMusic
-        \row \o OldiesMusic
-        \row \o FolkMusic
-        \row \o Documentary
-        \row \o AlarmTest
-        \row \o Alarm
-        \row \o Talk
-        \row \o ClassicRock
-        \row \o AdultHits
-        \row \o SoftRock
-        \row \o Top40
-        \row \o Soft
-        \row \o Nostalgia
-        \row \o Classical
-        \row \o RhythmAndBlues
-        \row \o SoftRhythmAndBlues
-        \row \o Language
-        \row \o ReligiousMusic
-        \row \o ReligiousTalk
-        \row \o Personality
-        \row \o Public
-        \row \o College
+    \header \li Value
+        \row \li Undefined
+        \row \li News
+        \row \li CurrentAffairs
+        \row \li Information
+        \row \li Sport
+        \row \li Education
+        \row \li Drama
+        \row \li Culture
+        \row \li Science
+        \row \li Varied
+        \row \li PopMusic
+        \row \li RockMusic
+        \row \li EasyListening
+        \row \li LightClassical
+        \row \li SeriousClassical
+        \row \li OtherMusic
+        \row \li Weather
+        \row \li Finance
+        \row \li ChildrensProgrammes
+        \row \li SocialAffairs
+        \row \li Religion
+        \row \li PhoneIn
+        \row \li Travel
+        \row \li Leisure
+        \row \li JazzMusic
+        \row \li CountryMusic
+        \row \li NationalMusic
+        \row \li OldiesMusic
+        \row \li FolkMusic
+        \row \li Documentary
+        \row \li AlarmTest
+        \row \li Alarm
+        \row \li Talk
+        \row \li ClassicRock
+        \row \li AdultHits
+        \row \li SoftRock
+        \row \li Top40
+        \row \li Soft
+        \row \li Nostalgia
+        \row \li Classical
+        \row \li RhythmAndBlues
+        \row \li SoftRhythmAndBlues
+        \row \li Language
+        \row \li ReligiousMusic
+        \row \li ReligiousTalk
+        \row \li Personality
+        \row \li Public
+        \row \li College
 
     \endtable
   */
diff --git a/src/imports/multimedia/qdeclarativetorch.cpp b/src/imports/multimedia/qdeclarativetorch.cpp
index 4ae985c..74249d1 100644
--- a/src/imports/multimedia/qdeclarativetorch.cpp
+++ b/src/imports/multimedia/qdeclarativetorch.cpp
@@ -53,7 +53,7 @@ QT_BEGIN_NAMESPACE
 
     \ingroup multimedia_qml
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     In many cases the torch hardware is shared with camera flash functionality,
     and might be automatically controlled by the device.  You have control over
diff --git a/src/imports/multimedia/qdeclarativevideooutput.cpp b/src/imports/multimedia/qdeclarativevideooutput.cpp
index e56c167..ae8064b 100644
--- a/src/imports/multimedia/qdeclarativevideooutput.cpp
+++ b/src/imports/multimedia/qdeclarativevideooutput.cpp
@@ -125,7 +125,7 @@ private:
     \ingroup multimedia_qml
     \inqmlmodule QtMultimedia 5
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     \qml
     import QtQuick 2.0
@@ -344,9 +344,9 @@ static inline int qNormalizedOrientation(int o)
     Set this property to define how the video is scaled to fit the target area.
 
     \list
-    \o Stretch - the video is scaled to fit.
-    \o PreserveAspectFit - the video is scaled uniformly to fit without cropping
-    \o PreserveAspectCrop - the video is scaled uniformly to fill, cropping if necessary
+    \li Stretch - the video is scaled to fit.
+    \li PreserveAspectFit - the video is scaled uniformly to fit without cropping
+    \li PreserveAspectCrop - the video is scaled uniformly to fill, cropping if necessary
     \endlist
 
     The default fill mode is PreserveAspectFit.
diff --git a/src/multimedia/audio/qaudiodeviceinfo.cpp b/src/multimedia/audio/qaudiodeviceinfo.cpp
index 13e7fab..96ffefe 100644
--- a/src/multimedia/audio/qaudiodeviceinfo.cpp
+++ b/src/multimedia/audio/qaudiodeviceinfo.cpp
@@ -255,8 +255,8 @@ bool QAudioDeviceInfo::isFormatSupported(const QAudioFormat &settings) const
 
     A typical audio system would provide something like:
     \list
-    \o Input settings: 8000Hz mono 8 bit.
-    \o Output settings: 44100Hz stereo 16 bit little endian.
+    \li Input settings: 8000Hz mono 8 bit.
+    \li Output settings: 44100Hz stereo 16 bit little endian.
     \endlist
 */
 QAudioFormat QAudioDeviceInfo::preferredFormat() const
diff --git a/src/multimedia/audio/qaudioformat.cpp b/src/multimedia/audio/qaudioformat.cpp
index 73165d7..a1ece4f 100644
--- a/src/multimedia/audio/qaudioformat.cpp
+++ b/src/multimedia/audio/qaudioformat.cpp
@@ -122,26 +122,26 @@ public:
 
     \table
         \header
-            \o Parameter
-            \o Description
+            \li Parameter
+            \li Description
         \row
-            \o Sample Rate
-            \o Samples per second of audio data in Hertz.
+            \li Sample Rate
+            \li Samples per second of audio data in Hertz.
         \row
-            \o Number of channels
-            \o The number of audio channels (typically one for mono
+            \li Number of channels
+            \li The number of audio channels (typically one for mono
                or two for stereo)
         \row
-            \o Sample size
-            \o How much data is stored in each sample (typically 8
+            \li Sample size
+            \li How much data is stored in each sample (typically 8
                or 16 bits)
         \row
-            \o Sample type
-            \o Numerical representation of sample (typically signed integer,
+            \li Sample type
+            \li Numerical representation of sample (typically signed integer,
                unsigned integer or float)
         \row
-            \o Byte order
-            \o Byte ordering of sample (typically little endian, big endian)
+            \li Byte order
+            \li Byte ordering of sample (typically little endian, big endian)
     \endtable
 
     This class is typically used in conjunction with QAudioInput or
@@ -161,11 +161,11 @@ public:
 
     Values are initialized as follows:
     \list
-    \o sampleRate()  = -1
-    \o channelCount() = -1
-    \o sampleSize() = -1
-    \o byteOrder()  = QAudioFormat::Endian(QSysInfo::ByteOrder)
-    \o sampleType() = QAudioFormat::Unknown
+    \li sampleRate()  = -1
+    \li channelCount() = -1
+    \li sampleSize() = -1
+    \li byteOrder()  = QAudioFormat::Endian(QSysInfo::ByteOrder)
+    \li sampleType() = QAudioFormat::Unknown
     \c codec()      = ""
     \endlist
 */
diff --git a/src/multimedia/audio/qsoundeffect.cpp b/src/multimedia/audio/qsoundeffect.cpp
index dd24e80..6ebbdc8 100644
--- a/src/multimedia/audio/qsoundeffect.cpp
+++ b/src/multimedia/audio/qsoundeffect.cpp
@@ -57,7 +57,7 @@ QT_BEGIN_NAMESPACE
     \ingroup multimedia_qml
     \inqmlmodule QtMultimedia 5
 
-    This element is part of the \bold{QtMultimedia 5.0} module.
+    This element is part of the \b{QtMultimedia 5.0} module.
 
     The following example plays a WAV file on mouse click.
 
diff --git a/src/multimedia/video/qabstractvideosurface.cpp b/src/multimedia/video/qabstractvideosurface.cpp
index aa7c316..ed2cdde 100644
--- a/src/multimedia/video/qabstractvideosurface.cpp
+++ b/src/multimedia/video/qabstractvideosurface.cpp
@@ -115,8 +115,8 @@ public:
     implement, broken down into two classes:
 
     \list
-    \o Format related
-    \o Presentation related
+    \li Format related
+    \li Presentation related
     \endlist
 
     For format related functionality, you just have to describe the pixel formats that you
diff --git a/src/multimediawidgets/qgraphicsvideoitem.cpp b/src/multimediawidgets/qgraphicsvideoitem.cpp
index 304767a..ebb3b17 100644
--- a/src/multimediawidgets/qgraphicsvideoitem.cpp
+++ b/src/multimediawidgets/qgraphicsvideoitem.cpp
@@ -183,7 +183,7 @@ void QGraphicsVideoItemPrivate::_q_serviceDestroyed()
 
     \snippet doc/src/snippets/multimedia-snippets/video.cpp Video graphics item
 
-    \bold {Note}: Only a single display output can be attached to a media
+    \b {Note}: Only a single display output can be attached to a media
     object at one time.
 
     \sa QMediaObject, QMediaPlayer, QVideoWidget
diff --git a/src/multimediawidgets/qgraphicsvideoitem_maemo6.cpp b/src/multimediawidgets/qgraphicsvideoitem_maemo6.cpp
index 4287714..cdd8f66 100644
--- a/src/multimediawidgets/qgraphicsvideoitem_maemo6.cpp
+++ b/src/multimediawidgets/qgraphicsvideoitem_maemo6.cpp
@@ -222,7 +222,7 @@ void QGraphicsVideoItemPrivate::_q_serviceDestroyed()
     player->play();
     \endcode
 
-    \bold {Note}: Only a single display output can be attached to a media
+    \b {Note}: Only a single display output can be attached to a media
     object at one time.
 
     \sa QMediaObject, QMediaPlayer, QVideoWidget
diff --git a/src/multimediawidgets/qvideowidget.cpp b/src/multimediawidgets/qvideowidget.cpp
index 22d4598..a82df21 100644
--- a/src/multimediawidgets/qvideowidget.cpp
+++ b/src/multimediawidgets/qvideowidget.cpp
@@ -593,7 +593,7 @@ void QVideoWidgetPrivate::_q_dimensionsChanged()
 
     \snippet doc/src/snippets/multimedia-snippets/video.cpp Video widget
 
-    \bold {Note}: Only a single display output can be attached to a media
+    \b {Note}: Only a single display output can be attached to a media
     object at one time.
 
     \sa QMediaObject, QMediaPlayer, QGraphicsVideoItem