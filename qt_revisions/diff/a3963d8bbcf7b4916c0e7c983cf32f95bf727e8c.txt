diff --git a/src/sql/models/qsqlquerymodel.cpp b/src/sql/models/qsqlquerymodel.cpp
index ea3bc7f..9d0447c 100644
--- a/src/sql/models/qsqlquerymodel.cpp
+++ b/src/sql/models/qsqlquerymodel.cpp
@@ -78,11 +78,9 @@ void QSqlQueryModelPrivate::prefetch(int limit)
         atEnd = true; // this is the end.
     }
     if (newBottom.row() >= 0 && newBottom.row() > bottom.row()) {
-        if (!nestedResetLevel)
-            q->beginInsertRows(QModelIndex(), bottom.row() + 1, newBottom.row());
+        q->beginInsertRows(QModelIndex(), bottom.row() + 1, newBottom.row());
         bottom = newBottom;
-        if (!nestedResetLevel)
-            q->endInsertRows();
+        q->endInsertRows();
     } else {
         bottom = newBottom;
     }
@@ -212,6 +210,78 @@ bool QSqlQueryModel::canFetchMore(const QModelIndex &parent) const
 
 /*! \internal
  */
+void QSqlQueryModel::beginInsertRows(const QModelIndex &parent, int first, int last)
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::beginInsertRows(parent, first, last);
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::endInsertRows()
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::endInsertRows();
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::beginRemoveRows(const QModelIndex &parent, int first, int last)
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::beginRemoveRows(parent, first, last);
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::endRemoveRows()
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::endRemoveRows();
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::beginInsertColumns(const QModelIndex &parent, int first, int last)
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::beginInsertColumns(parent, first, last);
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::endInsertColumns()
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::endInsertColumns();
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::beginRemoveColumns(const QModelIndex &parent, int first, int last)
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::beginRemoveColumns(parent, first, last);
+}
+
+/*! \internal
+ */
+void QSqlQueryModel::endRemoveColumns()
+{
+    Q_D(QSqlQueryModel);
+    if (!d->nestedResetLevel)
+        QAbstractTableModel::endRemoveColumns();
+}
+
+/*! \internal
+ */
 void QSqlQueryModel::beginResetModel()
 {
     Q_D(QSqlQueryModel);
diff --git a/src/sql/models/qsqlquerymodel.h b/src/sql/models/qsqlquerymodel.h
index 89b72c8..fd9ec53 100644
--- a/src/sql/models/qsqlquerymodel.h
+++ b/src/sql/models/qsqlquerymodel.h
@@ -90,6 +90,18 @@ public:
     bool canFetchMore(const QModelIndex &parent = QModelIndex()) const;
 
 protected:
+    void beginInsertRows(const QModelIndex &parent, int first, int last);
+    void endInsertRows();
+
+    void beginRemoveRows(const QModelIndex &parent, int first, int last);
+    void endRemoveRows();
+
+    void beginInsertColumns(const QModelIndex &parent, int first, int last);
+    void endInsertColumns();
+
+    void beginRemoveColumns(const QModelIndex &parent, int first, int last);
+    void endRemoveColumns();
+
     void beginResetModel();
     void endResetModel();
     virtual void queryChange();