diff --git a/src/plugins/plugins.pro b/src/plugins/plugins.pro
index ac5968a..80dbc12 100644
--- a/src/plugins/plugins.pro
+++ b/src/plugins/plugins.pro
@@ -35,10 +35,6 @@ unix:!mac {
 }
 
 mac:!simulator {
-    SUBDIRS += audiocapture
-
-    # Currently we need qmacdefines_mac.h from QtWidgets, so this depends on that :/
-    # despite the code not really using them.
-    !isEmpty(QT.widgets.name):SUBDIRS += qt7
+    SUBDIRS += audiocapture qt7
 }
 
diff --git a/src/plugins/qt7/mediaplayer/qt7playercontrol.h b/src/plugins/qt7/mediaplayer/qt7playercontrol.h
index 88f1163..c643bd1 100644
--- a/src/plugins/qt7/mediaplayer/qt7playercontrol.h
+++ b/src/plugins/qt7/mediaplayer/qt7playercontrol.h
@@ -47,9 +47,6 @@
 #include <qmediaplayercontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
-
-
 QT_BEGIN_NAMESPACE
 
 class QT7PlayerSession;
diff --git a/src/plugins/qt7/mediaplayer/qt7playercontrol.mm b/src/plugins/qt7/mediaplayer/qt7playercontrol.mm
index eb6e68a..7e00db0 100644
--- a/src/plugins/qt7/mediaplayer/qt7playercontrol.mm
+++ b/src/plugins/qt7/mediaplayer/qt7playercontrol.mm
@@ -174,7 +174,7 @@ void QT7PlayerControl::setMedia(const QMediaContent &content, QIODevice *stream)
 {
     m_session->setMedia(content, stream);
 
-    emit mediaChanged(content);
+    Q_EMIT mediaChanged(content);
 }
 
 bool QT7PlayerControl::isAudioAvailable() const
diff --git a/src/plugins/qt7/mediaplayer/qt7playermetadata.h b/src/plugins/qt7/mediaplayer/qt7playermetadata.h
index 950da4b..0d27d6c 100644
--- a/src/plugins/qt7/mediaplayer/qt7playermetadata.h
+++ b/src/plugins/qt7/mediaplayer/qt7playermetadata.h
@@ -64,7 +64,7 @@ public:
     QVariant extendedMetaData(const QString &key) const ;
     QStringList availableExtendedMetaData() const;
 
-private slots:
+private Q_SLOTS:
     void updateTags();
 
 private:
diff --git a/src/plugins/qt7/mediaplayer/qt7playermetadata.mm b/src/plugins/qt7/mediaplayer/qt7playermetadata.mm
index 4b100ec..87d844f 100644
--- a/src/plugins/qt7/mediaplayer/qt7playermetadata.mm
+++ b/src/plugins/qt7/mediaplayer/qt7playermetadata.mm
@@ -254,7 +254,7 @@ void QT7PlayerMetaDataControl::updateTags()
     }
 
     if (!wasEmpty || !m_tags.isEmpty())
-        emit metaDataChanged();
+        Q_EMIT metaDataChanged();
 }
 
 #include "moc_qt7playermetadata.cpp"
diff --git a/src/plugins/qt7/mediaplayer/qt7playersession.h b/src/plugins/qt7/mediaplayer/qt7playersession.h
index 4f607d6..915387e 100644
--- a/src/plugins/qt7/mediaplayer/qt7playersession.h
+++ b/src/plugins/qt7/mediaplayer/qt7playersession.h
@@ -50,9 +50,6 @@
 #include <qmediaplayercontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
-
-
 QT_BEGIN_NAMESPACE
 
 class QT7PlayerControl;
@@ -99,7 +96,7 @@ public:
 
     qreal playbackRate() const;
 
-public slots:
+public Q_SLOTS:
     void setPlaybackRate(qreal rate);
 
     void setPosition(qint64 pos);
@@ -117,7 +114,7 @@ public slots:
     void processNaturalSizeChange();
     void processPositionChange();
 
-signals:
+Q_SIGNALS:
     void positionChanged(qint64 position);
     void durationChanged(qint64 duration);
     void stateChanged(QMediaPlayer::State newState);
diff --git a/src/plugins/qt7/mediaplayer/qt7playersession.mm b/src/plugins/qt7/mediaplayer/qt7playersession.mm
index e712b23..a5a8d41 100644
--- a/src/plugins/qt7/mediaplayer/qt7playersession.mm
+++ b/src/plugins/qt7/mediaplayer/qt7playersession.mm
@@ -368,7 +368,7 @@ void QT7PlayerSession::play()
     [(QTMovie*)m_QTMovie setRate:preferredRate * m_rate];
 
     processLoadStateChange();
-    emit stateChanged(m_state);
+    Q_EMIT stateChanged(m_state);
 }
 
 void QT7PlayerSession::pause()
@@ -388,7 +388,7 @@ void QT7PlayerSession::pause()
     [(QTMovie*)m_QTMovie setRate:0];
 
     processLoadStateChange();
-    emit stateChanged(m_state);
+    Q_EMIT stateChanged(m_state);
 }
 
 void QT7PlayerSession::stop()
@@ -405,8 +405,8 @@ void QT7PlayerSession::stop()
         m_videoOutput->setMovie(0);
 
     processLoadStateChange();
-    emit stateChanged(m_state);
-    emit positionChanged(position());
+    Q_EMIT stateChanged(m_state);
+    Q_EMIT positionChanged(position());
 }
 
 void QT7PlayerSession::setVolume(int volume)
@@ -419,7 +419,7 @@ void QT7PlayerSession::setVolume(int volume)
     if (m_QTMovie != 0)
         [(QTMovie*)m_QTMovie setVolume:m_volume / 100.0f];
 
-    emit volumeChanged(m_volume);
+    Q_EMIT volumeChanged(m_volume);
 }
 
 void QT7PlayerSession::setMuted(bool muted)
@@ -432,7 +432,7 @@ void QT7PlayerSession::setMuted(bool muted)
     if (m_QTMovie != 0)
         [(QTMovie*)m_QTMovie setMuted:m_muted];
 
-    emit mutedChanged(muted);
+    Q_EMIT mutedChanged(muted);
 }
 
 QMediaContent QT7PlayerSession::media() const
@@ -471,17 +471,17 @@ void QT7PlayerSession::setMedia(const QMediaContent &content, QIODevice *stream)
     if (content.isNull()) {
         m_mediaStatus = QMediaPlayer::NoMedia;
         if (m_state != QMediaPlayer::StoppedState)
-            emit stateChanged(m_state = QMediaPlayer::StoppedState);
+            Q_EMIT stateChanged(m_state = QMediaPlayer::StoppedState);
 
         if (m_mediaStatus != oldMediaStatus)
-            emit mediaStatusChanged(m_mediaStatus);
-        emit positionChanged(position());
+            Q_EMIT mediaStatusChanged(m_mediaStatus);
+        Q_EMIT positionChanged(position());
         return;
     }
 
     m_mediaStatus = QMediaPlayer::LoadingMedia;
     if (m_mediaStatus != oldMediaStatus)
-        emit mediaStatusChanged(m_mediaStatus);
+        Q_EMIT mediaStatusChanged(m_mediaStatus);
 
     QNetworkRequest request = content.canonicalResource().request();
 
@@ -490,7 +490,7 @@ void QT7PlayerSession::setMedia(const QMediaContent &content, QIODevice *stream)
         NSHTTPCookieStorage *store = [NSHTTPCookieStorage sharedHTTPCookieStorage];
         QList<QNetworkCookie> cookieList = cookies.value<QList<QNetworkCookie> >();
 
-        foreach (const QNetworkCookie &requestCookie, cookieList) {
+        Q_FOREACH (const QNetworkCookie &requestCookie, cookieList) {
             NSMutableDictionary *p = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                                qString2CFStringRef(requestCookie.name()), NSHTTPCookieName,
                                qString2CFStringRef(requestCookie.value()), NSHTTPCookieValue,
@@ -511,7 +511,7 @@ void QT7PlayerSession::setMedia(const QMediaContent &content, QIODevice *stream)
     // First try - attempt open in async mode
     openMovie(true);
 
-    emit positionChanged(position());
+    Q_EMIT positionChanged(position());
 }
 
 void QT7PlayerSession::openMovie(bool tryAsync)
@@ -539,7 +539,7 @@ void QT7PlayerSession::openMovie(bool tryAsync)
         // Load from Qt resource
         m_resourceHandler.setResourceFile(QLatin1Char(':') + requestUrl.path());
         if (!m_resourceHandler.isValid()) {
-            emit error(QMediaPlayer::FormatError, tr("Attempting to play invalid Qt resource"));
+            Q_EMIT error(QMediaPlayer::FormatError, tr("Attempting to play invalid Qt resource"));
             return;
         }
 
@@ -582,7 +582,7 @@ void QT7PlayerSession::openMovie(bool tryAsync)
     if (err != nil) {
         m_QTMovie = 0;
         QString description = QString::fromUtf8([[err localizedDescription] UTF8String]);
-        emit error(QMediaPlayer::FormatError, description);
+        Q_EMIT error(QMediaPlayer::FormatError, description);
 
 #ifdef QT_DEBUG_QT7
         qDebug() << Q_FUNC_INFO << description;
@@ -626,12 +626,12 @@ void QT7PlayerSession::processEOS()
 #ifdef QT_DEBUG_QT7
     qDebug() << Q_FUNC_INFO;
 #endif
-    emit positionChanged(position());
+    Q_EMIT positionChanged(position());
     m_mediaStatus = QMediaPlayer::EndOfMedia;
     if (m_videoOutput)
         m_videoOutput->setMovie(0);
-    emit stateChanged(m_state = QMediaPlayer::StoppedState);
-    emit mediaStatusChanged(m_mediaStatus);
+    Q_EMIT stateChanged(m_state = QMediaPlayer::StoppedState);
+    Q_EMIT mediaStatusChanged(m_mediaStatus);
 }
 
 void QT7PlayerSession::processLoadStateChange()
@@ -670,9 +670,9 @@ void QT7PlayerSession::processLoadStateChange()
             if (m_videoOutput)
                 m_videoOutput->setMovie(0);
 
-            emit error(QMediaPlayer::FormatError, tr("Failed to load media"));
-            emit mediaStatusChanged(m_mediaStatus = QMediaPlayer::InvalidMedia);
-            emit stateChanged(m_state = QMediaPlayer::StoppedState);
+            Q_EMIT error(QMediaPlayer::FormatError, tr("Failed to load media"));
+            Q_EMIT mediaStatusChanged(m_mediaStatus = QMediaPlayer::InvalidMedia);
+            Q_EMIT stateChanged(m_state = QMediaPlayer::StoppedState);
         }
 
         return;
@@ -706,17 +706,17 @@ void QT7PlayerSession::processLoadStateChange()
     if (state >= kMovieLoadStateLoaded) {
         qint64 currentDuration = duration();
         if (m_duration != currentDuration)
-            emit durationChanged(m_duration = currentDuration);
+            Q_EMIT durationChanged(m_duration = currentDuration);
 
         if (m_audioAvailable != isAudioAvailable())
-            emit audioAvailableChanged(m_audioAvailable = !m_audioAvailable);
+            Q_EMIT audioAvailableChanged(m_audioAvailable = !m_audioAvailable);
 
         if (m_videoAvailable != isVideoAvailable())
-            emit videoAvailableChanged(m_videoAvailable = !m_videoAvailable);
+            Q_EMIT videoAvailableChanged(m_videoAvailable = !m_videoAvailable);
     }
 
     if (newStatus != m_mediaStatus)
-        emit mediaStatusChanged(m_mediaStatus = newStatus);
+        Q_EMIT mediaStatusChanged(m_mediaStatus = newStatus);
 }
 
 void QT7PlayerSession::processVolumeChange()
@@ -727,7 +727,7 @@ void QT7PlayerSession::processVolumeChange()
     int newVolume = qRound(100.0f * [((QTMovie*)m_QTMovie) volume]);
 
     if (newVolume != m_volume) {
-        emit volumeChanged(m_volume = newVolume);
+        Q_EMIT volumeChanged(m_volume = newVolume);
     }
 }
 
@@ -745,7 +745,7 @@ void QT7PlayerSession::processNaturalSizeChange()
 
 void QT7PlayerSession::processPositionChange()
 {
-    emit positionChanged(position());
+    Q_EMIT positionChanged(position());
 }
 
 #include "moc_qt7playersession.cpp"
diff --git a/src/plugins/qt7/qcvdisplaylink.h b/src/plugins/qt7/qcvdisplaylink.h
index 658f9be..0cf3f87 100644
--- a/src/plugins/qt7/qcvdisplaylink.h
+++ b/src/plugins/qt7/qcvdisplaylink.h
@@ -61,11 +61,11 @@ public:
     bool isValid();
     bool isActive() const;
 
-public slots:
+public Q_SLOTS:
     void start();
     void stop();
 
-signals:
+Q_SIGNALS:
     void tick(const CVTimeStamp &ts);
 
 public:
diff --git a/src/plugins/qt7/qcvdisplaylink.mm b/src/plugins/qt7/qcvdisplaylink.mm
index fa0df35..c1e3cd2 100644
--- a/src/plugins/qt7/qcvdisplaylink.mm
+++ b/src/plugins/qt7/qcvdisplaylink.mm
@@ -141,7 +141,7 @@ bool QCvDisplayLink::event(QEvent *event)
                 CVTimeStamp ts = m_frameTimeStamp;
                 m_displayLinkMutex.unlock();
 
-                emit tick(ts);
+                Q_EMIT tick(ts);
 
                 return false;
             }
diff --git a/src/plugins/qt7/qt7.pro b/src/plugins/qt7/qt7.pro
index c17205c..9fe15b0 100644
--- a/src/plugins/qt7/qt7.pro
+++ b/src/plugins/qt7/qt7.pro
@@ -1,5 +1,8 @@
 load(qt_module)
 
+# Avoid clash with a variable named `slots' in a Quartz header
+CONFIG += no_keywords
+
 TARGET = qqt7engine
 QT += multimedia-private network
 !isEmpty(QT.widgets.name) {
diff --git a/src/plugins/qt7/qt7movierenderer.h b/src/plugins/qt7/qt7movierenderer.h
index 26d0694..b8ee8c5 100644
--- a/src/plugins/qt7/qt7movierenderer.h
+++ b/src/plugins/qt7/qt7movierenderer.h
@@ -50,7 +50,6 @@
 #include <qvideorenderercontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
 #include "qt7videooutput.h"
 
 #include <QuartzCore/CVOpenGLTexture.h>
@@ -79,7 +78,7 @@ public:
 
     QSize nativeSize() const;
 
-private slots:
+private Q_SLOTS:
     void updateVideoFrame(const CVTimeStamp &ts);
     
 private:
diff --git a/src/plugins/qt7/qt7movievideowidget.h b/src/plugins/qt7/qt7movievideowidget.h
index f707003..38f17d5 100644
--- a/src/plugins/qt7/qt7movievideowidget.h
+++ b/src/plugins/qt7/qt7movievideowidget.h
@@ -48,7 +48,6 @@
 #include <qvideowindowcontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
 #include "qt7videooutput.h"
 
 #include <QuartzCore/CVOpenGLTexture.h>
@@ -94,7 +93,7 @@ public:
     int saturation() const;
     void setSaturation(int saturation);
 
-private slots:
+private Q_SLOTS:
     void updateVideoFrame(const CVTimeStamp &ts);
     
 private:
diff --git a/src/plugins/qt7/qt7movieviewoutput.h b/src/plugins/qt7/qt7movieviewoutput.h
index 597de19..801a74b 100644
--- a/src/plugins/qt7/qt7movieviewoutput.h
+++ b/src/plugins/qt7/qt7movieviewoutput.h
@@ -47,7 +47,6 @@
 #include <qvideowindowcontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
 #include "qt7videooutput.h"
 
 
diff --git a/src/plugins/qt7/qt7movieviewoutput.mm b/src/plugins/qt7/qt7movieviewoutput.mm
index bd83040..55aa9c4 100644
--- a/src/plugins/qt7/qt7movieviewoutput.mm
+++ b/src/plugins/qt7/qt7movieviewoutput.mm
@@ -223,7 +223,7 @@ void QT7MovieViewOutput::updateNaturalSize(const QSize &newSize)
 {
     if (m_nativeSize != newSize) {
         m_nativeSize = newSize;
-        emit nativeSizeChanged();
+        Q_EMIT nativeSizeChanged();
     }
 }
 
diff --git a/src/plugins/qt7/qt7movieviewrenderer.h b/src/plugins/qt7/qt7movieviewrenderer.h
index dc0d978..cd10de1 100644
--- a/src/plugins/qt7/qt7movieviewrenderer.h
+++ b/src/plugins/qt7/qt7movieviewrenderer.h
@@ -48,7 +48,6 @@
 #include <qvideowindowcontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
 #include "qt7videooutput.h"
 #include <qvideoframe.h>
 
diff --git a/src/plugins/qt7/qt7videooutput.h b/src/plugins/qt7/qt7videooutput.h
index f294a57..1c23a42 100644
--- a/src/plugins/qt7/qt7videooutput.h
+++ b/src/plugins/qt7/qt7videooutput.h
@@ -50,9 +50,6 @@
 #include <qvideorenderercontrol.h>
 #include <qmediaplayer.h>
 
-#include <QtWidgets/qmacdefines_mac.h>
-
-
 QT_BEGIN_NAMESPACE
 
 class QMediaPlaylist;
diff --git a/src/plugins/qt7/qt7videooutput.mm b/src/plugins/qt7/qt7videooutput.mm
index 218ef84..ca39bf8 100644
--- a/src/plugins/qt7/qt7videooutput.mm
+++ b/src/plugins/qt7/qt7videooutput.mm
@@ -82,7 +82,7 @@ void QT7VideoOutputControl::setOutput(Output output)
 {
     if (m_output != output) {
         m_output = output;
-        emit videoOutputChanged(m_output);
+        Q_EMIT videoOutputChanged(m_output);
     }
 }