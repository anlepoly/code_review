diff --git a/src/testlib/qtest.h b/src/testlib/qtest.h
index d167324..392e223 100644
--- a/src/testlib/qtest.h
+++ b/src/testlib/qtest.h
@@ -169,17 +169,13 @@ template<> inline char *toString(const QVariant &v)
     return qstrdup(vstring.constData());
 }
 
-#ifndef QTEST_NO_SPECIALIZATIONS
 template<>
-#endif
 inline bool qCompare(QString const &t1, QLatin1String const &t2, const char *actual,
                     const char *expected, const char *file, int line)
 {
     return qCompare<QString>(t1, QString(t2), actual, expected, file, line);
 }
-#ifndef QTEST_NO_SPECIALIZATIONS
 template<>
-#endif
 inline bool qCompare(QLatin1String const &t1, QString const &t2, const char *actual,
                     const char *expected, const char *file, int line)
 {
diff --git a/src/testlib/qtest_global.h b/src/testlib/qtest_global.h
index 27a6801..b567fe7 100644
--- a/src/testlib/qtest_global.h
+++ b/src/testlib/qtest_global.h
@@ -59,11 +59,6 @@ QT_BEGIN_NAMESPACE
 # endif
 #endif
 
-#if defined (Q_CC_SUN) || defined (Q_CC_XLC)
-# define QTEST_NO_SPECIALIZATIONS
-#endif
-
-
 #if (defined Q_CC_HPACC) && (defined __ia64)
 # ifdef Q_TESTLIB_EXPORT
 #  undef Q_TESTLIB_EXPORT
diff --git a/src/testlib/qtest_gui.h b/src/testlib/qtest_gui.h
index f10ddd8..24abd00 100644
--- a/src/testlib/qtest_gui.h
+++ b/src/testlib/qtest_gui.h
@@ -88,9 +88,7 @@ inline bool qCompare(QIcon const &t1, QIcon const &t2, const char *actual, const
 }
 #endif
 
-#ifndef QTEST_NO_SPECIALIZATIONS
 template<>
-#endif
 inline bool qCompare(QImage const &t1, QImage const &t2,
                      const char *actual, const char *expected, const char *file, int line)
 {
@@ -125,9 +123,7 @@ inline bool qCompare(QImage const &t1, QImage const &t2,
                           toString(t1), toString(t2), actual, expected, file, line);
 }
 
-#ifndef QTEST_NO_SPECIALIZATIONS
 template<>
-#endif
 inline bool qCompare(QPixmap const &t1, QPixmap const &t2, const char *actual, const char *expected,
                     const char *file, int line)
 {
diff --git a/src/testlib/qtestcase.h b/src/testlib/qtestcase.h
index a344736..acd4949 100644
--- a/src/testlib/qtestcase.h
+++ b/src/testlib/qtestcase.h
@@ -256,7 +256,6 @@ namespace QTest
     QTEST_COMPARE_DECL(bool)
 #endif
 
-#ifndef QTEST_NO_SPECIALIZATIONS
     template <typename T1, typename T2>
     bool qCompare(T1 const &, T2 const &, const char *, const char *, const char *, int);
 
@@ -312,34 +311,17 @@ namespace QTest
     {
         return compare_string_helper(t1, t2, actual, expected, file, line);
     }
-#else  /* QTEST_NO_SPECIALIZATIONS */
-    inline bool qCompare(const char *t1, const char *t2, const char *actual,
-                         const char *expected, const char *file, int line)
-    {
-        return compare_string_helper(t1, t2, actual, expected, file, line);
-    }
-
-    inline bool qCompare(char *t1, char *t2, const char *actual, const char *expected,
-                         const char *file, int line)
-    {
-        return compare_string_helper(t1, t2, actual, expected, file, line);
-    }
-#endif
 
     /* The next two specializations are for MSVC that shows problems with implicit
        conversions
      */
-#ifndef QTEST_NO_SPECIALIZATIONS
     template<>
-#endif
     inline bool qCompare(char *t1, const char *t2, const char *actual,
                          const char *expected, const char *file, int line)
     {
         return compare_string_helper(t1, t2, actual, expected, file, line);
     }
-#ifndef QTEST_NO_SPECIALIZATIONS
     template<>
-#endif
     inline bool qCompare(const char *t1, char *t2, const char *actual,
                          const char *expected, const char *file, int line)
     {
@@ -347,9 +329,7 @@ namespace QTest
     }
 
     // NokiaX86 and RVCT do not like implicitly comparing bool with int
-#ifndef QTEST_NO_SPECIALIZATIONS
     template <>
-#endif
     inline bool qCompare(bool const &t1, int const &t2,
                     const char *actual, const char *expected, const char *file, int line)
     {