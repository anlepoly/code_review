diff --git a/doc/config/compat.qdocconf b/doc/config/compat.qdocconf
index 0b59629..53a2613 100644
--- a/doc/config/compat.qdocconf
+++ b/doc/config/compat.qdocconf
@@ -5,24 +5,24 @@ macro.0                         = "\\\\0"
 macro.b                         = "\\\\b"
 macro.n                         = "\\\\n"
 macro.r                         = "\\\\r"
-macro.i                         = "\\o"
-macro.i11                       = "\\o{1,1}"
-macro.i12                       = "\\o{1,2}"
-macro.i13                       = "\\o{1,3}"
-macro.i14                       = "\\o{1,4}"
-macro.i15                       = "\\o{1,5}"
-macro.i16                       = "\\o{1,6}"
-macro.i17                       = "\\o{1,7}"
-macro.i18                       = "\\o{1,8}"
-macro.i19                       = "\\o{1,9}"
-macro.i21                       = "\\o{2,1}"
-macro.i31                       = "\\o{3,1}"
-macro.i41                       = "\\o{4,1}"
-macro.i51                       = "\\o{5,1}"
-macro.i61                       = "\\o{6,1}"
-macro.i71                       = "\\o{7,1}"
-macro.i81                       = "\\o{8,1}"
-macro.i91                       = "\\o{9,1}"
+macro.i                         = "\\li"
+macro.i11                       = "\\li{1,1}"
+macro.i12                       = "\\li{1,2}"
+macro.i13                       = "\\li{1,3}"
+macro.i14                       = "\\li{1,4}"
+macro.i15                       = "\\li{1,5}"
+macro.i16                       = "\\li{1,6}"
+macro.i17                       = "\\li{1,7}"
+macro.i18                       = "\\li{1,8}"
+macro.i19                       = "\\li{1,9}"
+macro.i21                       = "\\li{2,1}"
+macro.i31                       = "\\li{3,1}"
+macro.i41                       = "\\li{4,1}"
+macro.i51                       = "\\li{5,1}"
+macro.i61                       = "\\li{6,1}"
+macro.i71                       = "\\li{7,1}"
+macro.i81                       = "\\li{8,1}"
+macro.i91                       = "\\li{9,1}"
 macro.img                       = "\\image"
 macro.endquote                  = "\\endquotation"
 macro.relatesto                 = "\\relates"
diff --git a/doc/config/macros.qdocconf b/doc/config/macros.qdocconf
index 7648b54..d8b96c0 100644
--- a/doc/config/macros.qdocconf
+++ b/doc/config/macros.qdocconf
@@ -2,17 +2,17 @@ macro.aacute.HTML       = "&aacute;"
 macro.Aring.HTML        = "&Aring;"
 macro.aring.HTML        = "&aring;"
 macro.Auml.HTML         = "&Auml;"
-macro.author            = "\\bold{Author:}"
+macro.author            = "\\b{Author:}"
 macro.br.HTML           = "<br />"
 macro.BR.HTML           = "<br />"
 macro.copyright.HTML    = "&copy;"
 macro.eacute.HTML       = "&eacute;"
-macro.gui               = "\\bold"
+macro.gui               = "\\b"
 macro.hr.HTML           = "<hr />"
 macro.iacute.HTML       = "&iacute;"
-macro.key               = "\\bold"
-macro.menu              = "\\bold"
-macro.note              = "\\bold{Note:}"
+macro.key               = "\\b"
+macro.menu              = "\\b"
+macro.note              = "\\b{Note:}"
 macro.oslash.HTML       = "&oslash;"
 macro.ouml.HTML         = "&ouml;"
 macro.QA                = "\\e{Qt Assistant}"
diff --git a/doc/src/examples/grue.qdoc b/doc/src/examples/grue.qdoc
index c2be06e..74283b0 100644
--- a/doc/src/examples/grue.qdoc
+++ b/doc/src/examples/grue.qdoc
@@ -37,22 +37,22 @@
     lives in a plugin.
 
     \list
-    \o \l{Grue Sensor Definition}
-    \o \l{Grue Sensor Implementation}
+    \li \l{Grue Sensor Definition}
+    \li \l{Grue Sensor Implementation}
     \endlist
 
     The sensor can now be used by a C++ application, even if the application does not have access to the
     definition.
 
     \list
-    \o \l{Grue Sensor Console Application}
+    \li \l{Grue Sensor Console Application}
     \endlist
 
     To make the sensor available to a QML application an import must be created.
 
     \list
-    \o \l{Grue Sensor QML Import}
-    \o \l{Grue Sensor QML Application}
+    \li \l{Grue Sensor QML Import}
+    \li \l{Grue Sensor QML Application}
     \endlist
 */
 
diff --git a/doc/src/imports/qtmobilitysensors1.qdoc b/doc/src/imports/qtmobilitysensors1.qdoc
index 94db11d..b4906ed 100644
--- a/doc/src/imports/qtmobilitysensors1.qdoc
+++ b/doc/src/imports/qtmobilitysensors1.qdoc
@@ -46,15 +46,15 @@
     The following limitations affect all versions of the QtMobility.sensors import.
 
     \list 1
-    \o The QSensor::sensorid property cannot be set because QML does not support QByteArray.
+    \li The QSensor::sensorid property cannot be set because QML does not support QByteArray.
        This means that it is not possible to specify a particular sensor when two or more have
        been registered with the same type.
-    \o The QSensor::availableDataRates property cannot be used because QML does not support \l qrangelist.
-    \o The QSensor::outputRanges property cannot be used because QML does not support \l qoutputrangelist.
-    \o The QLightSensor::fieldOfView property cannot be used because QML cannot access dynamic properties.
-    \o The QMagnetometer::returnGeoValues property cannot be used because QML cannot access dynamic properties.
-    \o The QRotationSensor::hasZ property cannot be used because QML cannot access dynamic properties.
-    \o The QTapSensor::returnDoubleTapEvents property cannot be used because QML cannot access dynamic properties.
+    \li The QSensor::availableDataRates property cannot be used because QML does not support \l qrangelist.
+    \li The QSensor::outputRanges property cannot be used because QML does not support \l qoutputrangelist.
+    \li The QLightSensor::fieldOfView property cannot be used because QML cannot access dynamic properties.
+    \li The QMagnetometer::returnGeoValues property cannot be used because QML cannot access dynamic properties.
+    \li The QRotationSensor::hasZ property cannot be used because QML cannot access dynamic properties.
+    \li The QTapSensor::returnDoubleTapEvents property cannot be used because QML cannot access dynamic properties.
     \endlist
 
     \section1 QML Sensor Elements
diff --git a/doc/src/porting.qdoc b/doc/src/porting.qdoc
index 3911f34..48b904c 100644
--- a/doc/src/porting.qdoc
+++ b/doc/src/porting.qdoc
@@ -48,11 +48,11 @@
 
     \table
         \row
-            \o \l {Qt Sensors QML API}{QML API}
-            \o Information about the Qt Sensors QML API
+            \li \l {Qt Sensors QML API}{QML API}
+            \li Information about the Qt Sensors QML API
         \row
-            \o \l {QtMobility.sensors 1.x}{Legacy QML API}
-            \o Information about the legacy QtMobility.sensors QML API
+            \li \l {QtMobility.sensors 1.x}{Legacy QML API}
+            \li Information about the legacy QtMobility.sensors QML API
     \endtable
 
     \section1 C++
@@ -78,10 +78,10 @@
     and the macros from QtMobility no longer exist.
 
     \list
-    \o QTM_BEGIN_NAMESPACE
-    \o QTM_END_NAMESPACE
-    \o QTM_USE_NAMESPACE
-    \o QTM_PREPEND_NAMESPACE(x)
+    \li QTM_BEGIN_NAMESPACE
+    \li QTM_END_NAMESPACE
+    \li QTM_USE_NAMESPACE
+    \li QTM_PREPEND_NAMESPACE(x)
     \endlist
 
     Note that Qt can be configured to build into a namespace. If Qt is built in this
@@ -89,10 +89,10 @@
     is optional, the macros for this are typically defined to do nothing.
 
     \list
-    \o QT_BEGIN_NAMESPACE
-    \o QT_END_NAMESPACE
-    \o QT_USE_NAMESPACE
-    \o QT_PREPEND_NAMESPACE(x)
+    \li QT_BEGIN_NAMESPACE
+    \li QT_END_NAMESPACE
+    \li QT_USE_NAMESPACE
+    \li QT_PREPEND_NAMESPACE(x)
     \endlist
 
     \section2 qtimestamp
diff --git a/doc/src/qtsensorgestures-plugins.qdoc b/doc/src/qtsensorgestures-plugins.qdoc
index 43d9d63..28c013b 100644
--- a/doc/src/qtsensorgestures-plugins.qdoc
+++ b/doc/src/qtsensorgestures-plugins.qdoc
@@ -47,9 +47,9 @@ higher level applications.
 
     The steps to creating a sensor gesture plugin are as follows:
 \list
-\o Sub-class from QSensorGesturePluginInterface
-\o Sub-class from QSensorGestureRecognizer and implement gesture recognizer logic using QtSensors.
-\o Create an instance of that recognizer in the derived QSensorGesturePluginInterface class, and call
+\li Sub-class from QSensorGesturePluginInterface
+\li Sub-class from QSensorGestureRecognizer and implement gesture recognizer logic using QtSensors.
+\li Create an instance of that recognizer in the derived QSensorGesturePluginInterface class, and call
  QSensorGestureManager::registerSensorGestureRecognizer(sRec); in your registerRecognizers()
 function. QSensorGestureManager will retain ownership of the recognizer object.
 
@@ -80,16 +80,16 @@ gesture training, nor ability for the user to define their own sensor based moti
 
 A procedure for writing ad-hock recognizers might include:
 \list
-    \o Obtain and gather output from the accelerometer through QAccelerometerReading of a gesture being performed.
-    \o Use various methods and constraints on the accelerometer data to recognize the various states:
+    \li Obtain and gather output from the accelerometer through QAccelerometerReading of a gesture being performed.
+    \li Use various methods and constraints on the accelerometer data to recognize the various states:
     \list i
-        \o Initial 'listening' state for a gesture
-        \o Start of a possible gesture, moving into a 'detecting' state
-        \o End of a possible gesture, moving into a 'recognizing' state
-        \o and finally, if it is recognized, the 'recognized' state, or if not recognized, move back to
+        \li Initial 'listening' state for a gesture
+        \li Start of a possible gesture, moving into a 'detecting' state
+        \li End of a possible gesture, moving into a 'recognizing' state
+        \li and finally, if it is recognized, the 'recognized' state, or if not recognized, move back to
            the 'listening' state.
     \endlist
-    \o Test procedure to make sure it is easy to perform, and will not
+    \li Test procedure to make sure it is easy to perform, and will not
  produce too many false positive recognitions. And if used with other gestures, collisions. Meaning
 that gestures performed get recognized as another gesture instead.
 
@@ -100,66 +100,66 @@ Here is a list of included plugins and their signals
 For ShakeGestures plugin:
     \table
         \row
-            \o Recognizer Id
-            \o Signals
+            \li Recognizer Id
+            \li Signals
         \row
-            \o QtSensors.shake
-            \o shake
+            \li QtSensors.shake
+            \li shake
 \endtable
 
 For QtSensorGestures plugin:
     \table
         \row
-            \o Recognizer Id
-            \o Signals
-            \o Description
-            \o Images
+            \li Recognizer Id
+            \li Signals
+            \li Description
+            \li Images
         \row
-            \o QtSensors.cover
-            \o cover
-            \o Hand covers up phone display for one second, when it's face up, using the IR Proximity and Orientation sensors.
-            \o \image sensorgesture-cover.png
+            \li QtSensors.cover
+            \li cover
+            \li Hand covers up phone display for one second, when it's face up, using the IR Proximity and Orientation sensors.
+            \li \image sensorgesture-cover.png
         \row
-            \o QtSensors.doubletap
-            \o doubletap
-            \o Double tap of finger on phone, using the DoubleTap sensor.
-            \o \image sensorgesture-doubletap.png
+            \li QtSensors.doubletap
+            \li doubletap
+            \li Double tap of finger on phone, using the DoubleTap sensor.
+            \li \image sensorgesture-doubletap.png
         \row
-            \o QtSensors.hover
-            \o hover
-            \o Hand hovers about 5 cm above the phone for more than 1 second, then is removed when face up,
+            \li QtSensors.hover
+            \li hover
+            \li Hand hovers about 5 cm above the phone for more than 1 second, then is removed when face up,
                using the IR Proximity sensor.
-            \o \image sensorgesture-hover.png
+            \li \image sensorgesture-hover.png
         \row
-            \o QtSensors.pickup
-            \o pickup
-            \o Phone is resting face up on a flat curface, and is then picked up and brought up into viewing position, using the Accelerometer sensor.
-            \o \image sensorgesture-faceup.png
+            \li QtSensors.pickup
+            \li pickup
+            \li Phone is resting face up on a flat curface, and is then picked up and brought up into viewing position, using the Accelerometer sensor.
+            \li \image sensorgesture-faceup.png
         \row
-            \o QtSensors.shake2
-            \o shakeLeft, shakeRight, shakeUp, shakeDown
-            \o Shake phone in a certain direction, using the Accelerometer sensor.
-            \o \image sensorgesture-shake.png
+            \li QtSensors.shake2
+            \li shakeLeft, shakeRight, shakeUp, shakeDown
+            \li Shake phone in a certain direction, using the Accelerometer sensor.
+            \li \image sensorgesture-shake.png
         \row
-            \o QtSensors.slam
-            \o slam
-            \o Move phone quickly down and then back up, using the Accelerometer and Orientation sensors.
-            \o \image sensorgesture-slam.png
+            \li QtSensors.slam
+            \li slam
+            \li Move phone quickly down and then back up, using the Accelerometer and Orientation sensors.
+            \li \image sensorgesture-slam.png
         \row
-            \o QtSensors.turnover
-            \o turnover
-            \o Phone is turned face down and placed on a surface, using Proximity and Orientation sensors.
-            \o \image sensorgesture-facedown.png
+            \li QtSensors.turnover
+            \li turnover
+            \li Phone is turned face down and placed on a surface, using Proximity and Orientation sensors.
+            \li \image sensorgesture-facedown.png
         \row
-            \o QtSensors.twist
-            \o twistLeft, twistRight
-            \o Phone is held face up and then twisted left or right (left side up or right side up) and back, using the Accelerometer and Orientation sensors.
-            \o \image sensorgesture-twist.png
+            \li QtSensors.twist
+            \li twistLeft, twistRight
+            \li Phone is held face up and then twisted left or right (left side up or right side up) and back, using the Accelerometer and Orientation sensors.
+            \li \image sensorgesture-twist.png
         \row
-            \o QtSensors.whip
-            \o whip
-            \o Phone held top up, is moved like a whip gesture, back towards one side of the phone, then forward towards the other side, using the Accelerometer and Orientation sensors.
-            \o \image sensorgesture-whip_1.png
+            \li QtSensors.whip
+            \li whip
+            \li Phone held top up, is moved like a whip gesture, back towards one side of the phone, then forward towards the other side, using the Accelerometer and Orientation sensors.
+            \li \image sensorgesture-whip_1.png
                \image sensorgesture-whip_2.png
    \endtable
 
diff --git a/doc/src/qtsensors-cpp.qdoc b/doc/src/qtsensors-cpp.qdoc
index 6740441..3df97f9 100644
--- a/doc/src/qtsensors-cpp.qdoc
+++ b/doc/src/qtsensors-cpp.qdoc
@@ -68,11 +68,11 @@ sensor.
 The life cycle of a QSensor is typically:
 
 \list
-\o Create an instance of QSensor or one of its sub-classes on the stack or heap.
-\o Setup as required by the application.
-\o Start receiving values.
-\o Sensor data is used by the application.
-\o Stop receiving values.
+\li Create an instance of QSensor or one of its sub-classes on the stack or heap.
+\li Setup as required by the application.
+\li Start receiving values.
+\li Sensor data is used by the application.
+\li Stop receiving values.
 \endlist
 
 Here is an example of creating a sensor on the heap and on the stack.
@@ -90,9 +90,9 @@ Thanks to Qt's property system you can still access the sensor data. You need to
 3 pieces of information in order to do this:
 
 \list
-\o The sensor type.
-\o The property name or index.
-\o The property type or a comparable type.
+\li The sensor type.
+\li The property name or index.
+\li The property type or a comparable type.
 \endlist
 
 For example, here is an example of how you can access a property of the accelerometer.
diff --git a/doc/src/qtsensors.qdoc b/doc/src/qtsensors.qdoc
index e19570f..342a799 100644
--- a/doc/src/qtsensors.qdoc
+++ b/doc/src/qtsensors.qdoc
@@ -39,25 +39,25 @@
 
     \table
         \row
-            \o \l {Qt Sensors QML API}{QML API}
-            \o Information about the Qt Sensors QML API
+            \li \l {Qt Sensors QML API}{QML API}
+            \li Information about the Qt Sensors QML API
         \row
-            \o \l {Qt Sensors C++ API}{C++ API}
-            \o Information about the Qt Sensors C++ API
+            \li \l {Qt Sensors C++ API}{C++ API}
+            \li Information about the Qt Sensors C++ API
         \row
-            \o \l {Qt Sensors Examples}{Examples}
-            \o Examples demonstrating use of the Qt Sensors APIs
+            \li \l {Qt Sensors Examples}{Examples}
+            \li Examples demonstrating use of the Qt Sensors APIs
     \endtable
 
     \section1 Information for Backend Implementors
 
     \table
         \row
-            \o \l {Qt Sensors Backend}{Backend}
-            \o Information about the Qt Sensors back end
+            \li \l {Qt Sensors Backend}{Backend}
+            \li Information about the Qt Sensors back end
         \row
-            \o \l {Grue Sensor Example}
-            \o The Grue Sensor Example demonstrates creation of a sensor backend
+            \li \l {Grue Sensor Example}
+            \li The Grue Sensor Example demonstrates creation of a sensor backend
     \endtable
 
     \section1 Compatibility with QtMobility Sensors API
@@ -67,11 +67,11 @@
 
     \table
         \row
-            \o \l {Porting Applications from QtMobility Sensors to Qt Sensors}{Porting Guide}
-            \o Information about the steps needed to port applications to the Qt Sensors API.
+            \li \l {Porting Applications from QtMobility Sensors to Qt Sensors}{Porting Guide}
+            \li Information about the steps needed to port applications to the Qt Sensors API.
         \row
-            \o \l {QtMobility.sensors 1.x}{Legacy QML API}
-            \o Information about the legacy QtMobility.sensors QML API
+            \li \l {QtMobility.sensors 1.x}{Legacy QML API}
+            \li Information about the legacy QtMobility.sensors QML API
     \endtable
 
 
@@ -81,22 +81,22 @@
 
     \table
         \row
-            \o \l {SensorGesture}{QML API}
-            \o Information about the Qt SensorGestures QML API
+            \li \l {SensorGesture}{QML API}
+            \li Information about the Qt SensorGestures QML API
         \row
-            \o \l {QtSensorGestures C++ API}{C++ API}
-            \o Information about the Qt SensorGestures C++ API
+            \li \l {QtSensorGestures C++ API}{C++ API}
+            \li Information about the Qt SensorGestures C++ API
     \endtable
 
     \section1 Information for Qt SensorGestures Recognizer Plugin Implementors.
 
     \table
         \row
-            \o \l {QtSensorGestures Plugins}{Plugins}
-            \o Information about the Qt SensorGestures recognizer plugins.
+            \li \l {QtSensorGestures Plugins}{Plugins}
+            \li Information about the Qt SensorGestures recognizer plugins.
         \row
-            \o \l {QtSensorGestures Emulator}{Emulator}
-            \o Information about Qt SensorGestures use in the Emulator.
+            \li \l {QtSensorGestures Emulator}{Emulator}
+            \li Information about Qt SensorGestures use in the Emulator.
     \endtable
 
 */
diff --git a/src/imports/sensors2/qsensor2ambientlight.cpp b/src/imports/sensors2/qsensor2ambientlight.cpp
index 49f1933..6a4fe0e 100644
--- a/src/imports/sensors2/qsensor2ambientlight.cpp
+++ b/src/imports/sensors2/qsensor2ambientlight.cpp
@@ -52,7 +52,7 @@ QT_BEGIN_NAMESPACE
     \since QtSensors 5.0
     \brief The AmbientLightSensor element provides easy access to determine the ambient light by using the ambient light sensor.
 
-    This element is part of the \bold{QtSensors 5} module.
+    This element is part of the \b{QtSensors 5} module.
 */
 QSensor2AmbientLight::QSensor2AmbientLight(QObject* parent)
     : qsensor2common(parent)
@@ -73,23 +73,23 @@ QSensor2AmbientLight::~QSensor2AmbientLight()
 
     \table
     \row
-        \o AmbientLightSensor.Unknown
-        \o Ambient light value is not set yet.
+        \li AmbientLightSensor.Unknown
+        \li Ambient light value is not set yet.
     \row
-        \o AmbientLightSensor.Dark
-        \o It is dark.
+        \li AmbientLightSensor.Dark
+        \li It is dark.
     \row
-        \o AmbientLightSensor.Twilight
-        \o It is moderately dark.
+        \li AmbientLightSensor.Twilight
+        \li It is moderately dark.
     \row
-        \o AmbientLightSensor.Light
-        \o It is light (eg. internal lights).
+        \li AmbientLightSensor.Light
+        \li It is light (eg. internal lights).
     \row
-        \o AmbientLightSensor.Bright
-        \o It is bright (eg. outside but in the shade).
+        \li AmbientLightSensor.Bright
+        \li It is bright (eg. outside but in the shade).
     \row
-        \o AmbientLightSensor.Sunny
-        \o It is very bright (eg. direct sunlight).
+        \li AmbientLightSensor.Sunny
+        \li It is very bright (eg. direct sunlight).
     \endtable
 */
 QSensor2AmbientLight::LightLevel QSensor2AmbientLight::lightLevel()
diff --git a/src/imports/sensors2/qsensor2gesture.cpp b/src/imports/sensors2/qsensor2gesture.cpp
index 0730e56..a1cc39c 100644
--- a/src/imports/sensors2/qsensor2gesture.cpp
+++ b/src/imports/sensors2/qsensor2gesture.cpp
@@ -53,7 +53,7 @@ QT_BEGIN_NAMESPACE
     \since QtSensors 5.0
     \brief The SensorGesture element provides notification when sensor gestures are triggered.
 
-    This element is part of the \bold{QtSensors 5} module.
+    This element is part of the \b{QtSensors 5} module.
 
     The following QML code creates a "shake" and "template" SensorGesture QML element.
 
diff --git a/src/imports/sensors2/qsensor2proximity.cpp b/src/imports/sensors2/qsensor2proximity.cpp
index 0166e17..ac2cf30 100644
--- a/src/imports/sensors2/qsensor2proximity.cpp
+++ b/src/imports/sensors2/qsensor2proximity.cpp
@@ -52,7 +52,7 @@ QT_BEGIN_NAMESPACE
     \since QtSensors 5.0
     \brief The ProximitySensor element provides an easy access to determine if the proximity of the mobile user by using the proximity sensor.
 
-    This element is part of the \bold{QtSensors 5} module.
+    This element is part of the \b{QtSensors 5} module.
 */
 
 QSensor2Proximity::QSensor2Proximity(QObject* parent)
diff --git a/src/imports/sensors2/qsensor2tilt.cpp b/src/imports/sensors2/qsensor2tilt.cpp
index e261fe7..f1d8a6a 100644
--- a/src/imports/sensors2/qsensor2tilt.cpp
+++ b/src/imports/sensors2/qsensor2tilt.cpp
@@ -57,7 +57,7 @@ QT_BEGIN_NAMESPACE
     \since QtSensors 5.0
     \brief The TiltSensor element provides tilt datas from x and y rotation of the device using the accelerometer sensor.
 
-    This element is part of the \bold{QtSensors 5} module.
+    This element is part of the \b{QtSensors 5} module.
 */
 QSensor2Tilt::QSensor2Tilt(QObject* parent)
     : qsensor2common(parent)
@@ -143,17 +143,17 @@ void QSensor2Tilt::createRunModeDataRateMap()
 
     \table
     \row
-        \o TiltSensor.Slow
-        \o The sensor runs in slow mode.
-        \o Closest available datarate at 2Hz.
+        \li TiltSensor.Slow
+        \li The sensor runs in slow mode.
+        \li Closest available datarate at 2Hz.
     \row
-        \o TiltSensor.Medium
-        \o The sensor runs in medium mode.
-        \o Closest available datarate at 10Hz.
+        \li TiltSensor.Medium
+        \li The sensor runs in medium mode.
+        \li Closest available datarate at 10Hz.
     \row
-        \o TiltSensor.Fast
-        \o The sensor runs in fast mode.
-        \o Closest available datarate at 20Hz.
+        \li TiltSensor.Fast
+        \li The sensor runs in fast mode.
+        \li Closest available datarate at 20Hz.
     \endtable
 */
 QSensor2Tilt::Speed QSensor2Tilt::speed()
@@ -198,11 +198,11 @@ void QSensor2Tilt::setEnabled(const bool val)
     Returns the unit of the rotation which can be one of:
     \table
     \row
-        \o TiltSensor.Radians
-        \o The unit of the rotation angle is radians.
+        \li TiltSensor.Radians
+        \li The unit of the rotation angle is radians.
     \row
-        \o TiltSensor.Degrees
-        \o The unit of the rotation angle is degrees.
+        \li TiltSensor.Degrees
+        \li The unit of the rotation angle is degrees.
     \endtable
 */
 QSensor2Tilt::Unit QSensor2Tilt::unit()
@@ -225,9 +225,9 @@ void QSensor2Tilt::setUnit(const QSensor2Tilt::Unit val)
 
     \table
     \row
-        \o
+        \li
         \image YAngle.gif
-        \o
+        \li
         \image YAngleNegative.gif
     \endtable
 */
@@ -244,9 +244,9 @@ qreal QSensor2Tilt::yRotation()
     Holds the rotation arround the x axis.
     \table
     \row
-        \o
+        \li
         \image XAngle.gif
-        \o
+        \li
         \image XAngleNegative.gif
     \endtable
 */
@@ -295,17 +295,17 @@ inline qreal calcRoll(double Ax, double Ay, double Az)
     Accuracy 5.5 will notify the client application about an rotation change only if the rotation angle over the X and / or Y axis was changed by 5.5 or more degrees clockwise or anti-clockwise.
 
     \table
-    \header \o Rotation \o notify application \o reason
-    \row \o 0.2424   \o no   \o
-    \row \o 4.34234  \o no   \o
-    \row \o 5.23423  \o no   \o
-    \row \o 6.34324  \o yes  \o because 6.34324 >= 5.5
-    \row \o 7.43264  \o no   \o
-    \row \o 8.24504  \o no   \o
-    \row \o 9.34653  \o no   \o
-    \row \o 10.23476 \o no   \o
-    \row \o 11.43565 \o no   \o
-    \row \o 12.45645 \o yes  \o because 12.45645 - 6.34324 = 6.11321 >= 5.5
+    \header \li Rotation \li notify application \li reason
+    \row \li 0.2424   \li no   \li
+    \row \li 4.34234  \li no   \li
+    \row \li 5.23423  \li no   \li
+    \row \li 6.34324  \li yes  \li because 6.34324 >= 5.5
+    \row \li 7.43264  \li no   \li
+    \row \li 8.24504  \li no   \li
+    \row \li 9.34653  \li no   \li
+    \row \li 10.23476 \li no   \li
+    \row \li 11.43565 \li no   \li
+    \row \li 12.45645 \li yes  \li because 12.45645 - 6.34324 = 6.11321 >= 5.5
     \endtable
 */
 /*!
diff --git a/src/sensors/gestures/qsensorgesture.cpp b/src/sensors/gestures/qsensorgesture.cpp
index 16f0b22..e0ed1b8 100644
--- a/src/sensors/gestures/qsensorgesture.cpp
+++ b/src/sensors/gestures/qsensorgesture.cpp
@@ -60,7 +60,7 @@
     have their own specific signals, and may be discovered through
     QSensorGesture::gestureSignals().
 
-    \bold {Note that QSensorGesture uses a custom meta-object in order to provide
+    \b {Note that QSensorGesture uses a custom meta-object in order to provide
     recognizer-specific signals. This means it is not possible to sub-class
     QSensorGesture and use Q_OBJECT. Also qobject_cast<QSensorGesture*>(ptr) will
     not work.}
diff --git a/src/sensors/qrotationsensor.cpp b/src/sensors/qrotationsensor.cpp
index 9d3b8d4..b2d65e3 100644
--- a/src/sensors/qrotationsensor.cpp
+++ b/src/sensors/qrotationsensor.cpp
@@ -66,11 +66,11 @@ IMPLEMENT_READING(QRotationReading)
     The three angles are applied to the device in the following order.
 
     \list
-    \o Right-handed rotation z (-180, 180]. Starting from the y-axis and
+    \li Right-handed rotation z (-180, 180]. Starting from the y-axis and
      incrementing in the counter-clockwise direction.
-    \o Right-handed rotation x [-90, 90]. Starting from the new
+    \li Right-handed rotation x [-90, 90]. Starting from the new
      (once-rotated) y-axis and incrementing towards the z-axis.
-    \o Right-handed rotation y (-180, 180]. Starting from the new
+    \li Right-handed rotation y (-180, 180]. Starting from the new
      (twice-rotated) z-axis and incrementing towards the x-axis.
     \endlist
 
diff --git a/src/sensors/qsensor.cpp b/src/sensors/qsensor.cpp
index 8c9a79f..8d670bb 100644
--- a/src/sensors/qsensor.cpp
+++ b/src/sensors/qsensor.cpp
@@ -159,11 +159,11 @@ static int qoutputrangelist_id = qRegisterMetaType<qoutputrangelist>("qoutputran
     The life cycle of a sensor is typically:
 
     \list
-    \o Create a sub-class of QSensor on the stack or heap.
-    \o Setup as required by the application.
-    \o Start receiving values.
-    \o Sensor data is used by the application.
-    \o Stop receiving values.
+    \li Create a sub-class of QSensor on the stack or heap.
+    \li Setup as required by the application.
+    \li Start receiving values.
+    \li Sensor data is used by the application.
+    \li Stop receiving values.
     \endlist
 
     The sensor data is delivered via QSensorReading and its sub-classes.
@@ -848,7 +848,7 @@ QSensorReading::~QSensorReading()
     Note that sensor timestamps from different sensors may not be directly
     comparable (as they may choose different fixed points for their reference).
 
-    \bold{Note that some platforms do not deliver timestamps correctly}.
+    \b{Note that some platforms do not deliver timestamps correctly}.
     Applications should be prepared for occasional issues that cause timestamps to jump
     backwards.
 */
diff --git a/src/sensors/qtapsensor.cpp b/src/sensors/qtapsensor.cpp
index 5cf712b..8d57b8e 100644
--- a/src/sensors/qtapsensor.cpp
+++ b/src/sensors/qtapsensor.cpp
@@ -149,8 +149,8 @@ void QTapReading::setTapDirection(QTapReading::TapDirection tapDirection)
     \brief a value indicating if there was a single or double tap.
 
     \list
-    \o true - double tap
-    \o false - single tap
+    \li true - double tap
+    \li false - single tap
     \endlist
     \sa {QTapReading Units}
 */