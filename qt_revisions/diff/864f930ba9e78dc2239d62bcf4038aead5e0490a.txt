diff --git a/src/corelib/tools/qstring.cpp b/src/corelib/tools/qstring.cpp
index 69650f5..ebf157a 100644
--- a/src/corelib/tools/qstring.cpp
+++ b/src/corelib/tools/qstring.cpp
@@ -372,7 +372,7 @@ inline char qToLower(char ch)
 /*!
    \internal
 */
-bool qStringComparisonHelper(const QString &s1, const char *s2)
+Q_CORE_EXPORT bool qStringComparisonHelper(const QString &s1, const char *s2)
 {
     // ### optimize me
     return s1 == QString::fromAscii(s2);
@@ -381,7 +381,7 @@ bool qStringComparisonHelper(const QString &s1, const char *s2)
 /*!
    \internal
 */
-bool qStringComparisonHelper(const QString &s1, const QByteArray &s2)
+Q_CORE_EXPORT bool qStringComparisonHelper(const QString &s1, const QByteArray &s2)
 {
     // ### optimize me
     return s1 == QString::fromAscii(s2);
@@ -390,7 +390,7 @@ bool qStringComparisonHelper(const QString &s1, const QByteArray &s2)
 /*!
    \internal
 */
-bool qStringComparisonHelper(const QStringRef &s1, const char *s2)
+Q_CORE_EXPORT bool qStringComparisonHelper(const QStringRef &s1, const char *s2)
 {
     // ### optimize me
     return s1 == QString::fromAscii(s2);
@@ -399,7 +399,7 @@ bool qStringComparisonHelper(const QStringRef &s1, const char *s2)
 /*!
    \internal
 */
-bool qStringComparisonHelper(const QStringRef &s1, const QByteArray &s2)
+Q_CORE_EXPORT bool qStringComparisonHelper(const QStringRef &s1, const QByteArray &s2)
 {
     // ### optimize me
     return s1 == QString::fromAscii(s2);
diff --git a/src/corelib/tools/qstring.h b/src/corelib/tools/qstring.h
index 1ddaded..4e59b0f 100644
--- a/src/corelib/tools/qstring.h
+++ b/src/corelib/tools/qstring.h
@@ -674,10 +674,10 @@ private:
     friend class QTextCodec;
     friend class QStringRef;
     friend struct QAbstractConcatenable;
-    friend bool qStringComparisonHelper(const QString &s1, const char *s2);
-    friend bool qStringComparisonHelper(const QString &s1, const QByteArray &s2);
-    friend bool qStringComparisonHelper(const QStringRef &s1, const char *s2);
-    friend bool qStringComparisonHelper(const QStringRef &s1, const QByteArray &s2);
+    friend Q_CORE_EXPORT bool qStringComparisonHelper(const QString &s1, const char *s2);
+    friend Q_CORE_EXPORT bool qStringComparisonHelper(const QString &s1, const QByteArray &s2);
+    friend Q_CORE_EXPORT bool qStringComparisonHelper(const QStringRef &s1, const char *s2);
+    friend Q_CORE_EXPORT bool qStringComparisonHelper(const QStringRef &s1, const QByteArray &s2);
 public:
     typedef Data * DataPtr;
     inline DataPtr &data_ptr() { return d; }