diff --git a/src/declarative/qml/parser/parser.pri b/src/declarative/qml/parser/parser.pri
index fd4361c..afd5a8a 100644
--- a/src/declarative/qml/parser/parser.pri
+++ b/src/declarative/qml/parser/parser.pri
@@ -19,3 +19,6 @@ SOURCES += \
     $$PWD/qdeclarativejsgrammar.cpp \
     $$PWD/qdeclarativejslexer.cpp \
     $$PWD/qdeclarativejsparser.cpp
+
+OTHER_FILES += \
+    $$PWD/qdeclarativejs.g
diff --git a/src/declarative/qml/parser/qdeclarativejs.g b/src/declarative/qml/parser/qdeclarativejs.g
index 2f89f8f..b00f6bf 100644
--- a/src/declarative/qml/parser/qdeclarativejs.g
+++ b/src/declarative/qml/parser/qdeclarativejs.g
@@ -61,6 +61,7 @@
 %token T_RESERVED_WORD "reserved word"
 %token T_MULTILINE_STRING_LITERAL "multiline string literal"
 %token T_COMMENT "comment"
+%token T_COMPATIBILITY_SEMICOLON
 
 --- context keywords.
 %token T_PUBLIC "public"
@@ -124,7 +125,7 @@
 ****************************************************************************/
 
 #include <QtCore/QtDebug>
-#include <QtGui/QApplication>
+#include <QtWidgets/QApplication>
 
 #include <string.h>
 
@@ -189,8 +190,15 @@
 //
 
 //
-// This file is automatically generated from qmljs.g.
-// Changes will be lost.
+//  W A R N I N G
+//  -------------
+//
+// This file is automatically generated from qdeclarativejs.g.
+// Changes should be made to that file, not here. Any change to this file will
+// be lost!
+//
+// To regenerate this file, run:
+//    qlalr --no-debug --no-lines --qt qdeclarativejs.g
 //
 
 #ifndef QDECLARATIVEJSPARSER_P_H
@@ -376,13 +384,22 @@ protected:
 
 /.
 
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is automatically generated from qdeclarativejs.g.
+// Changes should be made to that file, not here. Any change to this file will
+// be lost!
+//
+// To regenerate this file, run:
+//    qlalr --no-debug --no-lines --qt qdeclarativejs.g
+//
+
 #include "private/qdeclarativejsparser_p.h"
 #include <QVarLengthArray>
 
-//
-// This file is automatically generated from qmljs.g.
-// Changes will be lost.
-//
+#include <stdlib.h>
 
 using namespace QDeclarativeJS;
 
@@ -395,9 +412,9 @@ void Parser::reallocateStack()
     else
         stack_size <<= 1;
 
-    sym_stack = reinterpret_cast<Value*> (qRealloc(sym_stack, stack_size * sizeof(Value)));
-    state_stack = reinterpret_cast<int*> (qRealloc(state_stack, stack_size * sizeof(int)));
-    location_stack = reinterpret_cast<AST::SourceLocation*> (qRealloc(location_stack, stack_size * sizeof(AST::SourceLocation)));
+    sym_stack = reinterpret_cast<Value*> (realloc(sym_stack, stack_size * sizeof(Value)));
+    state_stack = reinterpret_cast<int*> (realloc(state_stack, stack_size * sizeof(int)));
+    location_stack = reinterpret_cast<AST::SourceLocation*> (realloc(location_stack, stack_size * sizeof(AST::SourceLocation)));
 }
 
 inline static bool automatic(Engine *driver, int token)
@@ -423,9 +440,9 @@ Parser::Parser(Engine *engine):
 Parser::~Parser()
 {
     if (stack_size) {
-        qFree(sym_stack);
-        qFree(state_stack);
-        qFree(location_stack);
+        free(sym_stack);
+        free(state_stack);
+        free(location_stack);
     }
 }
 
@@ -2562,6 +2579,7 @@ case $rule_number: {
 
 
 IterationStatement: T_DO Statement T_WHILE T_LPAREN Expression T_RPAREN T_AUTOMATIC_SEMICOLON ;  -- automatic semicolon
+IterationStatement: T_DO Statement T_WHILE T_LPAREN Expression T_RPAREN T_COMPATIBILITY_SEMICOLON ;  -- for JSC/V8 compatibility
 IterationStatement: T_DO Statement T_WHILE T_LPAREN Expression T_RPAREN T_SEMICOLON ;
 /.
 case $rule_number: {
@@ -3024,7 +3042,8 @@ PropertyNameAndValueListOpt: PropertyNameAndValueList ;
         const int errorState = state_stack[tos];
 
         // automatic insertion of `;'
-        if (yytoken != -1 && t_action(errorState, T_AUTOMATIC_SEMICOLON) && automatic(driver, yytoken)) {
+        if (yytoken != -1 && ((t_action(errorState, T_AUTOMATIC_SEMICOLON) && automatic(driver, yytoken))
+                              || t_action(errorState, T_COMPATIBILITY_SEMICOLON))) {
             SavedToken &tk = token_buffer[0];
             tk.token = yytoken;
             tk.dval = yylval;
diff --git a/src/declarative/qml/parser/qdeclarativejsgrammar.cpp b/src/declarative/qml/parser/qdeclarativejsgrammar.cpp
index 2c9853b..7ad1085 100644
--- a/src/declarative/qml/parser/qdeclarativejsgrammar.cpp
+++ b/src/declarative/qml/parser/qdeclarativejsgrammar.cpp
@@ -3,7 +3,7 @@
 ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 ** Contact: http://www.qt-project.org/legal
 **
-** This file is part of the QtDeclarative module of the Qt Toolkit.
+** This file is part of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
 ** Commercial License Usage
@@ -53,46 +53,46 @@ const char *const QDeclarativeJSGrammar::spell [] = {
   "||", "+", "+=", "++", "?", "}", "]", "%", "%=", "return", 
   ")", ";", 0, "*", "*=", "string literal", "property", "signal", "readonly", "switch", 
   "this", "throw", "~", "try", "typeof", "var", "void", "while", "with", "^", 
-  "^=", "null", "true", "false", "const", "debugger", "reserved word", "multiline string literal", "comment", "public", 
-  "import", "as", "on", 0, 0, 0, 0, 0, 0, 0, 
-  0};
+  "^=", "null", "true", "false", "const", "debugger", "reserved word", "multiline string literal", "comment", 0, 
+  "public", "import", "as", "on", 0, 0, 0, 0, 0, 0, 
+  0, 0};
 
 const short QDeclarativeJSGrammar::lhs [] = {
-  101, 101, 101, 101, 101, 101, 102, 108, 108, 111, 
-  111, 113, 112, 112, 112, 112, 112, 112, 112, 112, 
-  115, 110, 109, 118, 118, 119, 119, 120, 120, 117, 
-  106, 106, 106, 106, 106, 106, 106, 106, 126, 126, 
-  126, 127, 127, 128, 128, 106, 106, 106, 106, 106, 
-  106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 
-  106, 106, 106, 106, 106, 116, 116, 116, 116, 116, 
-  131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 
-  131, 131, 131, 131, 131, 131, 131, 131, 121, 133, 
-  133, 133, 133, 132, 132, 135, 135, 137, 137, 137, 
-  137, 137, 137, 138, 138, 138, 138, 138, 138, 138, 
-  138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 
-  138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 
-  138, 138, 138, 138, 139, 139, 114, 114, 114, 114, 
-  114, 142, 142, 143, 143, 143, 143, 141, 141, 144, 
-  144, 145, 145, 146, 146, 146, 147, 147, 147, 147, 
-  147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 
-  149, 149, 149, 150, 150, 150, 150, 151, 151, 151, 
-  151, 151, 151, 151, 152, 152, 152, 152, 152, 152, 
-  153, 153, 153, 153, 153, 154, 154, 154, 154, 154, 
-  155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 
-  160, 160, 161, 161, 162, 162, 163, 163, 164, 164, 
-  165, 165, 166, 166, 136, 136, 167, 167, 168, 168, 
-  168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 
-  104, 104, 169, 169, 170, 170, 171, 171, 103, 103, 
-  103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 
-  103, 103, 103, 122, 183, 183, 182, 182, 130, 130, 
-  184, 184, 185, 185, 187, 187, 186, 188, 191, 189, 
-  189, 192, 190, 190, 123, 124, 124, 125, 125, 172, 
-  172, 172, 172, 172, 172, 172, 173, 173, 173, 173, 
-  174, 174, 174, 174, 175, 175, 176, 178, 193, 193, 
-  196, 196, 194, 194, 197, 195, 177, 177, 177, 179, 
-  179, 180, 180, 180, 198, 199, 181, 181, 129, 140, 
-  203, 203, 200, 200, 201, 201, 204, 107, 205, 205, 
-  105, 105, 202, 202, 134, 134, 206};
+  102, 102, 102, 102, 102, 102, 103, 109, 109, 112, 
+  112, 114, 113, 113, 113, 113, 113, 113, 113, 113, 
+  116, 111, 110, 119, 119, 120, 120, 121, 121, 118, 
+  107, 107, 107, 107, 107, 107, 107, 107, 127, 127, 
+  127, 128, 128, 129, 129, 107, 107, 107, 107, 107, 
+  107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 
+  107, 107, 107, 107, 107, 117, 117, 117, 117, 117, 
+  132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 
+  132, 132, 132, 132, 132, 132, 132, 132, 122, 134, 
+  134, 134, 134, 133, 133, 136, 136, 138, 138, 138, 
+  138, 138, 138, 139, 139, 139, 139, 139, 139, 139, 
+  139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 
+  139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 
+  139, 139, 139, 139, 140, 140, 115, 115, 115, 115, 
+  115, 143, 143, 144, 144, 144, 144, 142, 142, 145, 
+  145, 146, 146, 147, 147, 147, 148, 148, 148, 148, 
+  148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 
+  150, 150, 150, 151, 151, 151, 151, 152, 152, 152, 
+  152, 152, 152, 152, 153, 153, 153, 153, 153, 153, 
+  154, 154, 154, 154, 154, 155, 155, 155, 155, 155, 
+  156, 156, 157, 157, 158, 158, 159, 159, 160, 160, 
+  161, 161, 162, 162, 163, 163, 164, 164, 165, 165, 
+  166, 166, 167, 167, 137, 137, 168, 168, 169, 169, 
+  169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 
+  105, 105, 170, 170, 171, 171, 172, 172, 104, 104, 
+  104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 
+  104, 104, 104, 123, 184, 184, 183, 183, 131, 131, 
+  185, 185, 186, 186, 188, 188, 187, 189, 192, 190, 
+  190, 193, 191, 191, 124, 125, 125, 126, 126, 173, 
+  173, 173, 173, 173, 173, 173, 173, 174, 174, 174, 
+  174, 175, 175, 175, 175, 176, 176, 177, 179, 194, 
+  194, 197, 197, 195, 195, 198, 196, 178, 178, 178, 
+  180, 180, 181, 181, 181, 199, 200, 182, 182, 130, 
+  141, 204, 204, 201, 201, 202, 202, 205, 108, 206, 
+  206, 106, 106, 203, 203, 135, 135, 207};
 
 const short QDeclarativeJSGrammar::rhs [] = {
   2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 
@@ -124,18 +124,18 @@ const short QDeclarativeJSGrammar::rhs [] = {
   1, 1, 1, 3, 1, 2, 0, 1, 3, 3, 
   1, 1, 1, 3, 1, 3, 2, 2, 2, 0, 
   1, 2, 0, 1, 1, 2, 2, 7, 5, 7, 
-  7, 5, 9, 10, 7, 8, 2, 2, 3, 3, 
-  2, 2, 3, 3, 3, 3, 5, 5, 3, 5, 
-  1, 2, 0, 1, 4, 3, 3, 3, 3, 3, 
-  3, 3, 3, 4, 5, 2, 2, 2, 8, 8, 
-  1, 3, 0, 1, 0, 1, 1, 1, 1, 2, 
-  1, 1, 0, 1, 0, 1, 2};
+  7, 7, 5, 9, 10, 7, 8, 2, 2, 3, 
+  3, 2, 2, 3, 3, 3, 3, 5, 5, 3, 
+  5, 1, 2, 0, 1, 4, 3, 3, 3, 3, 
+  3, 3, 3, 3, 4, 5, 2, 2, 2, 8, 
+  8, 1, 3, 0, 1, 0, 1, 1, 1, 1, 
+  2, 1, 1, 0, 1, 0, 1, 2};
 
 const short QDeclarativeJSGrammar::action_default [] = {
   0, 0, 0, 0, 0, 0, 22, 0, 174, 241, 
   205, 213, 209, 153, 225, 201, 3, 138, 72, 154, 
   217, 221, 142, 171, 152, 157, 137, 191, 178, 0, 
-  79, 80, 75, 343, 66, 345, 0, 0, 0, 0, 
+  79, 80, 75, 344, 66, 346, 0, 0, 0, 0, 
   77, 0, 0, 73, 76, 70, 0, 0, 67, 69, 
   68, 78, 71, 0, 74, 0, 0, 167, 0, 0, 
   154, 173, 156, 155, 0, 0, 0, 169, 170, 168, 
@@ -150,133 +150,133 @@ const short QDeclarativeJSGrammar::action_default [] = {
   0, 238, 231, 229, 236, 237, 235, 234, 240, 233, 
   232, 230, 239, 226, 0, 214, 0, 0, 218, 0, 
   0, 222, 0, 0, 148, 140, 0, 139, 0, 144, 
-  158, 0, 344, 333, 334, 0, 331, 0, 332, 0, 
-  335, 249, 256, 255, 263, 251, 0, 252, 336, 0, 
-  342, 253, 254, 259, 257, 339, 337, 341, 260, 0, 
-  271, 0, 0, 0, 0, 343, 66, 0, 345, 67, 
+  158, 0, 345, 334, 335, 0, 332, 0, 333, 0, 
+  336, 249, 256, 255, 263, 251, 0, 252, 337, 0, 
+  343, 253, 254, 259, 257, 340, 338, 342, 260, 0, 
+  271, 0, 0, 0, 0, 344, 66, 0, 346, 67, 
   243, 285, 68, 0, 0, 0, 272, 0, 0, 261, 
-  262, 0, 250, 258, 286, 287, 330, 340, 0, 301, 
-  302, 303, 304, 0, 297, 298, 299, 300, 327, 328, 
-  0, 0, 0, 0, 0, 290, 291, 247, 245, 207, 
-  215, 211, 227, 203, 248, 0, 154, 219, 223, 196, 
-  185, 0, 0, 204, 0, 0, 0, 0, 197, 0, 
-  0, 0, 0, 0, 189, 187, 190, 188, 186, 199, 
-  198, 200, 0, 212, 0, 208, 0, 246, 154, 0, 
-  228, 243, 244, 0, 243, 0, 0, 293, 0, 0, 
-  0, 295, 0, 216, 0, 0, 220, 0, 0, 224, 
-  283, 0, 275, 284, 278, 0, 282, 0, 243, 276, 
-  0, 243, 0, 0, 294, 0, 0, 0, 296, 344, 
-  333, 0, 0, 335, 0, 329, 0, 319, 0, 0, 
-  0, 289, 0, 288, 0, 346, 0, 103, 265, 268, 
-  0, 104, 271, 107, 132, 109, 110, 75, 114, 115, 
-  66, 116, 119, 73, 76, 67, 243, 68, 78, 122, 
-  71, 124, 74, 126, 127, 272, 129, 130, 134, 0, 
-  96, 0, 0, 98, 102, 100, 87, 99, 101, 0, 
-  97, 86, 266, 264, 142, 143, 148, 0, 141, 0, 
-  318, 0, 305, 306, 0, 317, 0, 0, 0, 308, 
-  313, 311, 314, 0, 0, 312, 313, 0, 309, 0, 
-  310, 267, 316, 0, 267, 315, 0, 320, 321, 0, 
-  267, 322, 323, 0, 0, 324, 0, 0, 0, 325, 
-  326, 160, 159, 0, 0, 0, 292, 0, 0, 0, 
-  307, 280, 273, 0, 281, 277, 0, 279, 269, 0, 
-  270, 274, 90, 0, 0, 94, 81, 0, 83, 92, 
-  0, 84, 93, 95, 85, 91, 82, 0, 88, 164, 
-  162, 166, 163, 161, 165, 6, 338, 4, 2, 64, 
-  89, 0, 0, 67, 69, 68, 31, 5, 0, 65, 
-  0, 41, 40, 39, 0, 0, 54, 0, 55, 0, 
-  60, 61, 0, 41, 0, 0, 0, 0, 0, 50, 
-  0, 51, 0, 0, 26, 0, 0, 62, 27, 0, 
-  30, 28, 24, 0, 29, 25, 0, 52, 0, 53, 
-  0, 142, 0, 56, 57, 63, 0, 0, 0, 0, 
-  0, 58, 59, 0, 48, 42, 49, 43, 0, 0, 
-  0, 0, 45, 0, 46, 47, 44, 0, 0, 35, 
-  36, 37, 38, 142, 267, 0, 0, 104, 271, 107, 
-  132, 109, 110, 75, 114, 115, 66, 116, 119, 73, 
-  76, 67, 243, 68, 78, 122, 71, 124, 74, 126, 
-  127, 272, 129, 130, 134, 0, 32, 33, 0, 34, 
-  8, 0, 10, 0, 9, 0, 1, 21, 12, 0, 
-  13, 0, 14, 0, 19, 20, 0, 15, 16, 0, 
-  17, 18, 11, 23, 7, 347};
+  262, 0, 250, 258, 286, 287, 331, 341, 0, 302, 
+  303, 304, 305, 0, 298, 299, 300, 301, 328, 329, 
+  0, 0, 0, 0, 0, 290, 291, 292, 247, 245, 
+  207, 215, 211, 227, 203, 248, 0, 154, 219, 223, 
+  196, 185, 0, 0, 204, 0, 0, 0, 0, 197, 
+  0, 0, 0, 0, 0, 189, 187, 190, 188, 186, 
+  199, 198, 200, 0, 212, 0, 208, 0, 246, 154, 
+  0, 228, 243, 244, 0, 243, 0, 0, 294, 0, 
+  0, 0, 296, 0, 216, 0, 0, 220, 0, 0, 
+  224, 283, 0, 275, 284, 278, 0, 282, 0, 243, 
+  276, 0, 243, 0, 0, 295, 0, 0, 0, 297, 
+  345, 334, 0, 0, 336, 0, 330, 0, 320, 0, 
+  0, 0, 289, 0, 288, 0, 347, 0, 103, 265, 
+  268, 0, 104, 271, 107, 132, 109, 110, 75, 114, 
+  115, 66, 116, 119, 73, 76, 67, 243, 68, 78, 
+  122, 71, 124, 74, 126, 127, 272, 129, 130, 134, 
+  0, 96, 0, 0, 98, 102, 100, 87, 99, 101, 
+  0, 97, 86, 266, 264, 142, 143, 148, 0, 141, 
+  0, 319, 0, 306, 307, 0, 318, 0, 0, 0, 
+  309, 314, 312, 315, 0, 0, 313, 314, 0, 310, 
+  0, 311, 267, 317, 0, 267, 316, 0, 321, 322, 
+  0, 267, 323, 324, 0, 0, 325, 0, 0, 0, 
+  326, 327, 160, 159, 0, 0, 0, 293, 0, 0, 
+  0, 308, 280, 273, 0, 281, 277, 0, 279, 269, 
+  0, 270, 274, 90, 0, 0, 94, 81, 0, 83, 
+  92, 0, 84, 93, 95, 85, 91, 82, 0, 88, 
+  164, 162, 166, 163, 161, 165, 6, 339, 4, 2, 
+  64, 89, 0, 0, 67, 69, 68, 31, 5, 0, 
+  65, 0, 41, 40, 39, 0, 0, 54, 0, 55, 
+  0, 60, 61, 0, 41, 0, 0, 0, 0, 0, 
+  50, 0, 51, 0, 0, 26, 0, 0, 62, 27, 
+  0, 30, 28, 24, 0, 29, 25, 0, 52, 0, 
+  53, 0, 142, 0, 56, 57, 63, 0, 0, 0, 
+  0, 0, 58, 59, 0, 48, 42, 49, 43, 0, 
+  0, 0, 0, 45, 0, 46, 47, 44, 0, 0, 
+  35, 36, 37, 38, 142, 267, 0, 0, 104, 271, 
+  107, 132, 109, 110, 75, 114, 115, 66, 116, 119, 
+  73, 76, 67, 243, 68, 78, 122, 71, 124, 74, 
+  126, 127, 272, 129, 130, 134, 0, 32, 33, 0, 
+  34, 8, 0, 10, 0, 9, 0, 1, 21, 12, 
+  0, 13, 0, 14, 0, 19, 20, 0, 15, 16, 
+  0, 17, 18, 11, 23, 7, 348};
 
 const short QDeclarativeJSGrammar::goto_default [] = {
-  7, 626, 207, 196, 205, 507, 495, 625, 644, 620, 
-  624, 622, 627, 22, 623, 18, 506, 543, 533, 540, 
-  535, 191, 195, 197, 201, 524, 568, 567, 200, 232, 
-  26, 474, 473, 356, 355, 9, 354, 357, 107, 17, 
+  7, 627, 207, 196, 205, 508, 496, 626, 645, 621, 
+  625, 623, 628, 22, 624, 18, 507, 544, 534, 541, 
+  536, 191, 195, 197, 201, 525, 569, 568, 200, 232, 
+  26, 475, 474, 357, 356, 9, 355, 358, 107, 17, 
   145, 24, 13, 144, 19, 25, 57, 23, 8, 28, 
-  27, 269, 15, 263, 10, 259, 12, 261, 11, 260, 
-  20, 267, 21, 268, 14, 262, 258, 299, 411, 264, 
-  265, 202, 193, 192, 204, 233, 203, 208, 229, 230, 
-  194, 360, 359, 231, 463, 462, 321, 322, 465, 324, 
-  464, 323, 419, 423, 426, 422, 421, 441, 442, 185, 
+  27, 270, 15, 264, 10, 260, 12, 262, 11, 261, 
+  20, 268, 21, 269, 14, 263, 259, 300, 412, 265, 
+  266, 202, 193, 192, 204, 233, 203, 208, 229, 230, 
+  194, 361, 360, 231, 464, 463, 322, 323, 466, 325, 
+  465, 324, 420, 424, 427, 423, 422, 442, 443, 185, 
   199, 181, 184, 198, 206, 0};
 
 const short QDeclarativeJSGrammar::action_index [] = {
-  421, 1288, 2322, 2322, 2419, 1016, -52, 37, 140, -101, 
-  35, -13, -40, 190, -101, 272, 34, -101, -101, 658, 
-  42, 103, 194, 201, -101, -101, -101, 439, 256, 1288, 
-  -101, -101, -101, 282, -101, 2128, 1751, 1288, 1288, 1288, 
-  -101, 917, 1288, -101, -101, -101, 1288, 1288, -101, -101, 
-  -101, -101, -101, 1288, -101, 1288, 1288, -101, 1288, 1288, 
-  109, 245, -101, -101, 1288, 1288, 1288, -101, -101, -101, 
-  185, 1288, 295, 1288, 1288, 1288, 1288, 461, 1288, 1288, 
-  1288, 1288, 1288, 1288, 256, 1288, 1288, 1288, 155, 119, 
-  114, 176, 256, 332, 202, 332, 560, 560, 471, 1288, 
-  -23, 1288, 53, 2031, 1288, 1288, -101, -101, -101, -101, 
-  -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, 
-  -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, 
-  -101, -101, -101, -101, -101, -101, -101, -101, -101, -101, 
-  100, 1288, -101, -101, 70, 59, -101, 1288, -101, -101, 
-  1288, -101, -101, -101, -101, -101, -101, -101, -101, -101, 
-  -101, -101, -101, -101, 1288, 41, 1288, 1288, 98, 91, 
-  1288, -101, 2031, 1288, 1288, -101, 121, -101, 73, -101, 
-  -101, 39, -101, 385, 180, 78, -101, 391, -101, 64, 
-  2322, -101, -101, -101, -101, -101, 208, -101, -101, 82, 
-  -101, -101, -101, -101, -101, -101, 2322, -101, -101, 538, 
-  -101, 495, 128, 2419, 54, 358, 62, 44, 2613, 67, 
-  1288, -101, 76, 63, 1288, 58, -101, 60, 46, -101, 
-  -101, 309, -101, -101, -101, -101, -101, -101, 86, -101, 
-  -101, -101, -101, 107, -101, -101, -101, -101, -101, -101, 
-  28, 52, 1288, 101, 102, -101, -101, 1472, -101, 83, 
-  75, 79, -101, 287, 84, 80, 585, 69, 89, 321, 
-  177, 482, 1288, 297, 1288, 1288, 1288, 1288, 331, 1288, 
-  1288, 1288, 1288, 1288, 332, 222, 332, 332, 332, 410, 
-  410, 410, 1288, 57, 1288, 72, 1288, -101, 658, 1288, 
-  -101, 1288, 71, 45, 1288, 61, 2419, -101, 1288, 132, 
-  2419, -101, 1288, 47, 1288, 1288, 66, 65, 1288, -101, 
-  68, 112, 81, -101, -101, 1288, -101, 369, 1288, -101, 
-  85, 1288, 74, 2419, -101, 1288, 122, 2419, -101, 77, 
-  294, 16, -29, 2322, -53, -101, 2419, -101, 1288, 127, 
-  2419, -15, 2419, -101, 10, 11, -34, -101, -101, 2419, 
-  -48, 504, 4, 476, 113, 1288, 2419, 2, -28, 420, 
-  6, -21, 719, 7, 87, -101, 1382, -101, -4, -16, 
-  5, 1288, 3, -27, 1288, 9, 1288, -18, -31, 1288, 
-  -101, 2225, -7, -101, -101, -101, -101, -101, -101, 1288, 
-  -101, -101, -101, -101, 246, -101, 1288, -38, -101, 2419, 
-  -101, 88, -101, -101, 2419, -101, 1288, 106, 26, -101, 
-  55, -101, 50, 105, 1288, -101, 48, 38, -101, -8, 
-  -101, 2419, -101, 94, 2419, -101, 238, -101, -101, 104, 
-  2419, 31, -101, 21, 19, -101, 305, 1, 30, -101, 
-  -101, -101, -101, 1288, 136, 2419, -101, 1288, 134, 2419, 
-  -101, 49, -101, 173, -101, -101, 1288, -101, -101, 363, 
-  -101, -101, -101, 137, 1565, -101, -101, 1658, -101, -101, 
-  1844, -101, -101, -101, -101, -101, -101, 95, -101, -101, 
-  -101, -101, -101, -101, -101, -101, 2322, -101, -101, -101, 
-  92, 15, 925, 169, 27, -6, -101, -101, 212, -101, 
-  191, -101, -101, -101, 323, 211, -101, 1288, -101, 214, 
-  -101, -101, 216, 40, 317, 210, 43, 259, 236, -101, 
-  36, -101, 747, 96, -101, 29, 747, -101, -101, 1198, 
-  -101, -101, -101, 1107, -101, -101, 231, -101, 1288, -101, 
-  217, 286, 32, -101, -101, -101, 188, 340, 51, 1288, 
-  175, -101, -101, 171, -101, 179, -101, 56, -11, 351, 
-  181, 336, -101, 110, -101, -101, -101, 1934, 647, -101, 
-  -101, -101, -101, 253, 2516, 1751, -5, 460, 22, 468, 
-  138, 1288, 2419, 24, -2, 412, 23, -3, 836, 20, 
-  87, -101, 1382, -101, 17, -10, 18, 1288, 25, 8, 
-  1288, 33, 1288, 12, 14, 120, -101, -101, 13, -101, 
-  -101, 747, -101, 248, -47, 828, -101, -101, 152, 482, 
-  -101, 150, -101, 123, -101, -101, 398, -101, -101, 117, 
-  -101, -101, -101, -101, -101, -101, 
+  399, 1335, 2478, 2478, 2380, 1060, 61, 92, 118, -102, 
+  90, 58, 55, 260, -102, 309, 77, -102, -102, 561, 
+  78, 99, 203, 186, -102, -102, -102, 526, 265, 1335, 
+  -102, -102, -102, 374, -102, 2184, 1709, 1335, 1335, 1335, 
+  -102, 878, 1335, -102, -102, -102, 1335, 1335, -102, -102, 
+  -102, -102, -102, 1335, -102, 1335, 1335, -102, 1335, 1335, 
+  84, 211, -102, -102, 1335, 1335, 1335, -102, -102, -102, 
+  210, 1335, 291, 1335, 1335, 1335, 1335, 526, 1335, 1335, 
+  1335, 1335, 1335, 1335, 233, 1335, 1335, 1335, 187, 187, 
+  187, 221, 268, 261, 167, 157, 526, 526, 526, 1335, 
+  55, 1335, 64, 2086, 1335, 1335, -102, -102, -102, -102, 
+  -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, 
+  -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, 
+  -102, -102, -102, -102, -102, -102, -102, -102, -102, -102, 
+  117, 1335, -102, -102, 63, 36, -102, 1335, -102, -102, 
+  1335, -102, -102, -102, -102, -102, -102, -102, -102, -102, 
+  -102, -102, -102, -102, 1335, 35, 1335, 1335, 70, 62, 
+  1335, -102, 2086, 1335, 1335, -102, 132, -102, 33, -102, 
+  -102, 31, -102, 278, 60, 41, -102, 321, -102, 51, 
+  2478, -102, -102, -102, -102, -102, 239, -102, -102, 43, 
+  -102, -102, -102, -102, -102, -102, 2478, -102, -102, 486, 
+  -102, 472, 113, 2380, 50, 406, 72, 40, 2674, 68, 
+  1335, -102, 67, 34, 1335, 45, -102, 46, 54, -102, 
+  -102, 361, -102, -102, -102, -102, -102, -102, 83, -102, 
+  -102, -102, -102, 81, -102, -102, -102, -102, -102, -102, 
+  53, 69, 1335, 102, 147, -102, -102, -102, 1426, -102, 
+  96, 80, 71, -102, 294, 73, 74, 698, 86, 79, 
+  340, 225, 333, 1335, 312, 1335, 1335, 1335, 1335, 447, 
+  1335, 1335, 1335, 1335, 1335, 172, 164, 158, 179, 188, 
+  447, 447, 447, 1335, 42, 1335, 76, 1335, -102, 594, 
+  1335, -102, 1335, 65, 28, 1335, 27, 2380, -102, 1335, 
+  133, 2380, -102, 1335, 75, 1335, 1335, 93, 87, 1335, 
+  -102, 82, 153, 32, -102, -102, 1335, -102, 285, 1335, 
+  -102, 66, 1335, 59, 2380, -102, 1335, 140, 2380, -102, 
+  -36, 341, -42, -17, 2478, -47, -102, 2380, -102, 1335, 
+  143, 2380, -2, 2380, -102, 13, 5, -43, -102, -102, 
+  2380, -44, 475, 8, 452, 119, 1335, 2380, 10, -15, 
+  439, 16, -14, 746, 0, 12, -102, 1521, -102, 3, 
+  -33, -1, 1335, -5, -32, 1335, -3, 1335, 30, -11, 
+  1335, -102, 2282, 39, -102, -102, -102, -102, -102, -102, 
+  1335, -102, -102, -102, -102, 368, -102, 1335, -12, -102, 
+  2380, -102, 115, -102, -102, 2380, -102, 1335, 94, -9, 
+  -102, 44, -102, 52, 101, 1335, -102, 56, 49, -102, 
+  7, -102, 2380, -102, 100, 2380, -102, 217, -102, -102, 
+  97, 2380, 11, -102, -4, 1, -102, 419, -22, 14, 
+  -102, -102, -102, -102, 1335, 105, 2380, -102, 1335, 112, 
+  2380, -102, 23, -102, 208, -102, -102, 1335, -102, -102, 
+  396, -102, -102, -102, 110, 1615, -102, -102, 1988, -102, 
+  -102, 1894, -102, -102, -102, -102, -102, -102, 104, -102, 
+  -102, -102, -102, -102, -102, -102, -102, 2478, -102, -102, 
+  -102, 123, -13, 968, 205, -8, -20, -102, -102, 224, 
+  -102, 190, -102, -102, -102, 384, 183, -102, 1335, -102, 
+  171, -102, -102, 206, 4, 356, 178, 18, 365, 194, 
+  -102, 9, -102, 968, 131, -102, 6, 788, -102, -102, 
+  1152, -102, -102, -102, 1244, -102, -102, 222, -102, 1335, 
+  -102, 220, 282, 19, -102, -102, -102, 191, 344, 29, 
+  1335, 281, -102, -102, 150, -102, 149, -102, 25, -23, 
+  353, 212, 300, -102, 109, -102, -102, -102, 1800, 870, 
+  -102, -102, -102, -102, 287, 2576, 1709, 2, 599, 20, 
+  515, 85, 1335, 2380, 21, -10, 424, 22, -6, 651, 
+  125, 37, -102, 1521, -102, 47, 24, 48, 1335, 57, 
+  26, 1335, 38, 1335, 30, 15, 107, -102, -102, 17, 
+  -102, -102, 968, -102, 264, -86, 968, -102, -102, 121, 
+  293, -102, 243, -102, 106, -102, -102, 350, -102, -102, 
+  98, -102, -102, -102, -102, -102, -102, 
 
   -106, 6, -92, 10, 5, 278, -106, -106, -106, -106, 
   -106, -106, -106, -106, -106, -106, -106, -106, -106, -42, 
@@ -300,361 +300,367 @@ const short QDeclarativeJSGrammar::action_index [] = {
   -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, 
   -106, -106, -106, -106, -106, -106, 70, -106, -106, 61, 
   -106, 41, -106, 39, -106, 37, -106, -106, 42, -106, 
-  79, -106, -106, -106, 81, 72, -106, -106, -106, -106, 
+  79, -106, -106, -106, 80, 72, -106, -106, -106, -106, 
   -106, -5, -106, -106, -106, -106, -106, -106, -106, -106, 
   -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, 
-  -106, -106, 21, -106, -106, -106, -106, 112, -106, -106, 
+  -106, -106, 21, -106, -106, -106, -106, -106, 112, -106, 
   -106, -106, -106, -106, -106, -106, -106, -106, -106, -106, 
-  -106, 17, 237, -106, 192, 236, 224, 225, -106, 97, 
-  98, 101, 99, 113, -106, -106, -106, -106, -106, -106, 
-  -106, -106, 204, -106, 223, -106, 235, -106, -106, 239, 
-  -106, 197, -106, -106, 228, -106, 27, -106, 13, -106, 
-  2, -106, 233, -106, 190, 198, -106, -106, 196, -106, 
-  -106, -106, -106, -106, -106, 200, -106, 107, 135, -106, 
-  -106, 186, -106, 84, -106, 80, -106, 76, -106, -106, 
-  89, -106, -106, -49, -106, -106, 47, -106, 40, -106, 
-  44, -106, 68, -106, -106, -106, -106, -106, -106, 53, 
-  -106, 35, -106, 49, -106, 87, 63, -106, -106, 30, 
-  -106, -106, 103, -106, -106, -106, 51, -106, -106, -106, 
-  -106, 86, -106, 67, 114, -106, 74, -106, -106, 65, 
-  -106, 56, -106, -106, -106, -106, -106, -106, -106, 62, 
-  -106, -106, -106, -106, -106, -106, 95, -106, -106, 78, 
-  -106, -106, -106, -106, 75, -106, 88, -106, -106, -106, 
-  -106, -106, -54, -106, 45, -106, -40, -106, -106, -106, 
-  -106, 94, -106, -106, 100, -106, -106, -106, -106, -106, 
-  150, -41, -106, -106, 54, -106, 43, -106, 48, -106, 
-  -106, -106, -106, 59, -106, 57, -106, 60, -106, 58, 
-  -106, -106, -106, -106, -106, -106, 38, -106, -106, 144, 
-  -106, -106, -106, -106, 31, -106, -106, 202, -106, -106, 
-  50, -106, -106, -106, -106, -106, -106, -106, -106, -106, 
-  -106, -106, -106, -106, -106, -106, 77, -106, -106, -106, 
-  -106, -106, 82, -106, -106, -106, -106, -106, -106, -106, 
-  -17, -106, -106, -106, -4, -106, -106, 12, -106, -106, 
-  -106, -106, -106, -106, -14, 46, -106, -13, -106, -106, 
-  -106, -106, 108, -106, -106, -106, 243, -106, -106, 295, 
-  -106, -106, -106, 290, -106, -106, -106, -106, 346, -106, 
-  -106, -106, 16, -106, -106, -106, 22, 23, -106, 34, 
-  -106, -106, -106, -106, -106, 11, -106, -106, -106, 7, 
-  1, 8, -106, -106, -106, -106, -106, 307, 179, -106, 
-  -106, -106, -106, -106, 18, 281, 9, 15, -106, 4, 
-  -106, 83, 29, -106, -106, -2, -106, -106, 85, -106, 
-  -106, -106, 3, -106, -106, -106, -106, 14, -106, 0, 
-  105, -106, 93, -106, -106, -106, -106, -106, -1, -106, 
-  -106, 20, -106, -106, 28, 92, -106, -106, -106, 19, 
-  -106, -106, -106, -106, -106, -106, -12, -106, -106, -106, 
-  -106, -106, -106, -106, -106, -106};
+  -106, -106, 17, 237, -106, 192, 236, 224, 225, -106, 
+  97, 98, 101, 99, 113, -106, -106, -106, -106, -106, 
+  -106, -106, -106, 204, -106, 223, -106, 235, -106, -106, 
+  239, -106, 197, -106, -106, 228, -106, 27, -106, 13, 
+  -106, 2, -106, 233, -106, 190, 198, -106, -106, 196, 
+  -106, -106, -106, -106, -106, -106, 200, -106, 107, 135, 
+  -106, -106, 186, -106, 84, -106, 81, -106, 76, -106, 
+  -106, 89, -106, -106, -49, -106, -106, 47, -106, 40, 
+  -106, 44, -106, 68, -106, -106, -106, -106, -106, -106, 
+  53, -106, 35, -106, 49, -106, 87, 63, -106, -106, 
+  30, -106, -106, 103, -106, -106, -106, 51, -106, -106, 
+  -106, -106, 86, -106, 67, 114, -106, 74, -106, -106, 
+  65, -106, 56, -106, -106, -106, -106, -106, -106, -106, 
+  62, -106, -106, -106, -106, -106, -106, 95, -106, -106, 
+  78, -106, -106, -106, -106, 75, -106, 88, -106, -106, 
+  -106, -106, -106, -54, -106, 45, -106, -40, -106, -106, 
+  -106, -106, 94, -106, -106, 100, -106, -106, -106, -106, 
+  -106, 150, -41, -106, -106, 54, -106, 43, -106, 48, 
+  -106, -106, -106, -106, 59, -106, 57, -106, 60, -106, 
+  58, -106, -106, -106, -106, -106, -106, 38, -106, -106, 
+  144, -106, -106, -106, -106, 31, -106, -106, 202, -106, 
+  -106, 50, -106, -106, -106, -106, -106, -106, -106, -106, 
+  -106, -106, -106, -106, -106, -106, -106, 77, -106, -106, 
+  -106, -106, -106, 82, -106, -106, -106, -106, -106, -106, 
+  -106, -17, -106, -106, -106, -4, -106, -106, 12, -106, 
+  -106, -106, -106, -106, -106, -14, 46, -106, -13, -106, 
+  -106, -106, -106, 108, -106, -106, -106, 243, -106, -106, 
+  295, -106, -106, -106, 290, -106, -106, -106, -106, 346, 
+  -106, -106, -106, 16, -106, -106, -106, 22, 23, -106, 
+  34, -106, -106, -106, -106, -106, 11, -106, -106, -106, 
+  7, 1, 8, -106, -106, -106, -106, -106, 307, 179, 
+  -106, -106, -106, -106, -106, 18, 281, 9, 15, -106, 
+  4, -106, 83, 29, -106, -106, -2, -106, -106, 85, 
+  -106, -106, -106, 3, -106, -106, -106, -106, 14, -106, 
+  0, 105, -106, 93, -106, -106, -106, -106, -106, -1, 
+  -106, -106, 20, -106, -106, 28, 92, -106, -106, -106, 
+  19, -106, -106, -106, -106, -106, -106, -12, -106, -106, 
+  -106, -106, -106, -106, -106, -106, -106};
 
 const short QDeclarativeJSGrammar::action_info [] = {
-  399, 352, 345, -101, 343, 457, 440, 403, 257, -112, 
-  -125, -131, -123, 346, -120, 348, -128, 389, 453, 391, 
-  416, 401, 408, 563, -101, -123, 416, -120, 539, -131, 
-  346, -112, -125, 348, 257, 99, 71, 645, 621, 101, 
-  -128, 440, 141, 621, 164, 431, 539, 430, 453, 573, 
-  457, 444, 440, 424, 71, 424, 101, 446, 559, 420, 
-  424, 448, 539, 440, 570, 539, 466, 527, 312, 346, 
-  532, 312, 318, 272, 409, 183, 342, 525, 147, 141, 
-  348, 510, 457, 414, 272, 325, 0, 0, 252, 99, 
-  257, 440, 296, 556, -102, 292, 453, 190, 170, 416, 
-  164, 434, 141, 141, 536, 251, 304, 172, 141, 141, 
-  443, 0, 335, 340, 141, 427, 0, 0, 0, 149, 
-  327, 306, 0, 292, 444, 0, 173, 0, 536, 141, 
-  141, 0, 0, 179, 333, 141, 294, 236, 189, 314, 
-  141, 301, 141, 315, 141, 477, 331, 242, 241, 413, 
-  412, 62, 537, 166, 58, 488, 142, 167, 294, 58, 
-  428, 254, 63, 256, 255, 59, 418, 172, 247, 246, 
-  59, 575, 574, 328, 249, 248, 616, 177, 641, 640, 
-  58, 469, 337, 141, 635, 634, 173, 350, 187, 249, 
-  248, 59, 310, 478, 459, 58, 455, 64, 523, 249, 
-  248, 85, 85, 86, 86, 103, 59, 565, 511, 172, 
-  511, 638, 637, 64, 87, 87, 141, 511, 517, 577, 
-  511, 0, 141, 0, 104, 141, 105, 85, 173, 86, 
-  174, 172, 566, 564, 470, 468, 562, 561, 548, 511, 
-  87, 636, 65, 530, 513, 539, 141, 85, 66, 86, 
-  173, 0, 406, 0, 513, 512, 513, 64, 65, 0, 
-  87, 172, 0, 513, 66, 512, 513, 512, 172, 235, 
-  234, 0, 518, 516, 512, 521, 520, 512, 554, 553, 
-  173, 85, 406, 86, 0, 513, -89, 173, 34, 174, 
-  73, 74, 549, 547, 87, 631, 512, 531, 529, 438, 
-  437, 172, 65, 0, 578, 274, 275, 0, 66, 632, 
-  630, 34, 0, 73, 74, 274, 275, 75, 76, -89, 
-  173, 0, 174, 34, 0, 48, 50, 49, 0, 0, 
-  0, 0, 276, 277, 34, 0, 0, 0, 34, 629, 
-  75, 76, 276, 277, 279, 280, 34, 0, 48, 50, 
-  49, 45, 34, 281, 279, 280, 282, 85, 283, 86, 
-  48, 50, 49, 281, 0, 34, 282, 0, 283, 34, 
-  87, 48, 50, 49, 45, 48, 50, 49, 0, 0, 
-  34, 0, 0, 48, 50, 49, 45, 34, 0, 48, 
-  50, 49, 34, 0, 0, 0, 0, 45, 34, 0, 
-  0, 45, 48, 50, 49, 0, 48, 50, 49, 45, 
-  0, 0, 0, 0, 34, 45, 0, 48, 50, 49, 
-  34, 0, 0, 0, 48, 50, 49, 34, 45, 48, 
-  50, 49, 45, 279, 280, 48, 50, 49, 0, 0, 
-  0, 34, 281, 45, 0, 282, 0, 283, -343, 34, 
-  45, 48, 50, 49, 0, 45, -343, 48, 50, 49, 
-  0, 45, 78, 79, 48, 50, 49, 0, 0, 0, 
-  80, 81, 0, 0, 82, 0, 83, 45, 48, 50, 
-  49, 0, 0, 45, 78, 79, 48, 50, 49, 34, 
-  45, 0, 80, 81, 78, 79, 82, 34, 83, 0, 
-  0, 0, 80, 81, 45, 34, 82, 0, 83, 0, 
-  0, 34, 45, 0, 6, 5, 4, 1, 3, 2, 
-  0, 240, 239, 0, 34, 0, 48, 50, 49, 245, 
-  244, 0, 0, 34, 48, 50, 49, 245, 244, 0, 
-  0, 0, 48, 50, 49, 0, 0, 0, 48, 50, 
-  49, 0, 45, 0, 0, 0, 245, 244, 0, 0, 
-  45, 48, 50, 49, 0, 240, 239, 34, 45, 0, 
-  48, 50, 49, 0, 45, 0, 0, 0, 0, 0, 
-  0, 0, 0, 78, 79, 0, 0, 45, 151, 0, 
-  0, 80, 81, 0, 0, 82, 45, 83, 152, 240, 
-  239, 0, 153, 0, 48, 50, 49, 0, 0, 0, 
-  0, 154, 0, 155, 0, 0, 308, 0, 0, 0, 
-  0, 0, 0, 0, 156, 0, 157, 62, 0, 0, 
-  45, 0, 0, 0, 158, 0, 0, 159, 63, 0, 
-  0, 0, 0, 160, 0, 0, 0, 0, 0, 161, 
-  0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 
-  31, 151, 0, 0, 0, 162, 0, 0, 0, 33, 
-  0, 152, 0, 0, 0, 153, 34, 0, 0, 0, 
-  35, 36, 0, 37, 154, 0, 155, 0, 0, 0, 
-  502, 0, 0, 0, 44, 0, 0, 156, 0, 157, 
-  62, 0, 0, 0, 0, 0, 0, 158, 0, 0, 
-  159, 63, 51, 48, 50, 49, 160, 52, 0, 0, 
-  0, 0, 161, 0, 0, 0, 0, 0, 43, 54, 
-  32, 30, 31, 0, 40, 0, 0, 0, 162, 45, 
-  0, 33, 0, 0, 0, 0, 0, 0, 34, 0, 
-  0, 0, 35, 36, 0, 37, 0, 0, 0, 30, 
-  31, 0, 41, 0, 0, 0, 44, 0, 0, 33, 
-  0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 
-  35, 36, 0, 37, 51, 48, 50, 49, 0, 52, 
-  502, 0, 0, 0, 44, 0, 0, 0, 0, 0, 
-  43, 54, 32, 0, 0, 0, 40, 0, 0, 0, 
-  0, 45, 51, 48, 50, 49, 0, 52, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 0, 43, 54, 
-  32, 0, 0, 0, 40, 0, 0, 0, 0, 45, 
-  30, 31, 0, 0, 0, 0, 0, 0, 30, 31, 
-  33, 0, 0, 0, 0, 0, 0, 34, 33, 0, 
-  0, 35, 36, 0, 37, 34, 0, 0, 0, 35, 
-  36, 502, 37, 0, 0, 44, 0, 0, 0, 41, 
-  0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 
-  0, 0, 0, 51, 48, 50, 49, 0, 52, 0, 
-  0, 51, 48, 50, 49, 0, 52, 0, 0, 43, 
-  54, 32, 0, 0, 0, 40, 0, 43, 54, 32, 
-  45, 0, 0, 40, 0, 0, 0, 0, 45, 30, 
-  31, 0, 0, 0, 0, 0, 0, 30, 31, 33, 
-  0, 0, 0, 0, 0, 0, 34, 33, 0, 0, 
-  35, 36, 0, 37, 34, 0, 0, 0, 35, 36, 
-  41, 37, 0, 0, 44, 0, 0, 0, 502, 0, 
-  0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 
-  0, 0, 51, 48, 50, 49, 0, 52, 0, 0, 
-  51, 48, 50, 49, 0, 52, 0, 0, 43, 54, 
-  32, 0, 0, 0, 40, 0, 43, 54, 32, 45, 
-  0, 0, 40, 0, 0, 0, 0, 45, 0, 0, 
-  0, 0, 0, 0, 0, 0, 501, 0, 30, 31, 
-  0, 0, 0, 0, 0, 0, 0, 0, 215, 0, 
-  0, 0, 0, 0, 0, 34, 0, 0, 0, 35, 
-  36, 0, 37, 0, 0, 0, 0, 0, 0, 502, 
+  341, 441, -125, 417, -128, 622, -123, -120, 346, 564, 
+  -101, 404, 402, 392, 353, -131, 344, -112, 343, -102, 
+  390, 258, 349, 347, 421, 458, 258, -131, -112, 347, 
+  349, 445, 447, 571, 441, 540, 560, 574, 449, 540, 
+  467, 526, 528, 533, -102, -128, 400, 441, 409, 425, 
+  540, 458, 540, 511, -101, -123, 432, 425, 557, 441, 
+  417, 425, 431, 336, -125, 71, 454, 183, 187, 170, 
+  417, 147, 164, 141, 415, 410, 349, 273, 441, 347, 
+  164, 297, 454, 99, 190, 141, 258, 307, 313, 305, 
+  458, 71, 646, 179, 319, 313, 149, 273, 236, 326, 
+  0, 189, 141, 444, 0, 252, 99, 435, 141, 0, 
+  141, 428, 141, 141, 0, 537, 0, 445, 478, 334, 
+  141, 295, 0, 293, 0, 141, 62, 332, 293, 315, 
+  251, 0, -120, 316, 101, 302, 172, 63, 172, 537, 
+  141, 141, 247, 246, 242, 241, 249, 248, 141, 166, 
+  295, 141, 622, 167, 419, 173, 429, 173, 58, 642, 
+  641, 328, 254, 617, 489, 456, 479, 636, 635, 59, 
+  576, 575, 460, 142, 249, 248, 414, 413, 512, 141, 
+  249, 248, 85, 85, 86, 86, 566, 538, 177, 85, 
+  518, 86, 85, 311, 86, 87, 87, 85, 64, 86, 
+  338, 531, 87, 351, 85, 87, 86, 512, 257, 255, 
+  87, 567, 565, 85, 329, 86, 470, 87, 172, 512, 
+  512, 172, 64, 64, 514, 141, 87, 58, 141, 549, 
+  0, 578, 522, 521, 524, 513, 256, 173, 59, 174, 
+  173, 512, 407, 65, 519, 517, 85, 141, 86, 66, 
+  85, 0, 86, 514, 0, 532, 530, 540, 85, 87, 
+  86, 0, 0, 87, 513, 514, 514, 65, 65, 471, 
+  469, 87, 0, 66, 66, 103, 513, 513, 439, 438, 
+  514, 555, 554, 550, 548, 0, 85, 514, 86, 141, 
+  85, 513, 86, 85, 104, 86, 105, 172, 513, 87, 
+  235, 234, 172, 87, 639, 638, 87, 34, 0, 73, 
+  74, 632, 275, 276, 34, -89, 173, 579, 174, 0, 
+  -89, 173, 34, 174, 0, 633, 631, 73, 74, 34, 
+  275, 276, 0, 0, 0, 637, 75, 76, 0, 277, 
+  278, 0, 563, 562, 48, 50, 49, 0, 0, 0, 
+  34, 48, 50, 49, 75, 76, 630, 277, 278, 48, 
+  50, 49, 34, 280, 281, 0, 48, 50, 49, 0, 
+  34, 45, 282, 34, 0, 283, 0, 284, 45, 34, 
+  0, 0, 34, 172, 0, 34, 45, 48, 50, 49, 
+  34, 0, 0, 45, 34, 0, 0, 0, 0, 48, 
+  50, 49, 173, 34, 407, 0, 0, 48, 50, 49, 
+  48, 50, 49, 34, 45, 0, 48, 50, 49, 48, 
+  50, 49, 48, 50, 49, 34, 45, 48, 50, 49, 
+  0, 48, 50, 49, 45, 34, 0, 45, 0, 0, 
+  48, 50, 49, 45, 0, 0, 45, 0, 34, 45, 
+  48, 50, 49, 34, 45, 0, 0, 0, 45, 0, 
+  -344, 0, 48, 50, 49, 0, 0, 45, 34, 0, 
+  280, 281, 48, 50, 49, -344, 0, 45, 0, 282, 
+  0, 34, 283, 0, 284, 48, 50, 49, 0, 45, 
+  48, 50, 49, 6, 5, 4, 1, 3, 2, 45, 
+  0, 34, 0, 0, 34, 48, 50, 49, 0, 0, 
+  0, 0, 45, 245, 244, 34, 0, 45, 48, 50, 
+  49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 45, 245, 244, 0, 240, 239, 48, 50, 
+  49, 48, 50, 49, 34, 45, 0, 240, 239, 78, 
+  79, 0, 48, 50, 49, 0, 0, 80, 81, 0, 
+  0, 82, 0, 83, 151, 45, 0, 0, 45, 0, 
+  0, 0, 0, 0, 152, 0, 245, 244, 153, 45, 
+  0, 48, 50, 49, 0, 0, 0, 154, 0, 155, 
+  0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 
+  156, 0, 157, 62, 0, 0, 0, 152, 45, 0, 
+  158, 153, 0, 159, 63, 0, 0, 0, 0, 160, 
+  154, 0, 155, 0, 0, 161, 0, 0, 34, 0, 
+  0, 0, 0, 156, 0, 157, 62, 0, 0, 0, 
+  0, 162, 0, 158, 0, 0, 159, 63, 0, 0, 
+  0, 0, 160, 0, 0, 0, 0, 0, 161, 0, 
+  240, 239, 0, 30, 31, 48, 50, 49, 0, 0, 
+  0, 0, 0, 33, 162, 0, 0, 0, 0, 0, 
+  34, 0, 0, 0, 35, 36, 0, 37, 0, 0, 
+  0, 0, 45, 0, 41, 0, 0, 0, 44, 0, 
+  0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 152, 0, 0, 0, 153, 51, 48, 50, 49, 
+  0, 52, 0, 0, 154, 0, 155, 0, 0, 309, 
+  0, 0, 43, 54, 32, 0, 0, 156, 40, 157, 
+  62, 0, 0, 0, 45, 0, 0, 158, 0, 0, 
+  159, 63, 0, 0, 0, 0, 160, 0, 30, 31, 
+  0, 0, 161, 0, 0, 0, 0, 0, 33, 0, 
+  0, 0, 0, 0, 0, 34, 0, 0, 162, 35, 
+  36, 0, 37, 0, 0, 0, 0, 0, 0, 41, 
   0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-  0, 51, 503, 505, 504, 0, 52, 0, 0, 0, 
-  0, 226, 0, 0, 0, 0, 0, 43, 54, 32, 
-  210, 0, 0, 40, 0, 0, 0, 0, 45, 0, 
-  0, 0, 0, 0, 0, 0, 0, 501, 0, 30, 
-  31, 0, 0, 0, 0, 0, 0, 0, 0, 215, 
-  0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 
-  35, 36, 0, 37, 0, 0, 0, 0, 0, 0, 
-  502, 0, 0, 0, 44, 0, 0, 0, 0, 0, 
-  0, 0, 544, 0, 0, 0, 0, 0, 0, 0, 
-  0, 0, 51, 503, 505, 504, 0, 52, 0, 0, 
-  0, 0, 226, 0, 0, 0, 0, 0, 43, 54, 
-  32, 210, 0, 0, 40, 0, 0, 0, 0, 45, 
-  0, 0, 0, 0, 0, 0, 0, 0, 501, 0, 
   30, 31, 0, 0, 0, 0, 0, 0, 0, 0, 
-  215, 0, 0, 0, 0, 0, 0, 34, 0, 0, 
-  0, 35, 36, 0, 37, 0, 0, 0, 0, 0, 
-  0, 502, 0, 0, 0, 44, 0, 0, 0, 0, 
-  0, 0, 0, 541, 0, 0, 0, 0, 0, 0, 
-  0, 0, 0, 51, 503, 505, 504, 0, 52, 0, 
-  0, 0, 0, 226, 0, 0, 0, 0, 0, 43, 
-  54, 32, 210, 0, 0, 40, 0, 0, 0, 0, 
-  45, 0, 0, 0, 0, 0, 0, 0, 0, 29, 
+  33, 51, 48, 50, 49, 0, 52, 34, 0, 0, 
+  0, 35, 36, 0, 37, 0, 0, 43, 54, 32, 
+  0, 503, 0, 40, 0, 44, 0, 0, 0, 45, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 0, 51, 48, 50, 49, 0, 52, 0, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 
+  54, 32, 0, 0, 0, 40, 0, 0, 0, 0, 
+  0, 45, 30, 31, 0, 0, 0, 0, 0, 0, 
+  30, 31, 33, 0, 0, 0, 0, 0, 0, 34, 
+  33, 0, 0, 35, 36, 0, 37, 34, 0, 0, 
+  0, 35, 36, 503, 37, 0, 0, 44, 0, 0, 
+  0, 41, 0, 0, 0, 44, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 51, 48, 50, 49, 0, 
+  52, 0, 0, 51, 48, 50, 49, 0, 52, 0, 
+  0, 43, 54, 32, 0, 0, 0, 40, 0, 43, 
+  54, 32, 0, 45, 0, 40, 0, 0, 0, 0, 
+  0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 
   30, 31, 0, 0, 0, 0, 0, 0, 0, 0, 
   33, 0, 0, 0, 0, 0, 0, 34, 0, 0, 
-  0, 35, 36, 0, 37, 0, 0, 0, 38, 0, 
-  39, 41, 42, 0, 0, 44, 0, 0, 0, 46, 
-  0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 35, 36, 0, 37, 0, 0, 0, 0, 0, 
+  0, 503, 0, 0, 0, 44, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 51, 48, 50, 49, 0, 52, 0, 
-  53, 0, 55, 0, 56, 0, 0, 0, 0, 43, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 
   54, 32, 0, 0, 0, 40, 0, 0, 0, 0, 
-  45, 0, 0, 0, 0, 0, 0, 0, 0, -121, 
-  0, 0, 0, 29, 30, 31, 0, 0, 0, 0, 
-  0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 
-  0, 34, 0, 0, 0, 35, 36, 0, 37, 0, 
-  0, 0, 38, 0, 39, 41, 42, 0, 0, 44, 
-  0, 0, 0, 46, 0, 47, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 51, 48, 50, 
-  49, 0, 52, 0, 53, 0, 55, 0, 56, 0, 
-  0, 0, 0, 43, 54, 32, 0, 0, 0, 40, 
-  0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 
-  0, 0, 0, 29, 30, 31, 0, 0, 0, 0, 
-  0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 
+  0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 
+  502, 0, 30, 31, 0, 0, 0, 0, 0, 0, 
+  0, 0, 215, 0, 0, 0, 0, 0, 0, 34, 
+  0, 0, 0, 35, 36, 0, 37, 0, 0, 0, 
+  0, 0, 0, 503, 0, 0, 0, 44, 0, 0, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 51, 504, 506, 505, 0, 
+  52, 0, 0, 0, 0, 226, 0, 0, 0, 0, 
+  0, 43, 54, 32, 210, 0, 0, 40, 0, 0, 
+  0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 
+  0, 0, 502, 0, 30, 31, 0, 0, 0, 0, 
+  0, 0, 0, 0, 215, 0, 0, 0, 0, 0, 
   0, 34, 0, 0, 0, 35, 36, 0, 37, 0, 
-  0, 0, 38, 0, 39, 41, 42, 0, 0, 44, 
-  0, 0, 0, 46, 0, 47, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 51, 48, 50, 
-  49, 0, 52, 0, 53, 0, 55, 271, 56, 0, 
-  0, 0, 0, 43, 54, 32, 0, 0, 0, 40, 
-  0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 
-  0, 0, 0, 483, 0, 0, 29, 30, 31, 0, 
+  0, 0, 0, 0, 0, 503, 0, 0, 0, 44, 
+  0, 0, 0, 0, 0, 0, 0, 542, 0, 0, 
+  0, 0, 0, 0, 0, 0, 0, 51, 504, 506, 
+  505, 0, 52, 0, 0, 0, 0, 226, 0, 0, 
+  0, 0, 0, 43, 54, 32, 210, 0, 0, 40, 
+  0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 
+  0, 0, 0, 0, 502, 0, 30, 31, 0, 0, 
+  0, 0, 0, 0, 0, 0, 215, 0, 0, 0, 
+  0, 0, 0, 34, 0, 0, 0, 35, 36, 0, 
+  37, 0, 0, 0, 0, 0, 0, 503, 0, 0, 
+  0, 44, 0, 0, 0, 0, 0, 0, 0, 545, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 
+  504, 506, 505, 0, 52, 0, 0, 0, 0, 226, 
+  0, 0, 0, 0, 0, 43, 54, 32, 210, 0, 
+  0, 40, 0, 0, 0, 0, 0, 45, 0, 0, 
+  0, 0, 0, 0, 0, 0, 29, 30, 31, 0, 
   0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 
   0, 0, 0, 0, 34, 0, 0, 0, 35, 36, 
   0, 37, 0, 0, 0, 38, 0, 39, 41, 42, 
   0, 0, 44, 0, 0, 0, 46, 0, 47, 0, 
-  0, 486, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   51, 48, 50, 49, 0, 52, 0, 53, 0, 55, 
   0, 56, 0, 0, 0, 0, 43, 54, 32, 0, 
-  0, 0, 40, 0, 0, 0, 0, 45, 0, 0, 
-  0, 0, 0, 0, 0, 0, 475, 0, 0, 29, 
-  30, 31, 0, 0, 0, 0, 0, 0, 0, 0, 
-  33, 0, 0, 0, 0, 0, 0, 34, 0, 0, 
-  0, 35, 36, 0, 37, 0, 0, 0, 38, 0, 
-  39, 41, 42, 0, 0, 44, 0, 0, 0, 46, 
-  0, 47, 0, 0, 481, 0, 0, 0, 0, 0, 
-  0, 0, 0, 51, 48, 50, 49, 0, 52, 0, 
-  53, 0, 55, 0, 56, 0, 0, 0, 0, 43, 
-  54, 32, 0, 0, 0, 40, 0, 0, 0, 0, 
-  45, 0, 0, 0, 0, 0, 0, 0, 0, 475, 
+  0, 0, 40, 0, 0, 0, 0, 0, 45, 0, 
+  0, 0, 0, 0, 0, 0, 0, 29, 30, 31, 
+  0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 
+  0, 0, 0, 0, 0, 34, 0, 0, 0, 35, 
+  36, 0, 37, 0, 0, 0, 38, 0, 39, 41, 
+  42, 0, 0, 44, 0, 0, 0, 46, 0, 47, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 51, 48, 50, 49, 0, 52, 0, 53, 0, 
+  55, 272, 56, 0, 0, 0, 0, 43, 54, 32, 
+  0, 0, 0, 40, 0, 0, 0, 0, 0, 45, 
+  0, 0, 0, 0, 0, 0, 0, 0, -121, 0, 
   0, 0, 29, 30, 31, 0, 0, 0, 0, 0, 
   0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 
   34, 0, 0, 0, 35, 36, 0, 37, 0, 0, 
   0, 38, 0, 39, 41, 42, 0, 0, 44, 0, 
-  0, 0, 46, 0, 47, 0, 0, 476, 0, 0, 
+  0, 0, 46, 0, 47, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 51, 48, 50, 49, 
   0, 52, 0, 53, 0, 55, 0, 56, 0, 0, 
   0, 0, 43, 54, 32, 0, 0, 0, 40, 0, 
+  0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 
+  0, 0, 0, 484, 0, 0, 29, 30, 31, 0, 
+  0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 
+  0, 0, 0, 0, 34, 0, 0, 0, 35, 36, 
+  0, 37, 0, 0, 0, 38, 0, 39, 41, 42, 
+  0, 0, 44, 0, 0, 0, 46, 0, 47, 0, 
+  0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 
+  51, 48, 50, 49, 0, 52, 0, 53, 0, 55, 
+  0, 56, 0, 0, 0, 0, 43, 54, 32, 0, 
+  0, 0, 40, 0, 0, 0, 0, 0, 45, 0, 
+  0, 0, 0, 0, 0, 0, 0, 476, 0, 0, 
+  29, 30, 31, 0, 0, 0, 0, 0, 0, 0, 
+  0, 33, 0, 0, 0, 0, 0, 0, 34, 0, 
+  0, 0, 35, 36, 0, 37, 0, 0, 0, 38, 
+  0, 39, 41, 42, 0, 0, 44, 0, 0, 0, 
+  46, 0, 47, 0, 0, 477, 0, 0, 0, 0, 
+  0, 0, 0, 0, 51, 48, 50, 49, 0, 52, 
+  0, 53, 0, 55, 0, 56, 0, 0, 0, 0, 
+  43, 54, 32, 0, 0, 0, 40, 0, 0, 0, 
+  0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 
+  0, 29, 30, 31, 0, 0, 0, 0, 0, 0, 
+  0, 0, 33, 0, 0, 0, 0, 0, 0, 34, 
+  217, 0, 0, 585, 586, 0, 37, 0, 0, 0, 
+  38, 0, 39, 41, 42, 0, 0, 44, 0, 0, 
+  0, 46, 0, 47, 0, 0, 0, 0, 0, 0, 
+  0, 221, 0, 0, 0, 51, 48, 50, 49, 0, 
+  52, 0, 53, 0, 55, 0, 56, 0, 0, 0, 
+  0, 43, 54, 32, 0, 0, 0, 40, 0, 0, 
   0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 
-  0, 0, 483, 0, 0, 29, 30, 31, 0, 0, 
+  0, 0, 484, 0, 0, 29, 30, 31, 0, 0, 
   0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 
   0, 0, 0, 34, 0, 0, 0, 35, 36, 0, 
   37, 0, 0, 0, 38, 0, 39, 41, 42, 0, 
   0, 44, 0, 0, 0, 46, 0, 47, 0, 0, 
-  484, 0, 0, 0, 0, 0, 0, 0, 0, 51, 
-  48, 50, 49, 0, 52, 0, 53, 0, 55, 0, 
-  56, 0, 0, 0, 0, 43, 54, 32, 0, 0, 
-  0, 40, 0, 0, 0, 0, 45, 0, 0, 0, 
-  0, 0, 0, 0, 0, 29, 30, 31, 0, 0, 
-  0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 
-  0, 0, 0, 34, 217, 0, 0, 584, 585, 0, 
-  37, 0, 0, 0, 38, 0, 39, 41, 42, 0, 
-  0, 44, 0, 0, 0, 46, 0, 47, 0, 0, 
-  0, 0, 0, 0, 0, 221, 0, 0, 0, 51, 
+  485, 0, 0, 0, 0, 0, 0, 0, 0, 51, 
   48, 50, 49, 0, 52, 0, 53, 0, 55, 0, 
   56, 0, 0, 0, 0, 43, 54, 32, 0, 0, 
-  0, 40, 0, 0, 0, 0, 45, 0, 0, 0, 
-  0, 0, 0, 0, 0, 109, 110, 111, 0, 0, 
-  113, 115, 116, 0, 0, 117, 0, 118, 0, 0, 
-  0, 120, 121, 122, 0, 0, 0, 0, 0, 0, 
-  34, 123, 124, 125, 0, 0, 0, 0, 0, 0, 
-  0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 
+  0, 40, 0, 0, 0, 0, 0, 45, 0, 0, 
+  0, 0, 0, 0, 0, 0, 476, 0, 0, 29, 
+  30, 31, 0, 0, 0, 0, 0, 0, 0, 0, 
+  33, 0, 0, 0, 0, 0, 0, 34, 0, 0, 
+  0, 35, 36, 0, 37, 0, 0, 0, 38, 0, 
+  39, 41, 42, 0, 0, 44, 0, 0, 0, 46, 
+  0, 47, 0, 0, 482, 0, 0, 0, 0, 0, 
+  0, 0, 0, 51, 48, 50, 49, 0, 52, 0, 
+  53, 0, 55, 0, 56, 0, 0, 0, 0, 43, 
+  54, 32, 0, 0, 0, 40, 0, 0, 0, 0, 
+  0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 
+  109, 110, 111, 0, 0, 113, 115, 116, 0, 0, 
+  117, 0, 118, 0, 0, 0, 120, 121, 122, 0, 
+  0, 0, 0, 0, 0, 34, 123, 124, 125, 0, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 129, 0, 0, 0, 0, 
+  0, 0, 48, 50, 49, 130, 131, 132, 0, 134, 
+  135, 136, 137, 138, 139, 0, 0, 127, 133, 119, 
+  112, 114, 128, 0, 0, 0, 0, 0, 0, 45, 
+  0, 0, 0, 0, 0, 0, 0, 0, 109, 110, 
+  111, 0, 0, 113, 115, 116, 0, 0, 117, 0, 
+  118, 0, 0, 0, 120, 121, 122, 0, 0, 0, 
+  0, 0, 0, 394, 123, 124, 125, 0, 0, 0, 
+  0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 
+  0, 395, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 0, 129, 0, 0, 0, 0, 0, 399, 
+  396, 398, 0, 130, 131, 132, 0, 134, 135, 136, 
+  137, 138, 139, 0, 0, 127, 133, 119, 112, 114, 
+  128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 0, 109, 110, 111, 0, 
+  0, 113, 115, 116, 0, 0, 117, 0, 118, 0, 
+  0, 0, 120, 121, 122, 0, 0, 0, 0, 0, 
+  0, 394, 123, 124, 125, 0, 0, 0, 0, 0, 
+  0, 0, 0, 0, 0, 126, 0, 0, 0, 395, 
+  0, 0, 0, 0, 0, 0, 0, 397, 0, 0, 
+  0, 129, 0, 0, 0, 0, 0, 399, 396, 398, 
+  0, 130, 131, 132, 0, 134, 135, 136, 137, 138, 
+  139, 0, 0, 127, 133, 119, 112, 114, 128, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-  129, 0, 0, 0, 0, 0, 0, 48, 50, 49, 
-  130, 131, 132, 0, 134, 135, 136, 137, 138, 139, 
-  0, 0, 127, 133, 119, 112, 114, 128, 0, 0, 
+  0, 0, 0, 0, 209, 0, 0, 0, 0, 211, 
+  0, 29, 30, 31, 213, 0, 0, 0, 0, 0, 
+  0, 214, 33, 0, 0, 0, 0, 0, 0, 216, 
+  217, 0, 0, 218, 36, 0, 37, 0, 0, 0, 
+  38, 0, 39, 41, 42, 0, 0, 44, 0, 0, 
+  0, 46, 0, 47, 0, 0, 0, 0, 0, 220, 
+  0, 221, 0, 0, 0, 51, 219, 222, 49, 223, 
+  52, 224, 53, 225, 55, 226, 56, 227, 228, 0, 
+  0, 43, 54, 32, 210, 212, 0, 40, 0, 0, 
   0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 
-  0, 0, 109, 110, 111, 0, 0, 113, 115, 116, 
-  0, 0, 117, 0, 118, 0, 0, 0, 120, 121, 
-  122, 0, 0, 0, 0, 0, 0, 393, 123, 124, 
-  125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
-  0, 126, 0, 0, 0, 394, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 
-  0, 0, 0, 398, 395, 397, 0, 130, 131, 132, 
-  0, 134, 135, 136, 137, 138, 139, 0, 0, 127, 
-  133, 119, 112, 114, 128, 0, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 
-  110, 111, 0, 0, 113, 115, 116, 0, 0, 117, 
-  0, 118, 0, 0, 0, 120, 121, 122, 0, 0, 
-  0, 0, 0, 0, 393, 123, 124, 125, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 
-  0, 0, 394, 0, 0, 0, 0, 0, 0, 0, 
-  396, 0, 0, 0, 129, 0, 0, 0, 0, 0, 
-  398, 395, 397, 0, 130, 131, 132, 0, 134, 135, 
-  136, 137, 138, 139, 0, 0, 127, 133, 119, 112, 
-  114, 128, 0, 0, 0, 0, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 209, 0, 0, 0, 
-  0, 211, 0, 29, 30, 31, 213, 0, 0, 0, 
-  0, 0, 0, 214, 215, 0, 0, 0, 0, 0, 
-  0, 216, 217, 0, 0, 218, 36, 0, 37, 0, 
-  0, 0, 38, 0, 39, 41, 42, 0, 0, 44, 
-  0, 0, 0, 46, 0, 47, 0, 0, 0, 0, 
-  0, 220, 0, 221, 0, 0, 0, 51, 219, 222, 
-  49, 223, 52, 224, 53, 225, 55, 226, 56, 227, 
-  228, 0, 0, 43, 54, 32, 210, 212, 0, 40, 
-  0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 
-  0, 0, 0, 209, 0, 0, 0, 0, 211, 0, 
-  29, 30, 31, 213, 0, 0, 0, 0, 0, 0, 
-  214, 33, 0, 0, 0, 0, 0, 0, 216, 217, 
-  0, 0, 218, 36, 0, 37, 0, 0, 0, 38, 
-  0, 39, 41, 42, 0, 0, 44, 0, 0, 0, 
-  46, 0, 47, 0, 0, 0, 0, 0, 220, 0, 
-  221, 0, 0, 0, 51, 219, 222, 49, 223, 52, 
-  224, 53, 225, 55, 226, 56, 227, 228, 0, 0, 
-  43, 54, 32, 210, 212, 0, 40, 0, 0, 0, 
+  0, 0, 209, 0, 0, 0, 0, 211, 0, 29, 
+  30, 31, 213, 0, 0, 0, 0, 0, 0, 214, 
+  215, 0, 0, 0, 0, 0, 0, 216, 217, 0, 
+  0, 218, 36, 0, 37, 0, 0, 0, 38, 0, 
+  39, 41, 42, 0, 0, 44, 0, 0, 0, 46, 
+  0, 47, 0, 0, 0, 0, 0, 220, 0, 221, 
+  0, 0, 0, 51, 219, 222, 49, 223, 52, 224, 
+  53, 225, 55, 226, 56, 227, 228, 0, 0, 43, 
+  54, 32, 210, 212, 0, 40, 0, 0, 0, 0, 
   0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 
-  587, 110, 111, 0, 0, 589, 115, 591, 30, 31, 
-  592, 0, 118, 0, 0, 0, 120, 594, 595, 0, 
-  0, 0, 0, 0, 0, 596, 597, 124, 125, 218, 
-  36, 0, 37, 0, 0, 0, 38, 0, 39, 598, 
-  42, 0, 0, 600, 0, 0, 0, 46, 0, 47, 
-  0, 0, 0, 0, 0, 602, 0, 221, 0, 0, 
-  0, 604, 601, 603, 49, 605, 606, 607, 53, 609, 
-  610, 611, 612, 613, 614, 0, 0, 599, 608, 593, 
-  588, 590, 128, 40, 0, 0, 0, 0, 45, 0, 
-  0, 0, 0, 0, 0, 0, 0, 361, 110, 111, 
-  0, 0, 363, 115, 365, 30, 31, 366, 0, 118, 
-  0, 0, 0, 120, 368, 369, 0, 0, 0, 0, 
-  0, 0, 370, 371, 124, 125, 218, 36, 0, 37, 
-  0, 0, 0, 38, 0, 39, 372, 42, 0, 0, 
-  374, 0, 0, 0, 46, 0, 47, 0, -267, 0, 
-  0, 0, 376, 0, 221, 0, 0, 0, 378, 375, 
-  377, 49, 379, 380, 381, 53, 383, 384, 385, 386, 
-  387, 388, 0, 0, 373, 382, 367, 362, 364, 128, 
-  40, 0, 0, 0, 0, 45, 0, 0, 0, 0, 
-  0, 0, 0, 0, 
+  588, 110, 111, 0, 0, 590, 115, 592, 30, 31, 
+  593, 0, 118, 0, 0, 0, 120, 595, 596, 0, 
+  0, 0, 0, 0, 0, 597, 598, 124, 125, 218, 
+  36, 0, 37, 0, 0, 0, 38, 0, 39, 599, 
+  42, 0, 0, 601, 0, 0, 0, 46, 0, 47, 
+  0, 0, 0, 0, 0, 603, 0, 221, 0, 0, 
+  0, 605, 602, 604, 49, 606, 607, 608, 53, 610, 
+  611, 612, 613, 614, 615, 0, 0, 600, 609, 594, 
+  589, 591, 128, 40, 0, 0, 0, 0, 0, 45, 
+  0, 0, 0, 0, 0, 0, 0, 0, 362, 110, 
+  111, 0, 0, 364, 115, 366, 30, 31, 367, 0, 
+  118, 0, 0, 0, 120, 369, 370, 0, 0, 0, 
+  0, 0, 0, 371, 372, 124, 125, 218, 36, 0, 
+  37, 0, 0, 0, 38, 0, 39, 373, 42, 0, 
+  0, 375, 0, 0, 0, 46, 0, 47, 0, -267, 
+  0, 0, 0, 377, 0, 221, 0, 0, 0, 379, 
+  376, 378, 49, 380, 381, 382, 53, 384, 385, 386, 
+  387, 388, 389, 0, 0, 374, 383, 368, 363, 365, 
+  128, 40, 0, 0, 0, 0, 0, 45, 0, 0, 
+  0, 0, 0, 0, 0, 0, 
 
-  472, 546, 528, 639, 311, 182, 302, 498, 514, 16, 
-  461, 515, 496, 182, 497, 519, 309, 436, 619, 243, 
-  358, 439, 576, 572, 253, 150, 571, 487, 617, 307, 
-  238, 250, 320, 628, 633, 555, 569, 560, 558, 642, 
-  186, 250, 425, 349, 358, 182, 351, 557, 433, 347, 
-  238, 344, 339, 429, 302, 402, 243, 445, 447, 456, 
-  460, 163, 454, 458, 243, 250, 485, 143, 148, 449, 
-  353, 526, 176, 467, 237, 450, 238, 415, 338, 188, 
-  410, 237, 302, 336, 436, 482, 334, 169, 439, 436, 
-  146, 417, 392, 439, 140, 522, 358, 400, 404, 0, 
-  390, 171, 358, 0, 186, 500, 146, 0, 643, 0, 
-  0, 178, 0, 0, 0, 0, 404, 60, 60, 489, 
-  452, 500, 320, 0, 534, 0, 405, 60, 0, 180, 
-  146, 60, 0, 180, 60, 407, 490, 60, 302, 452, 
-  60, 60, 60, 60, 405, 60, 284, 285, 287, 60, 
-  286, 451, 358, 60, 165, 180, 266, 60, 60, 461, 
-  451, 270, 288, 60, 60, 60, 493, 60, 60, 60, 
-  84, 106, 92, 91, 60, 432, 60, 72, 60, 168, 
-  98, 435, 77, 60, 96, 60, 60, 60, 341, 302, 
-  93, 94, 500, 108, 329, 100, 60, 102, 60, 618, 
-  302, 95, 88, 330, 60, 60, 60, 60, 90, 89, 
-  70, 60, 97, 452, 60, 60, 451, 492, 60, 60, 
-  494, 60, 61, 68, 60, 60, 69, 491, 60, 471, 
-  67, 302, 404, 480, 60, 106, 60, 479, 0, 270, 
-  298, 270, 298, 278, 298, 270, 0, 270, 60, 270, 
-  0, 316, 0, 270, 332, 0, 500, 108, 175, 538, 
-  405, 293, 319, 0, 317, 303, 326, 60, 60, 60, 
-  0, 0, 270, 270, 270, 290, 291, 60, 295, 298, 
-  60, 60, 270, 298, 270, 270, 270, 289, 270, 0, 
-  273, 500, 313, 0, 551, 545, 305, 534, 508, 615, 
-  542, 297, 0, 500, 0, 300, 499, 509, 500, 0, 
-  508, 0, 0, 0, 0, 508, 472, 0, 499, 509, 
-  583, 0, 0, 499, 509, 0, 0, 586, 579, 580, 
-  581, 582, 0, 0, 0, 0, 0, 0, 0, 0, 
-  0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 
+  473, 547, 529, 640, 312, 182, 303, 499, 515, 16, 
+  462, 516, 497, 182, 498, 520, 310, 437, 620, 243, 
+  359, 440, 577, 573, 253, 150, 572, 488, 618, 308, 
+  238, 250, 321, 629, 634, 556, 570, 561, 559, 643, 
+  186, 250, 426, 350, 359, 182, 352, 558, 434, 348, 
+  238, 345, 340, 430, 303, 403, 243, 446, 448, 457, 
+  461, 163, 455, 459, 243, 250, 486, 143, 148, 450, 
+  354, 527, 176, 468, 237, 451, 238, 416, 339, 188, 
+  411, 237, 303, 437, 337, 483, 335, 169, 440, 437, 
+  146, 418, 393, 440, 140, 523, 359, 401, 405, 0, 
+  391, 171, 359, 0, 186, 501, 146, 0, 644, 0, 
+  0, 178, 0, 0, 0, 0, 405, 60, 60, 490, 
+  453, 501, 321, 0, 535, 0, 406, 60, 0, 180, 
+  146, 60, 0, 180, 60, 408, 491, 60, 303, 453, 
+  60, 60, 60, 60, 406, 60, 285, 286, 288, 60, 
+  287, 452, 359, 60, 165, 180, 267, 60, 60, 462, 
+  452, 271, 289, 60, 60, 60, 494, 60, 60, 60, 
+  84, 106, 92, 91, 60, 433, 60, 72, 60, 168, 
+  98, 436, 77, 60, 96, 60, 60, 60, 342, 303, 
+  93, 94, 501, 108, 330, 100, 60, 102, 60, 619, 
+  303, 95, 88, 331, 60, 60, 60, 60, 90, 89, 
+  70, 60, 97, 453, 60, 60, 452, 493, 60, 60, 
+  495, 60, 61, 68, 60, 60, 69, 492, 60, 472, 
+  67, 303, 405, 481, 60, 106, 60, 480, 0, 271, 
+  299, 271, 299, 279, 299, 271, 0, 271, 60, 271, 
+  0, 317, 0, 271, 333, 0, 501, 108, 175, 539, 
+  406, 294, 320, 0, 318, 304, 327, 60, 60, 60, 
+  0, 0, 271, 271, 271, 291, 292, 60, 296, 299, 
+  60, 60, 271, 299, 271, 271, 271, 290, 271, 0, 
+  274, 501, 314, 0, 552, 546, 306, 535, 509, 616, 
+  543, 298, 0, 501, 0, 301, 500, 510, 501, 0, 
+  509, 0, 0, 0, 0, 509, 473, 0, 500, 510, 
+  584, 0, 0, 500, 510, 0, 0, 587, 580, 581, 
+  582, 583, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 551, 
-  0, 0, 0, 0, 0, 0, 552, 0, 0, 0, 
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 552, 
+  0, 0, 0, 0, 0, 0, 553, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
@@ -666,191 +672,196 @@ const short QDeclarativeJSGrammar::action_info [] = {
   0, 0};
 
 const short QDeclarativeJSGrammar::action_check [] = {
-  7, 16, 55, 7, 33, 36, 33, 55, 36, 7, 
-  7, 7, 7, 7, 7, 36, 7, 7, 36, 8, 
-  36, 55, 60, 29, 7, 7, 36, 7, 33, 7, 
-  7, 7, 7, 36, 36, 48, 1, 0, 90, 79, 
-  7, 33, 8, 90, 2, 7, 33, 55, 36, 60, 
-  36, 20, 33, 5, 1, 5, 79, 36, 7, 33, 
-  5, 60, 33, 33, 8, 33, 17, 24, 2, 7, 
-  34, 2, 7, 1, 7, 36, 60, 37, 8, 8, 
-  36, 66, 36, 7, 1, 17, -1, -1, 36, 48, 
-  36, 33, 8, 66, 7, 48, 36, 33, 7, 36, 
-  2, 7, 8, 8, 8, 77, 61, 15, 8, 8, 
-  6, -1, 31, 36, 8, 10, -1, -1, -1, 60, 
-  8, 60, -1, 48, 20, -1, 34, -1, 8, 8, 
-  8, -1, -1, 60, 60, 8, 79, 55, 60, 50, 
-  8, 61, 8, 54, 8, 8, 61, 61, 62, 61, 
-  62, 42, 56, 50, 40, 60, 56, 54, 79, 40, 
-  55, 60, 53, 61, 62, 51, 60, 15, 61, 62, 
-  51, 61, 62, 61, 61, 62, 56, 56, 61, 62, 
-  40, 8, 60, 8, 61, 62, 34, 60, 8, 61, 
-  62, 51, 60, 56, 60, 40, 60, 12, 29, 61, 
-  62, 25, 25, 27, 27, 15, 51, 36, 29, 15, 
-  29, 61, 62, 12, 38, 38, 8, 29, 7, 7, 
-  29, -1, 8, -1, 34, 8, 36, 25, 34, 27, 
-  36, 15, 61, 62, 61, 62, 61, 62, 7, 29, 
-  38, 91, 57, 7, 75, 33, 8, 25, 63, 27, 
-  34, -1, 36, -1, 75, 86, 75, 12, 57, -1, 
-  38, 15, -1, 75, 63, 86, 75, 86, 15, 61, 
-  62, -1, 61, 62, 86, 61, 62, 86, 61, 62, 
-  34, 25, 36, 27, -1, 75, 33, 34, 29, 36, 
-  18, 19, 61, 62, 38, 47, 86, 61, 62, 61, 
-  62, 15, 57, -1, 92, 18, 19, -1, 63, 61, 
-  62, 29, -1, 18, 19, 18, 19, 45, 46, 33, 
-  34, -1, 36, 29, -1, 66, 67, 68, -1, -1, 
-  -1, -1, 45, 46, 29, -1, -1, -1, 29, 91, 
-  45, 46, 45, 46, 23, 24, 29, -1, 66, 67, 
-  68, 92, 29, 32, 23, 24, 35, 25, 37, 27, 
-  66, 67, 68, 32, -1, 29, 35, -1, 37, 29, 
-  38, 66, 67, 68, 92, 66, 67, 68, -1, -1, 
-  29, -1, -1, 66, 67, 68, 92, 29, -1, 66, 
-  67, 68, 29, -1, -1, -1, -1, 92, 29, -1, 
-  -1, 92, 66, 67, 68, -1, 66, 67, 68, 92, 
-  -1, -1, -1, -1, 29, 92, -1, 66, 67, 68, 
-  29, -1, -1, -1, 66, 67, 68, 29, 92, 66, 
-  67, 68, 92, 23, 24, 66, 67, 68, -1, -1, 
-  -1, 29, 32, 92, -1, 35, -1, 37, 36, 29, 
-  92, 66, 67, 68, -1, 92, 36, 66, 67, 68, 
-  -1, 92, 23, 24, 66, 67, 68, -1, -1, -1, 
-  31, 32, -1, -1, 35, -1, 37, 92, 66, 67, 
-  68, -1, -1, 92, 23, 24, 66, 67, 68, 29, 
-  92, -1, 31, 32, 23, 24, 35, 29, 37, -1, 
-  -1, -1, 31, 32, 92, 29, 35, -1, 37, -1, 
-  -1, 29, 92, -1, 93, 94, 95, 96, 97, 98, 
-  -1, 61, 62, -1, 29, -1, 66, 67, 68, 61, 
-  62, -1, -1, 29, 66, 67, 68, 61, 62, -1, 
-  -1, -1, 66, 67, 68, -1, -1, -1, 66, 67, 
-  68, -1, 92, -1, -1, -1, 61, 62, -1, -1, 
-  92, 66, 67, 68, -1, 61, 62, 29, 92, -1, 
-  66, 67, 68, -1, 92, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 23, 24, -1, -1, 92, 3, -1, 
-  -1, 31, 32, -1, -1, 35, 92, 37, 13, 61, 
-  62, -1, 17, -1, 66, 67, 68, -1, -1, -1, 
-  -1, 26, -1, 28, -1, -1, 31, -1, -1, -1, 
-  -1, -1, -1, -1, 39, -1, 41, 42, -1, -1, 
-  92, -1, -1, -1, 49, -1, -1, 52, 53, -1, 
-  -1, -1, -1, 58, -1, -1, -1, -1, -1, 64, 
-  -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 
-  13, 3, -1, -1, -1, 80, -1, -1, -1, 22, 
-  -1, 13, -1, -1, -1, 17, 29, -1, -1, -1, 
-  33, 34, -1, 36, 26, -1, 28, -1, -1, -1, 
-  43, -1, -1, -1, 47, -1, -1, 39, -1, 41, 
-  42, -1, -1, -1, -1, -1, -1, 49, -1, -1, 
-  52, 53, 65, 66, 67, 68, 58, 70, -1, -1, 
-  -1, -1, 64, -1, -1, -1, -1, -1, 81, 82, 
-  83, 12, 13, -1, 87, -1, -1, -1, 80, 92, 
-  -1, 22, -1, -1, -1, -1, -1, -1, 29, -1, 
-  -1, -1, 33, 34, -1, 36, -1, -1, -1, 12, 
-  13, -1, 43, -1, -1, -1, 47, -1, -1, 22, 
-  -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, 
-  33, 34, -1, 36, 65, 66, 67, 68, -1, 70, 
-  43, -1, -1, -1, 47, -1, -1, -1, -1, -1, 
-  81, 82, 83, -1, -1, -1, 87, -1, -1, -1, 
-  -1, 92, 65, 66, 67, 68, -1, 70, -1, -1, 
-  -1, -1, -1, -1, -1, -1, -1, -1, 81, 82, 
-  83, -1, -1, -1, 87, -1, -1, -1, -1, 92, 
-  12, 13, -1, -1, -1, -1, -1, -1, 12, 13, 
-  22, -1, -1, -1, -1, -1, -1, 29, 22, -1, 
-  -1, 33, 34, -1, 36, 29, -1, -1, -1, 33, 
-  34, 43, 36, -1, -1, 47, -1, -1, -1, 43, 
-  -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
-  -1, 65, 66, 67, 68, -1, 70, -1, -1, 81, 
-  82, 83, -1, -1, -1, 87, -1, 81, 82, 83, 
-  92, -1, -1, 87, -1, -1, -1, -1, 92, 12, 
-  13, -1, -1, -1, -1, -1, -1, 12, 13, 22, 
-  -1, -1, -1, -1, -1, -1, 29, 22, -1, -1, 
-  33, 34, -1, 36, 29, -1, -1, -1, 33, 34, 
-  43, 36, -1, -1, 47, -1, -1, -1, 43, -1, 
-  -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, 
-  -1, -1, 65, 66, 67, 68, -1, 70, -1, -1, 
-  65, 66, 67, 68, -1, 70, -1, -1, 81, 82, 
-  83, -1, -1, -1, 87, -1, 81, 82, 83, 92, 
-  -1, -1, 87, -1, -1, -1, -1, 92, -1, -1, 
-  -1, -1, -1, -1, -1, -1, 10, -1, 12, 13, 
-  -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, 
-  -1, -1, -1, -1, -1, 29, -1, -1, -1, 33, 
+  36, 33, 7, 36, 7, 91, 7, 7, 55, 29, 
+  7, 55, 55, 8, 16, 7, 33, 7, 60, 7, 
+  7, 36, 36, 7, 33, 36, 36, 7, 7, 7, 
+  36, 20, 36, 8, 33, 33, 7, 60, 60, 33, 
+  17, 37, 24, 34, 7, 7, 7, 33, 60, 5, 
+  33, 36, 33, 66, 7, 7, 7, 5, 66, 33, 
+  36, 5, 55, 31, 7, 1, 36, 36, 8, 7, 
+  36, 8, 2, 8, 7, 7, 36, 1, 33, 7, 
+  2, 8, 36, 48, 33, 8, 36, 60, 2, 61, 
+  36, 1, 0, 60, 7, 2, 60, 1, 55, 17, 
+  -1, 60, 8, 6, -1, 36, 48, 7, 8, -1, 
+  8, 10, 8, 8, -1, 8, -1, 20, 8, 60, 
+  8, 79, -1, 48, -1, 8, 42, 61, 48, 50, 
+  77, -1, 7, 54, 79, 61, 15, 53, 15, 8, 
+  8, 8, 61, 62, 61, 62, 61, 62, 8, 50, 
+  79, 8, 91, 54, 60, 34, 55, 34, 40, 61, 
+  62, 8, 60, 56, 60, 60, 56, 61, 62, 51, 
+  61, 62, 60, 56, 61, 62, 61, 62, 29, 8, 
+  61, 62, 25, 25, 27, 27, 36, 56, 56, 25, 
+  7, 27, 25, 60, 27, 38, 38, 25, 12, 27, 
+  60, 7, 38, 60, 25, 38, 27, 29, 61, 62, 
+  38, 61, 62, 25, 61, 27, 8, 38, 15, 29, 
+  29, 15, 12, 12, 75, 8, 38, 40, 8, 7, 
+  -1, 7, 61, 62, 29, 86, 89, 34, 51, 36, 
+  34, 29, 36, 57, 61, 62, 25, 8, 27, 63, 
+  25, -1, 27, 75, -1, 61, 62, 33, 25, 38, 
+  27, -1, -1, 38, 86, 75, 75, 57, 57, 61, 
+  62, 38, -1, 63, 63, 15, 86, 86, 61, 62, 
+  75, 61, 62, 61, 62, -1, 25, 75, 27, 8, 
+  25, 86, 27, 25, 34, 27, 36, 15, 86, 38, 
+  61, 62, 15, 38, 61, 62, 38, 29, -1, 18, 
+  19, 47, 18, 19, 29, 33, 34, 93, 36, -1, 
+  33, 34, 29, 36, -1, 61, 62, 18, 19, 29, 
+  18, 19, -1, -1, -1, 92, 45, 46, -1, 45, 
+  46, -1, 61, 62, 66, 67, 68, -1, -1, -1, 
+  29, 66, 67, 68, 45, 46, 92, 45, 46, 66, 
+  67, 68, 29, 23, 24, -1, 66, 67, 68, -1, 
+  29, 93, 32, 29, -1, 35, -1, 37, 93, 29, 
+  -1, -1, 29, 15, -1, 29, 93, 66, 67, 68, 
+  29, -1, -1, 93, 29, -1, -1, -1, -1, 66, 
+  67, 68, 34, 29, 36, -1, -1, 66, 67, 68, 
+  66, 67, 68, 29, 93, -1, 66, 67, 68, 66, 
+  67, 68, 66, 67, 68, 29, 93, 66, 67, 68, 
+  -1, 66, 67, 68, 93, 29, -1, 93, -1, -1, 
+  66, 67, 68, 93, -1, -1, 93, -1, 29, 93, 
+  66, 67, 68, 29, 93, -1, -1, -1, 93, -1, 
+  36, -1, 66, 67, 68, -1, -1, 93, 29, -1, 
+  23, 24, 66, 67, 68, 36, -1, 93, -1, 32, 
+  -1, 29, 35, -1, 37, 66, 67, 68, -1, 93, 
+  66, 67, 68, 94, 95, 96, 97, 98, 99, 93, 
+  -1, 29, -1, -1, 29, 66, 67, 68, -1, -1, 
+  -1, -1, 93, 61, 62, 29, -1, 93, 66, 67, 
+  68, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, 93, 61, 62, -1, 61, 62, 66, 67, 
+  68, 66, 67, 68, 29, 93, -1, 61, 62, 23, 
+  24, -1, 66, 67, 68, -1, -1, 31, 32, -1, 
+  -1, 35, -1, 37, 3, 93, -1, -1, 93, -1, 
+  -1, -1, -1, -1, 13, -1, 61, 62, 17, 93, 
+  -1, 66, 67, 68, -1, -1, -1, 26, -1, 28, 
+  -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, 
+  39, -1, 41, 42, -1, -1, -1, 13, 93, -1, 
+  49, 17, -1, 52, 53, -1, -1, -1, -1, 58, 
+  26, -1, 28, -1, -1, 64, -1, -1, 29, -1, 
+  -1, -1, -1, 39, -1, 41, 42, -1, -1, -1, 
+  -1, 80, -1, 49, -1, -1, 52, 53, -1, -1, 
+  -1, -1, 58, -1, -1, -1, -1, -1, 64, -1, 
+  61, 62, -1, 12, 13, 66, 67, 68, -1, -1, 
+  -1, -1, -1, 22, 80, -1, -1, -1, -1, -1, 
+  29, -1, -1, -1, 33, 34, -1, 36, -1, -1, 
+  -1, -1, 93, -1, 43, -1, -1, -1, 47, -1, 
+  -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, 13, -1, -1, -1, 17, 65, 66, 67, 68, 
+  -1, 70, -1, -1, 26, -1, 28, -1, -1, 31, 
+  -1, -1, 81, 82, 83, -1, -1, 39, 87, 41, 
+  42, -1, -1, -1, 93, -1, -1, 49, -1, -1, 
+  52, 53, -1, -1, -1, -1, 58, -1, 12, 13, 
+  -1, -1, 64, -1, -1, -1, -1, -1, 22, -1, 
+  -1, -1, -1, -1, -1, 29, -1, -1, 80, 33, 
   34, -1, 36, -1, -1, -1, -1, -1, -1, 43, 
   -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, 
+  12, 13, -1, -1, -1, -1, -1, -1, -1, -1, 
+  22, 65, 66, 67, 68, -1, 70, 29, -1, -1, 
+  -1, 33, 34, -1, 36, -1, -1, 81, 82, 83, 
+  -1, 43, -1, 87, -1, 47, -1, -1, -1, 93, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
-  -1, 65, 66, 67, 68, -1, 70, -1, -1, -1, 
-  -1, 75, -1, -1, -1, -1, -1, 81, 82, 83, 
-  84, -1, -1, 87, -1, -1, -1, -1, 92, -1, 
-  -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, 
-  13, -1, -1, -1, -1, -1, -1, -1, -1, 22, 
-  -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, 
-  33, 34, -1, 36, -1, -1, -1, -1, -1, -1, 
-  43, -1, -1, -1, 47, -1, -1, -1, -1, -1, 
-  -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, 
-  -1, -1, 65, 66, 67, 68, -1, 70, -1, -1, 
-  -1, -1, 75, -1, -1, -1, -1, -1, 81, 82, 
-  83, 84, -1, -1, 87, -1, -1, -1, -1, 92, 
-  -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, 
+  -1, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 
+  82, 83, -1, -1, -1, 87, -1, -1, -1, -1, 
+  -1, 93, 12, 13, -1, -1, -1, -1, -1, -1, 
+  12, 13, 22, -1, -1, -1, -1, -1, -1, 29, 
+  22, -1, -1, 33, 34, -1, 36, 29, -1, -1, 
+  -1, 33, 34, 43, 36, -1, -1, 47, -1, -1, 
+  -1, 43, -1, -1, -1, 47, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, 65, 66, 67, 68, -1, 
+  70, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
+  -1, 81, 82, 83, -1, -1, -1, 87, -1, 81, 
+  82, 83, -1, 93, -1, 87, -1, -1, -1, -1, 
+  -1, 93, -1, -1, -1, -1, -1, -1, -1, -1, 
   12, 13, -1, -1, -1, -1, -1, -1, -1, -1, 
   22, -1, -1, -1, -1, -1, -1, 29, -1, -1, 
   -1, 33, 34, -1, 36, -1, -1, -1, -1, -1, 
   -1, 43, -1, -1, -1, 47, -1, -1, -1, -1, 
-  -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
-  -1, -1, -1, 75, -1, -1, -1, -1, -1, 81, 
-  82, 83, 84, -1, -1, 87, -1, -1, -1, -1, 
-  92, -1, -1, -1, -1, -1, -1, -1, -1, 11, 
-  12, 13, -1, -1, -1, -1, -1, -1, -1, -1, 
-  22, -1, -1, -1, -1, -1, -1, 29, -1, -1, 
-  -1, 33, 34, -1, 36, -1, -1, -1, 40, -1, 
-  42, 43, 44, -1, -1, 47, -1, -1, -1, 51, 
-  -1, 53, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
-  72, -1, 74, -1, 76, -1, -1, -1, -1, 81, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, 
   82, 83, -1, -1, -1, 87, -1, -1, -1, -1, 
-  92, -1, -1, -1, -1, -1, -1, -1, -1, 7, 
-  -1, -1, -1, 11, 12, 13, -1, -1, -1, -1, 
-  -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, 
-  -1, 29, -1, -1, -1, 33, 34, -1, 36, -1, 
-  -1, -1, 40, -1, 42, 43, 44, -1, -1, 47, 
-  -1, -1, -1, 51, -1, 53, -1, -1, -1, -1, 
-  -1, -1, -1, -1, -1, -1, -1, 65, 66, 67, 
-  68, -1, 70, -1, 72, -1, 74, -1, 76, -1, 
-  -1, -1, -1, 81, 82, 83, -1, -1, -1, 87, 
-  -1, -1, -1, -1, 92, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 11, 12, 13, -1, -1, -1, -1, 
+  -1, 93, -1, -1, -1, -1, -1, -1, -1, -1, 
+  10, -1, 12, 13, -1, -1, -1, -1, -1, -1, 
+  -1, -1, 22, -1, -1, -1, -1, -1, -1, 29, 
+  -1, -1, -1, 33, 34, -1, 36, -1, -1, -1, 
+  -1, -1, -1, 43, -1, -1, -1, 47, -1, -1, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, 65, 66, 67, 68, -1, 
+  70, -1, -1, -1, -1, 75, -1, -1, -1, -1, 
+  -1, 81, 82, 83, 84, -1, -1, 87, -1, -1, 
+  -1, -1, -1, 93, -1, -1, -1, -1, -1, -1, 
+  -1, -1, 10, -1, 12, 13, -1, -1, -1, -1, 
   -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, 
   -1, 29, -1, -1, -1, 33, 34, -1, 36, -1, 
-  -1, -1, 40, -1, 42, 43, 44, -1, -1, 47, 
-  -1, -1, -1, 51, -1, 53, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, 43, -1, -1, -1, 47, 
+  -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 65, 66, 67, 
-  68, -1, 70, -1, 72, -1, 74, 75, 76, -1, 
-  -1, -1, -1, 81, 82, 83, -1, -1, -1, 87, 
-  -1, -1, -1, -1, 92, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 8, -1, -1, 11, 12, 13, -1, 
+  68, -1, 70, -1, -1, -1, -1, 75, -1, -1, 
+  -1, -1, -1, 81, 82, 83, 84, -1, -1, 87, 
+  -1, -1, -1, -1, -1, 93, -1, -1, -1, -1, 
+  -1, -1, -1, -1, 10, -1, 12, 13, -1, -1, 
+  -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, 
+  -1, -1, -1, 29, -1, -1, -1, 33, 34, -1, 
+  36, -1, -1, -1, -1, -1, -1, 43, -1, -1, 
+  -1, 47, -1, -1, -1, -1, -1, -1, -1, 55, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, 
+  66, 67, 68, -1, 70, -1, -1, -1, -1, 75, 
+  -1, -1, -1, -1, -1, 81, 82, 83, 84, -1, 
+  -1, 87, -1, -1, -1, -1, -1, 93, -1, -1, 
+  -1, -1, -1, -1, -1, -1, 11, 12, 13, -1, 
   -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, 
   -1, -1, -1, -1, 29, -1, -1, -1, 33, 34, 
   -1, 36, -1, -1, -1, 40, -1, 42, 43, 44, 
   -1, -1, 47, -1, -1, -1, 51, -1, 53, -1, 
-  -1, 56, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   65, 66, 67, 68, -1, 70, -1, 72, -1, 74, 
   -1, 76, -1, -1, -1, -1, 81, 82, 83, -1, 
-  -1, -1, 87, -1, -1, -1, -1, 92, -1, -1, 
-  -1, -1, -1, -1, -1, -1, 8, -1, -1, 11, 
-  12, 13, -1, -1, -1, -1, -1, -1, -1, -1, 
-  22, -1, -1, -1, -1, -1, -1, 29, -1, -1, 
-  -1, 33, 34, -1, 36, -1, -1, -1, 40, -1, 
-  42, 43, 44, -1, -1, 47, -1, -1, -1, 51, 
-  -1, 53, -1, -1, 56, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
-  72, -1, 74, -1, 76, -1, -1, -1, -1, 81, 
-  82, 83, -1, -1, -1, 87, -1, -1, -1, -1, 
-  92, -1, -1, -1, -1, -1, -1, -1, -1, 8, 
+  -1, -1, 87, -1, -1, -1, -1, -1, 93, -1, 
+  -1, -1, -1, -1, -1, -1, -1, 11, 12, 13, 
+  -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, 
+  -1, -1, -1, -1, -1, 29, -1, -1, -1, 33, 
+  34, -1, 36, -1, -1, -1, 40, -1, 42, 43, 
+  44, -1, -1, 47, -1, -1, -1, 51, -1, 53, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, 65, 66, 67, 68, -1, 70, -1, 72, -1, 
+  74, 75, 76, -1, -1, -1, -1, 81, 82, 83, 
+  -1, -1, -1, 87, -1, -1, -1, -1, -1, 93, 
+  -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, 
   -1, -1, 11, 12, 13, -1, -1, -1, -1, -1, 
   -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, 
   29, -1, -1, -1, 33, 34, -1, 36, -1, -1, 
   -1, 40, -1, 42, 43, 44, -1, -1, 47, -1, 
-  -1, -1, 51, -1, 53, -1, -1, 56, -1, -1, 
+  -1, -1, 51, -1, 53, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, 65, 66, 67, 68, 
   -1, 70, -1, 72, -1, 74, -1, 76, -1, -1, 
   -1, -1, 81, 82, 83, -1, -1, -1, 87, -1, 
-  -1, -1, -1, 92, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, 93, -1, -1, -1, -1, -1, 
+  -1, -1, -1, 8, -1, -1, 11, 12, 13, -1, 
+  -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, 
+  -1, -1, -1, -1, 29, -1, -1, -1, 33, 34, 
+  -1, 36, -1, -1, -1, 40, -1, 42, 43, 44, 
+  -1, -1, 47, -1, -1, -1, 51, -1, 53, -1, 
+  -1, 56, -1, -1, -1, -1, -1, -1, -1, -1, 
+  65, 66, 67, 68, -1, 70, -1, 72, -1, 74, 
+  -1, 76, -1, -1, -1, -1, 81, 82, 83, -1, 
+  -1, -1, 87, -1, -1, -1, -1, -1, 93, -1, 
+  -1, -1, -1, -1, -1, -1, -1, 8, -1, -1, 
+  11, 12, 13, -1, -1, -1, -1, -1, -1, -1, 
+  -1, 22, -1, -1, -1, -1, -1, -1, 29, -1, 
+  -1, -1, 33, 34, -1, 36, -1, -1, -1, 40, 
+  -1, 42, 43, 44, -1, -1, 47, -1, -1, -1, 
+  51, -1, 53, -1, -1, 56, -1, -1, -1, -1, 
+  -1, -1, -1, -1, 65, 66, 67, 68, -1, 70, 
+  -1, 72, -1, 74, -1, 76, -1, -1, -1, -1, 
+  81, 82, 83, -1, -1, -1, 87, -1, -1, -1, 
+  -1, -1, 93, -1, -1, -1, -1, -1, -1, -1, 
+  -1, 11, 12, 13, -1, -1, -1, -1, -1, -1, 
+  -1, -1, 22, -1, -1, -1, -1, -1, -1, 29, 
+  30, -1, -1, 33, 34, -1, 36, -1, -1, -1, 
+  40, -1, 42, 43, 44, -1, -1, 47, -1, -1, 
+  -1, 51, -1, 53, -1, -1, -1, -1, -1, -1, 
+  -1, 61, -1, -1, -1, 65, 66, 67, 68, -1, 
+  70, -1, 72, -1, 74, -1, 76, -1, -1, -1, 
+  -1, 81, 82, 83, -1, -1, -1, 87, -1, -1, 
+  -1, -1, -1, 93, -1, -1, -1, -1, -1, -1, 
   -1, -1, 8, -1, -1, 11, 12, 13, -1, -1, 
   -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, 
   -1, -1, -1, 29, -1, -1, -1, 33, 34, -1, 
@@ -859,65 +870,66 @@ const short QDeclarativeJSGrammar::action_check [] = {
   56, -1, -1, -1, -1, -1, -1, -1, -1, 65, 
   66, 67, 68, -1, 70, -1, 72, -1, 74, -1, 
   76, -1, -1, -1, -1, 81, 82, 83, -1, -1, 
-  -1, 87, -1, -1, -1, -1, 92, -1, -1, -1, 
-  -1, -1, -1, -1, -1, 11, 12, 13, -1, -1, 
-  -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, 
-  -1, -1, -1, 29, 30, -1, -1, 33, 34, -1, 
-  36, -1, -1, -1, 40, -1, 42, 43, 44, -1, 
-  -1, 47, -1, -1, -1, 51, -1, 53, -1, -1, 
-  -1, -1, -1, -1, -1, 61, -1, -1, -1, 65, 
-  66, 67, 68, -1, 70, -1, 72, -1, 74, -1, 
-  76, -1, -1, -1, -1, 81, 82, 83, -1, -1, 
-  -1, 87, -1, -1, -1, -1, 92, -1, -1, -1, 
-  -1, -1, -1, -1, -1, 4, 5, 6, -1, -1, 
-  9, 10, 11, -1, -1, 14, -1, 16, -1, -1, 
-  -1, 20, 21, 22, -1, -1, -1, -1, -1, -1, 
-  29, 30, 31, 32, -1, -1, -1, -1, -1, -1, 
-  -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, 
+  -1, 87, -1, -1, -1, -1, -1, 93, -1, -1, 
+  -1, -1, -1, -1, -1, -1, 8, -1, -1, 11, 
+  12, 13, -1, -1, -1, -1, -1, -1, -1, -1, 
+  22, -1, -1, -1, -1, -1, -1, 29, -1, -1, 
+  -1, 33, 34, -1, 36, -1, -1, -1, 40, -1, 
+  42, 43, 44, -1, -1, 47, -1, -1, -1, 51, 
+  -1, 53, -1, -1, 56, -1, -1, -1, -1, -1, 
+  -1, -1, -1, 65, 66, 67, 68, -1, 70, -1, 
+  72, -1, 74, -1, 76, -1, -1, -1, -1, 81, 
+  82, 83, -1, -1, -1, 87, -1, -1, -1, -1, 
+  -1, 93, -1, -1, -1, -1, -1, -1, -1, -1, 
+  4, 5, 6, -1, -1, 9, 10, 11, -1, -1, 
+  14, -1, 16, -1, -1, -1, 20, 21, 22, -1, 
+  -1, -1, -1, -1, -1, 29, 30, 31, 32, -1, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
-  59, -1, -1, -1, -1, -1, -1, 66, 67, 68, 
-  69, 70, 71, -1, 73, 74, 75, 76, 77, 78, 
-  -1, -1, 81, 82, 83, 84, 85, 86, -1, -1, 
-  -1, -1, -1, 92, -1, -1, -1, -1, -1, -1, 
-  -1, -1, 4, 5, 6, -1, -1, 9, 10, 11, 
-  -1, -1, 14, -1, 16, -1, -1, -1, 20, 21, 
-  22, -1, -1, -1, -1, -1, -1, 29, 30, 31, 
-  32, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
-  -1, 43, -1, -1, -1, 47, -1, -1, -1, -1, 
-  -1, -1, -1, -1, -1, -1, -1, 59, -1, -1, 
-  -1, -1, -1, 65, 66, 67, -1, 69, 70, 71, 
-  -1, 73, 74, 75, 76, 77, 78, -1, -1, 81, 
-  82, 83, 84, 85, 86, -1, -1, -1, -1, -1, 
-  -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, 
-  5, 6, -1, -1, 9, 10, 11, -1, -1, 14, 
-  -1, 16, -1, -1, -1, 20, 21, 22, -1, -1, 
-  -1, -1, -1, -1, 29, 30, 31, 32, -1, -1, 
-  -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, 
-  -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, 
-  55, -1, -1, -1, 59, -1, -1, -1, -1, -1, 
-  65, 66, 67, -1, 69, 70, 71, -1, 73, 74, 
-  75, 76, 77, 78, -1, -1, 81, 82, 83, 84, 
-  85, 86, -1, -1, -1, -1, -1, -1, -1, -1, 
-  -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, 
-  -1, 9, -1, 11, 12, 13, 14, -1, -1, -1, 
-  -1, -1, -1, 21, 22, -1, -1, -1, -1, -1, 
-  -1, 29, 30, -1, -1, 33, 34, -1, 36, -1, 
-  -1, -1, 40, -1, 42, 43, 44, -1, -1, 47, 
-  -1, -1, -1, 51, -1, 53, -1, -1, -1, -1, 
-  -1, 59, -1, 61, -1, -1, -1, 65, 66, 67, 
-  68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 
-  78, -1, -1, 81, 82, 83, 84, 85, -1, 87, 
-  -1, -1, -1, -1, 92, -1, -1, -1, -1, -1, 
-  -1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 
-  11, 12, 13, 14, -1, -1, -1, -1, -1, -1, 
-  21, 22, -1, -1, -1, -1, -1, -1, 29, 30, 
-  -1, -1, 33, 34, -1, 36, -1, -1, -1, 40, 
-  -1, 42, 43, 44, -1, -1, 47, -1, -1, -1, 
-  51, -1, 53, -1, -1, -1, -1, -1, 59, -1, 
-  61, -1, -1, -1, 65, 66, 67, 68, 69, 70, 
-  71, 72, 73, 74, 75, 76, 77, 78, -1, -1, 
-  81, 82, 83, 84, 85, -1, 87, -1, -1, -1, 
-  -1, 92, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, 59, -1, -1, -1, -1, 
+  -1, -1, 66, 67, 68, 69, 70, 71, -1, 73, 
+  74, 75, 76, 77, 78, -1, -1, 81, 82, 83, 
+  84, 85, 86, -1, -1, -1, -1, -1, -1, 93, 
+  -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, 
+  6, -1, -1, 9, 10, 11, -1, -1, 14, -1, 
+  16, -1, -1, -1, 20, 21, 22, -1, -1, -1, 
+  -1, -1, -1, 29, 30, 31, 32, -1, -1, -1, 
+  -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, 
+  -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, 59, -1, -1, -1, -1, -1, 65, 
+  66, 67, -1, 69, 70, 71, -1, 73, 74, 75, 
+  76, 77, 78, -1, -1, 81, 82, 83, 84, 85, 
+  86, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, -1, 4, 5, 6, -1, 
+  -1, 9, 10, 11, -1, -1, 14, -1, 16, -1, 
+  -1, -1, 20, 21, 22, -1, -1, -1, -1, -1, 
+  -1, 29, 30, 31, 32, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, -1, 43, -1, -1, -1, 47, 
+  -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, 
+  -1, 59, -1, -1, -1, -1, -1, 65, 66, 67, 
+  -1, 69, 70, 71, -1, 73, 74, 75, 76, 77, 
+  78, -1, -1, 81, 82, 83, 84, 85, 86, -1, 
+  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
+  -1, -1, -1, -1, 4, -1, -1, -1, -1, 9, 
+  -1, 11, 12, 13, 14, -1, -1, -1, -1, -1, 
+  -1, 21, 22, -1, -1, -1, -1, -1, -1, 29, 
+  30, -1, -1, 33, 34, -1, 36, -1, -1, -1, 
+  40, -1, 42, 43, 44, -1, -1, 47, -1, -1, 
+  -1, 51, -1, 53, -1, -1, -1, -1, -1, 59, 
+  -1, 61, -1, -1, -1, 65, 66, 67, 68, 69, 
+  70, 71, 72, 73, 74, 75, 76, 77, 78, -1, 
+  -1, 81, 82, 83, 84, 85, -1, 87, -1, -1, 
+  -1, -1, -1, 93, -1, -1, -1, -1, -1, -1, 
+  -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, 
+  12, 13, 14, -1, -1, -1, -1, -1, -1, 21, 
+  22, -1, -1, -1, -1, -1, -1, 29, 30, -1, 
+  -1, 33, 34, -1, 36, -1, -1, -1, 40, -1, 
+  42, 43, 44, -1, -1, 47, -1, -1, -1, 51, 
+  -1, 53, -1, -1, -1, -1, -1, 59, -1, 61, 
+  -1, -1, -1, 65, 66, 67, 68, 69, 70, 71, 
+  72, 73, 74, 75, 76, 77, 78, -1, -1, 81, 
+  82, 83, 84, 85, -1, 87, -1, -1, -1, -1, 
+  -1, 93, -1, -1, -1, -1, -1, -1, -1, -1, 
   4, 5, 6, -1, -1, 9, 10, 11, 12, 13, 
   14, -1, 16, -1, -1, -1, 20, 21, 22, -1, 
   -1, -1, -1, -1, -1, 29, 30, 31, 32, 33, 
@@ -926,18 +938,18 @@ const short QDeclarativeJSGrammar::action_check [] = {
   -1, -1, -1, -1, -1, 59, -1, 61, -1, -1, 
   -1, 65, 66, 67, 68, 69, 70, 71, 72, 73, 
   74, 75, 76, 77, 78, -1, -1, 81, 82, 83, 
-  84, 85, 86, 87, -1, -1, -1, -1, 92, -1, 
-  -1, -1, -1, -1, -1, -1, -1, 4, 5, 6, 
-  -1, -1, 9, 10, 11, 12, 13, 14, -1, 16, 
-  -1, -1, -1, 20, 21, 22, -1, -1, -1, -1, 
-  -1, -1, 29, 30, 31, 32, 33, 34, -1, 36, 
-  -1, -1, -1, 40, -1, 42, 43, 44, -1, -1, 
-  47, -1, -1, -1, 51, -1, 53, -1, 55, -1, 
-  -1, -1, 59, -1, 61, -1, -1, -1, 65, 66, 
-  67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 
-  77, 78, -1, -1, 81, 82, 83, 84, 85, 86, 
-  87, -1, -1, -1, -1, 92, -1, -1, -1, -1, 
-  -1, -1, -1, -1, 
+  84, 85, 86, 87, -1, -1, -1, -1, -1, 93, 
+  -1, -1, -1, -1, -1, -1, -1, -1, 4, 5, 
+  6, -1, -1, 9, 10, 11, 12, 13, 14, -1, 
+  16, -1, -1, -1, 20, 21, 22, -1, -1, -1, 
+  -1, -1, -1, 29, 30, 31, 32, 33, 34, -1, 
+  36, -1, -1, -1, 40, -1, 42, 43, 44, -1, 
+  -1, 47, -1, -1, -1, 51, -1, 53, -1, 55, 
+  -1, -1, -1, 59, -1, 61, -1, -1, -1, 65, 
+  66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 
+  76, 77, 78, -1, -1, 81, 82, 83, 84, 85, 
+  86, 87, -1, -1, -1, -1, -1, 93, -1, -1, 
+  -1, -1, -1, -1, -1, -1, 
 
   35, 15, 15, 15, 2, 15, 3, 2, 25, 3, 
   15, 15, 104, 15, 4, 3, 3, 3, 19, 15, 
diff --git a/src/declarative/qml/parser/qdeclarativejsgrammar_p.h b/src/declarative/qml/parser/qdeclarativejsgrammar_p.h
index 5215984..202ceb7 100644
--- a/src/declarative/qml/parser/qdeclarativejsgrammar_p.h
+++ b/src/declarative/qml/parser/qdeclarativejsgrammar_p.h
@@ -3,7 +3,7 @@
 ** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 ** Contact: http://www.qt-project.org/legal
 **
-** This file is part of the QtDeclarative module of the Qt Toolkit.
+** This file is part of the Qt Toolkit.
 **
 ** $QT_BEGIN_LICENSE:LGPL$
 ** Commercial License Usage
@@ -63,12 +63,12 @@ class QDeclarativeJSGrammar
 public:
   enum VariousConstants {
     EOF_SYMBOL = 0,
-    REDUCE_HERE = 100,
-    SHIFT_THERE = 99,
+    REDUCE_HERE = 101,
+    SHIFT_THERE = 100,
     T_AND = 1,
     T_AND_AND = 2,
     T_AND_EQ = 3,
-    T_AS = 91,
+    T_AS = 92,
     T_AUTOMATIC_SEMICOLON = 62,
     T_BREAK = 4,
     T_CASE = 5,
@@ -76,6 +76,7 @@ public:
     T_COLON = 7,
     T_COMMA = 8,
     T_COMMENT = 88,
+    T_COMPATIBILITY_SEMICOLON = 89,
     T_CONST = 84,
     T_CONTINUE = 9,
     T_DEBUGGER = 85,
@@ -90,12 +91,12 @@ public:
     T_EQ_EQ = 18,
     T_EQ_EQ_EQ = 19,
     T_FALSE = 83,
-    T_FEED_JS_EXPRESSION = 96,
-    T_FEED_JS_PROGRAM = 98,
-    T_FEED_JS_SOURCE_ELEMENT = 97,
-    T_FEED_JS_STATEMENT = 95,
-    T_FEED_UI_OBJECT_MEMBER = 94,
-    T_FEED_UI_PROGRAM = 93,
+    T_FEED_JS_EXPRESSION = 97,
+    T_FEED_JS_PROGRAM = 99,
+    T_FEED_JS_SOURCE_ELEMENT = 98,
+    T_FEED_JS_STATEMENT = 96,
+    T_FEED_UI_OBJECT_MEMBER = 95,
+    T_FEED_UI_PROGRAM = 94,
     T_FINALLY = 20,
     T_FOR = 21,
     T_FUNCTION = 22,
@@ -107,7 +108,7 @@ public:
     T_GT_GT_GT_EQ = 28,
     T_IDENTIFIER = 29,
     T_IF = 30,
-    T_IMPORT = 90,
+    T_IMPORT = 91,
     T_IN = 31,
     T_INSTANCEOF = 32,
     T_LBRACE = 33,
@@ -127,7 +128,7 @@ public:
     T_NOT_EQ_EQ = 46,
     T_NULL = 81,
     T_NUMERIC_LITERAL = 47,
-    T_ON = 92,
+    T_ON = 93,
     T_OR = 48,
     T_OR_EQ = 49,
     T_OR_OR = 50,
@@ -135,7 +136,7 @@ public:
     T_PLUS_EQ = 52,
     T_PLUS_PLUS = 53,
     T_PROPERTY = 66,
-    T_PUBLIC = 89,
+    T_PUBLIC = 90,
     T_QUESTION = 54,
     T_RBRACE = 55,
     T_RBRACKET = 56,
@@ -164,15 +165,15 @@ public:
     T_XOR = 79,
     T_XOR_EQ = 80,
 
-    ACCEPT_STATE = 645,
-    RULE_COUNT = 347,
-    STATE_COUNT = 646,
-    TERMINAL_COUNT = 101,
+    ACCEPT_STATE = 646,
+    RULE_COUNT = 348,
+    STATE_COUNT = 647,
+    TERMINAL_COUNT = 102,
     NON_TERMINAL_COUNT = 106,
 
-    GOTO_INDEX_OFFSET = 646,
-    GOTO_INFO_OFFSET = 2714,
-    GOTO_CHECK_OFFSET = 2714
+    GOTO_INDEX_OFFSET = 647,
+    GOTO_INFO_OFFSET = 2776,
+    GOTO_CHECK_OFFSET = 2776
   };
 
   static const char  *const    spell [];
diff --git a/src/declarative/qml/parser/qdeclarativejsparser.cpp b/src/declarative/qml/parser/qdeclarativejsparser.cpp
index d63bdaa..e7648ff 100644
--- a/src/declarative/qml/parser/qdeclarativejsparser.cpp
+++ b/src/declarative/qml/parser/qdeclarativejsparser.cpp
@@ -51,16 +51,23 @@
 
 
 
+//
+//  W A R N I N G
+//  -------------
+//
+// This file is automatically generated from qdeclarativejs.g.
+// Changes should be made to that file, not here. Any change to this file will
+// be lost!
+//
+// To regenerate this file, run:
+//    qlalr --no-debug --no-lines --qt qdeclarativejs.g
+//
+
 #include "private/qdeclarativejsparser_p.h"
 #include <QVarLengthArray>
 
 #include <stdlib.h>
 
-//
-// This file is automatically generated from qmljs.g.
-// Changes will be lost.
-//
-
 using namespace QDeclarativeJS;
 
 QT_QML_BEGIN_NAMESPACE
@@ -1478,7 +1485,7 @@ case 288: {
   sym(1).Node = node;
 } break;
 
-case 290: {
+case 291: {
   AST::DoWhileStatement *node = makeAstNode<AST::DoWhileStatement> (driver->nodePool(), sym(2).Statement, sym(5).Expression);
   node->doToken = loc(1);
   node->whileToken = loc(3);
@@ -1488,7 +1495,7 @@ case 290: {
   sym(1).Node = node;
 } break;
 
-case 291: {
+case 292: {
   AST::WhileStatement *node = makeAstNode<AST::WhileStatement> (driver->nodePool(), sym(3).Expression, sym(5).Statement);
   node->whileToken = loc(1);
   node->lparenToken = loc(2);
@@ -1496,7 +1503,7 @@ case 291: {
   sym(1).Node = node;
 } break;
 
-case 292: {
+case 293: {
   AST::ForStatement *node = makeAstNode<AST::ForStatement> (driver->nodePool(), sym(3).Expression,
     sym(5).Expression, sym(7).Expression, sym(9).Statement);
   node->forToken = loc(1);
@@ -1507,7 +1514,7 @@ case 292: {
   sym(1).Node = node;
 } break;
 
-case 293: {
+case 294: {
   AST::LocalForStatement *node = makeAstNode<AST::LocalForStatement> (driver->nodePool(),
      sym(4).VariableDeclarationList->finish (/*readOnly=*/false), sym(6).Expression,
      sym(8).Expression, sym(10).Statement);
@@ -1520,7 +1527,7 @@ case 293: {
   sym(1).Node = node;
 } break;
 
-case 294: {
+case 295: {
   AST:: ForEachStatement *node = makeAstNode<AST::ForEachStatement> (driver->nodePool(), sym(3).Expression,
     sym(5).Expression, sym(7).Statement);
   node->forToken = loc(1);
@@ -1530,7 +1537,7 @@ case 294: {
   sym(1).Node = node;
 } break;
 
-case 295: {
+case 296: {
   AST::LocalForEachStatement *node = makeAstNode<AST::LocalForEachStatement> (driver->nodePool(),
     sym(4).VariableDeclaration, sym(6).Expression, sym(8).Statement);
   node->forToken = loc(1);
@@ -1541,14 +1548,14 @@ case 295: {
   sym(1).Node = node;
 } break;
 
-case 297: {
+case 298: {
   AST::ContinueStatement *node = makeAstNode<AST::ContinueStatement> (driver->nodePool());
   node->continueToken = loc(1);
   node->semicolonToken = loc(2);
   sym(1).Node = node;
 } break;
 
-case 299: {
+case 300: {
   AST::ContinueStatement *node = makeAstNode<AST::ContinueStatement> (driver->nodePool(), sym(2).sval);
   node->continueToken = loc(1);
   node->identifierToken = loc(2);
@@ -1556,14 +1563,14 @@ case 299: {
   sym(1).Node = node;
 } break;
 
-case 301: {
+case 302: {
   AST::BreakStatement *node = makeAstNode<AST::BreakStatement> (driver->nodePool());
   node->breakToken = loc(1);
   node->semicolonToken = loc(2);
   sym(1).Node = node;
 } break;
 
-case 303: {
+case 304: {
   AST::BreakStatement *node = makeAstNode<AST::BreakStatement> (driver->nodePool(), sym(2).sval);
   node->breakToken = loc(1);
   node->identifierToken = loc(2);
@@ -1571,14 +1578,14 @@ case 303: {
   sym(1).Node = node;
 } break;
 
-case 305: {
+case 306: {
   AST::ReturnStatement *node = makeAstNode<AST::ReturnStatement> (driver->nodePool(), sym(2).Expression);
   node->returnToken = loc(1);
   node->semicolonToken = loc(3);
   sym(1).Node = node;
 } break;
 
-case 306: {
+case 307: {
   AST::WithStatement *node = makeAstNode<AST::WithStatement> (driver->nodePool(), sym(3).Expression, sym(5).Statement);
   node->withToken = loc(1);
   node->lparenToken = loc(2);
@@ -1586,7 +1593,7 @@ case 306: {
   sym(1).Node = node;
 } break;
 
-case 307: {
+case 308: {
   AST::SwitchStatement *node = makeAstNode<AST::SwitchStatement> (driver->nodePool(), sym(3).Expression, sym(5).CaseBlock);
   node->switchToken = loc(1);
   node->lparenToken = loc(2);
@@ -1594,90 +1601,90 @@ case 307: {
   sym(1).Node = node;
 } break;
 
-case 308: {
+case 309: {
   AST::CaseBlock *node = makeAstNode<AST::CaseBlock> (driver->nodePool(), sym(2).CaseClauses);
   node->lbraceToken = loc(1);
   node->rbraceToken = loc(3);
   sym(1).Node = node;
 } break;
 
-case 309: {
+case 310: {
   AST::CaseBlock *node = makeAstNode<AST::CaseBlock> (driver->nodePool(), sym(2).CaseClauses, sym(3).DefaultClause, sym(4).CaseClauses);
   node->lbraceToken = loc(1);
   node->rbraceToken = loc(5);
   sym(1).Node = node;
 } break;
 
-case 310: {
+case 311: {
   sym(1).Node = makeAstNode<AST::CaseClauses> (driver->nodePool(), sym(1).CaseClause);
 } break;
 
-case 311: {
+case 312: {
   sym(1).Node = makeAstNode<AST::CaseClauses> (driver->nodePool(), sym(1).CaseClauses, sym(2).CaseClause);
 } break;
 
-case 312: {
+case 313: {
   sym(1).Node = 0;
 } break;
 
-case 313: {
+case 314: {
   sym(1).Node = sym(1).CaseClauses->finish ();
 } break;
 
-case 314: {
+case 315: {
   AST::CaseClause *node = makeAstNode<AST::CaseClause> (driver->nodePool(), sym(2).Expression, sym(4).StatementList);
   node->caseToken = loc(1);
   node->colonToken = loc(3);
   sym(1).Node = node;
 } break;
 
-case 315: {
+case 316: {
   AST::DefaultClause *node = makeAstNode<AST::DefaultClause> (driver->nodePool(), sym(3).StatementList);
   node->defaultToken = loc(1);
   node->colonToken = loc(2);
   sym(1).Node = node;
 } break;
-case 316:
-case 317: {
+case 317:
+case 318: {
   AST::LabelledStatement *node = makeAstNode<AST::LabelledStatement> (driver->nodePool(), driver->intern(lexer->characterBuffer(), lexer->characterCount()), sym(3).Statement);
   node->identifierToken = loc(1);
   node->colonToken = loc(2);
   sym(1).Node = node;
 } break;
 
-case 318: {
+case 319: {
   AST::LabelledStatement *node = makeAstNode<AST::LabelledStatement> (driver->nodePool(), sym(1).sval, sym(3).Statement);
   node->identifierToken = loc(1);
   node->colonToken = loc(2);
   sym(1).Node = node;
 } break;
 
-case 320: {
+case 321: {
   AST::ThrowStatement *node = makeAstNode<AST::ThrowStatement> (driver->nodePool(), sym(2).Expression);
   node->throwToken = loc(1);
   node->semicolonToken = loc(3);
   sym(1).Node = node;
 } break;
 
-case 321: {
+case 322: {
   AST::TryStatement *node = makeAstNode<AST::TryStatement> (driver->nodePool(), sym(2).Statement, sym(3).Catch);
   node->tryToken = loc(1);
   sym(1).Node = node;
 } break;
 
-case 322: {
+case 323: {
   AST::TryStatement *node = makeAstNode<AST::TryStatement> (driver->nodePool(), sym(2).Statement, sym(3).Finally);
   node->tryToken = loc(1);
   sym(1).Node = node;
 } break;
 
-case 323: {
+case 324: {
   AST::TryStatement *node = makeAstNode<AST::TryStatement> (driver->nodePool(), sym(2).Statement, sym(3).Catch, sym(4).Finally);
   node->tryToken = loc(1);
   sym(1).Node = node;
 } break;
 
-case 324: {
+case 325: {
   AST::Catch *node = makeAstNode<AST::Catch> (driver->nodePool(), sym(3).sval, sym(5).Block);
   node->catchToken = loc(1);
   node->lparenToken = loc(2);
@@ -1686,20 +1693,20 @@ case 324: {
   sym(1).Node = node;
 } break;
 
-case 325: {
+case 326: {
   AST::Finally *node = makeAstNode<AST::Finally> (driver->nodePool(), sym(2).Block);
   node->finallyToken = loc(1);
   sym(1).Node = node;
 } break;
 
-case 327: {
+case 328: {
   AST::DebuggerStatement *node = makeAstNode<AST::DebuggerStatement> (driver->nodePool());
   node->debuggerToken = loc(1);
   node->semicolonToken = loc(2);
   sym(1).Node = node;
 } break;
 
-case 328: {
+case 329: {
   AST::FunctionDeclaration *node = makeAstNode<AST::FunctionDeclaration> (driver->nodePool(), sym(2).sval, sym(4).FormalParameterList, sym(7).FunctionBody);
   node->functionToken = loc(1);
   node->identifierToken = loc(2);
@@ -1710,7 +1717,7 @@ case 328: {
   sym(1).Node = node;
 } break;
 
-case 329: {
+case 330: {
   AST::FunctionExpression *node = makeAstNode<AST::FunctionExpression> (driver->nodePool(), sym(2).sval, sym(4).FormalParameterList, sym(7).FunctionBody);
   node->functionToken = loc(1);
   if (sym(2).sval)
@@ -1722,60 +1729,60 @@ case 329: {
   sym(1).Node = node;
 } break;
 
-case 330: {
+case 331: {
   AST::FormalParameterList *node = makeAstNode<AST::FormalParameterList> (driver->nodePool(), sym(1).sval);
   node->identifierToken = loc(1);
   sym(1).Node = node;
 } break;
 
-case 331: {
+case 332: {
   AST::FormalParameterList *node = makeAstNode<AST::FormalParameterList> (driver->nodePool(), sym(1).FormalParameterList, sym(3).sval);
   node->commaToken = loc(2);
   node->identifierToken = loc(3);
   sym(1).Node = node;
 } break;
 
-case 332: {
+case 333: {
   sym(1).Node = 0;
 } break;
 
-case 333: {
+case 334: {
   sym(1).Node = sym(1).FormalParameterList->finish ();
 } break;
 
-case 334: {
+case 335: {
   sym(1).Node = 0;
 } break;
 
-case 336: {
+case 337: {
   sym(1).Node = makeAstNode<AST::FunctionBody> (driver->nodePool(), sym(1).SourceElements->finish ());
 } break;
 
-case 337: {
+case 338: {
   sym(1).Node = makeAstNode<AST::Program> (driver->nodePool(), sym(1).SourceElements->finish ());
 } break;
 
-case 338: {
+case 339: {
   sym(1).Node = makeAstNode<AST::SourceElements> (driver->nodePool(), sym(1).SourceElement);
 } break;
 
-case 339: {
+case 340: {
   sym(1).Node = makeAstNode<AST::SourceElements> (driver->nodePool(), sym(1).SourceElements, sym(2).SourceElement);
 } break;
 
-case 340: {
+case 341: {
   sym(1).Node = makeAstNode<AST::StatementSourceElement> (driver->nodePool(), sym(1).Statement);
 } break;
 
-case 341: {
+case 342: {
   sym(1).Node = makeAstNode<AST::FunctionSourceElement> (driver->nodePool(), sym(1).FunctionDeclaration);
 } break;
 
-case 342: {
+case 343: {
   sym(1).sval = 0;
 } break;
 
-case 344: {
+case 345: {
   sym(1).Node = 0;
 } break;
 
@@ -1788,7 +1795,8 @@ case 344: {
         const int errorState = state_stack[tos];
 
         // automatic insertion of `;'
-        if (yytoken != -1 && t_action(errorState, T_AUTOMATIC_SEMICOLON) && automatic(driver, yytoken)) {
+        if (yytoken != -1 && ((t_action(errorState, T_AUTOMATIC_SEMICOLON) && automatic(driver, yytoken))
+                              || t_action(errorState, T_COMPATIBILITY_SEMICOLON))) {
             SavedToken &tk = token_buffer[0];
             tk.token = yytoken;
             tk.dval = yylval;
diff --git a/src/declarative/qml/parser/qdeclarativejsparser_p.h b/src/declarative/qml/parser/qdeclarativejsparser_p.h
index 330986c..4f6db90 100644
--- a/src/declarative/qml/parser/qdeclarativejsparser_p.h
+++ b/src/declarative/qml/parser/qdeclarativejsparser_p.h
@@ -52,8 +52,15 @@
 //
 
 //
-// This file is automatically generated from qmljs.g.
-// Changes will be lost.
+//  W A R N I N G
+//  -------------
+//
+// This file is automatically generated from qdeclarativejs.g.
+// Changes should be made to that file, not here. Any change to this file will
+// be lost!
+//
+// To regenerate this file, run:
+//    qlalr --no-debug --no-lines --qt qdeclarativejs.g
 //
 
 #ifndef QDECLARATIVEJSPARSER_P_H
diff --git a/tests/auto/declarative/qdeclarativelanguage/data/compatibilitySemicolon.qml b/tests/auto/declarative/qdeclarativelanguage/data/compatibilitySemicolon.qml
new file mode 100644
index 0000000..117925e
--- /dev/null
+++ b/tests/auto/declarative/qdeclarativelanguage/data/compatibilitySemicolon.qml
@@ -0,0 +1,11 @@
+import QtQuick 1.0
+
+QtObject {
+    function code() {
+
+        // Not correct according to ECMA 5.1, but JSC and V8 accept the following:
+        do {
+            ;
+        } while (false) true
+    }
+}
diff --git a/tests/auto/declarative/qdeclarativelanguage/tst_qdeclarativelanguage.cpp b/tests/auto/declarative/qdeclarativelanguage/tst_qdeclarativelanguage.cpp
index eff8b8a..11633c0 100644
--- a/tests/auto/declarative/qdeclarativelanguage/tst_qdeclarativelanguage.cpp
+++ b/tests/auto/declarative/qdeclarativelanguage/tst_qdeclarativelanguage.cpp
@@ -158,6 +158,8 @@ private slots:
     void crash1();
     void crash2();
 
+    void compatibilitySemicolon();
+
 private:
     QDeclarativeEngine engine;
     void testType(const QString& qml, const QString& type, const QString& error);
@@ -2009,6 +2011,15 @@ void tst_qdeclarativelanguage::aliasPropertyChangeSignals()
     }
 }
 
+void tst_qdeclarativelanguage::compatibilitySemicolon()
+{
+    QDeclarativeComponent component(&engine, testFileUrl("compatibilitySemicolon.qml"));
+
+    VERIFY_ERRORS(0);
+    QObject *o = component.create();
+    QVERIFY(o != 0);
+}
+
 QTEST_MAIN(tst_qdeclarativelanguage)
 
 #include "tst_qdeclarativelanguage.moc"