diff --git a/src/corelib/io/qdebug.h b/src/corelib/io/qdebug.h
index f0e59c8..4d546a9 100644
--- a/src/corelib/io/qdebug.h
+++ b/src/corelib/io/qdebug.h
@@ -127,6 +127,8 @@ public:
     { stream->ts << m; return *this; }
 };
 
+Q_DECLARE_SHARED(QDebug)
+
 class QNoDebug
 {
 public:
diff --git a/src/corelib/io/qdir.h b/src/corelib/io/qdir.h
index a6f9b32..14810a4 100644
--- a/src/corelib/io/qdir.h
+++ b/src/corelib/io/qdir.h
@@ -224,6 +224,7 @@ private:
 
 };
 
+Q_DECLARE_SHARED(QDir)
 Q_DECLARE_OPERATORS_FOR_FLAGS(QDir::Filters)
 Q_DECLARE_OPERATORS_FOR_FLAGS(QDir::SortFlags)
 
diff --git a/src/corelib/io/qprocess.h b/src/corelib/io/qprocess.h
index dbc226e..3e72a4b 100644
--- a/src/corelib/io/qprocess.h
+++ b/src/corelib/io/qprocess.h
@@ -100,6 +100,8 @@ private:
     QSharedDataPointer<QProcessEnvironmentPrivate> d;
 };
 
+Q_DECLARE_SHARED(QProcessEnvironment)
+
 class Q_CORE_EXPORT QProcess : public QIODevice
 {
     Q_OBJECT
diff --git a/src/corelib/itemmodels/qabstractitemmodel.h b/src/corelib/itemmodels/qabstractitemmodel.h
index df39c33..41e7339 100644
--- a/src/corelib/itemmodels/qabstractitemmodel.h
+++ b/src/corelib/itemmodels/qabstractitemmodel.h
@@ -139,7 +139,7 @@ private:
     friend Q_CORE_EXPORT QDebug operator<<(QDebug, const QPersistentModelIndex &);
 #endif
 };
-Q_DECLARE_TYPEINFO(QPersistentModelIndex, Q_MOVABLE_TYPE);
+Q_DECLARE_SHARED(QPersistentModelIndex)
 
 inline uint qHash(const QPersistentModelIndex &index)
 { return qHash(index.d); }
diff --git a/src/corelib/mimetypes/qmimetype.h b/src/corelib/mimetypes/qmimetype.h
index 0b94977..04a24ff 100644
--- a/src/corelib/mimetypes/qmimetype.h
+++ b/src/corelib/mimetypes/qmimetype.h
@@ -107,6 +107,8 @@ protected:
     QExplicitlySharedDataPointer<QMimeTypePrivate> d;
 };
 
+Q_DECLARE_SHARED(QMimeType)
+
 QT_END_NAMESPACE
 
 #endif   // QMIMETYPE_H
diff --git a/src/corelib/tools/qdatetime.h b/src/corelib/tools/qdatetime.h
index c38e780..83c5ed8 100644
--- a/src/corelib/tools/qdatetime.h
+++ b/src/corelib/tools/qdatetime.h
@@ -271,7 +271,7 @@ private:
     friend Q_CORE_EXPORT QDataStream &operator>>(QDataStream &, QDateTime &);
 #endif
 };
-Q_DECLARE_TYPEINFO(QDateTime, Q_MOVABLE_TYPE);
+Q_DECLARE_SHARED(QDateTime)
 
 #ifndef QT_NO_DATASTREAM
 Q_CORE_EXPORT QDataStream &operator<<(QDataStream &, const QDate &);
diff --git a/src/corelib/tools/qregularexpression.h b/src/corelib/tools/qregularexpression.h
index 57cb290..2502323 100644
--- a/src/corelib/tools/qregularexpression.h
+++ b/src/corelib/tools/qregularexpression.h
@@ -133,9 +133,9 @@ private:
     QExplicitlySharedDataPointer<QRegularExpressionPrivate> d;
 };
 
+Q_DECLARE_SHARED(QRegularExpression)
 Q_DECLARE_OPERATORS_FOR_FLAGS(QRegularExpression::PatternOptions)
 Q_DECLARE_OPERATORS_FOR_FLAGS(QRegularExpression::MatchOptions)
-Q_DECLARE_TYPEINFO(QRegularExpression, Q_MOVABLE_TYPE);
 
 #ifndef QT_NO_DATASTREAM
 Q_CORE_EXPORT QDataStream &operator<<(QDataStream &out, const QRegularExpression &re);
@@ -198,7 +198,7 @@ private:
     QSharedDataPointer<QRegularExpressionMatchPrivate> d;
 };
 
-Q_DECLARE_TYPEINFO(QRegularExpressionMatch, Q_MOVABLE_TYPE);
+Q_DECLARE_SHARED(QRegularExpressionMatch)
 
 #ifndef QT_NO_DEBUG_STREAM
 Q_CORE_EXPORT QDebug operator<<(QDebug debug, const QRegularExpressionMatch &match);
@@ -235,7 +235,7 @@ private:
     QSharedDataPointer<QRegularExpressionMatchIteratorPrivate> d;
 };
 
-Q_DECLARE_TYPEINFO(QRegularExpressionMatchIterator, Q_MOVABLE_TYPE);
+Q_DECLARE_SHARED(QRegularExpressionMatchIterator)
 
 QT_END_NAMESPACE